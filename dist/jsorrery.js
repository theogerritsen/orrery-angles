
!(function (t) {
    function e(n) {
        if (i[n]) return i[n].exports;
        var r = (i[n] = { i: n, l: !1, exports: {} });
        return t[n].call(r.exports, r, r.exports, e), (r.l = !0), r.exports;
    }
    var i = {};
    (e.m = t),
        (e.c = i),
        (e.i = function (t) {
            return t;
        }),
        (e.d = function (t, i, n) {
            e.o(t, i) || Object.defineProperty(t, i, { configurable: !1, enumerable: !0, get: n });
        }),
        (e.n = function (t) {
            var i =
                t && t.__esModule
                    ? function () {
                          return t.default;
                      }
                    : function () {
                          return t;
                      };
            return e.d(i, "a", i), i;
        }),
        (e.o = function (t, e) {
            return Object.prototype.hasOwnProperty.call(t, e);
        }),
        (e.p = ""),
        e((e.s = "./index.js"));
})({
    "../node_modules/bluebird/js/browser/bluebird.js": function (t, e, i) {
        (function (e, n, r) {
            !(function (e) {
                t.exports = e();
            })(function () {
                var t, o, a;
                return (function t(e, i, n) {
                    function r(a, s) {
                        if (!i[a]) {
                            if (!e[a]) {
                                var l = "function" == typeof _dereq_ && _dereq_;
                                if (!s && l) return l(a, !0);
                                if (o) return o(a, !0);
                                var c = new Error("Cannot find module '" + a + "'");
                                throw ((c.code = "MODULE_NOT_FOUND"), c);
                            }
                            var u = (i[a] = { exports: {} });
                            e[a][0].call(
                                u.exports,
                                function (t) {
                                    var i = e[a][1][t];
                                    return r(i || t);
                                },
                                u,
                                u.exports,
                                t,
                                e,
                                i,
                                n
                            );
                        }
                        return i[a].exports;
                    }
                    for (var o = "function" == typeof _dereq_ && _dereq_, a = 0; a < n.length; a++) r(n[a]);
                    return r;
                })(
                    {
                        1: [
                            function (t, e, i) {
                                "use strict";
                                e.exports = function (t) {
                                    function e(t) {
                                        var e = new i(t),
                                            n = e.promise();
                                        return e.setHowMany(1), e.setUnwrap(), e.init(), n;
                                    }
                                    var i = t._SomePromiseArray;
                                    (t.any = function (t) {
                                        return e(t);
                                    }),
                                        (t.prototype.any = function () {
                                            return e(this);
                                        });
                                };
                            },
                            {},
                        ],
                        2: [
                            function (t, i, n) {
                                "use strict";
                                function r() {
                                    (this._customScheduler = !1), (this._isTickUsed = !1), (this._lateQueue = new u(16)), (this._normalQueue = new u(16)), (this._haveDrainedQueues = !1), (this._trampolineEnabled = !0);
                                    var t = this;
                                    (this.drainQueues = function () {
                                        t._drainQueues();
                                    }),
                                        (this._schedule = c);
                                }
                                function o(t, e, i) {
                                    this._lateQueue.push(t, e, i), this._queueTick();
                                }
                                function a(t, e, i) {
                                    this._normalQueue.push(t, e, i), this._queueTick();
                                }
                                function s(t) {
                                    this._normalQueue._pushOne(t), this._queueTick();
                                }
                                var l;
                                try {
                                    throw new Error();
                                } catch (t) {
                                    l = t;
                                }
                                var c = t("./schedule"),
                                    u = t("./queue"),
                                    h = t("./util");
                                (r.prototype.setScheduler = function (t) {
                                    var e = this._schedule;
                                    return (this._schedule = t), (this._customScheduler = !0), e;
                                }),
                                    (r.prototype.hasCustomScheduler = function () {
                                        return this._customScheduler;
                                    }),
                                    (r.prototype.enableTrampoline = function () {
                                        this._trampolineEnabled = !0;
                                    }),
                                    (r.prototype.disableTrampolineIfNecessary = function () {
                                        h.hasDevTools && (this._trampolineEnabled = !1);
                                    }),
                                    (r.prototype.haveItemsQueued = function () {
                                        return this._isTickUsed || this._haveDrainedQueues;
                                    }),
                                    (r.prototype.fatalError = function (t, i) {
                                        i ? (e.stderr.write("Fatal " + (t instanceof Error ? t.stack : t) + "\n"), e.exit(2)) : this.throwLater(t);
                                    }),
                                    (r.prototype.throwLater = function (t, e) {
                                        if (
                                            (1 === arguments.length &&
                                                ((e = t),
                                                (t = function () {
                                                    throw e;
                                                })),
                                            "undefined" != typeof setTimeout)
                                        )
                                            setTimeout(function () {
                                                t(e);
                                            }, 0);
                                        else
                                            try {
                                                this._schedule(function () {
                                                    t(e);
                                                });
                                            } catch (t) {
                                                throw new Error("No async scheduler available\n\n    See http://goo.gl/MqrFmX\n");
                                            }
                                    }),
                                    h.hasDevTools
                                        ? ((r.prototype.invokeLater = function (t, e, i) {
                                              this._trampolineEnabled
                                                  ? o.call(this, t, e, i)
                                                  : this._schedule(function () {
                                                        setTimeout(function () {
                                                            t.call(e, i);
                                                        }, 100);
                                                    });
                                          }),
                                          (r.prototype.invoke = function (t, e, i) {
                                              this._trampolineEnabled
                                                  ? a.call(this, t, e, i)
                                                  : this._schedule(function () {
                                                        t.call(e, i);
                                                    });
                                          }),
                                          (r.prototype.settlePromises = function (t) {
                                              this._trampolineEnabled
                                                  ? s.call(this, t)
                                                  : this._schedule(function () {
                                                        t._settlePromises();
                                                    });
                                          }))
                                        : ((r.prototype.invokeLater = o), (r.prototype.invoke = a), (r.prototype.settlePromises = s)),
                                    (r.prototype._drainQueue = function (t) {
                                        for (; t.length() > 0; ) {
                                            var e = t.shift();
                                            if ("function" == typeof e) {
                                                var i = t.shift(),
                                                    n = t.shift();
                                                e.call(i, n);
                                            } else e._settlePromises();
                                        }
                                    }),
                                    (r.prototype._drainQueues = function () {
                                        this._drainQueue(this._normalQueue), this._reset(), (this._haveDrainedQueues = !0), this._drainQueue(this._lateQueue);
                                    }),
                                    (r.prototype._queueTick = function () {
                                        this._isTickUsed || ((this._isTickUsed = !0), this._schedule(this.drainQueues));
                                    }),
                                    (r.prototype._reset = function () {
                                        this._isTickUsed = !1;
                                    }),
                                    (i.exports = r),
                                    (i.exports.firstLineError = l);
                            },
                            { "./queue": 26, "./schedule": 29, "./util": 36 },
                        ],
                        3: [
                            function (t, e, i) {
                                "use strict";
                                e.exports = function (t, e, i, n) {
                                    var r = !1,
                                        o = function (t, e) {
                                            this._reject(e);
                                        },
                                        a = function (t, e) {
                                            (e.promiseRejectionQueued = !0), e.bindingPromise._then(o, o, null, this, t);
                                        },
                                        s = function (t, e) {
                                            0 == (50397184 & this._bitField) && this._resolveCallback(e.target);
                                        },
                                        l = function (t, e) {
                                            e.promiseRejectionQueued || this._reject(t);
                                        };
                                    (t.prototype.bind = function (o) {
                                        r || ((r = !0), (t.prototype._propagateFrom = n.propagateFromFunction()), (t.prototype._boundValue = n.boundValueFunction()));
                                        var c = i(o),
                                            u = new t(e);
                                        u._propagateFrom(this, 1);
                                        var h = this._target();
                                        if ((u._setBoundTo(c), c instanceof t)) {
                                            var d = { promiseRejectionQueued: !1, promise: u, target: h, bindingPromise: c };
                                            h._then(e, a, void 0, u, d), c._then(s, l, void 0, u, d), u._setOnCancel(c);
                                        } else u._resolveCallback(h);
                                        return u;
                                    }),
                                        (t.prototype._setBoundTo = function (t) {
                                            void 0 !== t ? ((this._bitField = 2097152 | this._bitField), (this._boundTo = t)) : (this._bitField = -2097153 & this._bitField);
                                        }),
                                        (t.prototype._isBound = function () {
                                            return 2097152 == (2097152 & this._bitField);
                                        }),
                                        (t.bind = function (e, i) {
                                            return t.resolve(i).bind(e);
                                        });
                                };
                            },
                            {},
                        ],
                        4: [
                            function (t, e, i) {
                                "use strict";
                                function n() {
                                    try {
                                        Promise === o && (Promise = r);
                                    } catch (t) {}
                                    return o;
                                }
                                var r;
                                "undefined" != typeof Promise && (r = Promise);
                                var o = t("./promise")();
                                (o.noConflict = n), (e.exports = o);
                            },
                            { "./promise": 22 },
                        ],
                        5: [
                            function (t, e, i) {
                                "use strict";
                                var n = Object.create;
                                if (n) {
                                    var r = n(null),
                                        o = n(null);
                                    r[" size"] = o[" size"] = 0;
                                }
                                e.exports = function (e) {
                                    function i(t, i) {
                                        var n;
                                        if ((null != t && (n = t[i]), "function" != typeof n)) {
                                            var r = "Object " + s.classString(t) + " has no method '" + s.toString(i) + "'";
                                            throw new e.TypeError(r);
                                        }
                                        return n;
                                    }
                                    function n(t) {
                                        return i(t, this.pop()).apply(t, this);
                                    }
                                    function r(t) {
                                        return t[this];
                                    }
                                    function o(t) {
                                        var e = +this;
                                        return e < 0 && (e = Math.max(0, e + t.length)), t[e];
                                    }
                                    var a,
                                        s = t("./util"),
                                        l = s.canEvaluate;
                                    s.isIdentifier;
                                    (e.prototype.call = function (t) {
                                        var e = [].slice.call(arguments, 1);
                                        return e.push(t), this._then(n, void 0, void 0, e, void 0);
                                    }),
                                        (e.prototype.get = function (t) {
                                            var e,
                                                i = "number" == typeof t;
                                            if (i) e = o;
                                            else if (l) {
                                                var n = a(t);
                                                e = null !== n ? n : r;
                                            } else e = r;
                                            return this._then(e, void 0, void 0, t, void 0);
                                        });
                                };
                            },
                            { "./util": 36 },
                        ],
                        6: [
                            function (t, e, i) {
                                "use strict";
                                e.exports = function (e, i, n, r) {
                                    var o = t("./util"),
                                        a = o.tryCatch,
                                        s = o.errorObj,
                                        l = e._async;
                                    (e.prototype.break = e.prototype.cancel = function () {
                                        if (!r.cancellation()) return this._warn("cancellation is disabled");
                                        for (var t = this, e = t; t._isCancellable(); ) {
                                            if (!t._cancelBy(e)) {
                                                e._isFollowing() ? e._followee().cancel() : e._cancelBranched();
                                                break;
                                            }
                                            var i = t._cancellationParent;
                                            if (null == i || !i._isCancellable()) {
                                                t._isFollowing() ? t._followee().cancel() : t._cancelBranched();
                                                break;
                                            }
                                            t._isFollowing() && t._followee().cancel(), t._setWillBeCancelled(), (e = t), (t = i);
                                        }
                                    }),
                                        (e.prototype._branchHasCancelled = function () {
                                            this._branchesRemainingToCancel--;
                                        }),
                                        (e.prototype._enoughBranchesHaveCancelled = function () {
                                            return void 0 === this._branchesRemainingToCancel || this._branchesRemainingToCancel <= 0;
                                        }),
                                        (e.prototype._cancelBy = function (t) {
                                            return t === this ? ((this._branchesRemainingToCancel = 0), this._invokeOnCancel(), !0) : (this._branchHasCancelled(), !!this._enoughBranchesHaveCancelled() && (this._invokeOnCancel(), !0));
                                        }),
                                        (e.prototype._cancelBranched = function () {
                                            this._enoughBranchesHaveCancelled() && this._cancel();
                                        }),
                                        (e.prototype._cancel = function () {
                                            this._isCancellable() && (this._setCancelled(), l.invoke(this._cancelPromises, this, void 0));
                                        }),
                                        (e.prototype._cancelPromises = function () {
                                            this._length() > 0 && this._settlePromises();
                                        }),
                                        (e.prototype._unsetOnCancel = function () {
                                            this._onCancelField = void 0;
                                        }),
                                        (e.prototype._isCancellable = function () {
                                            return this.isPending() && !this._isCancelled();
                                        }),
                                        (e.prototype.isCancellable = function () {
                                            return this.isPending() && !this.isCancelled();
                                        }),
                                        (e.prototype._doInvokeOnCancel = function (t, e) {
                                            if (o.isArray(t)) for (var i = 0; i < t.length; ++i) this._doInvokeOnCancel(t[i], e);
                                            else if (void 0 !== t)
                                                if ("function" == typeof t) {
                                                    if (!e) {
                                                        var n = a(t).call(this._boundValue());
                                                        n === s && (this._attachExtraTrace(n.e), l.throwLater(n.e));
                                                    }
                                                } else t._resultCancelled(this);
                                        }),
                                        (e.prototype._invokeOnCancel = function () {
                                            var t = this._onCancel();
                                            this._unsetOnCancel(), l.invoke(this._doInvokeOnCancel, this, t);
                                        }),
                                        (e.prototype._invokeInternalOnCancel = function () {
                                            this._isCancellable() && (this._doInvokeOnCancel(this._onCancel(), !0), this._unsetOnCancel());
                                        }),
                                        (e.prototype._resultCancelled = function () {
                                            this.cancel();
                                        });
                                };
                            },
                            { "./util": 36 },
                        ],
                        7: [
                            function (t, e, i) {
                                "use strict";
                                e.exports = function (e) {
                                    function i(t, i, s) {
                                        return function (l) {
                                            var c = s._boundValue();
                                            t: for (var u = 0; u < t.length; ++u) {
                                                var h = t[u];
                                                if (h === Error || (null != h && h.prototype instanceof Error)) {
                                                    if (l instanceof h) return o(i).call(c, l);
                                                } else if ("function" == typeof h) {
                                                    var d = o(h).call(c, l);
                                                    if (d === a) return d;
                                                    if (d) return o(i).call(c, l);
                                                } else if (n.isObject(l)) {
                                                    for (var p = r(h), f = 0; f < p.length; ++f) {
                                                        var m = p[f];
                                                        if (h[m] != l[m]) continue t;
                                                    }
                                                    return o(i).call(c, l);
                                                }
                                            }
                                            return e;
                                        };
                                    }
                                    var n = t("./util"),
                                        r = t("./es5").keys,
                                        o = n.tryCatch,
                                        a = n.errorObj;
                                    return i;
                                };
                            },
                            { "./es5": 13, "./util": 36 },
                        ],
                        8: [
                            function (t, e, i) {
                                "use strict";
                                e.exports = function (t) {
                                    function e() {
                                        this._trace = new e.CapturedTrace(n());
                                    }
                                    function i() {
                                        if (r) return new e();
                                    }
                                    function n() {
                                        var t = o.length - 1;
                                        if (t >= 0) return o[t];
                                    }
                                    var r = !1,
                                        o = [];
                                    return (
                                        (t.prototype._promiseCreated = function () {}),
                                        (t.prototype._pushContext = function () {}),
                                        (t.prototype._popContext = function () {
                                            return null;
                                        }),
                                        (t._peekContext = t.prototype._peekContext = function () {}),
                                        (e.prototype._pushContext = function () {
                                            void 0 !== this._trace && ((this._trace._promiseCreated = null), o.push(this._trace));
                                        }),
                                        (e.prototype._popContext = function () {
                                            if (void 0 !== this._trace) {
                                                var t = o.pop(),
                                                    e = t._promiseCreated;
                                                return (t._promiseCreated = null), e;
                                            }
                                            return null;
                                        }),
                                        (e.CapturedTrace = null),
                                        (e.create = i),
                                        (e.deactivateLongStackTraces = function () {}),
                                        (e.activateLongStackTraces = function () {
                                            var i = t.prototype._pushContext,
                                                o = t.prototype._popContext,
                                                a = t._peekContext,
                                                s = t.prototype._peekContext,
                                                l = t.prototype._promiseCreated;
                                            (e.deactivateLongStackTraces = function () {
                                                (t.prototype._pushContext = i), (t.prototype._popContext = o), (t._peekContext = a), (t.prototype._peekContext = s), (t.prototype._promiseCreated = l), (r = !1);
                                            }),
                                                (r = !0),
                                                (t.prototype._pushContext = e.prototype._pushContext),
                                                (t.prototype._popContext = e.prototype._popContext),
                                                (t._peekContext = t.prototype._peekContext = n),
                                                (t.prototype._promiseCreated = function () {
                                                    var t = this._peekContext();
                                                    t && null == t._promiseCreated && (t._promiseCreated = this);
                                                });
                                        }),
                                        e
                                    );
                                };
                            },
                            {},
                        ],
                        9: [
                            function (t, i, n) {
                                "use strict";
                                i.exports = function (i, n) {
                                    function r(t, e) {
                                        return { promise: e };
                                    }
                                    function o() {
                                        return !1;
                                    }
                                    function a(t, e, i) {
                                        var n = this;
                                        try {
                                            t(e, i, function (t) {
                                                if ("function" != typeof t) throw new TypeError("onCancel must be a function, got: " + U.toString(t));
                                                n._attachCancellationCallback(t);
                                            });
                                        } catch (t) {
                                            return t;
                                        }
                                    }
                                    function s(t) {
                                        if (!this._isCancellable()) return this;
                                        var e = this._onCancel();
                                        void 0 !== e ? (U.isArray(e) ? e.push(t) : this._setOnCancel([e, t])) : this._setOnCancel(t);
                                    }
                                    function l() {
                                        return this._onCancelField;
                                    }
                                    function c(t) {
                                        this._onCancelField = t;
                                    }
                                    function u() {
                                        (this._cancellationParent = void 0), (this._onCancelField = void 0);
                                    }
                                    function h(t, e) {
                                        if (0 != (1 & e)) {
                                            this._cancellationParent = t;
                                            var i = t._branchesRemainingToCancel;
                                            void 0 === i && (i = 0), (t._branchesRemainingToCancel = i + 1);
                                        }
                                        0 != (2 & e) && t._isBound() && this._setBoundTo(t._boundTo);
                                    }
                                    function d(t, e) {
                                        0 != (2 & e) && t._isBound() && this._setBoundTo(t._boundTo);
                                    }
                                    function p() {
                                        var t = this._boundTo;
                                        return void 0 !== t && t instanceof i ? (t.isFulfilled() ? t.value() : void 0) : t;
                                    }
                                    function f() {
                                        this._trace = new O(this._peekContext());
                                    }
                                    function m(t, e) {
                                        if (B(t)) {
                                            var i = this._trace;
                                            if ((void 0 !== i && e && (i = i._parent), void 0 !== i)) i.attachExtraTrace(t);
                                            else if (!t.__stackCleaned__) {
                                                var n = E(t);
                                                U.notEnumerableProp(t, "stack", n.message + "\n" + n.stack.join("\n")), U.notEnumerableProp(t, "__stackCleaned__", !0);
                                            }
                                        }
                                    }
                                    function v(t, e, i, n, r) {
                                        if (void 0 === t && null !== e && J) {
                                            if (void 0 !== r && r._returnedNonUndefined()) return;
                                            if (0 == (65535 & n._bitField)) return;
                                            i && (i += " ");
                                            var o = "",
                                                a = "";
                                            if (e._trace) {
                                                for (var s = e._trace.stack.split("\n"), l = w(s), c = l.length - 1; c >= 0; --c) {
                                                    var u = l[c];
                                                    if (!z.test(u)) {
                                                        var h = u.match(V);
                                                        h && (o = "at " + h[1] + ":" + h[2] + ":" + h[3] + " ");
                                                        break;
                                                    }
                                                }
                                                if (l.length > 0)
                                                    for (var d = l[0], c = 0; c < s.length; ++c)
                                                        if (s[c] === d) {
                                                            c > 0 && (a = "\n" + s[c - 1]);
                                                            break;
                                                        }
                                            }
                                            var p = "a promise was created in a " + i + "handler " + o + "but was not returned from it, see http://goo.gl/rRqMUw" + a;
                                            n._warn(p, !0, e);
                                        }
                                    }
                                    function g(t, e) {
                                        var i = t + " is deprecated and will be removed in a future version.";
                                        return e && (i += " Use " + e + " instead."), y(i);
                                    }
                                    function y(t, e, n) {
                                        if (at.warnings) {
                                            var r,
                                                o = new F(t);
                                            if (e) n._attachExtraTrace(o);
                                            else if (at.longStackTraces && (r = i._peekContext())) r.attachExtraTrace(o);
                                            else {
                                                var a = E(o);
                                                o.stack = a.message + "\n" + a.stack.join("\n");
                                            }
                                            et("warning", o) || M(o, "", !0);
                                        }
                                    }
                                    function _(t, e) {
                                        for (var i = 0; i < e.length - 1; ++i) e[i].push("From previous event:"), (e[i] = e[i].join("\n"));
                                        return i < e.length && (e[i] = e[i].join("\n")), t + "\n" + e.join("\n");
                                    }
                                    function b(t) {
                                        for (var e = 0; e < t.length; ++e) (0 === t[e].length || (e + 1 < t.length && t[e][0] === t[e + 1][0])) && (t.splice(e, 1), e--);
                                    }
                                    function x(t) {
                                        for (var e = t[0], i = 1; i < t.length; ++i) {
                                            for (var n = t[i], r = e.length - 1, o = e[r], a = -1, s = n.length - 1; s >= 0; --s)
                                                if (n[s] === o) {
                                                    a = s;
                                                    break;
                                                }
                                            for (var s = a; s >= 0; --s) {
                                                var l = n[s];
                                                if (e[r] !== l) break;
                                                e.pop(), r--;
                                            }
                                            e = n;
                                        }
                                    }
                                    function w(t) {
                                        for (var e = [], i = 0; i < t.length; ++i) {
                                            var n = t[i],
                                                r = "    (No stack trace)" === n || H.test(n),
                                                o = r && nt(n);
                                            r && !o && (X && " " !== n.charAt(0) && (n = "    " + n), e.push(n));
                                        }
                                        return e;
                                    }
                                    function T(t) {
                                        for (var e = t.stack.replace(/\s+$/g, "").split("\n"), i = 0; i < e.length; ++i) {
                                            var n = e[i];
                                            if ("    (No stack trace)" === n || H.test(n)) break;
                                        }
                                        return i > 0 && "SyntaxError" != t.name && (e = e.slice(i)), e;
                                    }
                                    function E(t) {
                                        var e = t.stack,
                                            i = t.toString();
                                        return (e = "string" == typeof e && e.length > 0 ? T(t) : ["    (No stack trace)"]), { message: i, stack: "SyntaxError" == t.name ? e : w(e) };
                                    }
                                    function M(t, e, i) {
                                        if ("undefined" != typeof console) {
                                            var n;
                                            if (U.isObject(t)) {
                                                var r = t.stack;
                                                n = e + W(r, t);
                                            } else n = e + String(t);
                                            "function" == typeof k ? k(n, i) : ("function" != typeof console.log && "object" != typeof console.log) || console.log(n);
                                        }
                                    }
                                    function S(t, e, i, n) {
                                        var r = !1;
                                        try {
                                            "function" == typeof e && ((r = !0), "rejectionHandled" === t ? e(n) : e(i, n));
                                        } catch (t) {
                                            N.throwLater(t);
                                        }
                                        "unhandledRejection" === t ? et(t, i, n) || r || M(i, "Unhandled rejection ") : et(t, n);
                                    }
                                    function A(t) {
                                        var e;
                                        if ("function" == typeof t) e = "[function " + (t.name || "anonymous") + "]";
                                        else {
                                            e = t && "function" == typeof t.toString ? t.toString() : U.toString(t);
                                            if (/\[object [a-zA-Z0-9$_]+\]/.test(e))
                                                try {
                                                    e = JSON.stringify(t);
                                                } catch (t) {}
                                            0 === e.length && (e = "(empty array)");
                                        }
                                        return "(<" + R(e) + ">, no stack trace)";
                                    }
                                    function R(t) {
                                        return t.length < 41 ? t : t.substr(0, 38) + "...";
                                    }
                                    function C() {
                                        return "function" == typeof ot;
                                    }
                                    function P(t) {
                                        var e = t.match(rt);
                                        if (e) return { fileName: e[1], line: parseInt(e[2], 10) };
                                    }
                                    function D(t, e) {
                                        if (C()) {
                                            for (var i, n, r = t.stack.split("\n"), o = e.stack.split("\n"), a = -1, s = -1, l = 0; l < r.length; ++l) {
                                                var c = P(r[l]);
                                                if (c) {
                                                    (i = c.fileName), (a = c.line);
                                                    break;
                                                }
                                            }
                                            for (var l = 0; l < o.length; ++l) {
                                                var c = P(o[l]);
                                                if (c) {
                                                    (n = c.fileName), (s = c.line);
                                                    break;
                                                }
                                            }
                                            a < 0 ||
                                                s < 0 ||
                                                !i ||
                                                !n ||
                                                i !== n ||
                                                a >= s ||
                                                (nt = function (t) {
                                                    if (G.test(t)) return !0;
                                                    var e = P(t);
                                                    return !!(e && e.fileName === i && a <= e.line && e.line <= s);
                                                });
                                        }
                                    }
                                    function O(t) {
                                        (this._parent = t), (this._promisesCreated = 0);
                                        var e = (this._length = 1 + (void 0 === t ? 0 : t._length));
                                        ot(this, O), e > 32 && this.uncycle();
                                    }
                                    var L,
                                        j,
                                        k,
                                        I = i._getDomain,
                                        N = i._async,
                                        F = t("./errors").Warning,
                                        U = t("./util"),
                                        B = U.canAttachTrace,
                                        G = /[\\\/]bluebird[\\\/]js[\\\/](release|debug|instrumented)/,
                                        z = /\((?:timers\.js):\d+:\d+\)/,
                                        V = /[\/<\(](.+?):(\d+):(\d+)\)?\s*$/,
                                        H = null,
                                        W = null,
                                        X = !1,
                                        q = !(0 == U.env("BLUEBIRD_DEBUG")),
                                        Y = !(0 == U.env("BLUEBIRD_WARNINGS") || (!q && !U.env("BLUEBIRD_WARNINGS"))),
                                        Z = !(0 == U.env("BLUEBIRD_LONG_STACK_TRACES") || (!q && !U.env("BLUEBIRD_LONG_STACK_TRACES"))),
                                        J = 0 != U.env("BLUEBIRD_W_FORGOTTEN_RETURN") && (Y || !!U.env("BLUEBIRD_W_FORGOTTEN_RETURN"));
                                    (i.prototype.suppressUnhandledRejections = function () {
                                        var t = this._target();
                                        t._bitField = (-1048577 & t._bitField) | 524288;
                                    }),
                                        (i.prototype._ensurePossibleRejectionHandled = function () {
                                            if (0 == (524288 & this._bitField)) {
                                                this._setRejectionIsUnhandled();
                                                var t = this;
                                                setTimeout(function () {
                                                    t._notifyUnhandledRejection();
                                                }, 1);
                                            }
                                        }),
                                        (i.prototype._notifyUnhandledRejectionIsHandled = function () {
                                            S("rejectionHandled", L, void 0, this);
                                        }),
                                        (i.prototype._setReturnedNonUndefined = function () {
                                            this._bitField = 268435456 | this._bitField;
                                        }),
                                        (i.prototype._returnedNonUndefined = function () {
                                            return 0 != (268435456 & this._bitField);
                                        }),
                                        (i.prototype._notifyUnhandledRejection = function () {
                                            if (this._isRejectionUnhandled()) {
                                                var t = this._settledValue();
                                                this._setUnhandledRejectionIsNotified(), S("unhandledRejection", j, t, this);
                                            }
                                        }),
                                        (i.prototype._setUnhandledRejectionIsNotified = function () {
                                            this._bitField = 262144 | this._bitField;
                                        }),
                                        (i.prototype._unsetUnhandledRejectionIsNotified = function () {
                                            this._bitField = -262145 & this._bitField;
                                        }),
                                        (i.prototype._isUnhandledRejectionNotified = function () {
                                            return (262144 & this._bitField) > 0;
                                        }),
                                        (i.prototype._setRejectionIsUnhandled = function () {
                                            this._bitField = 1048576 | this._bitField;
                                        }),
                                        (i.prototype._unsetRejectionIsUnhandled = function () {
                                            (this._bitField = -1048577 & this._bitField), this._isUnhandledRejectionNotified() && (this._unsetUnhandledRejectionIsNotified(), this._notifyUnhandledRejectionIsHandled());
                                        }),
                                        (i.prototype._isRejectionUnhandled = function () {
                                            return (1048576 & this._bitField) > 0;
                                        }),
                                        (i.prototype._warn = function (t, e, i) {
                                            return y(t, e, i || this);
                                        }),
                                        (i.onPossiblyUnhandledRejection = function (t) {
                                            var e = I();
                                            j = "function" == typeof t ? (null === e ? t : U.domainBind(e, t)) : void 0;
                                        }),
                                        (i.onUnhandledRejectionHandled = function (t) {
                                            var e = I();
                                            L = "function" == typeof t ? (null === e ? t : U.domainBind(e, t)) : void 0;
                                        });
                                    var Q = function () {};
                                    (i.longStackTraces = function () {
                                        if (N.haveItemsQueued() && !at.longStackTraces) throw new Error("cannot enable long stack traces after promises have been created\n\n    See http://goo.gl/MqrFmX\n");
                                        if (!at.longStackTraces && C()) {
                                            var t = i.prototype._captureStackTrace,
                                                e = i.prototype._attachExtraTrace;
                                            (at.longStackTraces = !0),
                                                (Q = function () {
                                                    if (N.haveItemsQueued() && !at.longStackTraces) throw new Error("cannot enable long stack traces after promises have been created\n\n    See http://goo.gl/MqrFmX\n");
                                                    (i.prototype._captureStackTrace = t), (i.prototype._attachExtraTrace = e), n.deactivateLongStackTraces(), N.enableTrampoline(), (at.longStackTraces = !1);
                                                }),
                                                (i.prototype._captureStackTrace = f),
                                                (i.prototype._attachExtraTrace = m),
                                                n.activateLongStackTraces(),
                                                N.disableTrampolineIfNecessary();
                                        }
                                    }),
                                        (i.hasLongStackTraces = function () {
                                            return at.longStackTraces && C();
                                        });
                                    var $ = (function () {
                                            try {
                                                if ("function" == typeof CustomEvent) {
                                                    var t = new CustomEvent("CustomEvent");
                                                    return (
                                                        U.global.dispatchEvent(t),
                                                        function (t, e) {
                                                            var i = new CustomEvent(t.toLowerCase(), { detail: e, cancelable: !0 });
                                                            return !U.global.dispatchEvent(i);
                                                        }
                                                    );
                                                }
                                                if ("function" == typeof Event) {
                                                    var t = new Event("CustomEvent");
                                                    return (
                                                        U.global.dispatchEvent(t),
                                                        function (t, e) {
                                                            var i = new Event(t.toLowerCase(), { cancelable: !0 });
                                                            return (i.detail = e), !U.global.dispatchEvent(i);
                                                        }
                                                    );
                                                }
                                                var t = document.createEvent("CustomEvent");
                                                return (
                                                    t.initCustomEvent("testingtheevent", !1, !0, {}),
                                                    U.global.dispatchEvent(t),
                                                    function (t, e) {
                                                        var i = document.createEvent("CustomEvent");
                                                        return i.initCustomEvent(t.toLowerCase(), !1, !0, e), !U.global.dispatchEvent(i);
                                                    }
                                                );
                                            } catch (t) {}
                                            return function () {
                                                return !1;
                                            };
                                        })(),
                                        K = (function () {
                                            return U.isNode
                                                ? function () {
                                                      return e.emit.apply(e, arguments);
                                                  }
                                                : U.global
                                                ? function (t) {
                                                      var e = "on" + t.toLowerCase(),
                                                          i = U.global[e];
                                                      return !!i && (i.apply(U.global, [].slice.call(arguments, 1)), !0);
                                                  }
                                                : function () {
                                                      return !1;
                                                  };
                                        })(),
                                        tt = {
                                            promiseCreated: r,
                                            promiseFulfilled: r,
                                            promiseRejected: r,
                                            promiseResolved: r,
                                            promiseCancelled: r,
                                            promiseChained: function (t, e, i) {
                                                return { promise: e, child: i };
                                            },
                                            warning: function (t, e) {
                                                return { warning: e };
                                            },
                                            unhandledRejection: function (t, e, i) {
                                                return { reason: e, promise: i };
                                            },
                                            rejectionHandled: r,
                                        },
                                        et = function (t) {
                                            var e = !1;
                                            try {
                                                e = K.apply(null, arguments);
                                            } catch (t) {
                                                N.throwLater(t), (e = !0);
                                            }
                                            var i = !1;
                                            try {
                                                i = $(t, tt[t].apply(null, arguments));
                                            } catch (t) {
                                                N.throwLater(t), (i = !0);
                                            }
                                            return i || e;
                                        };
                                    (i.config = function (t) {
                                        if (((t = Object(t)), "longStackTraces" in t && (t.longStackTraces ? i.longStackTraces() : !t.longStackTraces && i.hasLongStackTraces() && Q()), "warnings" in t)) {
                                            var e = t.warnings;
                                            (at.warnings = !!e), (J = at.warnings), U.isObject(e) && "wForgottenReturn" in e && (J = !!e.wForgottenReturn);
                                        }
                                        if ("cancellation" in t && t.cancellation && !at.cancellation) {
                                            if (N.haveItemsQueued()) throw new Error("cannot enable cancellation after promises are in use");
                                            (i.prototype._clearCancellationData = u),
                                                (i.prototype._propagateFrom = h),
                                                (i.prototype._onCancel = l),
                                                (i.prototype._setOnCancel = c),
                                                (i.prototype._attachCancellationCallback = s),
                                                (i.prototype._execute = a),
                                                (it = h),
                                                (at.cancellation = !0);
                                        }
                                        return (
                                            "monitoring" in t &&
                                                (t.monitoring && !at.monitoring ? ((at.monitoring = !0), (i.prototype._fireEvent = et)) : !t.monitoring && at.monitoring && ((at.monitoring = !1), (i.prototype._fireEvent = o))),
                                            i
                                        );
                                    }),
                                        (i.prototype._fireEvent = o),
                                        (i.prototype._execute = function (t, e, i) {
                                            try {
                                                t(e, i);
                                            } catch (t) {
                                                return t;
                                            }
                                        }),
                                        (i.prototype._onCancel = function () {}),
                                        (i.prototype._setOnCancel = function (t) {}),
                                        (i.prototype._attachCancellationCallback = function (t) {}),
                                        (i.prototype._captureStackTrace = function () {}),
                                        (i.prototype._attachExtraTrace = function () {}),
                                        (i.prototype._clearCancellationData = function () {}),
                                        (i.prototype._propagateFrom = function (t, e) {});
                                    var it = d,
                                        nt = function () {
                                            return !1;
                                        },
                                        rt = /[\/<\(]([^:\/]+):(\d+):(?:\d+)\)?\s*$/;
                                    U.inherits(O, Error),
                                        (n.CapturedTrace = O),
                                        (O.prototype.uncycle = function () {
                                            var t = this._length;
                                            if (!(t < 2)) {
                                                for (var e = [], i = {}, n = 0, r = this; void 0 !== r; ++n) e.push(r), (r = r._parent);
                                                t = this._length = n;
                                                for (var n = t - 1; n >= 0; --n) {
                                                    var o = e[n].stack;
                                                    void 0 === i[o] && (i[o] = n);
                                                }
                                                for (var n = 0; n < t; ++n) {
                                                    var a = e[n].stack,
                                                        s = i[a];
                                                    if (void 0 !== s && s !== n) {
                                                        s > 0 && ((e[s - 1]._parent = void 0), (e[s - 1]._length = 1)), (e[n]._parent = void 0), (e[n]._length = 1);
                                                        var l = n > 0 ? e[n - 1] : this;
                                                        s < t - 1 ? ((l._parent = e[s + 1]), l._parent.uncycle(), (l._length = l._parent._length + 1)) : ((l._parent = void 0), (l._length = 1));
                                                        for (var c = l._length + 1, u = n - 2; u >= 0; --u) (e[u]._length = c), c++;
                                                        return;
                                                    }
                                                }
                                            }
                                        }),
                                        (O.prototype.attachExtraTrace = function (t) {
                                            if (!t.__stackCleaned__) {
                                                this.uncycle();
                                                for (var e = E(t), i = e.message, n = [e.stack], r = this; void 0 !== r; ) n.push(w(r.stack.split("\n"))), (r = r._parent);
                                                x(n), b(n), U.notEnumerableProp(t, "stack", _(i, n)), U.notEnumerableProp(t, "__stackCleaned__", !0);
                                            }
                                        });
                                    var ot = (function () {
                                        var t = /^\s*at\s*/,
                                            e = function (t, e) {
                                                return "string" == typeof t ? t : void 0 !== e.name && void 0 !== e.message ? e.toString() : A(e);
                                            };
                                        if ("number" == typeof Error.stackTraceLimit && "function" == typeof Error.captureStackTrace) {
                                            (Error.stackTraceLimit += 6), (H = t), (W = e);
                                            var i = Error.captureStackTrace;
                                            return (
                                                (nt = function (t) {
                                                    return G.test(t);
                                                }),
                                                function (t, e) {
                                                    (Error.stackTraceLimit += 6), i(t, e), (Error.stackTraceLimit -= 6);
                                                }
                                            );
                                        }
                                        var n = new Error();
                                        if ("string" == typeof n.stack && n.stack.split("\n")[0].indexOf("stackDetection@") >= 0)
                                            return (
                                                (H = /@/),
                                                (W = e),
                                                (X = !0),
                                                function (t) {
                                                    t.stack = new Error().stack;
                                                }
                                            );
                                        var r;
                                        try {
                                            throw new Error();
                                        } catch (t) {
                                            r = "stack" in t;
                                        }
                                        return "stack" in n || !r || "number" != typeof Error.stackTraceLimit
                                            ? ((W = function (t, e) {
                                                  return "string" == typeof t ? t : ("object" != typeof e && "function" != typeof e) || void 0 === e.name || void 0 === e.message ? A(e) : e.toString();
                                              }),
                                              null)
                                            : ((H = t),
                                              (W = e),
                                              function (t) {
                                                  Error.stackTraceLimit += 6;
                                                  try {
                                                      throw new Error();
                                                  } catch (e) {
                                                      t.stack = e.stack;
                                                  }
                                                  Error.stackTraceLimit -= 6;
                                              });
                                    })();
                                    "undefined" != typeof console &&
                                        void 0 !== console.warn &&
                                        ((k = function (t) {
                                            console.warn(t);
                                        }),
                                        U.isNode && e.stderr.isTTY
                                            ? (k = function (t, e) {
                                                  var i = e ? "[33m" : "[31m";
                                                  console.warn(i + t + "[0m\n");
                                              })
                                            : U.isNode ||
                                              "string" != typeof new Error().stack ||
                                              (k = function (t, e) {
                                                  console.warn("%c" + t, e ? "color: darkorange" : "color: red");
                                              }));
                                    var at = { warnings: Y, longStackTraces: !1, cancellation: !1, monitoring: !1 };
                                    return (
                                        Z && i.longStackTraces(),
                                        {
                                            longStackTraces: function () {
                                                return at.longStackTraces;
                                            },
                                            warnings: function () {
                                                return at.warnings;
                                            },
                                            cancellation: function () {
                                                return at.cancellation;
                                            },
                                            monitoring: function () {
                                                return at.monitoring;
                                            },
                                            propagateFromFunction: function () {
                                                return it;
                                            },
                                            boundValueFunction: function () {
                                                return p;
                                            },
                                            checkForgottenReturns: v,
                                            setBounds: D,
                                            warn: y,
                                            deprecated: g,
                                            CapturedTrace: O,
                                            fireDomEvent: $,
                                            fireGlobalEvent: K,
                                        }
                                    );
                                };
                            },
                            { "./errors": 12, "./util": 36 },
                        ],
                        10: [
                            function (t, e, i) {
                                "use strict";
                                e.exports = function (t) {
                                    function e() {
                                        return this.value;
                                    }
                                    function i() {
                                        throw this.reason;
                                    }
                                    (t.prototype.return = t.prototype.thenReturn = function (i) {
                                        return i instanceof t && i.suppressUnhandledRejections(), this._then(e, void 0, void 0, { value: i }, void 0);
                                    }),
                                        (t.prototype.throw = t.prototype.thenThrow = function (t) {
                                            return this._then(i, void 0, void 0, { reason: t }, void 0);
                                        }),
                                        (t.prototype.catchThrow = function (t) {
                                            if (arguments.length <= 1) return this._then(void 0, i, void 0, { reason: t }, void 0);
                                            var e = arguments[1],
                                                n = function () {
                                                    throw e;
                                                };
                                            return this.caught(t, n);
                                        }),
                                        (t.prototype.catchReturn = function (i) {
                                            if (arguments.length <= 1) return i instanceof t && i.suppressUnhandledRejections(), this._then(void 0, e, void 0, { value: i }, void 0);
                                            var n = arguments[1];
                                            n instanceof t && n.suppressUnhandledRejections();
                                            var r = function () {
                                                return n;
                                            };
                                            return this.caught(i, r);
                                        });
                                };
                            },
                            {},
                        ],
                        11: [
                            function (t, e, i) {
                                "use strict";
                                e.exports = function (t, e) {
                                    function i() {
                                        return o(this);
                                    }
                                    function n(t, i) {
                                        return r(t, i, e, e);
                                    }
                                    var r = t.reduce,
                                        o = t.all;
                                    (t.prototype.each = function (t) {
                                        return r(this, t, e, 0)._then(i, void 0, void 0, this, void 0);
                                    }),
                                        (t.prototype.mapSeries = function (t) {
                                            return r(this, t, e, e);
                                        }),
                                        (t.each = function (t, n) {
                                            return r(t, n, e, 0)._then(i, void 0, void 0, t, void 0);
                                        }),
                                        (t.mapSeries = n);
                                };
                            },
                            {},
                        ],
                        12: [
                            function (t, e, i) {
                                "use strict";
                                function n(t, e) {
                                    function i(n) {
                                        if (!(this instanceof i)) return new i(n);
                                        h(this, "message", "string" == typeof n ? n : e), h(this, "name", t), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : Error.call(this);
                                    }
                                    return u(i, Error), i;
                                }
                                function r(t) {
                                    if (!(this instanceof r)) return new r(t);
                                    h(this, "name", "OperationalError"),
                                        h(this, "message", t),
                                        (this.cause = t),
                                        (this.isOperational = !0),
                                        t instanceof Error ? (h(this, "message", t.message), h(this, "stack", t.stack)) : Error.captureStackTrace && Error.captureStackTrace(this, this.constructor);
                                }
                                var o,
                                    a,
                                    s = t("./es5"),
                                    l = s.freeze,
                                    c = t("./util"),
                                    u = c.inherits,
                                    h = c.notEnumerableProp,
                                    d = n("Warning", "warning"),
                                    p = n("CancellationError", "cancellation error"),
                                    f = n("TimeoutError", "timeout error"),
                                    m = n("AggregateError", "aggregate error");
                                try {
                                    (o = TypeError), (a = RangeError);
                                } catch (t) {
                                    (o = n("TypeError", "type error")), (a = n("RangeError", "range error"));
                                }
                                for (var v = "join pop push shift unshift slice filter forEach some every map indexOf lastIndexOf reduce reduceRight sort reverse".split(" "), g = 0; g < v.length; ++g)
                                    "function" == typeof Array.prototype[v[g]] && (m.prototype[v[g]] = Array.prototype[v[g]]);
                                s.defineProperty(m.prototype, "length", { value: 0, configurable: !1, writable: !0, enumerable: !0 }), (m.prototype.isOperational = !0);
                                var y = 0;
                                (m.prototype.toString = function () {
                                    var t = Array(4 * y + 1).join(" "),
                                        e = "\n" + t + "AggregateError of:\n";
                                    y++, (t = Array(4 * y + 1).join(" "));
                                    for (var i = 0; i < this.length; ++i) {
                                        for (var n = this[i] === this ? "[Circular AggregateError]" : this[i] + "", r = n.split("\n"), o = 0; o < r.length; ++o) r[o] = t + r[o];
                                        (n = r.join("\n")), (e += n + "\n");
                                    }
                                    return y--, e;
                                }),
                                    u(r, Error);
                                var _ = Error.__BluebirdErrorTypes__;
                                _ ||
                                    ((_ = l({ CancellationError: p, TimeoutError: f, OperationalError: r, RejectionError: r, AggregateError: m })),
                                    s.defineProperty(Error, "__BluebirdErrorTypes__", { value: _, writable: !1, enumerable: !1, configurable: !1 })),
                                    (e.exports = {
                                        Error: Error,
                                        TypeError: o,
                                        RangeError: a,
                                        CancellationError: _.CancellationError,
                                        OperationalError: _.OperationalError,
                                        TimeoutError: _.TimeoutError,
                                        AggregateError: _.AggregateError,
                                        Warning: d,
                                    });
                            },
                            { "./es5": 13, "./util": 36 },
                        ],
                        13: [
                            function (t, e, i) {
                                var n = (function () {
                                    "use strict";
                                    return void 0 === this;
                                })();
                                if (n)
                                    e.exports = {
                                        freeze: Object.freeze,
                                        defineProperty: Object.defineProperty,
                                        getDescriptor: Object.getOwnPropertyDescriptor,
                                        keys: Object.keys,
                                        names: Object.getOwnPropertyNames,
                                        getPrototypeOf: Object.getPrototypeOf,
                                        isArray: Array.isArray,
                                        isES5: n,
                                        propertyIsWritable: function (t, e) {
                                            var i = Object.getOwnPropertyDescriptor(t, e);
                                            return !(i && !i.writable && !i.set);
                                        },
                                    };
                                else {
                                    var r = {}.hasOwnProperty,
                                        o = {}.toString,
                                        a = {}.constructor.prototype,
                                        s = function (t) {
                                            var e = [];
                                            for (var i in t) r.call(t, i) && e.push(i);
                                            return e;
                                        },
                                        l = function (t, e) {
                                            return { value: t[e] };
                                        },
                                        c = function (t, e, i) {
                                            return (t[e] = i.value), t;
                                        },
                                        u = function (t) {
                                            return t;
                                        },
                                        h = function (t) {
                                            try {
                                                return Object(t).constructor.prototype;
                                            } catch (t) {
                                                return a;
                                            }
                                        },
                                        d = function (t) {
                                            try {
                                                return "[object Array]" === o.call(t);
                                            } catch (t) {
                                                return !1;
                                            }
                                        };
                                    e.exports = {
                                        isArray: d,
                                        keys: s,
                                        names: s,
                                        defineProperty: c,
                                        getDescriptor: l,
                                        freeze: u,
                                        getPrototypeOf: h,
                                        isES5: n,
                                        propertyIsWritable: function () {
                                            return !0;
                                        },
                                    };
                                }
                            },
                            {},
                        ],
                        14: [
                            function (t, e, i) {
                                "use strict";
                                e.exports = function (t, e) {
                                    var i = t.map;
                                    (t.prototype.filter = function (t, n) {
                                        return i(this, t, n, e);
                                    }),
                                        (t.filter = function (t, n, r) {
                                            return i(t, n, r, e);
                                        });
                                };
                            },
                            {},
                        ],
                        15: [
                            function (t, e, i) {
                                "use strict";
                                e.exports = function (e, i, n) {
                                    function r(t, e, i) {
                                        (this.promise = t), (this.type = e), (this.handler = i), (this.called = !1), (this.cancelPromise = null);
                                    }
                                    function o(t) {
                                        this.finallyHandler = t;
                                    }
                                    function a(t, e) {
                                        return null != t.cancelPromise && (arguments.length > 1 ? t.cancelPromise._reject(e) : t.cancelPromise._cancel(), (t.cancelPromise = null), !0);
                                    }
                                    function s() {
                                        return c.call(this, this.promise._target()._settledValue());
                                    }
                                    function l(t) {
                                        if (!a(this, t)) return (d.e = t), d;
                                    }
                                    function c(t) {
                                        var r = this.promise,
                                            c = this.handler;
                                        if (!this.called) {
                                            this.called = !0;
                                            var u = this.isFinallyHandler() ? c.call(r._boundValue()) : c.call(r._boundValue(), t);
                                            if (u === n) return u;
                                            if (void 0 !== u) {
                                                r._setReturnedNonUndefined();
                                                var p = i(u, r);
                                                if (p instanceof e) {
                                                    if (null != this.cancelPromise) {
                                                        if (p._isCancelled()) {
                                                            var f = new h("late cancellation observer");
                                                            return r._attachExtraTrace(f), (d.e = f), d;
                                                        }
                                                        p.isPending() && p._attachCancellationCallback(new o(this));
                                                    }
                                                    return p._then(s, l, void 0, this, void 0);
                                                }
                                            }
                                        }
                                        return r.isRejected() ? (a(this), (d.e = t), d) : (a(this), t);
                                    }
                                    var u = t("./util"),
                                        h = e.CancellationError,
                                        d = u.errorObj,
                                        p = t("./catch_filter")(n);
                                    return (
                                        (r.prototype.isFinallyHandler = function () {
                                            return 0 === this.type;
                                        }),
                                        (o.prototype._resultCancelled = function () {
                                            a(this.finallyHandler);
                                        }),
                                        (e.prototype._passThrough = function (t, e, i, n) {
                                            return "function" != typeof t ? this.then() : this._then(i, n, void 0, new r(this, e, t), void 0);
                                        }),
                                        (e.prototype.lastly = e.prototype.finally = function (t) {
                                            return this._passThrough(t, 0, c, c);
                                        }),
                                        (e.prototype.tap = function (t) {
                                            return this._passThrough(t, 1, c);
                                        }),
                                        (e.prototype.tapCatch = function (t) {
                                            var i = arguments.length;
                                            if (1 === i) return this._passThrough(t, 1, void 0, c);
                                            var n,
                                                r = new Array(i - 1),
                                                o = 0;
                                            for (n = 0; n < i - 1; ++n) {
                                                var a = arguments[n];
                                                if (!u.isObject(a)) return e.reject(new TypeError("tapCatch statement predicate: expecting an object but got " + u.classString(a)));
                                                r[o++] = a;
                                            }
                                            r.length = o;
                                            var s = arguments[n];
                                            return this._passThrough(p(r, s, this), 1, void 0, c);
                                        }),
                                        r
                                    );
                                };
                            },
                            { "./catch_filter": 7, "./util": 36 },
                        ],
                        16: [
                            function (t, e, i) {
                                "use strict";
                                e.exports = function (e, i, n, r, o, a) {
                                    function s(t, i, n) {
                                        for (var o = 0; o < i.length; ++o) {
                                            n._pushContext();
                                            var a = p(i[o])(t);
                                            if ((n._popContext(), a === d)) {
                                                n._pushContext();
                                                var s = e.reject(d.e);
                                                return n._popContext(), s;
                                            }
                                            var l = r(a, n);
                                            if (l instanceof e) return l;
                                        }
                                        return null;
                                    }
                                    function l(t, i, r, o) {
                                        if (a.cancellation()) {
                                            var s = new e(n),
                                                l = (this._finallyPromise = new e(n));
                                            (this._promise = s.lastly(function () {
                                                return l;
                                            })),
                                                s._captureStackTrace(),
                                                s._setOnCancel(this);
                                        } else {
                                            (this._promise = new e(n))._captureStackTrace();
                                        }
                                        (this._stack = o),
                                            (this._generatorFunction = t),
                                            (this._receiver = i),
                                            (this._generator = void 0),
                                            (this._yieldHandlers = "function" == typeof r ? [r].concat(f) : f),
                                            (this._yieldedPromise = null),
                                            (this._cancellationPhase = !1);
                                    }
                                    var c = t("./errors"),
                                        u = c.TypeError,
                                        h = t("./util"),
                                        d = h.errorObj,
                                        p = h.tryCatch,
                                        f = [];
                                    h.inherits(l, o),
                                        (l.prototype._isResolved = function () {
                                            return null === this._promise;
                                        }),
                                        (l.prototype._cleanup = function () {
                                            (this._promise = this._generator = null), a.cancellation() && null !== this._finallyPromise && (this._finallyPromise._fulfill(), (this._finallyPromise = null));
                                        }),
                                        (l.prototype._promiseCancelled = function () {
                                            if (!this._isResolved()) {
                                                var t,
                                                    i = void 0 !== this._generator.return;
                                                if (i) this._promise._pushContext(), (t = p(this._generator.return).call(this._generator, void 0)), this._promise._popContext();
                                                else {
                                                    var n = new e.CancellationError("generator .return() sentinel");
                                                    (e.coroutine.returnSentinel = n), this._promise._attachExtraTrace(n), this._promise._pushContext(), (t = p(this._generator.throw).call(this._generator, n)), this._promise._popContext();
                                                }
                                                (this._cancellationPhase = !0), (this._yieldedPromise = null), this._continue(t);
                                            }
                                        }),
                                        (l.prototype._promiseFulfilled = function (t) {
                                            (this._yieldedPromise = null), this._promise._pushContext();
                                            var e = p(this._generator.next).call(this._generator, t);
                                            this._promise._popContext(), this._continue(e);
                                        }),
                                        (l.prototype._promiseRejected = function (t) {
                                            (this._yieldedPromise = null), this._promise._attachExtraTrace(t), this._promise._pushContext();
                                            var e = p(this._generator.throw).call(this._generator, t);
                                            this._promise._popContext(), this._continue(e);
                                        }),
                                        (l.prototype._resultCancelled = function () {
                                            if (this._yieldedPromise instanceof e) {
                                                var t = this._yieldedPromise;
                                                (this._yieldedPromise = null), t.cancel();
                                            }
                                        }),
                                        (l.prototype.promise = function () {
                                            return this._promise;
                                        }),
                                        (l.prototype._run = function () {
                                            (this._generator = this._generatorFunction.call(this._receiver)), (this._receiver = this._generatorFunction = void 0), this._promiseFulfilled(void 0);
                                        }),
                                        (l.prototype._continue = function (t) {
                                            var i = this._promise;
                                            if (t === d) return this._cleanup(), this._cancellationPhase ? i.cancel() : i._rejectCallback(t.e, !1);
                                            var n = t.value;
                                            if (!0 === t.done) return this._cleanup(), this._cancellationPhase ? i.cancel() : i._resolveCallback(n);
                                            var o = r(n, this._promise);
                                            if (!(o instanceof e) && null === (o = s(o, this._yieldHandlers, this._promise)))
                                                return void this._promiseRejected(
                                                    new u(
                                                        "A value %s was yielded that could not be treated as a promise\n\n    See http://goo.gl/MqrFmX\n\n".replace("%s", String(n)) +
                                                            "From coroutine:\n" +
                                                            this._stack.split("\n").slice(1, -7).join("\n")
                                                    )
                                                );
                                            o = o._target();
                                            var a = o._bitField;
                                            0 == (50397184 & a)
                                                ? ((this._yieldedPromise = o), o._proxy(this, null))
                                                : 0 != (33554432 & a)
                                                ? e._async.invoke(this._promiseFulfilled, this, o._value())
                                                : 0 != (16777216 & a)
                                                ? e._async.invoke(this._promiseRejected, this, o._reason())
                                                : this._promiseCancelled();
                                        }),
                                        (e.coroutine = function (t, e) {
                                            if ("function" != typeof t) throw new u("generatorFunction must be a function\n\n    See http://goo.gl/MqrFmX\n");
                                            var i = Object(e).yieldHandler,
                                                n = l,
                                                r = new Error().stack;
                                            return function () {
                                                var e = t.apply(this, arguments),
                                                    o = new n(void 0, void 0, i, r),
                                                    a = o.promise();
                                                return (o._generator = e), o._promiseFulfilled(void 0), a;
                                            };
                                        }),
                                        (e.coroutine.addYieldHandler = function (t) {
                                            if ("function" != typeof t) throw new u("expecting a function but got " + h.classString(t));
                                            f.push(t);
                                        }),
                                        (e.spawn = function (t) {
                                            if ((a.deprecated("Promise.spawn()", "Promise.coroutine()"), "function" != typeof t)) return i("generatorFunction must be a function\n\n    See http://goo.gl/MqrFmX\n");
                                            var n = new l(t, this),
                                                r = n.promise();
                                            return n._run(e.spawn), r;
                                        });
                                };
                            },
                            { "./errors": 12, "./util": 36 },
                        ],
                        17: [
                            function (t, e, i) {
                                "use strict";
                                e.exports = function (e, i, n, r, o, a) {
                                    var s = t("./util");
                                    s.canEvaluate, s.tryCatch, s.errorObj;
                                    e.join = function () {
                                        var t,
                                            e = arguments.length - 1;
                                        if (e > 0 && "function" == typeof arguments[e]) {
                                            t = arguments[e];
                                            var n;
                                        }
                                        var r = [].slice.call(arguments);
                                        t && r.pop();
                                        var n = new i(r).promise();
                                        return void 0 !== t ? n.spread(t) : n;
                                    };
                                };
                            },
                            { "./util": 36 },
                        ],
                        18: [
                            function (t, e, i) {
                                "use strict";
                                e.exports = function (e, i, n, r, o, a) {
                                    function s(t, e, i, n) {
                                        this.constructor$(t), this._promise._captureStackTrace();
                                        var r = c();
                                        (this._callback = null === r ? e : u.domainBind(r, e)),
                                            (this._preservedValues = n === o ? new Array(this.length()) : null),
                                            (this._limit = i),
                                            (this._inFlight = 0),
                                            (this._queue = []),
                                            p.invoke(this._asyncInit, this, void 0);
                                    }
                                    function l(t, i, r, o) {
                                        if ("function" != typeof i) return n("expecting a function but got " + u.classString(i));
                                        var a = 0;
                                        if (void 0 !== r) {
                                            if ("object" != typeof r || null === r) return e.reject(new TypeError("options argument must be an object but it is " + u.classString(r)));
                                            if ("number" != typeof r.concurrency) return e.reject(new TypeError("'concurrency' must be a number but it is " + u.classString(r.concurrency)));
                                            a = r.concurrency;
                                        }
                                        return (a = "number" == typeof a && isFinite(a) && a >= 1 ? a : 0), new s(t, i, a, o).promise();
                                    }
                                    var c = e._getDomain,
                                        u = t("./util"),
                                        h = u.tryCatch,
                                        d = u.errorObj,
                                        p = e._async;
                                    u.inherits(s, i),
                                        (s.prototype._asyncInit = function () {
                                            this._init$(void 0, -2);
                                        }),
                                        (s.prototype._init = function () {}),
                                        (s.prototype._promiseFulfilled = function (t, i) {
                                            var n = this._values,
                                                o = this.length(),
                                                s = this._preservedValues,
                                                l = this._limit;
                                            if (i < 0) {
                                                if (((i = -1 * i - 1), (n[i] = t), l >= 1 && (this._inFlight--, this._drainQueue(), this._isResolved()))) return !0;
                                            } else {
                                                if (l >= 1 && this._inFlight >= l) return (n[i] = t), this._queue.push(i), !1;
                                                null !== s && (s[i] = t);
                                                var c = this._promise,
                                                    u = this._callback,
                                                    p = c._boundValue();
                                                c._pushContext();
                                                var f = h(u).call(p, t, i, o),
                                                    m = c._popContext();
                                                if ((a.checkForgottenReturns(f, m, null !== s ? "Promise.filter" : "Promise.map", c), f === d)) return this._reject(f.e), !0;
                                                var v = r(f, this._promise);
                                                if (v instanceof e) {
                                                    v = v._target();
                                                    var g = v._bitField;
                                                    if (0 == (50397184 & g)) return l >= 1 && this._inFlight++, (n[i] = v), v._proxy(this, -1 * (i + 1)), !1;
                                                    if (0 == (33554432 & g)) return 0 != (16777216 & g) ? (this._reject(v._reason()), !0) : (this._cancel(), !0);
                                                    f = v._value();
                                                }
                                                n[i] = f;
                                            }
                                            return ++this._totalResolved >= o && (null !== s ? this._filter(n, s) : this._resolve(n), !0);
                                        }),
                                        (s.prototype._drainQueue = function () {
                                            for (var t = this._queue, e = this._limit, i = this._values; t.length > 0 && this._inFlight < e; ) {
                                                if (this._isResolved()) return;
                                                var n = t.pop();
                                                this._promiseFulfilled(i[n], n);
                                            }
                                        }),
                                        (s.prototype._filter = function (t, e) {
                                            for (var i = e.length, n = new Array(i), r = 0, o = 0; o < i; ++o) t[o] && (n[r++] = e[o]);
                                            (n.length = r), this._resolve(n);
                                        }),
                                        (s.prototype.preservedValues = function () {
                                            return this._preservedValues;
                                        }),
                                        (e.prototype.map = function (t, e) {
                                            return l(this, t, e, null);
                                        }),
                                        (e.map = function (t, e, i, n) {
                                            return l(t, e, i, n);
                                        });
                                };
                            },
                            { "./util": 36 },
                        ],
                        19: [
                            function (t, e, i) {
                                "use strict";
                                e.exports = function (e, i, n, r, o) {
                                    var a = t("./util"),
                                        s = a.tryCatch;
                                    (e.method = function (t) {
                                        if ("function" != typeof t) throw new e.TypeError("expecting a function but got " + a.classString(t));
                                        return function () {
                                            var n = new e(i);
                                            n._captureStackTrace(), n._pushContext();
                                            var r = s(t).apply(this, arguments),
                                                a = n._popContext();
                                            return o.checkForgottenReturns(r, a, "Promise.method", n), n._resolveFromSyncValue(r), n;
                                        };
                                    }),
                                        (e.attempt = e.try = function (t) {
                                            if ("function" != typeof t) return r("expecting a function but got " + a.classString(t));
                                            var n = new e(i);
                                            n._captureStackTrace(), n._pushContext();
                                            var l;
                                            if (arguments.length > 1) {
                                                o.deprecated("calling Promise.try with more than 1 argument");
                                                var c = arguments[1],
                                                    u = arguments[2];
                                                l = a.isArray(c) ? s(t).apply(u, c) : s(t).call(u, c);
                                            } else l = s(t)();
                                            var h = n._popContext();
                                            return o.checkForgottenReturns(l, h, "Promise.try", n), n._resolveFromSyncValue(l), n;
                                        }),
                                        (e.prototype._resolveFromSyncValue = function (t) {
                                            t === a.errorObj ? this._rejectCallback(t.e, !1) : this._resolveCallback(t, !0);
                                        });
                                };
                            },
                            { "./util": 36 },
                        ],
                        20: [
                            function (t, e, i) {
                                "use strict";
                                function n(t) {
                                    return t instanceof Error && u.getPrototypeOf(t) === Error.prototype;
                                }
                                function r(t) {
                                    var e;
                                    if (n(t)) {
                                        (e = new c(t)), (e.name = t.name), (e.message = t.message), (e.stack = t.stack);
                                        for (var i = u.keys(t), r = 0; r < i.length; ++r) {
                                            var o = i[r];
                                            h.test(o) || (e[o] = t[o]);
                                        }
                                        return e;
                                    }
                                    return a.markAsOriginatingFromRejection(t), t;
                                }
                                function o(t, e) {
                                    return function (i, n) {
                                        if (null !== t) {
                                            if (i) {
                                                var o = r(s(i));
                                                t._attachExtraTrace(o), t._reject(o);
                                            } else if (e) {
                                                var a = [].slice.call(arguments, 1);
                                                t._fulfill(a);
                                            } else t._fulfill(n);
                                            t = null;
                                        }
                                    };
                                }
                                var a = t("./util"),
                                    s = a.maybeWrapAsError,
                                    l = t("./errors"),
                                    c = l.OperationalError,
                                    u = t("./es5"),
                                    h = /^(?:name|message|stack|cause)$/;
                                e.exports = o;
                            },
                            { "./errors": 12, "./es5": 13, "./util": 36 },
                        ],
                        21: [
                            function (t, e, i) {
                                "use strict";
                                e.exports = function (e) {
                                    function i(t, e) {
                                        var i = this;
                                        if (!o.isArray(t)) return n.call(i, t, e);
                                        var r = s(e).apply(i._boundValue(), [null].concat(t));
                                        r === l && a.throwLater(r.e);
                                    }
                                    function n(t, e) {
                                        var i = this,
                                            n = i._boundValue(),
                                            r = void 0 === t ? s(e).call(n, null) : s(e).call(n, null, t);
                                        r === l && a.throwLater(r.e);
                                    }
                                    function r(t, e) {
                                        var i = this;
                                        if (!t) {
                                            var n = new Error(t + "");
                                            (n.cause = t), (t = n);
                                        }
                                        var r = s(e).call(i._boundValue(), t);
                                        r === l && a.throwLater(r.e);
                                    }
                                    var o = t("./util"),
                                        a = e._async,
                                        s = o.tryCatch,
                                        l = o.errorObj;
                                    e.prototype.asCallback = e.prototype.nodeify = function (t, e) {
                                        if ("function" == typeof t) {
                                            var o = n;
                                            void 0 !== e && Object(e).spread && (o = i), this._then(o, r, void 0, this, t);
                                        }
                                        return this;
                                    };
                                };
                            },
                            { "./util": 36 },
                        ],
                        22: [
                            function (t, i, n) {
                                "use strict";
                                i.exports = function () {
                                    function n() {}
                                    function r(t, e) {
                                        if (null == t || t.constructor !== o) throw new _("the promise constructor cannot be invoked directly\n\n    See http://goo.gl/MqrFmX\n");
                                        if ("function" != typeof e) throw new _("expecting a function but got " + f.classString(e));
                                    }
                                    function o(t) {
                                        t !== x && r(this, t),
                                            (this._bitField = 0),
                                            (this._fulfillmentHandler0 = void 0),
                                            (this._rejectionHandler0 = void 0),
                                            (this._promise0 = void 0),
                                            (this._receiver0 = void 0),
                                            this._resolveFromExecutor(t),
                                            this._promiseCreated(),
                                            this._fireEvent("promiseCreated", this);
                                    }
                                    function a(t) {
                                        this.promise._resolveCallback(t);
                                    }
                                    function s(t) {
                                        this.promise._rejectCallback(t, !1);
                                    }
                                    function l(t) {
                                        var e = new o(x);
                                        (e._fulfillmentHandler0 = t), (e._rejectionHandler0 = t), (e._promise0 = t), (e._receiver0 = t);
                                    }
                                    var c,
                                        u = function () {
                                            return new _("circular promise resolution chain\n\n    See http://goo.gl/MqrFmX\n");
                                        },
                                        h = function () {
                                            return new o.PromiseInspection(this._target());
                                        },
                                        d = function (t) {
                                            return o.reject(new _(t));
                                        },
                                        p = {},
                                        f = t("./util");
                                    (c = f.isNode
                                        ? function () {
                                              var t = e.domain;
                                              return void 0 === t && (t = null), t;
                                          }
                                        : function () {
                                              return null;
                                          }),
                                        f.notEnumerableProp(o, "_getDomain", c);
                                    var m = t("./es5"),
                                        v = t("./async"),
                                        g = new v();
                                    m.defineProperty(o, "_async", { value: g });
                                    var y = t("./errors"),
                                        _ = (o.TypeError = y.TypeError);
                                    o.RangeError = y.RangeError;
                                    var b = (o.CancellationError = y.CancellationError);
                                    (o.TimeoutError = y.TimeoutError), (o.OperationalError = y.OperationalError), (o.RejectionError = y.OperationalError), (o.AggregateError = y.AggregateError);
                                    var x = function () {},
                                        w = {},
                                        T = {},
                                        E = t("./thenables")(o, x),
                                        M = t("./promise_array")(o, x, E, d, n),
                                        S = t("./context")(o),
                                        A = S.create,
                                        R = t("./debuggability")(o, S),
                                        C = (R.CapturedTrace, t("./finally")(o, E, T)),
                                        P = t("./catch_filter")(T),
                                        D = t("./nodeback"),
                                        O = f.errorObj,
                                        L = f.tryCatch;
                                    return (
                                        (o.prototype.toString = function () {
                                            return "[object Promise]";
                                        }),
                                        (o.prototype.caught = o.prototype.catch = function (t) {
                                            var e = arguments.length;
                                            if (e > 1) {
                                                var i,
                                                    n = new Array(e - 1),
                                                    r = 0;
                                                for (i = 0; i < e - 1; ++i) {
                                                    var o = arguments[i];
                                                    if (!f.isObject(o)) return d("Catch statement predicate: expecting an object but got " + f.classString(o));
                                                    n[r++] = o;
                                                }
                                                return (n.length = r), (t = arguments[i]), this.then(void 0, P(n, t, this));
                                            }
                                            return this.then(void 0, t);
                                        }),
                                        (o.prototype.reflect = function () {
                                            return this._then(h, h, void 0, this, void 0);
                                        }),
                                        (o.prototype.then = function (t, e) {
                                            if (R.warnings() && arguments.length > 0 && "function" != typeof t && "function" != typeof e) {
                                                var i = ".then() only accepts functions but was passed: " + f.classString(t);
                                                arguments.length > 1 && (i += ", " + f.classString(e)), this._warn(i);
                                            }
                                            return this._then(t, e, void 0, void 0, void 0);
                                        }),
                                        (o.prototype.done = function (t, e) {
                                            this._then(t, e, void 0, void 0, void 0)._setIsFinal();
                                        }),
                                        (o.prototype.spread = function (t) {
                                            return "function" != typeof t ? d("expecting a function but got " + f.classString(t)) : this.all()._then(t, void 0, void 0, w, void 0);
                                        }),
                                        (o.prototype.toJSON = function () {
                                            var t = { isFulfilled: !1, isRejected: !1, fulfillmentValue: void 0, rejectionReason: void 0 };
                                            return this.isFulfilled() ? ((t.fulfillmentValue = this.value()), (t.isFulfilled = !0)) : this.isRejected() && ((t.rejectionReason = this.reason()), (t.isRejected = !0)), t;
                                        }),
                                        (o.prototype.all = function () {
                                            return arguments.length > 0 && this._warn(".all() was passed arguments but it does not take any"), new M(this).promise();
                                        }),
                                        (o.prototype.error = function (t) {
                                            return this.caught(f.originatesFromRejection, t);
                                        }),
                                        (o.getNewLibraryCopy = i.exports),
                                        (o.is = function (t) {
                                            return t instanceof o;
                                        }),
                                        (o.fromNode = o.fromCallback = function (t) {
                                            var e = new o(x);
                                            e._captureStackTrace();
                                            var i = arguments.length > 1 && !!Object(arguments[1]).multiArgs,
                                                n = L(t)(D(e, i));
                                            return n === O && e._rejectCallback(n.e, !0), e._isFateSealed() || e._setAsyncGuaranteed(), e;
                                        }),
                                        (o.all = function (t) {
                                            return new M(t).promise();
                                        }),
                                        (o.cast = function (t) {
                                            var e = E(t);
                                            return e instanceof o || ((e = new o(x)), e._captureStackTrace(), e._setFulfilled(), (e._rejectionHandler0 = t)), e;
                                        }),
                                        (o.resolve = o.fulfilled = o.cast),
                                        (o.reject = o.rejected = function (t) {
                                            var e = new o(x);
                                            return e._captureStackTrace(), e._rejectCallback(t, !0), e;
                                        }),
                                        (o.setScheduler = function (t) {
                                            if ("function" != typeof t) throw new _("expecting a function but got " + f.classString(t));
                                            return g.setScheduler(t);
                                        }),
                                        (o.prototype._then = function (t, e, i, n, r) {
                                            var a = void 0 !== r,
                                                s = a ? r : new o(x),
                                                l = this._target(),
                                                u = l._bitField;
                                            a ||
                                                (s._propagateFrom(this, 3),
                                                s._captureStackTrace(),
                                                void 0 === n && 0 != (2097152 & this._bitField) && (n = 0 != (50397184 & u) ? this._boundValue() : l === this ? void 0 : this._boundTo),
                                                this._fireEvent("promiseChained", this, s));
                                            var h = c();
                                            if (0 != (50397184 & u)) {
                                                var d,
                                                    p,
                                                    m = l._settlePromiseCtx;
                                                0 != (33554432 & u)
                                                    ? ((p = l._rejectionHandler0), (d = t))
                                                    : 0 != (16777216 & u)
                                                    ? ((p = l._fulfillmentHandler0), (d = e), l._unsetRejectionIsUnhandled())
                                                    : ((m = l._settlePromiseLateCancellationObserver), (p = new b("late cancellation observer")), l._attachExtraTrace(p), (d = e)),
                                                    g.invoke(m, l, { handler: null === h ? d : "function" == typeof d && f.domainBind(h, d), promise: s, receiver: n, value: p });
                                            } else l._addCallbacks(t, e, s, n, h);
                                            return s;
                                        }),
                                        (o.prototype._length = function () {
                                            return 65535 & this._bitField;
                                        }),
                                        (o.prototype._isFateSealed = function () {
                                            return 0 != (117506048 & this._bitField);
                                        }),
                                        (o.prototype._isFollowing = function () {
                                            return 67108864 == (67108864 & this._bitField);
                                        }),
                                        (o.prototype._setLength = function (t) {
                                            this._bitField = (-65536 & this._bitField) | (65535 & t);
                                        }),
                                        (o.prototype._setFulfilled = function () {
                                            (this._bitField = 33554432 | this._bitField), this._fireEvent("promiseFulfilled", this);
                                        }),
                                        (o.prototype._setRejected = function () {
                                            (this._bitField = 16777216 | this._bitField), this._fireEvent("promiseRejected", this);
                                        }),
                                        (o.prototype._setFollowing = function () {
                                            (this._bitField = 67108864 | this._bitField), this._fireEvent("promiseResolved", this);
                                        }),
                                        (o.prototype._setIsFinal = function () {
                                            this._bitField = 4194304 | this._bitField;
                                        }),
                                        (o.prototype._isFinal = function () {
                                            return (4194304 & this._bitField) > 0;
                                        }),
                                        (o.prototype._unsetCancelled = function () {
                                            this._bitField = -65537 & this._bitField;
                                        }),
                                        (o.prototype._setCancelled = function () {
                                            (this._bitField = 65536 | this._bitField), this._fireEvent("promiseCancelled", this);
                                        }),
                                        (o.prototype._setWillBeCancelled = function () {
                                            this._bitField = 8388608 | this._bitField;
                                        }),
                                        (o.prototype._setAsyncGuaranteed = function () {
                                            g.hasCustomScheduler() || (this._bitField = 134217728 | this._bitField);
                                        }),
                                        (o.prototype._receiverAt = function (t) {
                                            var e = 0 === t ? this._receiver0 : this[4 * t - 4 + 3];
                                            if (e !== p) return void 0 === e && this._isBound() ? this._boundValue() : e;
                                        }),
                                        (o.prototype._promiseAt = function (t) {
                                            return this[4 * t - 4 + 2];
                                        }),
                                        (o.prototype._fulfillmentHandlerAt = function (t) {
                                            return this[4 * t - 4 + 0];
                                        }),
                                        (o.prototype._rejectionHandlerAt = function (t) {
                                            return this[4 * t - 4 + 1];
                                        }),
                                        (o.prototype._boundValue = function () {}),
                                        (o.prototype._migrateCallback0 = function (t) {
                                            var e = (t._bitField, t._fulfillmentHandler0),
                                                i = t._rejectionHandler0,
                                                n = t._promise0,
                                                r = t._receiverAt(0);
                                            void 0 === r && (r = p), this._addCallbacks(e, i, n, r, null);
                                        }),
                                        (o.prototype._migrateCallbackAt = function (t, e) {
                                            var i = t._fulfillmentHandlerAt(e),
                                                n = t._rejectionHandlerAt(e),
                                                r = t._promiseAt(e),
                                                o = t._receiverAt(e);
                                            void 0 === o && (o = p), this._addCallbacks(i, n, r, o, null);
                                        }),
                                        (o.prototype._addCallbacks = function (t, e, i, n, r) {
                                            var o = this._length();
                                            if ((o >= 65531 && ((o = 0), this._setLength(0)), 0 === o))
                                                (this._promise0 = i),
                                                    (this._receiver0 = n),
                                                    "function" == typeof t && (this._fulfillmentHandler0 = null === r ? t : f.domainBind(r, t)),
                                                    "function" == typeof e && (this._rejectionHandler0 = null === r ? e : f.domainBind(r, e));
                                            else {
                                                var a = 4 * o - 4;
                                                (this[a + 2] = i),
                                                    (this[a + 3] = n),
                                                    "function" == typeof t && (this[a + 0] = null === r ? t : f.domainBind(r, t)),
                                                    "function" == typeof e && (this[a + 1] = null === r ? e : f.domainBind(r, e));
                                            }
                                            return this._setLength(o + 1), o;
                                        }),
                                        (o.prototype._proxy = function (t, e) {
                                            this._addCallbacks(void 0, void 0, e, t, null);
                                        }),
                                        (o.prototype._resolveCallback = function (t, e) {
                                            if (0 == (117506048 & this._bitField)) {
                                                if (t === this) return this._rejectCallback(u(), !1);
                                                var i = E(t, this);
                                                if (!(i instanceof o)) return this._fulfill(t);
                                                e && this._propagateFrom(i, 2);
                                                var n = i._target();
                                                if (n === this) return void this._reject(u());
                                                var r = n._bitField;
                                                if (0 == (50397184 & r)) {
                                                    var a = this._length();
                                                    a > 0 && n._migrateCallback0(this);
                                                    for (var s = 1; s < a; ++s) n._migrateCallbackAt(this, s);
                                                    this._setFollowing(), this._setLength(0), this._setFollowee(n);
                                                } else if (0 != (33554432 & r)) this._fulfill(n._value());
                                                else if (0 != (16777216 & r)) this._reject(n._reason());
                                                else {
                                                    var l = new b("late cancellation observer");
                                                    n._attachExtraTrace(l), this._reject(l);
                                                }
                                            }
                                        }),
                                        (o.prototype._rejectCallback = function (t, e, i) {
                                            var n = f.ensureErrorObject(t),
                                                r = n === t;
                                            if (!r && !i && R.warnings()) {
                                                var o = "a promise was rejected with a non-error: " + f.classString(t);
                                                this._warn(o, !0);
                                            }
                                            this._attachExtraTrace(n, !!e && r), this._reject(t);
                                        }),
                                        (o.prototype._resolveFromExecutor = function (t) {
                                            if (t !== x) {
                                                var e = this;
                                                this._captureStackTrace(), this._pushContext();
                                                var i = !0,
                                                    n = this._execute(
                                                        t,
                                                        function (t) {
                                                            e._resolveCallback(t);
                                                        },
                                                        function (t) {
                                                            e._rejectCallback(t, i);
                                                        }
                                                    );
                                                (i = !1), this._popContext(), void 0 !== n && e._rejectCallback(n, !0);
                                            }
                                        }),
                                        (o.prototype._settlePromiseFromHandler = function (t, e, i, n) {
                                            var r = n._bitField;
                                            if (0 == (65536 & r)) {
                                                n._pushContext();
                                                var o;
                                                e === w ? (i && "number" == typeof i.length ? (o = L(t).apply(this._boundValue(), i)) : ((o = O), (o.e = new _("cannot .spread() a non-array: " + f.classString(i))))) : (o = L(t).call(e, i));
                                                var a = n._popContext();
                                                (r = n._bitField), 0 == (65536 & r) && (o === T ? n._reject(i) : o === O ? n._rejectCallback(o.e, !1) : (R.checkForgottenReturns(o, a, "", n, this), n._resolveCallback(o)));
                                            }
                                        }),
                                        (o.prototype._target = function () {
                                            for (var t = this; t._isFollowing(); ) t = t._followee();
                                            return t;
                                        }),
                                        (o.prototype._followee = function () {
                                            return this._rejectionHandler0;
                                        }),
                                        (o.prototype._setFollowee = function (t) {
                                            this._rejectionHandler0 = t;
                                        }),
                                        (o.prototype._settlePromise = function (t, e, i, r) {
                                            var a = t instanceof o,
                                                s = this._bitField,
                                                l = 0 != (134217728 & s);
                                            0 != (65536 & s)
                                                ? (a && t._invokeInternalOnCancel(),
                                                  i instanceof C && i.isFinallyHandler()
                                                      ? ((i.cancelPromise = t), L(e).call(i, r) === O && t._reject(O.e))
                                                      : e === h
                                                      ? t._fulfill(h.call(i))
                                                      : i instanceof n
                                                      ? i._promiseCancelled(t)
                                                      : a || t instanceof M
                                                      ? t._cancel()
                                                      : i.cancel())
                                                : "function" == typeof e
                                                ? a
                                                    ? (l && t._setAsyncGuaranteed(), this._settlePromiseFromHandler(e, i, r, t))
                                                    : e.call(i, r, t)
                                                : i instanceof n
                                                ? i._isResolved() || (0 != (33554432 & s) ? i._promiseFulfilled(r, t) : i._promiseRejected(r, t))
                                                : a && (l && t._setAsyncGuaranteed(), 0 != (33554432 & s) ? t._fulfill(r) : t._reject(r));
                                        }),
                                        (o.prototype._settlePromiseLateCancellationObserver = function (t) {
                                            var e = t.handler,
                                                i = t.promise,
                                                n = t.receiver,
                                                r = t.value;
                                            "function" == typeof e ? (i instanceof o ? this._settlePromiseFromHandler(e, n, r, i) : e.call(n, r, i)) : i instanceof o && i._reject(r);
                                        }),
                                        (o.prototype._settlePromiseCtx = function (t) {
                                            this._settlePromise(t.promise, t.handler, t.receiver, t.value);
                                        }),
                                        (o.prototype._settlePromise0 = function (t, e, i) {
                                            var n = this._promise0,
                                                r = this._receiverAt(0);
                                            (this._promise0 = void 0), (this._receiver0 = void 0), this._settlePromise(n, t, r, e);
                                        }),
                                        (o.prototype._clearCallbackDataAtIndex = function (t) {
                                            var e = 4 * t - 4;
                                            this[e + 2] = this[e + 3] = this[e + 0] = this[e + 1] = void 0;
                                        }),
                                        (o.prototype._fulfill = function (t) {
                                            var e = this._bitField;
                                            if (!((117506048 & e) >>> 16)) {
                                                if (t === this) {
                                                    var i = u();
                                                    return this._attachExtraTrace(i), this._reject(i);
                                                }
                                                this._setFulfilled(), (this._rejectionHandler0 = t), (65535 & e) > 0 && (0 != (134217728 & e) ? this._settlePromises() : g.settlePromises(this));
                                            }
                                        }),
                                        (o.prototype._reject = function (t) {
                                            var e = this._bitField;
                                            if (!((117506048 & e) >>> 16)) {
                                                if ((this._setRejected(), (this._fulfillmentHandler0 = t), this._isFinal())) return g.fatalError(t, f.isNode);
                                                (65535 & e) > 0 ? g.settlePromises(this) : this._ensurePossibleRejectionHandled();
                                            }
                                        }),
                                        (o.prototype._fulfillPromises = function (t, e) {
                                            for (var i = 1; i < t; i++) {
                                                var n = this._fulfillmentHandlerAt(i),
                                                    r = this._promiseAt(i),
                                                    o = this._receiverAt(i);
                                                this._clearCallbackDataAtIndex(i), this._settlePromise(r, n, o, e);
                                            }
                                        }),
                                        (o.prototype._rejectPromises = function (t, e) {
                                            for (var i = 1; i < t; i++) {
                                                var n = this._rejectionHandlerAt(i),
                                                    r = this._promiseAt(i),
                                                    o = this._receiverAt(i);
                                                this._clearCallbackDataAtIndex(i), this._settlePromise(r, n, o, e);
                                            }
                                        }),
                                        (o.prototype._settlePromises = function () {
                                            var t = this._bitField,
                                                e = 65535 & t;
                                            if (e > 0) {
                                                if (0 != (16842752 & t)) {
                                                    var i = this._fulfillmentHandler0;
                                                    this._settlePromise0(this._rejectionHandler0, i, t), this._rejectPromises(e, i);
                                                } else {
                                                    var n = this._rejectionHandler0;
                                                    this._settlePromise0(this._fulfillmentHandler0, n, t), this._fulfillPromises(e, n);
                                                }
                                                this._setLength(0);
                                            }
                                            this._clearCancellationData();
                                        }),
                                        (o.prototype._settledValue = function () {
                                            var t = this._bitField;
                                            return 0 != (33554432 & t) ? this._rejectionHandler0 : 0 != (16777216 & t) ? this._fulfillmentHandler0 : void 0;
                                        }),
                                        (o.defer = o.pending = function () {
                                            return R.deprecated("Promise.defer", "new Promise"), { promise: new o(x), resolve: a, reject: s };
                                        }),
                                        f.notEnumerableProp(o, "_makeSelfResolutionError", u),
                                        t("./method")(o, x, E, d, R),
                                        t("./bind")(o, x, E, R),
                                        t("./cancel")(o, M, d, R),
                                        t("./direct_resolve")(o),
                                        t("./synchronous_inspection")(o),
                                        t("./join")(o, M, E, x, g, c),
                                        (o.Promise = o),
                                        (o.version = "3.5.1"),
                                        t("./map.js")(o, M, d, E, x, R),
                                        t("./call_get.js")(o),
                                        t("./using.js")(o, d, E, A, x, R),
                                        t("./timers.js")(o, x, R),
                                        t("./generators.js")(o, d, x, E, n, R),
                                        t("./nodeify.js")(o),
                                        t("./promisify.js")(o, x),
                                        t("./props.js")(o, M, E, d),
                                        t("./race.js")(o, x, E, d),
                                        t("./reduce.js")(o, M, d, E, x, R),
                                        t("./settle.js")(o, M, R),
                                        t("./some.js")(o, M, d),
                                        t("./filter.js")(o, x),
                                        t("./each.js")(o, x),
                                        t("./any.js")(o),
                                        f.toFastProperties(o),
                                        f.toFastProperties(o.prototype),
                                        l({ a: 1 }),
                                        l({ b: 2 }),
                                        l({ c: 3 }),
                                        l(1),
                                        l(function () {}),
                                        l(void 0),
                                        l(!1),
                                        l(new o(x)),
                                        R.setBounds(v.firstLineError, f.lastLineError),
                                        o
                                    );
                                };
                            },
                            {
                                "./any.js": 1,
                                "./async": 2,
                                "./bind": 3,
                                "./call_get.js": 5,
                                "./cancel": 6,
                                "./catch_filter": 7,
                                "./context": 8,
                                "./debuggability": 9,
                                "./direct_resolve": 10,
                                "./each.js": 11,
                                "./errors": 12,
                                "./es5": 13,
                                "./filter.js": 14,
                                "./finally": 15,
                                "./generators.js": 16,
                                "./join": 17,
                                "./map.js": 18,
                                "./method": 19,
                                "./nodeback": 20,
                                "./nodeify.js": 21,
                                "./promise_array": 23,
                                "./promisify.js": 24,
                                "./props.js": 25,
                                "./race.js": 27,
                                "./reduce.js": 28,
                                "./settle.js": 30,
                                "./some.js": 31,
                                "./synchronous_inspection": 32,
                                "./thenables": 33,
                                "./timers.js": 34,
                                "./using.js": 35,
                                "./util": 36,
                            },
                        ],
                        23: [
                            function (t, e, i) {
                                "use strict";
                                e.exports = function (e, i, n, r, o) {
                                    function a(t) {
                                        switch (t) {
                                            case -2:
                                                return [];
                                            case -3:
                                                return {};
                                            case -6:
                                                return new Map();
                                        }
                                    }
                                    function s(t) {
                                        var n = (this._promise = new e(i));
                                        t instanceof e && n._propagateFrom(t, 3), n._setOnCancel(this), (this._values = t), (this._length = 0), (this._totalResolved = 0), this._init(void 0, -2);
                                    }
                                    var l = t("./util");
                                    l.isArray;
                                    return (
                                        l.inherits(s, o),
                                        (s.prototype.length = function () {
                                            return this._length;
                                        }),
                                        (s.prototype.promise = function () {
                                            return this._promise;
                                        }),
                                        (s.prototype._init = function t(i, o) {
                                            var s = n(this._values, this._promise);
                                            if (s instanceof e) {
                                                s = s._target();
                                                var c = s._bitField;
                                                if (((this._values = s), 0 == (50397184 & c))) return this._promise._setAsyncGuaranteed(), s._then(t, this._reject, void 0, this, o);
                                                if (0 == (33554432 & c)) return 0 != (16777216 & c) ? this._reject(s._reason()) : this._cancel();
                                                s = s._value();
                                            }
                                            if (null === (s = l.asArray(s))) {
                                                var u = r("expecting an array or an iterable object but got " + l.classString(s)).reason();
                                                return void this._promise._rejectCallback(u, !1);
                                            }
                                            if (0 === s.length) return void (-5 === o ? this._resolveEmptyArray() : this._resolve(a(o)));
                                            this._iterate(s);
                                        }),
                                        (s.prototype._iterate = function (t) {
                                            var i = this.getActualLength(t.length);
                                            (this._length = i), (this._values = this.shouldCopyValues() ? new Array(i) : this._values);
                                            for (var r = this._promise, o = !1, a = null, s = 0; s < i; ++s) {
                                                var l = n(t[s], r);
                                                l instanceof e ? ((l = l._target()), (a = l._bitField)) : (a = null),
                                                    o
                                                        ? null !== a && l.suppressUnhandledRejections()
                                                        : null !== a
                                                        ? 0 == (50397184 & a)
                                                            ? (l._proxy(this, s), (this._values[s] = l))
                                                            : (o = 0 != (33554432 & a) ? this._promiseFulfilled(l._value(), s) : 0 != (16777216 & a) ? this._promiseRejected(l._reason(), s) : this._promiseCancelled(s))
                                                        : (o = this._promiseFulfilled(l, s));
                                            }
                                            o || r._setAsyncGuaranteed();
                                        }),
                                        (s.prototype._isResolved = function () {
                                            return null === this._values;
                                        }),
                                        (s.prototype._resolve = function (t) {
                                            (this._values = null), this._promise._fulfill(t);
                                        }),
                                        (s.prototype._cancel = function () {
                                            !this._isResolved() && this._promise._isCancellable() && ((this._values = null), this._promise._cancel());
                                        }),
                                        (s.prototype._reject = function (t) {
                                            (this._values = null), this._promise._rejectCallback(t, !1);
                                        }),
                                        (s.prototype._promiseFulfilled = function (t, e) {
                                            return (this._values[e] = t), ++this._totalResolved >= this._length && (this._resolve(this._values), !0);
                                        }),
                                        (s.prototype._promiseCancelled = function () {
                                            return this._cancel(), !0;
                                        }),
                                        (s.prototype._promiseRejected = function (t) {
                                            return this._totalResolved++, this._reject(t), !0;
                                        }),
                                        (s.prototype._resultCancelled = function () {
                                            if (!this._isResolved()) {
                                                var t = this._values;
                                                if ((this._cancel(), t instanceof e)) t.cancel();
                                                else for (var i = 0; i < t.length; ++i) t[i] instanceof e && t[i].cancel();
                                            }
                                        }),
                                        (s.prototype.shouldCopyValues = function () {
                                            return !0;
                                        }),
                                        (s.prototype.getActualLength = function (t) {
                                            return t;
                                        }),
                                        s
                                    );
                                };
                            },
                            { "./util": 36 },
                        ],
                        24: [
                            function (t, e, i) {
                                "use strict";
                                e.exports = function (e, i) {
                                    function n(t) {
                                        return !x.test(t);
                                    }
                                    function r(t) {
                                        try {
                                            return !0 === t.__isPromisified__;
                                        } catch (t) {
                                            return !1;
                                        }
                                    }
                                    function o(t, e, i) {
                                        var n = p.getDataPropertyOrDefault(t, e + i, _);
                                        return !!n && r(n);
                                    }
                                    function a(t, e, i) {
                                        for (var n = 0; n < t.length; n += 2) {
                                            var r = t[n];
                                            if (i.test(r))
                                                for (var o = r.replace(i, ""), a = 0; a < t.length; a += 2)
                                                    if (t[a] === o) throw new y("Cannot promisify an API that has normal methods with '%s'-suffix\n\n    See http://goo.gl/MqrFmX\n".replace("%s", e));
                                        }
                                    }
                                    function s(t, e, i, n) {
                                        for (var s = p.inheritedDataKeys(t), l = [], c = 0; c < s.length; ++c) {
                                            var u = s[c],
                                                h = t[u],
                                                d = n === w || w(u, h, t);
                                            "function" != typeof h || r(h) || o(t, u, e) || !n(u, h, t, d) || l.push(u, h);
                                        }
                                        return a(l, e, i), l;
                                    }
                                    function l(t, n, r, o, a, s) {
                                        function l() {
                                            var r = n;
                                            n === d && (r = this);
                                            var o = new e(i);
                                            o._captureStackTrace();
                                            var a = "string" == typeof u && this !== c ? this[u] : t,
                                                l = f(o, s);
                                            try {
                                                a.apply(r, m(arguments, l));
                                            } catch (t) {
                                                o._rejectCallback(v(t), !0, !0);
                                            }
                                            return o._isFateSealed() || o._setAsyncGuaranteed(), o;
                                        }
                                        var c = (function () {
                                                return this;
                                            })(),
                                            u = t;
                                        return "string" == typeof u && (t = o), p.notEnumerableProp(l, "__isPromisified__", !0), l;
                                    }
                                    function c(t, e, i, n, r) {
                                        for (var o = new RegExp(T(e) + "$"), a = s(t, e, o, i), l = 0, c = a.length; l < c; l += 2) {
                                            var u = a[l],
                                                h = a[l + 1],
                                                f = u + e;
                                            if (n === E) t[f] = E(u, d, u, h, e, r);
                                            else {
                                                var m = n(h, function () {
                                                    return E(u, d, u, h, e, r);
                                                });
                                                p.notEnumerableProp(m, "__isPromisified__", !0), (t[f] = m);
                                            }
                                        }
                                        return p.toFastProperties(t), t;
                                    }
                                    function u(t, e, i) {
                                        return E(t, e, void 0, t, null, i);
                                    }
                                    var h,
                                        d = {},
                                        p = t("./util"),
                                        f = t("./nodeback"),
                                        m = p.withAppended,
                                        v = p.maybeWrapAsError,
                                        g = p.canEvaluate,
                                        y = t("./errors").TypeError,
                                        _ = { __isPromisified__: !0 },
                                        b = ["arity", "length", "name", "arguments", "caller", "callee", "prototype", "__isPromisified__"],
                                        x = new RegExp("^(?:" + b.join("|") + ")$"),
                                        w = function (t) {
                                            return p.isIdentifier(t) && "_" !== t.charAt(0) && "constructor" !== t;
                                        },
                                        T = function (t) {
                                            return t.replace(/([$])/, "\\$");
                                        },
                                        E = g ? h : l;
                                    (e.promisify = function (t, e) {
                                        if ("function" != typeof t) throw new y("expecting a function but got " + p.classString(t));
                                        if (r(t)) return t;
                                        e = Object(e);
                                        var i = void 0 === e.context ? d : e.context,
                                            o = !!e.multiArgs,
                                            a = u(t, i, o);
                                        return p.copyDescriptors(t, a, n), a;
                                    }),
                                        (e.promisifyAll = function (t, e) {
                                            if ("function" != typeof t && "object" != typeof t) throw new y("the target of promisifyAll must be an object or a function\n\n    See http://goo.gl/MqrFmX\n");
                                            e = Object(e);
                                            var i = !!e.multiArgs,
                                                n = e.suffix;
                                            "string" != typeof n && (n = "Async");
                                            var r = e.filter;
                                            "function" != typeof r && (r = w);
                                            var o = e.promisifier;
                                            if (("function" != typeof o && (o = E), !p.isIdentifier(n))) throw new RangeError("suffix must be a valid identifier\n\n    See http://goo.gl/MqrFmX\n");
                                            for (var a = p.inheritedDataKeys(t), s = 0; s < a.length; ++s) {
                                                var l = t[a[s]];
                                                "constructor" !== a[s] && p.isClass(l) && (c(l.prototype, n, r, o, i), c(l, n, r, o, i));
                                            }
                                            return c(t, n, r, o, i);
                                        });
                                };
                            },
                            { "./errors": 12, "./nodeback": 20, "./util": 36 },
                        ],
                        25: [
                            function (t, e, i) {
                                "use strict";
                                e.exports = function (e, i, n, r) {
                                    function o(t) {
                                        var e,
                                            i = !1;
                                        if (void 0 !== s && t instanceof s) (e = h(t)), (i = !0);
                                        else {
                                            var n = u.keys(t),
                                                r = n.length;
                                            e = new Array(2 * r);
                                            for (var o = 0; o < r; ++o) {
                                                var a = n[o];
                                                (e[o] = t[a]), (e[o + r] = a);
                                            }
                                        }
                                        this.constructor$(e), (this._isMap = i), this._init$(void 0, i ? -6 : -3);
                                    }
                                    function a(t) {
                                        var i,
                                            a = n(t);
                                        return c(a)
                                            ? ((i = a instanceof e ? a._then(e.props, void 0, void 0, void 0, void 0) : new o(a).promise()), a instanceof e && i._propagateFrom(a, 2), i)
                                            : r("cannot await properties of a non-object\n\n    See http://goo.gl/MqrFmX\n");
                                    }
                                    var s,
                                        l = t("./util"),
                                        c = l.isObject,
                                        u = t("./es5");
                                    "function" == typeof Map && (s = Map);
                                    var h = (function () {
                                            function t(t, n) {
                                                (this[e] = t), (this[e + i] = n), e++;
                                            }
                                            var e = 0,
                                                i = 0;
                                            return function (n) {
                                                (i = n.size), (e = 0);
                                                var r = new Array(2 * n.size);
                                                return n.forEach(t, r), r;
                                            };
                                        })(),
                                        d = function (t) {
                                            for (var e = new s(), i = (t.length / 2) | 0, n = 0; n < i; ++n) {
                                                var r = t[i + n],
                                                    o = t[n];
                                                e.set(r, o);
                                            }
                                            return e;
                                        };
                                    l.inherits(o, i),
                                        (o.prototype._init = function () {}),
                                        (o.prototype._promiseFulfilled = function (t, e) {
                                            if (((this._values[e] = t), ++this._totalResolved >= this._length)) {
                                                var i;
                                                if (this._isMap) i = d(this._values);
                                                else {
                                                    i = {};
                                                    for (var n = this.length(), r = 0, o = this.length(); r < o; ++r) i[this._values[r + n]] = this._values[r];
                                                }
                                                return this._resolve(i), !0;
                                            }
                                            return !1;
                                        }),
                                        (o.prototype.shouldCopyValues = function () {
                                            return !1;
                                        }),
                                        (o.prototype.getActualLength = function (t) {
                                            return t >> 1;
                                        }),
                                        (e.prototype.props = function () {
                                            return a(this);
                                        }),
                                        (e.props = function (t) {
                                            return a(t);
                                        });
                                };
                            },
                            { "./es5": 13, "./util": 36 },
                        ],
                        26: [
                            function (t, e, i) {
                                "use strict";
                                function n(t, e, i, n, r) {
                                    for (var o = 0; o < r; ++o) (i[o + n] = t[o + e]), (t[o + e] = void 0);
                                }
                                function r(t) {
                                    (this._capacity = t), (this._length = 0), (this._front = 0);
                                }
                                (r.prototype._willBeOverCapacity = function (t) {
                                    return this._capacity < t;
                                }),
                                    (r.prototype._pushOne = function (t) {
                                        var e = this.length();
                                        this._checkCapacity(e + 1), (this[(this._front + e) & (this._capacity - 1)] = t), (this._length = e + 1);
                                    }),
                                    (r.prototype.push = function (t, e, i) {
                                        var n = this.length() + 3;
                                        if (this._willBeOverCapacity(n)) return this._pushOne(t), this._pushOne(e), void this._pushOne(i);
                                        var r = this._front + n - 3;
                                        this._checkCapacity(n);
                                        var o = this._capacity - 1;
                                        (this[(r + 0) & o] = t), (this[(r + 1) & o] = e), (this[(r + 2) & o] = i), (this._length = n);
                                    }),
                                    (r.prototype.shift = function () {
                                        var t = this._front,
                                            e = this[t];
                                        return (this[t] = void 0), (this._front = (t + 1) & (this._capacity - 1)), this._length--, e;
                                    }),
                                    (r.prototype.length = function () {
                                        return this._length;
                                    }),
                                    (r.prototype._checkCapacity = function (t) {
                                        this._capacity < t && this._resizeTo(this._capacity << 1);
                                    }),
                                    (r.prototype._resizeTo = function (t) {
                                        var e = this._capacity;
                                        (this._capacity = t), n(this, 0, this, e, (this._front + this._length) & (e - 1));
                                    }),
                                    (e.exports = r);
                            },
                            {},
                        ],
                        27: [
                            function (t, e, i) {
                                "use strict";
                                e.exports = function (e, i, n, r) {
                                    function o(t, o) {
                                        var l = n(t);
                                        if (l instanceof e) return s(l);
                                        if (null === (t = a.asArray(t))) return r("expecting an array or an iterable object but got " + a.classString(t));
                                        var c = new e(i);
                                        void 0 !== o && c._propagateFrom(o, 3);
                                        for (var u = c._fulfill, h = c._reject, d = 0, p = t.length; d < p; ++d) {
                                            var f = t[d];
                                            (void 0 !== f || d in t) && e.cast(f)._then(u, h, void 0, c, null);
                                        }
                                        return c;
                                    }
                                    var a = t("./util"),
                                        s = function (t) {
                                            return t.then(function (e) {
                                                return o(e, t);
                                            });
                                        };
                                    (e.race = function (t) {
                                        return o(t, void 0);
                                    }),
                                        (e.prototype.race = function () {
                                            return o(this, void 0);
                                        });
                                };
                            },
                            { "./util": 36 },
                        ],
                        28: [
                            function (t, e, i) {
                                "use strict";
                                e.exports = function (e, i, n, r, o, a) {
                                    function s(t, i, n, r) {
                                        this.constructor$(t);
                                        var a = d();
                                        (this._fn = null === a ? i : p.domainBind(a, i)),
                                            void 0 !== n && ((n = e.resolve(n)), n._attachCancellationCallback(this)),
                                            (this._initialValue = n),
                                            (this._currentCancellable = null),
                                            (this._eachValues = r === o ? Array(this._length) : 0 === r ? null : void 0),
                                            this._promise._captureStackTrace(),
                                            this._init$(void 0, -5);
                                    }
                                    function l(t, e) {
                                        this.isFulfilled() ? e._resolve(t) : e._reject(t);
                                    }
                                    function c(t, e, i, r) {
                                        return "function" != typeof e ? n("expecting a function but got " + p.classString(e)) : new s(t, e, i, r).promise();
                                    }
                                    function u(t) {
                                        (this.accum = t), this.array._gotAccum(t);
                                        var i = r(this.value, this.array._promise);
                                        return i instanceof e ? ((this.array._currentCancellable = i), i._then(h, void 0, void 0, this, void 0)) : h.call(this, i);
                                    }
                                    function h(t) {
                                        var i = this.array,
                                            n = i._promise,
                                            r = f(i._fn);
                                        n._pushContext();
                                        var o;
                                        (o = void 0 !== i._eachValues ? r.call(n._boundValue(), t, this.index, this.length) : r.call(n._boundValue(), this.accum, t, this.index, this.length)) instanceof e && (i._currentCancellable = o);
                                        var s = n._popContext();
                                        return a.checkForgottenReturns(o, s, void 0 !== i._eachValues ? "Promise.each" : "Promise.reduce", n), o;
                                    }
                                    var d = e._getDomain,
                                        p = t("./util"),
                                        f = p.tryCatch;
                                    p.inherits(s, i),
                                        (s.prototype._gotAccum = function (t) {
                                            void 0 !== this._eachValues && null !== this._eachValues && t !== o && this._eachValues.push(t);
                                        }),
                                        (s.prototype._eachComplete = function (t) {
                                            return null !== this._eachValues && this._eachValues.push(t), this._eachValues;
                                        }),
                                        (s.prototype._init = function () {}),
                                        (s.prototype._resolveEmptyArray = function () {
                                            this._resolve(void 0 !== this._eachValues ? this._eachValues : this._initialValue);
                                        }),
                                        (s.prototype.shouldCopyValues = function () {
                                            return !1;
                                        }),
                                        (s.prototype._resolve = function (t) {
                                            this._promise._resolveCallback(t), (this._values = null);
                                        }),
                                        (s.prototype._resultCancelled = function (t) {
                                            if (t === this._initialValue) return this._cancel();
                                            this._isResolved() || (this._resultCancelled$(), this._currentCancellable instanceof e && this._currentCancellable.cancel(), this._initialValue instanceof e && this._initialValue.cancel());
                                        }),
                                        (s.prototype._iterate = function (t) {
                                            this._values = t;
                                            var i,
                                                n,
                                                r = t.length;
                                            if ((void 0 !== this._initialValue ? ((i = this._initialValue), (n = 0)) : ((i = e.resolve(t[0])), (n = 1)), (this._currentCancellable = i), !i.isRejected()))
                                                for (; n < r; ++n) {
                                                    var o = { accum: null, value: t[n], index: n, length: r, array: this };
                                                    i = i._then(u, void 0, void 0, o, void 0);
                                                }
                                            void 0 !== this._eachValues && (i = i._then(this._eachComplete, void 0, void 0, this, void 0)), i._then(l, l, void 0, i, this);
                                        }),
                                        (e.prototype.reduce = function (t, e) {
                                            return c(this, t, e, null);
                                        }),
                                        (e.reduce = function (t, e, i, n) {
                                            return c(t, e, i, n);
                                        });
                                };
                            },
                            { "./util": 36 },
                        ],
                        29: [
                            function (t, i, o) {
                                "use strict";
                                var a,
                                    s = t("./util"),
                                    l = function () {
                                        throw new Error("No async scheduler available\n\n    See http://goo.gl/MqrFmX\n");
                                    },
                                    c = s.getNativePromise();
                                if (s.isNode && "undefined" == typeof MutationObserver) {
                                    var u = n.setImmediate,
                                        h = e.nextTick;
                                    a = s.isRecentNode
                                        ? function (t) {
                                              u.call(n, t);
                                          }
                                        : function (t) {
                                              h.call(e, t);
                                          };
                                } else if ("function" == typeof c && "function" == typeof c.resolve) {
                                    var d = c.resolve();
                                    a = function (t) {
                                        d.then(t);
                                    };
                                } else
                                    a =
                                        "undefined" == typeof MutationObserver || ("undefined" != typeof window && window.navigator && (window.navigator.standalone || window.cordova))
                                            ? void 0 !== r
                                                ? function (t) {
                                                      r(t);
                                                  }
                                                : "undefined" != typeof setTimeout
                                                ? function (t) {
                                                      setTimeout(t, 0);
                                                  }
                                                : l
                                            : (function () {
                                                  var t = document.createElement("div"),
                                                      e = { attributes: !0 },
                                                      i = !1,
                                                      n = document.createElement("div");
                                                  new MutationObserver(function () {
                                                      t.classList.toggle("foo"), (i = !1);
                                                  }).observe(n, e);
                                                  var r = function () {
                                                      i || ((i = !0), n.classList.toggle("foo"));
                                                  };
                                                  return function (i) {
                                                      var n = new MutationObserver(function () {
                                                          n.disconnect(), i();
                                                      });
                                                      n.observe(t, e), r();
                                                  };
                                              })();
                                i.exports = a;
                            },
                            { "./util": 36 },
                        ],
                        30: [
                            function (t, e, i) {
                                "use strict";
                                e.exports = function (e, i, n) {
                                    function r(t) {
                                        this.constructor$(t);
                                    }
                                    var o = e.PromiseInspection;
                                    t("./util").inherits(r, i),
                                        (r.prototype._promiseResolved = function (t, e) {
                                            return (this._values[t] = e), ++this._totalResolved >= this._length && (this._resolve(this._values), !0);
                                        }),
                                        (r.prototype._promiseFulfilled = function (t, e) {
                                            var i = new o();
                                            return (i._bitField = 33554432), (i._settledValueField = t), this._promiseResolved(e, i);
                                        }),
                                        (r.prototype._promiseRejected = function (t, e) {
                                            var i = new o();
                                            return (i._bitField = 16777216), (i._settledValueField = t), this._promiseResolved(e, i);
                                        }),
                                        (e.settle = function (t) {
                                            return n.deprecated(".settle()", ".reflect()"), new r(t).promise();
                                        }),
                                        (e.prototype.settle = function () {
                                            return e.settle(this);
                                        });
                                };
                            },
                            { "./util": 36 },
                        ],
                        31: [
                            function (t, e, i) {
                                "use strict";
                                e.exports = function (e, i, n) {
                                    function r(t) {
                                        this.constructor$(t), (this._howMany = 0), (this._unwrap = !1), (this._initialized = !1);
                                    }
                                    function o(t, e) {
                                        if ((0 | e) !== e || e < 0) return n("expecting a positive integer\n\n    See http://goo.gl/MqrFmX\n");
                                        var i = new r(t),
                                            o = i.promise();
                                        return i.setHowMany(e), i.init(), o;
                                    }
                                    var a = t("./util"),
                                        s = t("./errors").RangeError,
                                        l = t("./errors").AggregateError,
                                        c = a.isArray,
                                        u = {};
                                    a.inherits(r, i),
                                        (r.prototype._init = function () {
                                            if (this._initialized) {
                                                if (0 === this._howMany) return void this._resolve([]);
                                                this._init$(void 0, -5);
                                                var t = c(this._values);
                                                !this._isResolved() && t && this._howMany > this._canPossiblyFulfill() && this._reject(this._getRangeError(this.length()));
                                            }
                                        }),
                                        (r.prototype.init = function () {
                                            (this._initialized = !0), this._init();
                                        }),
                                        (r.prototype.setUnwrap = function () {
                                            this._unwrap = !0;
                                        }),
                                        (r.prototype.howMany = function () {
                                            return this._howMany;
                                        }),
                                        (r.prototype.setHowMany = function (t) {
                                            this._howMany = t;
                                        }),
                                        (r.prototype._promiseFulfilled = function (t) {
                                            return (
                                                this._addFulfilled(t),
                                                this._fulfilled() === this.howMany() && ((this._values.length = this.howMany()), 1 === this.howMany() && this._unwrap ? this._resolve(this._values[0]) : this._resolve(this._values), !0)
                                            );
                                        }),
                                        (r.prototype._promiseRejected = function (t) {
                                            return this._addRejected(t), this._checkOutcome();
                                        }),
                                        (r.prototype._promiseCancelled = function () {
                                            return this._values instanceof e || null == this._values ? this._cancel() : (this._addRejected(u), this._checkOutcome());
                                        }),
                                        (r.prototype._checkOutcome = function () {
                                            if (this.howMany() > this._canPossiblyFulfill()) {
                                                for (var t = new l(), e = this.length(); e < this._values.length; ++e) this._values[e] !== u && t.push(this._values[e]);
                                                return t.length > 0 ? this._reject(t) : this._cancel(), !0;
                                            }
                                            return !1;
                                        }),
                                        (r.prototype._fulfilled = function () {
                                            return this._totalResolved;
                                        }),
                                        (r.prototype._rejected = function () {
                                            return this._values.length - this.length();
                                        }),
                                        (r.prototype._addRejected = function (t) {
                                            this._values.push(t);
                                        }),
                                        (r.prototype._addFulfilled = function (t) {
                                            this._values[this._totalResolved++] = t;
                                        }),
                                        (r.prototype._canPossiblyFulfill = function () {
                                            return this.length() - this._rejected();
                                        }),
                                        (r.prototype._getRangeError = function (t) {
                                            var e = "Input array must contain at least " + this._howMany + " items but contains only " + t + " items";
                                            return new s(e);
                                        }),
                                        (r.prototype._resolveEmptyArray = function () {
                                            this._reject(this._getRangeError(0));
                                        }),
                                        (e.some = function (t, e) {
                                            return o(t, e);
                                        }),
                                        (e.prototype.some = function (t) {
                                            return o(this, t);
                                        }),
                                        (e._SomePromiseArray = r);
                                };
                            },
                            { "./errors": 12, "./util": 36 },
                        ],
                        32: [
                            function (t, e, i) {
                                "use strict";
                                e.exports = function (t) {
                                    function e(t) {
                                        void 0 !== t
                                            ? ((t = t._target()), (this._bitField = t._bitField), (this._settledValueField = t._isFateSealed() ? t._settledValue() : void 0))
                                            : ((this._bitField = 0), (this._settledValueField = void 0));
                                    }
                                    e.prototype._settledValue = function () {
                                        return this._settledValueField;
                                    };
                                    var i = (e.prototype.value = function () {
                                            if (!this.isFulfilled()) throw new TypeError("cannot get fulfillment value of a non-fulfilled promise\n\n    See http://goo.gl/MqrFmX\n");
                                            return this._settledValue();
                                        }),
                                        n = (e.prototype.error = e.prototype.reason = function () {
                                            if (!this.isRejected()) throw new TypeError("cannot get rejection reason of a non-rejected promise\n\n    See http://goo.gl/MqrFmX\n");
                                            return this._settledValue();
                                        }),
                                        r = (e.prototype.isFulfilled = function () {
                                            return 0 != (33554432 & this._bitField);
                                        }),
                                        o = (e.prototype.isRejected = function () {
                                            return 0 != (16777216 & this._bitField);
                                        }),
                                        a = (e.prototype.isPending = function () {
                                            return 0 == (50397184 & this._bitField);
                                        }),
                                        s = (e.prototype.isResolved = function () {
                                            return 0 != (50331648 & this._bitField);
                                        });
                                    (e.prototype.isCancelled = function () {
                                        return 0 != (8454144 & this._bitField);
                                    }),
                                        (t.prototype.__isCancelled = function () {
                                            return 65536 == (65536 & this._bitField);
                                        }),
                                        (t.prototype._isCancelled = function () {
                                            return this._target().__isCancelled();
                                        }),
                                        (t.prototype.isCancelled = function () {
                                            return 0 != (8454144 & this._target()._bitField);
                                        }),
                                        (t.prototype.isPending = function () {
                                            return a.call(this._target());
                                        }),
                                        (t.prototype.isRejected = function () {
                                            return o.call(this._target());
                                        }),
                                        (t.prototype.isFulfilled = function () {
                                            return r.call(this._target());
                                        }),
                                        (t.prototype.isResolved = function () {
                                            return s.call(this._target());
                                        }),
                                        (t.prototype.value = function () {
                                            return i.call(this._target());
                                        }),
                                        (t.prototype.reason = function () {
                                            var t = this._target();
                                            return t._unsetRejectionIsUnhandled(), n.call(t);
                                        }),
                                        (t.prototype._value = function () {
                                            return this._settledValue();
                                        }),
                                        (t.prototype._reason = function () {
                                            return this._unsetRejectionIsUnhandled(), this._settledValue();
                                        }),
                                        (t.PromiseInspection = e);
                                };
                            },
                            {},
                        ],
                        33: [
                            function (t, e, i) {
                                "use strict";
                                e.exports = function (e, i) {
                                    function n(t, n) {
                                        if (u(t)) {
                                            if (t instanceof e) return t;
                                            var r = o(t);
                                            if (r === c) {
                                                n && n._pushContext();
                                                var l = e.reject(r.e);
                                                return n && n._popContext(), l;
                                            }
                                            if ("function" == typeof r) {
                                                if (a(t)) {
                                                    var l = new e(i);
                                                    return t._then(l._fulfill, l._reject, void 0, l, null), l;
                                                }
                                                return s(t, r, n);
                                            }
                                        }
                                        return t;
                                    }
                                    function r(t) {
                                        return t.then;
                                    }
                                    function o(t) {
                                        try {
                                            return r(t);
                                        } catch (t) {
                                            return (c.e = t), c;
                                        }
                                    }
                                    function a(t) {
                                        try {
                                            return h.call(t, "_promise0");
                                        } catch (t) {
                                            return !1;
                                        }
                                    }
                                    function s(t, n, r) {
                                        function o(t) {
                                            s && (s._resolveCallback(t), (s = null));
                                        }
                                        function a(t) {
                                            s && (s._rejectCallback(t, h, !0), (s = null));
                                        }
                                        var s = new e(i),
                                            u = s;
                                        r && r._pushContext(), s._captureStackTrace(), r && r._popContext();
                                        var h = !0,
                                            d = l.tryCatch(n).call(t, o, a);
                                        return (h = !1), s && d === c && (s._rejectCallback(d.e, !0, !0), (s = null)), u;
                                    }
                                    var l = t("./util"),
                                        c = l.errorObj,
                                        u = l.isObject,
                                        h = {}.hasOwnProperty;
                                    return n;
                                };
                            },
                            { "./util": 36 },
                        ],
                        34: [
                            function (t, e, i) {
                                "use strict";
                                e.exports = function (e, i, n) {
                                    function r(t) {
                                        this.handle = t;
                                    }
                                    function o(t) {
                                        return clearTimeout(this.handle), t;
                                    }
                                    function a(t) {
                                        throw (clearTimeout(this.handle), t);
                                    }
                                    var s = t("./util"),
                                        l = e.TimeoutError;
                                    r.prototype._resultCancelled = function () {
                                        clearTimeout(this.handle);
                                    };
                                    var c = function (t) {
                                            return u(+this).thenReturn(t);
                                        },
                                        u = (e.delay = function (t, o) {
                                            var a, s;
                                            return (
                                                void 0 !== o
                                                    ? ((a = e.resolve(o)._then(c, null, null, t, void 0)), n.cancellation() && o instanceof e && a._setOnCancel(o))
                                                    : ((a = new e(i)),
                                                      (s = setTimeout(function () {
                                                          a._fulfill();
                                                      }, +t)),
                                                      n.cancellation() && a._setOnCancel(new r(s)),
                                                      a._captureStackTrace()),
                                                a._setAsyncGuaranteed(),
                                                a
                                            );
                                        });
                                    e.prototype.delay = function (t) {
                                        return u(t, this);
                                    };
                                    var h = function (t, e, i) {
                                        var n;
                                        (n = "string" != typeof e ? (e instanceof Error ? e : new l("operation timed out")) : new l(e)), s.markAsOriginatingFromRejection(n), t._attachExtraTrace(n), t._reject(n), null != i && i.cancel();
                                    };
                                    e.prototype.timeout = function (t, e) {
                                        t = +t;
                                        var i,
                                            s,
                                            l = new r(
                                                setTimeout(function () {
                                                    i.isPending() && h(i, e, s);
                                                }, t)
                                            );
                                        return n.cancellation() ? ((s = this.then()), (i = s._then(o, a, void 0, l, void 0)), i._setOnCancel(l)) : (i = this._then(o, a, void 0, l, void 0)), i;
                                    };
                                };
                            },
                            { "./util": 36 },
                        ],
                        35: [
                            function (t, e, i) {
                                "use strict";
                                e.exports = function (e, i, n, r, o, a) {
                                    function s(t) {
                                        setTimeout(function () {
                                            throw t;
                                        }, 0);
                                    }
                                    function l(t) {
                                        var e = n(t);
                                        return e !== t && "function" == typeof t._isDisposable && "function" == typeof t._getDisposer && t._isDisposable() && e._setDisposable(t._getDisposer()), e;
                                    }
                                    function c(t, i) {
                                        function r() {
                                            if (a >= c) return u._fulfill();
                                            var o = l(t[a++]);
                                            if (o instanceof e && o._isDisposable()) {
                                                try {
                                                    o = n(o._getDisposer().tryDispose(i), t.promise);
                                                } catch (t) {
                                                    return s(t);
                                                }
                                                if (o instanceof e) return o._then(r, s, null, null, null);
                                            }
                                            r();
                                        }
                                        var a = 0,
                                            c = t.length,
                                            u = new e(o);
                                        return r(), u;
                                    }
                                    function u(t, e, i) {
                                        (this._data = t), (this._promise = e), (this._context = i);
                                    }
                                    function h(t, e, i) {
                                        this.constructor$(t, e, i);
                                    }
                                    function d(t) {
                                        return u.isDisposer(t) ? (this.resources[this.index]._setDisposable(t), t.promise()) : t;
                                    }
                                    function p(t) {
                                        (this.length = t), (this.promise = null), (this[t - 1] = null);
                                    }
                                    var f = t("./util"),
                                        m = t("./errors").TypeError,
                                        v = t("./util").inherits,
                                        g = f.errorObj,
                                        y = f.tryCatch,
                                        _ = {};
                                    (u.prototype.data = function () {
                                        return this._data;
                                    }),
                                        (u.prototype.promise = function () {
                                            return this._promise;
                                        }),
                                        (u.prototype.resource = function () {
                                            return this.promise().isFulfilled() ? this.promise().value() : _;
                                        }),
                                        (u.prototype.tryDispose = function (t) {
                                            var e = this.resource(),
                                                i = this._context;
                                            void 0 !== i && i._pushContext();
                                            var n = e !== _ ? this.doDispose(e, t) : null;
                                            return void 0 !== i && i._popContext(), this._promise._unsetDisposable(), (this._data = null), n;
                                        }),
                                        (u.isDisposer = function (t) {
                                            return null != t && "function" == typeof t.resource && "function" == typeof t.tryDispose;
                                        }),
                                        v(h, u),
                                        (h.prototype.doDispose = function (t, e) {
                                            return this.data().call(t, t, e);
                                        }),
                                        (p.prototype._resultCancelled = function () {
                                            for (var t = this.length, i = 0; i < t; ++i) {
                                                var n = this[i];
                                                n instanceof e && n.cancel();
                                            }
                                        }),
                                        (e.using = function () {
                                            var t = arguments.length;
                                            if (t < 2) return i("you must pass at least 2 arguments to Promise.using");
                                            var r = arguments[t - 1];
                                            if ("function" != typeof r) return i("expecting a function but got " + f.classString(r));
                                            var o,
                                                s = !0;
                                            2 === t && Array.isArray(arguments[0]) ? ((o = arguments[0]), (t = o.length), (s = !1)) : ((o = arguments), t--);
                                            for (var l = new p(t), h = 0; h < t; ++h) {
                                                var m = o[h];
                                                if (u.isDisposer(m)) {
                                                    var v = m;
                                                    (m = m.promise()), m._setDisposable(v);
                                                } else {
                                                    var _ = n(m);
                                                    _ instanceof e && (m = _._then(d, null, null, { resources: l, index: h }, void 0));
                                                }
                                                l[h] = m;
                                            }
                                            for (var b = new Array(l.length), h = 0; h < b.length; ++h) b[h] = e.resolve(l[h]).reflect();
                                            var x = e.all(b).then(function (t) {
                                                    for (var e = 0; e < t.length; ++e) {
                                                        var i = t[e];
                                                        if (i.isRejected()) return (g.e = i.error()), g;
                                                        if (!i.isFulfilled()) return void x.cancel();
                                                        t[e] = i.value();
                                                    }
                                                    w._pushContext(), (r = y(r));
                                                    var n = s ? r.apply(void 0, t) : r(t),
                                                        o = w._popContext();
                                                    return a.checkForgottenReturns(n, o, "Promise.using", w), n;
                                                }),
                                                w = x.lastly(function () {
                                                    var t = new e.PromiseInspection(x);
                                                    return c(l, t);
                                                });
                                            return (l.promise = w), w._setOnCancel(l), w;
                                        }),
                                        (e.prototype._setDisposable = function (t) {
                                            (this._bitField = 131072 | this._bitField), (this._disposer = t);
                                        }),
                                        (e.prototype._isDisposable = function () {
                                            return (131072 & this._bitField) > 0;
                                        }),
                                        (e.prototype._getDisposer = function () {
                                            return this._disposer;
                                        }),
                                        (e.prototype._unsetDisposable = function () {
                                            (this._bitField = -131073 & this._bitField), (this._disposer = void 0);
                                        }),
                                        (e.prototype.disposer = function (t) {
                                            if ("function" == typeof t) return new h(t, this, r());
                                            throw new m();
                                        });
                                };
                            },
                            { "./errors": 12, "./util": 36 },
                        ],
                        36: [
                            function (t, r, o) {
                                "use strict";
                                function a() {
                                    try {
                                        var t = O;
                                        return (O = null), t.apply(this, arguments);
                                    } catch (t) {
                                        return (D.e = t), D;
                                    }
                                }
                                function s(t) {
                                    return (O = t), a;
                                }
                                function l(t) {
                                    return null == t || !0 === t || !1 === t || "string" == typeof t || "number" == typeof t;
                                }
                                function c(t) {
                                    return "function" == typeof t || ("object" == typeof t && null !== t);
                                }
                                function u(t) {
                                    return l(t) ? new Error(_(t)) : t;
                                }
                                function h(t, e) {
                                    var i,
                                        n = t.length,
                                        r = new Array(n + 1);
                                    for (i = 0; i < n; ++i) r[i] = t[i];
                                    return (r[i] = e), r;
                                }
                                function d(t, e, i) {
                                    if (!C.isES5) return {}.hasOwnProperty.call(t, e) ? t[e] : void 0;
                                    var n = Object.getOwnPropertyDescriptor(t, e);
                                    return null != n ? (null == n.get && null == n.set ? n.value : i) : void 0;
                                }
                                function p(t, e, i) {
                                    if (l(t)) return t;
                                    var n = { value: i, configurable: !0, enumerable: !1, writable: !0 };
                                    return C.defineProperty(t, e, n), t;
                                }
                                function f(t) {
                                    throw t;
                                }
                                function m(t) {
                                    try {
                                        if ("function" == typeof t) {
                                            var e = C.names(t.prototype),
                                                i = C.isES5 && e.length > 1,
                                                n = e.length > 0 && !(1 === e.length && "constructor" === e[0]),
                                                r = I.test(t + "") && C.names(t).length > 0;
                                            if (i || n || r) return !0;
                                        }
                                        return !1;
                                    } catch (t) {
                                        return !1;
                                    }
                                }
                                function v(t) {
                                    function e() {}
                                    e.prototype = t;
                                    for (var i = 8; i--; ) new e();
                                    return t;
                                }
                                function g(t) {
                                    return N.test(t);
                                }
                                function y(t, e, i) {
                                    for (var n = new Array(t), r = 0; r < t; ++r) n[r] = e + r + i;
                                    return n;
                                }
                                function _(t) {
                                    try {
                                        return t + "";
                                    } catch (t) {
                                        return "[no string representation]";
                                    }
                                }
                                function b(t) {
                                    return t instanceof Error || (null !== t && "object" == typeof t && "string" == typeof t.message && "string" == typeof t.name);
                                }
                                function x(t) {
                                    try {
                                        p(t, "isOperational", !0);
                                    } catch (t) {}
                                }
                                function w(t) {
                                    return null != t && (t instanceof Error.__BluebirdErrorTypes__.OperationalError || !0 === t.isOperational);
                                }
                                function T(t) {
                                    return b(t) && C.propertyIsWritable(t, "stack");
                                }
                                function E(t) {
                                    return {}.toString.call(t);
                                }
                                function M(t, e, i) {
                                    for (var n = C.names(t), r = 0; r < n.length; ++r) {
                                        var o = n[r];
                                        if (i(o))
                                            try {
                                                C.defineProperty(e, o, C.getDescriptor(t, o));
                                            } catch (t) {}
                                    }
                                }
                                function S(t) {
                                    return z ? i.i({ NODE_ENV: "production" })[t] : void 0;
                                }
                                function A() {
                                    if ("function" == typeof Promise)
                                        try {
                                            var t = new Promise(function () {});
                                            if ("[object Promise]" === {}.toString.call(t)) return Promise;
                                        } catch (t) {}
                                }
                                function R(t, e) {
                                    return t.bind(e);
                                }
                                var C = t("./es5"),
                                    P = "undefined" == typeof navigator,
                                    D = { e: {} },
                                    O,
                                    L = "undefined" != typeof self ? self : "undefined" != typeof window ? window : void 0 !== n ? n : void 0 !== this ? this : null,
                                    j = function (t, e) {
                                        function i() {
                                            (this.constructor = t), (this.constructor$ = e);
                                            for (var i in e.prototype) n.call(e.prototype, i) && "$" !== i.charAt(i.length - 1) && (this[i + "$"] = e.prototype[i]);
                                        }
                                        var n = {}.hasOwnProperty;
                                        return (i.prototype = e.prototype), (t.prototype = new i()), t.prototype;
                                    },
                                    k = (function () {
                                        var t = [Array.prototype, Object.prototype, Function.prototype],
                                            e = function (e) {
                                                for (var i = 0; i < t.length; ++i) if (t[i] === e) return !0;
                                                return !1;
                                            };
                                        if (C.isES5) {
                                            var i = Object.getOwnPropertyNames;
                                            return function (t) {
                                                for (var n = [], r = Object.create(null); null != t && !e(t); ) {
                                                    var o;
                                                    try {
                                                        o = i(t);
                                                    } catch (t) {
                                                        return n;
                                                    }
                                                    for (var a = 0; a < o.length; ++a) {
                                                        var s = o[a];
                                                        if (!r[s]) {
                                                            r[s] = !0;
                                                            var l = Object.getOwnPropertyDescriptor(t, s);
                                                            null != l && null == l.get && null == l.set && n.push(s);
                                                        }
                                                    }
                                                    t = C.getPrototypeOf(t);
                                                }
                                                return n;
                                            };
                                        }
                                        var n = {}.hasOwnProperty;
                                        return function (i) {
                                            if (e(i)) return [];
                                            var r = [];
                                            t: for (var o in i)
                                                if (n.call(i, o)) r.push(o);
                                                else {
                                                    for (var a = 0; a < t.length; ++a) if (n.call(t[a], o)) continue t;
                                                    r.push(o);
                                                }
                                            return r;
                                        };
                                    })(),
                                    I = /this\s*\.\s*\S+\s*=/,
                                    N = /^[a-z$_][a-z$_0-9]*$/i,
                                    F = (function () {
                                        return "stack" in new Error()
                                            ? function (t) {
                                                  return T(t) ? t : new Error(_(t));
                                              }
                                            : function (t) {
                                                  if (T(t)) return t;
                                                  try {
                                                      throw new Error(_(t));
                                                  } catch (t) {
                                                      return t;
                                                  }
                                              };
                                    })(),
                                    U = function (t) {
                                        return C.isArray(t) ? t : null;
                                    };
                                if ("undefined" != typeof Symbol && Symbol.iterator) {
                                    var B =
                                        "function" == typeof Array.from
                                            ? function (t) {
                                                  return Array.from(t);
                                              }
                                            : function (t) {
                                                  for (var e, i = [], n = t[Symbol.iterator](); !(e = n.next()).done; ) i.push(e.value);
                                                  return i;
                                              };
                                    U = function (t) {
                                        return C.isArray(t) ? t : null != t && "function" == typeof t[Symbol.iterator] ? B(t) : null;
                                    };
                                }
                                var G = void 0 !== e && "[object process]" === E(e).toLowerCase(),
                                    z = void 0 !== e && !0,
                                    V = {
                                        isClass: m,
                                        isIdentifier: g,
                                        inheritedDataKeys: k,
                                        getDataPropertyOrDefault: d,
                                        thrower: f,
                                        isArray: C.isArray,
                                        asArray: U,
                                        notEnumerableProp: p,
                                        isPrimitive: l,
                                        isObject: c,
                                        isError: b,
                                        canEvaluate: P,
                                        errorObj: D,
                                        tryCatch: s,
                                        inherits: j,
                                        withAppended: h,
                                        maybeWrapAsError: u,
                                        toFastProperties: v,
                                        filledRange: y,
                                        toString: _,
                                        canAttachTrace: T,
                                        ensureErrorObject: F,
                                        originatesFromRejection: w,
                                        markAsOriginatingFromRejection: x,
                                        classString: E,
                                        copyDescriptors: M,
                                        hasDevTools: "undefined" != typeof chrome && chrome && "function" == typeof chrome.loadTimes,
                                        isNode: G,
                                        hasEnvVariables: z,
                                        env: S,
                                        global: L,
                                        getNativePromise: A,
                                        domainBind: R,
                                    };
                                (V.isRecentNode =
                                    V.isNode &&
                                    (function () {
                                        var t = e.versions.node.split(".").map(Number);
                                        return (0 === t[0] && t[1] > 10) || t[0] > 0;
                                    })()),
                                    V.isNode && V.toFastProperties(e);
                                try {
                                    throw new Error();
                                } catch (t) {
                                    V.lastLineError = t;
                                }
                                r.exports = V;
                            },
                            { "./es5": 13 },
                        ],
                    },
                    {},
                    [4]
                )(4);
            }),
                "undefined" != typeof window && null !== window ? (window.P = window.Promise) : "undefined" != typeof self && null !== self && (self.P = self.Promise);
        }.call(e, i("../node_modules/process/browser.js"), i("../node_modules/webpack/buildin/global.js"), i("../node_modules/timers-browserify/main.js").setImmediate));
    },
    '../node_modules/extract-text-webpack-plugin/loader.js?{"omit":1,"remove":true}!../node_modules/style-loader/index.js!../node_modules/css-loader/index.js!../node_modules/postcss-loader/index.js!../node_modules/sass-loader/lib/loader.js!./scss/master.scss': function (
        t,
        e
    ) {},
    "../node_modules/gsap/TweenMax.js": function (t, e, i) {
        (function (i) {
            var n,
                r,
                o = void 0 !== t && t.exports && void 0 !== i ? i : this || window;
            (o._gsQueue || (o._gsQueue = [])).push(function () {
                "use strict";
                o._gsDefine(
                    "TweenMax",
                    ["core.Animation", "core.SimpleTimeline", "TweenLite"],
                    function (t, e, i) {
                        var n = function (t) {
                                var e,
                                    i = [],
                                    n = t.length;
                                for (e = 0; e !== n; i.push(t[e++]));
                                return i;
                            },
                            r = function (t, e, i) {
                                var n,
                                    r,
                                    o = t.cycle;
                                for (n in o) (r = o[n]), (t[n] = "function" == typeof r ? r(i, e[i]) : r[i % r.length]);
                                delete t.cycle;
                            },
                            o = function (t, e, n) {
                                i.call(this, t, e, n),
                                    (this._cycle = 0),
                                    (this._yoyo = !0 === this.vars.yoyo || !!this.vars.yoyoEase),
                                    (this._repeat = this.vars.repeat || 0),
                                    (this._repeatDelay = this.vars.repeatDelay || 0),
                                    this._repeat && this._uncache(!0),
                                    (this.render = o.prototype.render);
                            },
                            a = i._internals,
                            s = a.isSelector,
                            l = a.isArray,
                            c = (o.prototype = i.to({}, 0.1, {})),
                            u = [];
                        (o.version = "1.20.3"),
                            (c.constructor = o),
                            (c.kill()._gc = !1),
                            (o.killTweensOf = o.killDelayedCallsTo = i.killTweensOf),
                            (o.getTweensOf = i.getTweensOf),
                            (o.lagSmoothing = i.lagSmoothing),
                            (o.ticker = i.ticker),
                            (o.render = i.render),
                            (c.invalidate = function () {
                                return (
                                    (this._yoyo = !0 === this.vars.yoyo || !!this.vars.yoyoEase),
                                    (this._repeat = this.vars.repeat || 0),
                                    (this._repeatDelay = this.vars.repeatDelay || 0),
                                    (this._yoyoEase = null),
                                    this._uncache(!0),
                                    i.prototype.invalidate.call(this)
                                );
                            }),
                            (c.updateTo = function (t, e) {
                                var n,
                                    r = this.ratio,
                                    o = this.vars.immediateRender || t.immediateRender;
                                e && this._startTime < this._timeline._time && ((this._startTime = this._timeline._time), this._uncache(!1), this._gc ? this._enabled(!0, !1) : this._timeline.insert(this, this._startTime - this._delay));
                                for (n in t) this.vars[n] = t[n];
                                if (this._initted || o)
                                    if (e) (this._initted = !1), o && this.render(0, !0, !0);
                                    else if ((this._gc && this._enabled(!0, !1), this._notifyPluginsOfEnabled && this._firstPT && i._onPluginEvent("_onDisable", this), this._time / this._duration > 0.998)) {
                                        var a = this._totalTime;
                                        this.render(0, !0, !1), (this._initted = !1), this.render(a, !0, !1);
                                    } else if (((this._initted = !1), this._init(), this._time > 0 || o)) for (var s, l = 1 / (1 - r), c = this._firstPT; c; ) (s = c.s + c.c), (c.c *= l), (c.s = s - c.c), (c = c._next);
                                return this;
                            }),
                            (c.render = function (t, e, n) {
                                this._initted || (0 === this._duration && this.vars.repeat && this.invalidate());
                                var r,
                                    o,
                                    s,
                                    l,
                                    c,
                                    u,
                                    h,
                                    d,
                                    p,
                                    f = this._dirty ? this.totalDuration() : this._totalDuration,
                                    m = this._time,
                                    v = this._totalTime,
                                    g = this._cycle,
                                    y = this._duration,
                                    _ = this._rawPrevTime;
                                if (
                                    (t >= f - 1e-7 && t >= 0
                                        ? ((this._totalTime = f),
                                          (this._cycle = this._repeat),
                                          this._yoyo && 0 != (1 & this._cycle)
                                              ? ((this._time = 0), (this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0))
                                              : ((this._time = y), (this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1)),
                                          this._reversed || ((r = !0), (o = "onComplete"), (n = n || this._timeline.autoRemoveChildren)),
                                          0 === y &&
                                              (this._initted || !this.vars.lazy || n) &&
                                              (this._startTime === this._timeline._duration && (t = 0),
                                              (_ < 0 || (t <= 0 && t >= -1e-7) || (1e-10 === _ && "isPause" !== this.data)) && _ !== t && ((n = !0), _ > 1e-10 && (o = "onReverseComplete")),
                                              (this._rawPrevTime = d = !e || t || _ === t ? t : 1e-10)))
                                        : t < 1e-7
                                        ? ((this._totalTime = this._time = this._cycle = 0),
                                          (this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0),
                                          (0 !== v || (0 === y && _ > 0)) && ((o = "onReverseComplete"), (r = this._reversed)),
                                          t < 0 && ((this._active = !1), 0 === y && (this._initted || !this.vars.lazy || n) && (_ >= 0 && (n = !0), (this._rawPrevTime = d = !e || t || _ === t ? t : 1e-10))),
                                          this._initted || (n = !0))
                                        : ((this._totalTime = this._time = t),
                                          0 !== this._repeat &&
                                              ((l = y + this._repeatDelay),
                                              (this._cycle = (this._totalTime / l) >> 0),
                                              0 !== this._cycle && this._cycle === this._totalTime / l && v <= t && this._cycle--,
                                              (this._time = this._totalTime - this._cycle * l),
                                              this._yoyo &&
                                                  0 != (1 & this._cycle) &&
                                                  ((this._time = y - this._time),
                                                  (p = this._yoyoEase || this.vars.yoyoEase) &&
                                                      (this._yoyoEase ||
                                                          (!0 !== p || this._initted
                                                              ? (this._yoyoEase = p = !0 === p ? this._ease : p instanceof Ease ? p : Ease.map[p])
                                                              : ((p = this.vars.ease),
                                                                (this._yoyoEase = p = p ? (p instanceof Ease ? p : "function" == typeof p ? new Ease(p, this.vars.easeParams) : Ease.map[p] || i.defaultEase) : i.defaultEase))),
                                                      (this.ratio = p ? 1 - p.getRatio((y - this._time) / y) : 0))),
                                              this._time > y ? (this._time = y) : this._time < 0 && (this._time = 0)),
                                          this._easeType && !p
                                              ? ((c = this._time / y),
                                                (u = this._easeType),
                                                (h = this._easePower),
                                                (1 === u || (3 === u && c >= 0.5)) && (c = 1 - c),
                                                3 === u && (c *= 2),
                                                1 === h ? (c *= c) : 2 === h ? (c *= c * c) : 3 === h ? (c *= c * c * c) : 4 === h && (c *= c * c * c * c),
                                                1 === u ? (this.ratio = 1 - c) : 2 === u ? (this.ratio = c) : this._time / y < 0.5 ? (this.ratio = c / 2) : (this.ratio = 1 - c / 2))
                                              : p || (this.ratio = this._ease.getRatio(this._time / y))),
                                    m === this._time && !n && g === this._cycle)
                                )
                                    return void (v !== this._totalTime && this._onUpdate && (e || this._callback("onUpdate")));
                                if (!this._initted) {
                                    if ((this._init(), !this._initted || this._gc)) return;
                                    if (!n && this._firstPT && ((!1 !== this.vars.lazy && this._duration) || (this.vars.lazy && !this._duration)))
                                        return (this._time = m), (this._totalTime = v), (this._rawPrevTime = _), (this._cycle = g), a.lazyTweens.push(this), void (this._lazy = [t, e]);
                                    !this._time || r || p ? r && this._ease._calcEnd && !p && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1)) : (this.ratio = this._ease.getRatio(this._time / y));
                                }
                                for (
                                    !1 !== this._lazy && (this._lazy = !1),
                                        this._active || (!this._paused && this._time !== m && t >= 0 && (this._active = !0)),
                                        0 === v &&
                                            (2 === this._initted && t > 0 && this._init(),
                                            this._startAt && (t >= 0 ? this._startAt.render(t, !0, n) : o || (o = "_dummyGS")),
                                            this.vars.onStart && ((0 === this._totalTime && 0 !== y) || e || this._callback("onStart"))),
                                        s = this._firstPT;
                                    s;

                                )
                                    s.f ? s.t[s.p](s.c * this.ratio + s.s) : (s.t[s.p] = s.c * this.ratio + s.s), (s = s._next);
                                this._onUpdate && (t < 0 && this._startAt && this._startTime && this._startAt.render(t, !0, n), e || ((this._totalTime !== v || o) && this._callback("onUpdate"))),
                                    this._cycle !== g && (e || this._gc || (this.vars.onRepeat && this._callback("onRepeat"))),
                                    o &&
                                        ((this._gc && !n) ||
                                            (t < 0 && this._startAt && !this._onUpdate && this._startTime && this._startAt.render(t, !0, n),
                                            r && (this._timeline.autoRemoveChildren && this._enabled(!1, !1), (this._active = !1)),
                                            !e && this.vars[o] && this._callback(o),
                                            0 === y && 1e-10 === this._rawPrevTime && 1e-10 !== d && (this._rawPrevTime = 0)));
                            }),
                            (o.to = function (t, e, i) {
                                return new o(t, e, i);
                            }),
                            (o.from = function (t, e, i) {
                                return (i.runBackwards = !0), (i.immediateRender = 0 != i.immediateRender), new o(t, e, i);
                            }),
                            (o.fromTo = function (t, e, i, n) {
                                return (n.startAt = i), (n.immediateRender = 0 != n.immediateRender && 0 != i.immediateRender), new o(t, e, n);
                            }),
                            (o.staggerTo = o.allTo = function (t, e, a, c, h, d, p) {
                                c = c || 0;
                                var f,
                                    m,
                                    v,
                                    g,
                                    y = 0,
                                    _ = [],
                                    b = function () {
                                        a.onComplete && a.onComplete.apply(a.onCompleteScope || this, arguments), h.apply(p || a.callbackScope || this, d || u);
                                    },
                                    x = a.cycle,
                                    w = a.startAt && a.startAt.cycle;
                                for (l(t) || ("string" == typeof t && (t = i.selector(t) || t), s(t) && (t = n(t))), t = t || [], c < 0 && ((t = n(t)), t.reverse(), (c *= -1)), f = t.length - 1, v = 0; v <= f; v++) {
                                    m = {};
                                    for (g in a) m[g] = a[g];
                                    if ((x && (r(m, t, v), null != m.duration && ((e = m.duration), delete m.duration)), w)) {
                                        w = m.startAt = {};
                                        for (g in a.startAt) w[g] = a.startAt[g];
                                        r(m.startAt, t, v);
                                    }
                                    (m.delay = y + (m.delay || 0)), v === f && h && (m.onComplete = b), (_[v] = new o(t[v], e, m)), (y += c);
                                }
                                return _;
                            }),
                            (o.staggerFrom = o.allFrom = function (t, e, i, n, r, a, s) {
                                return (i.runBackwards = !0), (i.immediateRender = 0 != i.immediateRender), o.staggerTo(t, e, i, n, r, a, s);
                            }),
                            (o.staggerFromTo = o.allFromTo = function (t, e, i, n, r, a, s, l) {
                                return (n.startAt = i), (n.immediateRender = 0 != n.immediateRender && 0 != i.immediateRender), o.staggerTo(t, e, n, r, a, s, l);
                            }),
                            (o.delayedCall = function (t, e, i, n, r) {
                                return new o(e, 0, { delay: t, onComplete: e, onCompleteParams: i, callbackScope: n, onReverseComplete: e, onReverseCompleteParams: i, immediateRender: !1, useFrames: r, overwrite: 0 });
                            }),
                            (o.set = function (t, e) {
                                return new o(t, 0, e);
                            }),
                            (o.isTweening = function (t) {
                                return i.getTweensOf(t, !0).length > 0;
                            });
                        var h = function (t, e) {
                                for (var n = [], r = 0, o = t._first; o; ) o instanceof i ? (n[r++] = o) : (e && (n[r++] = o), (n = n.concat(h(o, e))), (r = n.length)), (o = o._next);
                                return n;
                            },
                            d = (o.getAllTweens = function (e) {
                                return h(t._rootTimeline, e).concat(h(t._rootFramesTimeline, e));
                            });
                        (o.killAll = function (t, i, n, r) {
                            null == i && (i = !0), null == n && (n = !0);
                            var o,
                                a,
                                s,
                                l = d(0 != r),
                                c = l.length,
                                u = i && n && r;
                            for (s = 0; s < c; s++) (a = l[s]), (u || a instanceof e || ((o = a.target === a.vars.onComplete) && n) || (i && !o)) && (t ? a.totalTime(a._reversed ? 0 : a.totalDuration()) : a._enabled(!1, !1));
                        }),
                            (o.killChildTweensOf = function (t, e) {
                                if (null != t) {
                                    var r,
                                        c,
                                        u,
                                        h,
                                        d,
                                        p = a.tweenLookup;
                                    if (("string" == typeof t && (t = i.selector(t) || t), s(t) && (t = n(t)), l(t))) for (h = t.length; --h > -1; ) o.killChildTweensOf(t[h], e);
                                    else {
                                        r = [];
                                        for (u in p) for (c = p[u].target.parentNode; c; ) c === t && (r = r.concat(p[u].tweens)), (c = c.parentNode);
                                        for (d = r.length, h = 0; h < d; h++) e && r[h].totalTime(r[h].totalDuration()), r[h]._enabled(!1, !1);
                                    }
                                }
                            });
                        var p = function (t, i, n, r) {
                            (i = !1 !== i), (n = !1 !== n), (r = !1 !== r);
                            for (var o, a, s = d(r), l = i && n && r, c = s.length; --c > -1; ) (a = s[c]), (l || a instanceof e || ((o = a.target === a.vars.onComplete) && n) || (i && !o)) && a.paused(t);
                        };
                        return (
                            (o.pauseAll = function (t, e, i) {
                                p(!0, t, e, i);
                            }),
                            (o.resumeAll = function (t, e, i) {
                                p(!1, t, e, i);
                            }),
                            (o.globalTimeScale = function (e) {
                                var n = t._rootTimeline,
                                    r = i.ticker.time;
                                return arguments.length
                                    ? ((e = e || 1e-10),
                                      (n._startTime = r - ((r - n._startTime) * n._timeScale) / e),
                                      (n = t._rootFramesTimeline),
                                      (r = i.ticker.frame),
                                      (n._startTime = r - ((r - n._startTime) * n._timeScale) / e),
                                      (n._timeScale = t._rootTimeline._timeScale = e),
                                      e)
                                    : n._timeScale;
                            }),
                            (c.progress = function (t, e) {
                                return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 != (1 & this._cycle) ? 1 - t : t) + this._cycle * (this._duration + this._repeatDelay), e) : this._time / this.duration();
                            }),
                            (c.totalProgress = function (t, e) {
                                return arguments.length ? this.totalTime(this.totalDuration() * t, e) : this._totalTime / this.totalDuration();
                            }),
                            (c.time = function (t, e) {
                                return arguments.length
                                    ? (this._dirty && this.totalDuration(),
                                      t > this._duration && (t = this._duration),
                                      this._yoyo && 0 != (1 & this._cycle) ? (t = this._duration - t + this._cycle * (this._duration + this._repeatDelay)) : 0 !== this._repeat && (t += this._cycle * (this._duration + this._repeatDelay)),
                                      this.totalTime(t, e))
                                    : this._time;
                            }),
                            (c.duration = function (e) {
                                return arguments.length ? t.prototype.duration.call(this, e) : this._duration;
                            }),
                            (c.totalDuration = function (t) {
                                return arguments.length
                                    ? -1 === this._repeat
                                        ? this
                                        : this.duration((t - this._repeat * this._repeatDelay) / (this._repeat + 1))
                                    : (this._dirty && ((this._totalDuration = -1 === this._repeat ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat), (this._dirty = !1)), this._totalDuration);
                            }),
                            (c.repeat = function (t) {
                                return arguments.length ? ((this._repeat = t), this._uncache(!0)) : this._repeat;
                            }),
                            (c.repeatDelay = function (t) {
                                return arguments.length ? ((this._repeatDelay = t), this._uncache(!0)) : this._repeatDelay;
                            }),
                            (c.yoyo = function (t) {
                                return arguments.length ? ((this._yoyo = t), this) : this._yoyo;
                            }),
                            o
                        );
                    },
                    !0
                ),
                    o._gsDefine(
                        "TimelineLite",
                        ["core.Animation", "core.SimpleTimeline", "TweenLite"],
                        function (t, e, i) {
                            var n = function (t) {
                                    e.call(this, t),
                                        (this._labels = {}),
                                        (this.autoRemoveChildren = !0 === this.vars.autoRemoveChildren),
                                        (this.smoothChildTiming = !0 === this.vars.smoothChildTiming),
                                        (this._sortChildren = !0),
                                        (this._onUpdate = this.vars.onUpdate);
                                    var i,
                                        n,
                                        r = this.vars;
                                    for (n in r) (i = r[n]), l(i) && -1 !== i.join("").indexOf("{self}") && (r[n] = this._swapSelfInParams(i));
                                    l(r.tweens) && this.add(r.tweens, 0, r.align, r.stagger);
                                },
                                r = i._internals,
                                a = (n._internals = {}),
                                s = r.isSelector,
                                l = r.isArray,
                                c = r.lazyTweens,
                                u = r.lazyRender,
                                h = o._gsDefine.globals,
                                d = function (t) {
                                    var e,
                                        i = {};
                                    for (e in t) i[e] = t[e];
                                    return i;
                                },
                                p = function (t, e, i) {
                                    var n,
                                        r,
                                        o = t.cycle;
                                    for (n in o) (r = o[n]), (t[n] = "function" == typeof r ? r(i, e[i]) : r[i % r.length]);
                                    delete t.cycle;
                                },
                                f = (a.pauseCallback = function () {}),
                                m = function (t) {
                                    var e,
                                        i = [],
                                        n = t.length;
                                    for (e = 0; e !== n; i.push(t[e++]));
                                    return i;
                                },
                                v = (n.prototype = new e());
                            return (
                                (n.version = "1.20.3"),
                                (v.constructor = n),
                                (v.kill()._gc = v._forcingPlayhead = v._hasPause = !1),
                                (v.to = function (t, e, n, r) {
                                    var o = (n.repeat && h.TweenMax) || i;
                                    return e ? this.add(new o(t, e, n), r) : this.set(t, n, r);
                                }),
                                (v.from = function (t, e, n, r) {
                                    return this.add(((n.repeat && h.TweenMax) || i).from(t, e, n), r);
                                }),
                                (v.fromTo = function (t, e, n, r, o) {
                                    var a = (r.repeat && h.TweenMax) || i;
                                    return e ? this.add(a.fromTo(t, e, n, r), o) : this.set(t, r, o);
                                }),
                                (v.staggerTo = function (t, e, r, o, a, l, c, u) {
                                    var h,
                                        f,
                                        v = new n({ onComplete: l, onCompleteParams: c, callbackScope: u, smoothChildTiming: this.smoothChildTiming }),
                                        g = r.cycle;
                                    for ("string" == typeof t && (t = i.selector(t) || t), t = t || [], s(t) && (t = m(t)), o = o || 0, o < 0 && ((t = m(t)), t.reverse(), (o *= -1)), f = 0; f < t.length; f++)
                                        (h = d(r)), h.startAt && ((h.startAt = d(h.startAt)), h.startAt.cycle && p(h.startAt, t, f)), g && (p(h, t, f), null != h.duration && ((e = h.duration), delete h.duration)), v.to(t[f], e, h, f * o);
                                    return this.add(v, a);
                                }),
                                (v.staggerFrom = function (t, e, i, n, r, o, a, s) {
                                    return (i.immediateRender = 0 != i.immediateRender), (i.runBackwards = !0), this.staggerTo(t, e, i, n, r, o, a, s);
                                }),
                                (v.staggerFromTo = function (t, e, i, n, r, o, a, s, l) {
                                    return (n.startAt = i), (n.immediateRender = 0 != n.immediateRender && 0 != i.immediateRender), this.staggerTo(t, e, n, r, o, a, s, l);
                                }),
                                (v.call = function (t, e, n, r) {
                                    return this.add(i.delayedCall(0, t, e, n), r);
                                }),
                                (v.set = function (t, e, n) {
                                    return (n = this._parseTimeOrLabel(n, 0, !0)), null == e.immediateRender && (e.immediateRender = n === this._time && !this._paused), this.add(new i(t, 0, e), n);
                                }),
                                (n.exportRoot = function (t, e) {
                                    (t = t || {}), null == t.smoothChildTiming && (t.smoothChildTiming = !0);
                                    var r,
                                        o,
                                        a,
                                        s,
                                        l = new n(t),
                                        c = l._timeline;
                                    for (null == e && (e = !0), c._remove(l, !0), l._startTime = 0, l._rawPrevTime = l._time = l._totalTime = c._time, a = c._first; a; )
                                        (s = a._next), (e && a instanceof i && a.target === a.vars.onComplete) || ((o = a._startTime - a._delay), o < 0 && (r = 1), l.add(a, o)), (a = s);
                                    return c.add(l, 0), r && l.totalDuration(), l;
                                }),
                                (v.add = function (r, o, a, s) {
                                    var c, u, h, d, p, f;
                                    if (("number" != typeof o && (o = this._parseTimeOrLabel(o, 0, !0, r)), !(r instanceof t))) {
                                        if (r instanceof Array || (r && r.push && l(r))) {
                                            for (a = a || "normal", s = s || 0, c = o, u = r.length, h = 0; h < u; h++)
                                                l((d = r[h])) && (d = new n({ tweens: d })),
                                                    this.add(d, c),
                                                    "string" != typeof d && "function" != typeof d && ("sequence" === a ? (c = d._startTime + d.totalDuration() / d._timeScale) : "start" === a && (d._startTime -= d.delay())),
                                                    (c += s);
                                            return this._uncache(!0);
                                        }
                                        if ("string" == typeof r) return this.addLabel(r, o);
                                        if ("function" != typeof r) throw "Cannot add " + r + " into the timeline; it is not a tween, timeline, function, or string.";
                                        r = i.delayedCall(0, r);
                                    }
                                    if (
                                        (e.prototype.add.call(this, r, o),
                                        r._time && r.render((this.rawTime() - r._startTime) * r._timeScale, !1, !1),
                                        (this._gc || this._time === this._duration) && !this._paused && this._duration < this.duration())
                                    )
                                        for (p = this, f = p.rawTime() > r._startTime; p._timeline; ) f && p._timeline.smoothChildTiming ? p.totalTime(p._totalTime, !0) : p._gc && p._enabled(!0, !1), (p = p._timeline);
                                    return this;
                                }),
                                (v.remove = function (e) {
                                    if (e instanceof t) {
                                        this._remove(e, !1);
                                        var i = (e._timeline = e.vars.useFrames ? t._rootFramesTimeline : t._rootTimeline);
                                        return (e._startTime = (e._paused ? e._pauseTime : i._time) - (e._reversed ? e.totalDuration() - e._totalTime : e._totalTime) / e._timeScale), this;
                                    }
                                    if (e instanceof Array || (e && e.push && l(e))) {
                                        for (var n = e.length; --n > -1; ) this.remove(e[n]);
                                        return this;
                                    }
                                    return "string" == typeof e ? this.removeLabel(e) : this.kill(null, e);
                                }),
                                (v._remove = function (t, i) {
                                    return (
                                        e.prototype._remove.call(this, t, i),
                                        this._last ? this._time > this.duration() && ((this._time = this._duration), (this._totalTime = this._totalDuration)) : (this._time = this._totalTime = this._duration = this._totalDuration = 0),
                                        this
                                    );
                                }),
                                (v.append = function (t, e) {
                                    return this.add(t, this._parseTimeOrLabel(null, e, !0, t));
                                }),
                                (v.insert = v.insertMultiple = function (t, e, i, n) {
                                    return this.add(t, e || 0, i, n);
                                }),
                                (v.appendMultiple = function (t, e, i, n) {
                                    return this.add(t, this._parseTimeOrLabel(null, e, !0, t), i, n);
                                }),
                                (v.addLabel = function (t, e) {
                                    return (this._labels[t] = this._parseTimeOrLabel(e)), this;
                                }),
                                (v.addPause = function (t, e, n, r) {
                                    var o = i.delayedCall(0, f, n, r || this);
                                    return (o.vars.onComplete = o.vars.onReverseComplete = e), (o.data = "isPause"), (this._hasPause = !0), this.add(o, t);
                                }),
                                (v.removeLabel = function (t) {
                                    return delete this._labels[t], this;
                                }),
                                (v.getLabelTime = function (t) {
                                    return null != this._labels[t] ? this._labels[t] : -1;
                                }),
                                (v._parseTimeOrLabel = function (e, i, n, r) {
                                    var o, a;
                                    if (r instanceof t && r.timeline === this) this.remove(r);
                                    else if (r && (r instanceof Array || (r.push && l(r)))) for (a = r.length; --a > -1; ) r[a] instanceof t && r[a].timeline === this && this.remove(r[a]);
                                    if (((o = "number" != typeof e || i ? (this.duration() > 99999999999 ? this.recent().endTime(!1) : this._duration) : 0), "string" == typeof i))
                                        return this._parseTimeOrLabel(i, n && "number" == typeof e && null == this._labels[i] ? e - o : 0, n);
                                    if (((i = i || 0), "string" != typeof e || (!isNaN(e) && null == this._labels[e]))) null == e && (e = o);
                                    else {
                                        if (-1 === (a = e.indexOf("="))) return null == this._labels[e] ? (n ? (this._labels[e] = o + i) : i) : this._labels[e] + i;
                                        (i = parseInt(e.charAt(a - 1) + "1", 10) * Number(e.substr(a + 1))), (e = a > 1 ? this._parseTimeOrLabel(e.substr(0, a - 1), 0, n) : o);
                                    }
                                    return Number(e) + i;
                                }),
                                (v.seek = function (t, e) {
                                    return this.totalTime("number" == typeof t ? t : this._parseTimeOrLabel(t), !1 !== e);
                                }),
                                (v.stop = function () {
                                    return this.paused(!0);
                                }),
                                (v.gotoAndPlay = function (t, e) {
                                    return this.play(t, e);
                                }),
                                (v.gotoAndStop = function (t, e) {
                                    return this.pause(t, e);
                                }),
                                (v.render = function (t, e, i) {
                                    this._gc && this._enabled(!0, !1);
                                    var n,
                                        r,
                                        o,
                                        a,
                                        s,
                                        l,
                                        h,
                                        d = this._time,
                                        p = this._dirty ? this.totalDuration() : this._totalDuration,
                                        f = this._startTime,
                                        m = this._timeScale,
                                        v = this._paused;
                                    if ((d !== this._time && (t += this._time - d), t >= p - 1e-7 && t >= 0))
                                        (this._totalTime = this._time = p),
                                            this._reversed ||
                                                this._hasPausedChild() ||
                                                ((r = !0),
                                                (a = "onComplete"),
                                                (s = !!this._timeline.autoRemoveChildren),
                                                0 === this._duration &&
                                                    ((t <= 0 && t >= -1e-7) || this._rawPrevTime < 0 || 1e-10 === this._rawPrevTime) &&
                                                    this._rawPrevTime !== t &&
                                                    this._first &&
                                                    ((s = !0), this._rawPrevTime > 1e-10 && (a = "onReverseComplete"))),
                                            (this._rawPrevTime = this._duration || !e || t || this._rawPrevTime === t ? t : 1e-10),
                                            (t = p + 1e-4);
                                    else if (t < 1e-7)
                                        if (
                                            ((this._totalTime = this._time = 0),
                                            (0 !== d || (0 === this._duration && 1e-10 !== this._rawPrevTime && (this._rawPrevTime > 0 || (t < 0 && this._rawPrevTime >= 0)))) && ((a = "onReverseComplete"), (r = this._reversed)),
                                            t < 0)
                                        )
                                            (this._active = !1), this._timeline.autoRemoveChildren && this._reversed ? ((s = r = !0), (a = "onReverseComplete")) : this._rawPrevTime >= 0 && this._first && (s = !0), (this._rawPrevTime = t);
                                        else {
                                            if (((this._rawPrevTime = this._duration || !e || t || this._rawPrevTime === t ? t : 1e-10), 0 === t && r)) for (n = this._first; n && 0 === n._startTime; ) n._duration || (r = !1), (n = n._next);
                                            (t = 0), this._initted || (s = !0);
                                        }
                                    else {
                                        if (this._hasPause && !this._forcingPlayhead && !e) {
                                            if (t >= d) for (n = this._first; n && n._startTime <= t && !l; ) n._duration || "isPause" !== n.data || n.ratio || (0 === n._startTime && 0 === this._rawPrevTime) || (l = n), (n = n._next);
                                            else for (n = this._last; n && n._startTime >= t && !l; ) n._duration || ("isPause" === n.data && n._rawPrevTime > 0 && (l = n)), (n = n._prev);
                                            l && ((this._time = t = l._startTime), (this._totalTime = t + this._cycle * (this._totalDuration + this._repeatDelay)));
                                        }
                                        this._totalTime = this._time = this._rawPrevTime = t;
                                    }
                                    if ((this._time !== d && this._first) || i || s || l) {
                                        if (
                                            (this._initted || (this._initted = !0),
                                            this._active || (!this._paused && this._time !== d && t > 0 && (this._active = !0)),
                                            0 === d && this.vars.onStart && ((0 === this._time && this._duration) || e || this._callback("onStart")),
                                            (h = this._time) >= d)
                                        )
                                            for (n = this._first; n && ((o = n._next), h === this._time && (!this._paused || v)); )
                                                (n._active || (n._startTime <= h && !n._paused && !n._gc)) &&
                                                    (l === n && this.pause(),
                                                    n._reversed ? n.render((n._dirty ? n.totalDuration() : n._totalDuration) - (t - n._startTime) * n._timeScale, e, i) : n.render((t - n._startTime) * n._timeScale, e, i)),
                                                    (n = o);
                                        else
                                            for (n = this._last; n && ((o = n._prev), h === this._time && (!this._paused || v)); ) {
                                                if (n._active || (n._startTime <= d && !n._paused && !n._gc)) {
                                                    if (l === n) {
                                                        for (l = n._prev; l && l.endTime() > this._time; )
                                                            l.render(l._reversed ? l.totalDuration() - (t - l._startTime) * l._timeScale : (t - l._startTime) * l._timeScale, e, i), (l = l._prev);
                                                        (l = null), this.pause();
                                                    }
                                                    n._reversed ? n.render((n._dirty ? n.totalDuration() : n._totalDuration) - (t - n._startTime) * n._timeScale, e, i) : n.render((t - n._startTime) * n._timeScale, e, i);
                                                }
                                                n = o;
                                            }
                                        this._onUpdate && (e || (c.length && u(), this._callback("onUpdate"))),
                                            a &&
                                                (this._gc ||
                                                    (f !== this._startTime && m === this._timeScale) ||
                                                    ((0 === this._time || p >= this.totalDuration()) &&
                                                        (r && (c.length && u(), this._timeline.autoRemoveChildren && this._enabled(!1, !1), (this._active = !1)), !e && this.vars[a] && this._callback(a))));
                                    }
                                }),
                                (v._hasPausedChild = function () {
                                    for (var t = this._first; t; ) {
                                        if (t._paused || (t instanceof n && t._hasPausedChild())) return !0;
                                        t = t._next;
                                    }
                                    return !1;
                                }),
                                (v.getChildren = function (t, e, n, r) {
                                    r = r || -9999999999;
                                    for (var o = [], a = this._first, s = 0; a; )
                                        a._startTime < r || (a instanceof i ? !1 !== e && (o[s++] = a) : (!1 !== n && (o[s++] = a), !1 !== t && ((o = o.concat(a.getChildren(!0, e, n))), (s = o.length)))), (a = a._next);
                                    return o;
                                }),
                                (v.getTweensOf = function (t, e) {
                                    var n,
                                        r,
                                        o = this._gc,
                                        a = [],
                                        s = 0;
                                    for (o && this._enabled(!0, !0), n = i.getTweensOf(t), r = n.length; --r > -1; ) (n[r].timeline === this || (e && this._contains(n[r]))) && (a[s++] = n[r]);
                                    return o && this._enabled(!1, !0), a;
                                }),
                                (v.recent = function () {
                                    return this._recent;
                                }),
                                (v._contains = function (t) {
                                    for (var e = t.timeline; e; ) {
                                        if (e === this) return !0;
                                        e = e.timeline;
                                    }
                                    return !1;
                                }),
                                (v.shiftChildren = function (t, e, i) {
                                    i = i || 0;
                                    for (var n, r = this._first, o = this._labels; r; ) r._startTime >= i && (r._startTime += t), (r = r._next);
                                    if (e) for (n in o) o[n] >= i && (o[n] += t);
                                    return this._uncache(!0);
                                }),
                                (v._kill = function (t, e) {
                                    if (!t && !e) return this._enabled(!1, !1);
                                    for (var i = e ? this.getTweensOf(e) : this.getChildren(!0, !0, !1), n = i.length, r = !1; --n > -1; ) i[n]._kill(t, e) && (r = !0);
                                    return r;
                                }),
                                (v.clear = function (t) {
                                    var e = this.getChildren(!1, !0, !0),
                                        i = e.length;
                                    for (this._time = this._totalTime = 0; --i > -1; ) e[i]._enabled(!1, !1);
                                    return !1 !== t && (this._labels = {}), this._uncache(!0);
                                }),
                                (v.invalidate = function () {
                                    for (var e = this._first; e; ) e.invalidate(), (e = e._next);
                                    return t.prototype.invalidate.call(this);
                                }),
                                (v._enabled = function (t, i) {
                                    if (t === this._gc) for (var n = this._first; n; ) n._enabled(t, !0), (n = n._next);
                                    return e.prototype._enabled.call(this, t, i);
                                }),
                                (v.totalTime = function (e, i, n) {
                                    this._forcingPlayhead = !0;
                                    var r = t.prototype.totalTime.apply(this, arguments);
                                    return (this._forcingPlayhead = !1), r;
                                }),
                                (v.duration = function (t) {
                                    return arguments.length ? (0 !== this.duration() && 0 !== t && this.timeScale(this._duration / t), this) : (this._dirty && this.totalDuration(), this._duration);
                                }),
                                (v.totalDuration = function (t) {
                                    if (!arguments.length) {
                                        if (this._dirty) {
                                            for (var e, i, n = 0, r = this._last, o = 999999999999; r; )
                                                (e = r._prev),
                                                    r._dirty && r.totalDuration(),
                                                    r._startTime > o && this._sortChildren && !r._paused && !this._calculatingDuration
                                                        ? ((this._calculatingDuration = 1), this.add(r, r._startTime - r._delay), (this._calculatingDuration = 0))
                                                        : (o = r._startTime),
                                                    r._startTime < 0 &&
                                                        !r._paused &&
                                                        ((n -= r._startTime),
                                                        this._timeline.smoothChildTiming &&
                                                            ((this._startTime += r._startTime / this._timeScale), (this._time -= r._startTime), (this._totalTime -= r._startTime), (this._rawPrevTime -= r._startTime)),
                                                        this.shiftChildren(-r._startTime, !1, -9999999999),
                                                        (o = 0)),
                                                    (i = r._startTime + r._totalDuration / r._timeScale),
                                                    i > n && (n = i),
                                                    (r = e);
                                            (this._duration = this._totalDuration = n), (this._dirty = !1);
                                        }
                                        return this._totalDuration;
                                    }
                                    return t && this.totalDuration() ? this.timeScale(this._totalDuration / t) : this;
                                }),
                                (v.paused = function (e) {
                                    if (!e) for (var i = this._first, n = this._time; i; ) i._startTime === n && "isPause" === i.data && (i._rawPrevTime = 0), (i = i._next);
                                    return t.prototype.paused.apply(this, arguments);
                                }),
                                (v.usesFrames = function () {
                                    for (var e = this._timeline; e._timeline; ) e = e._timeline;
                                    return e === t._rootFramesTimeline;
                                }),
                                (v.rawTime = function (t) {
                                    return t && (this._paused || (this._repeat && this.time() > 0 && this.totalProgress() < 1))
                                        ? this._totalTime % (this._duration + this._repeatDelay)
                                        : this._paused
                                        ? this._totalTime
                                        : (this._timeline.rawTime(t) - this._startTime) * this._timeScale;
                                }),
                                n
                            );
                        },
                        !0
                    ),
                    o._gsDefine(
                        "TimelineMax",
                        ["TimelineLite", "TweenLite", "easing.Ease"],
                        function (t, e, i) {
                            var n = function (e) {
                                    t.call(this, e), (this._repeat = this.vars.repeat || 0), (this._repeatDelay = this.vars.repeatDelay || 0), (this._cycle = 0), (this._yoyo = !0 === this.vars.yoyo), (this._dirty = !0);
                                },
                                r = e._internals,
                                a = r.lazyTweens,
                                s = r.lazyRender,
                                l = o._gsDefine.globals,
                                c = new i(null, null, 1, 0),
                                u = (n.prototype = new t());
                            return (
                                (u.constructor = n),
                                (u.kill()._gc = !1),
                                (n.version = "1.20.3"),
                                (u.invalidate = function () {
                                    return (this._yoyo = !0 === this.vars.yoyo), (this._repeat = this.vars.repeat || 0), (this._repeatDelay = this.vars.repeatDelay || 0), this._uncache(!0), t.prototype.invalidate.call(this);
                                }),
                                (u.addCallback = function (t, i, n, r) {
                                    return this.add(e.delayedCall(0, t, n, r), i);
                                }),
                                (u.removeCallback = function (t, e) {
                                    if (t)
                                        if (null == e) this._kill(null, t);
                                        else for (var i = this.getTweensOf(t, !1), n = i.length, r = this._parseTimeOrLabel(e); --n > -1; ) i[n]._startTime === r && i[n]._enabled(!1, !1);
                                    return this;
                                }),
                                (u.removePause = function (e) {
                                    return this.removeCallback(t._internals.pauseCallback, e);
                                }),
                                (u.tweenTo = function (t, i) {
                                    i = i || {};
                                    var n,
                                        r,
                                        o,
                                        a = { ease: c, useFrames: this.usesFrames(), immediateRender: !1 },
                                        s = (i.repeat && l.TweenMax) || e;
                                    for (r in i) a[r] = i[r];
                                    return (
                                        (a.time = this._parseTimeOrLabel(t)),
                                        (n = Math.abs(Number(a.time) - this._time) / this._timeScale || 0.001),
                                        (o = new s(this, n, a)),
                                        (a.onStart = function () {
                                            o.target.paused(!0),
                                                o.vars.time !== o.target.time() && n === o.duration() && o.duration(Math.abs(o.vars.time - o.target.time()) / o.target._timeScale),
                                                i.onStart && i.onStart.apply(i.onStartScope || i.callbackScope || o, i.onStartParams || []);
                                        }),
                                        o
                                    );
                                }),
                                (u.tweenFromTo = function (t, e, i) {
                                    (i = i || {}), (t = this._parseTimeOrLabel(t)), (i.startAt = { onComplete: this.seek, onCompleteParams: [t], callbackScope: this }), (i.immediateRender = !1 !== i.immediateRender);
                                    var n = this.tweenTo(e, i);
                                    return n.duration(Math.abs(n.vars.time - t) / this._timeScale || 0.001);
                                }),
                                (u.render = function (t, e, i) {
                                    this._gc && this._enabled(!0, !1);
                                    var n,
                                        r,
                                        o,
                                        l,
                                        c,
                                        u,
                                        h,
                                        d,
                                        p = this._time,
                                        f = this._dirty ? this.totalDuration() : this._totalDuration,
                                        m = this._duration,
                                        v = this._totalTime,
                                        g = this._startTime,
                                        y = this._timeScale,
                                        _ = this._rawPrevTime,
                                        b = this._paused,
                                        x = this._cycle;
                                    if ((p !== this._time && (t += this._time - p), t >= f - 1e-7 && t >= 0))
                                        this._locked || ((this._totalTime = f), (this._cycle = this._repeat)),
                                            this._reversed ||
                                                this._hasPausedChild() ||
                                                ((r = !0),
                                                (l = "onComplete"),
                                                (c = !!this._timeline.autoRemoveChildren),
                                                0 === this._duration && ((t <= 0 && t >= -1e-7) || _ < 0 || 1e-10 === _) && _ !== t && this._first && ((c = !0), _ > 1e-10 && (l = "onReverseComplete"))),
                                            (this._rawPrevTime = this._duration || !e || t || this._rawPrevTime === t ? t : 1e-10),
                                            this._yoyo && 0 != (1 & this._cycle) ? (this._time = t = 0) : ((this._time = m), (t = m + 1e-4));
                                    else if (t < 1e-7)
                                        if (
                                            (this._locked || (this._totalTime = this._cycle = 0),
                                            (this._time = 0),
                                            (0 !== p || (0 === m && 1e-10 !== _ && (_ > 0 || (t < 0 && _ >= 0)) && !this._locked)) && ((l = "onReverseComplete"), (r = this._reversed)),
                                            t < 0)
                                        )
                                            (this._active = !1), this._timeline.autoRemoveChildren && this._reversed ? ((c = r = !0), (l = "onReverseComplete")) : _ >= 0 && this._first && (c = !0), (this._rawPrevTime = t);
                                        else {
                                            if (((this._rawPrevTime = m || !e || t || this._rawPrevTime === t ? t : 1e-10), 0 === t && r)) for (n = this._first; n && 0 === n._startTime; ) n._duration || (r = !1), (n = n._next);
                                            (t = 0), this._initted || (c = !0);
                                        }
                                    else if (
                                        (0 === m && _ < 0 && (c = !0),
                                        (this._time = this._rawPrevTime = t),
                                        this._locked ||
                                            ((this._totalTime = t),
                                            0 !== this._repeat &&
                                                ((u = m + this._repeatDelay),
                                                (this._cycle = (this._totalTime / u) >> 0),
                                                0 !== this._cycle && this._cycle === this._totalTime / u && v <= t && this._cycle--,
                                                (this._time = this._totalTime - this._cycle * u),
                                                this._yoyo && 0 != (1 & this._cycle) && (this._time = m - this._time),
                                                this._time > m ? ((this._time = m), (t = m + 1e-4)) : this._time < 0 ? (this._time = t = 0) : (t = this._time))),
                                        this._hasPause && !this._forcingPlayhead && !e)
                                    ) {
                                        if ((t = this._time) >= p || (this._repeat && x !== this._cycle))
                                            for (n = this._first; n && n._startTime <= t && !h; ) n._duration || "isPause" !== n.data || n.ratio || (0 === n._startTime && 0 === this._rawPrevTime) || (h = n), (n = n._next);
                                        else for (n = this._last; n && n._startTime >= t && !h; ) n._duration || ("isPause" === n.data && n._rawPrevTime > 0 && (h = n)), (n = n._prev);
                                        h && h._startTime < m && ((this._time = t = h._startTime), (this._totalTime = t + this._cycle * (this._totalDuration + this._repeatDelay)));
                                    }
                                    if (this._cycle !== x && !this._locked) {
                                        var w = this._yoyo && 0 != (1 & x),
                                            T = w === (this._yoyo && 0 != (1 & this._cycle)),
                                            E = this._totalTime,
                                            M = this._cycle,
                                            S = this._rawPrevTime,
                                            A = this._time;
                                        if (
                                            ((this._totalTime = x * m),
                                            this._cycle < x ? (w = !w) : (this._totalTime += m),
                                            (this._time = p),
                                            (this._rawPrevTime = 0 === m ? _ - 1e-4 : _),
                                            (this._cycle = x),
                                            (this._locked = !0),
                                            (p = w ? 0 : m),
                                            this.render(p, e, 0 === m),
                                            e || this._gc || (this.vars.onRepeat && ((this._cycle = M), (this._locked = !1), this._callback("onRepeat"))),
                                            p !== this._time)
                                        )
                                            return;
                                        if ((T && ((this._cycle = x), (this._locked = !0), (p = w ? m + 1e-4 : -1e-4), this.render(p, !0, !1)), (this._locked = !1), this._paused && !b)) return;
                                        (this._time = A), (this._totalTime = E), (this._cycle = M), (this._rawPrevTime = S);
                                    }
                                    if (!((this._time !== p && this._first) || i || c || h)) return void (v !== this._totalTime && this._onUpdate && (e || this._callback("onUpdate")));
                                    if (
                                        (this._initted || (this._initted = !0),
                                        this._active || (!this._paused && this._totalTime !== v && t > 0 && (this._active = !0)),
                                        0 === v && this.vars.onStart && ((0 === this._totalTime && this._totalDuration) || e || this._callback("onStart")),
                                        (d = this._time) >= p)
                                    )
                                        for (n = this._first; n && ((o = n._next), d === this._time && (!this._paused || b)); )
                                            (n._active || (n._startTime <= this._time && !n._paused && !n._gc)) &&
                                                (h === n && this.pause(),
                                                n._reversed ? n.render((n._dirty ? n.totalDuration() : n._totalDuration) - (t - n._startTime) * n._timeScale, e, i) : n.render((t - n._startTime) * n._timeScale, e, i)),
                                                (n = o);
                                    else
                                        for (n = this._last; n && ((o = n._prev), d === this._time && (!this._paused || b)); ) {
                                            if (n._active || (n._startTime <= p && !n._paused && !n._gc)) {
                                                if (h === n) {
                                                    for (h = n._prev; h && h.endTime() > this._time; ) h.render(h._reversed ? h.totalDuration() - (t - h._startTime) * h._timeScale : (t - h._startTime) * h._timeScale, e, i), (h = h._prev);
                                                    (h = null), this.pause();
                                                }
                                                n._reversed ? n.render((n._dirty ? n.totalDuration() : n._totalDuration) - (t - n._startTime) * n._timeScale, e, i) : n.render((t - n._startTime) * n._timeScale, e, i);
                                            }
                                            n = o;
                                        }
                                    this._onUpdate && (e || (a.length && s(), this._callback("onUpdate"))),
                                        l &&
                                            (this._locked ||
                                                this._gc ||
                                                (g !== this._startTime && y === this._timeScale) ||
                                                ((0 === this._time || f >= this.totalDuration()) &&
                                                    (r && (a.length && s(), this._timeline.autoRemoveChildren && this._enabled(!1, !1), (this._active = !1)), !e && this.vars[l] && this._callback(l))));
                                }),
                                (u.getActive = function (t, e, i) {
                                    null == t && (t = !0), null == e && (e = !0), null == i && (i = !1);
                                    var n,
                                        r,
                                        o = [],
                                        a = this.getChildren(t, e, i),
                                        s = 0,
                                        l = a.length;
                                    for (n = 0; n < l; n++) (r = a[n]), r.isActive() && (o[s++] = r);
                                    return o;
                                }),
                                (u.getLabelAfter = function (t) {
                                    t || (0 !== t && (t = this._time));
                                    var e,
                                        i = this.getLabelsArray(),
                                        n = i.length;
                                    for (e = 0; e < n; e++) if (i[e].time > t) return i[e].name;
                                    return null;
                                }),
                                (u.getLabelBefore = function (t) {
                                    null == t && (t = this._time);
                                    for (var e = this.getLabelsArray(), i = e.length; --i > -1; ) if (e[i].time < t) return e[i].name;
                                    return null;
                                }),
                                (u.getLabelsArray = function () {
                                    var t,
                                        e = [],
                                        i = 0;
                                    for (t in this._labels) e[i++] = { time: this._labels[t], name: t };
                                    return (
                                        e.sort(function (t, e) {
                                            return t.time - e.time;
                                        }),
                                        e
                                    );
                                }),
                                (u.invalidate = function () {
                                    return (this._locked = !1), t.prototype.invalidate.call(this);
                                }),
                                (u.progress = function (t, e) {
                                    return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 != (1 & this._cycle) ? 1 - t : t) + this._cycle * (this._duration + this._repeatDelay), e) : this._time / this.duration() || 0;
                                }),
                                (u.totalProgress = function (t, e) {
                                    return arguments.length ? this.totalTime(this.totalDuration() * t, e) : this._totalTime / this.totalDuration() || 0;
                                }),
                                (u.totalDuration = function (e) {
                                    return arguments.length
                                        ? -1 !== this._repeat && e
                                            ? this.timeScale(this.totalDuration() / e)
                                            : this
                                        : (this._dirty && (t.prototype.totalDuration.call(this), (this._totalDuration = -1 === this._repeat ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat)),
                                          this._totalDuration);
                                }),
                                (u.time = function (t, e) {
                                    return arguments.length
                                        ? (this._dirty && this.totalDuration(),
                                          t > this._duration && (t = this._duration),
                                          this._yoyo && 0 != (1 & this._cycle)
                                              ? (t = this._duration - t + this._cycle * (this._duration + this._repeatDelay))
                                              : 0 !== this._repeat && (t += this._cycle * (this._duration + this._repeatDelay)),
                                          this.totalTime(t, e))
                                        : this._time;
                                }),
                                (u.repeat = function (t) {
                                    return arguments.length ? ((this._repeat = t), this._uncache(!0)) : this._repeat;
                                }),
                                (u.repeatDelay = function (t) {
                                    return arguments.length ? ((this._repeatDelay = t), this._uncache(!0)) : this._repeatDelay;
                                }),
                                (u.yoyo = function (t) {
                                    return arguments.length ? ((this._yoyo = t), this) : this._yoyo;
                                }),
                                (u.currentLabel = function (t) {
                                    return arguments.length ? this.seek(t, !0) : this.getLabelBefore(this._time + 1e-8);
                                }),
                                n
                            );
                        },
                        !0
                    ),
                    (function () {
                        var t = 180 / Math.PI,
                            e = [],
                            i = [],
                            n = [],
                            r = {},
                            a = o._gsDefine.globals,
                            s = function (t, e, i, n) {
                                i === n && (i = n - (n - e) / 1e6), t === e && (e = t + (i - t) / 1e6), (this.a = t), (this.b = e), (this.c = i), (this.d = n), (this.da = n - t), (this.ca = i - t), (this.ba = e - t);
                            },
                            l = function (t, e, i, n) {
                                var r = { a: t },
                                    o = {},
                                    a = {},
                                    s = { c: n },
                                    l = (t + e) / 2,
                                    c = (e + i) / 2,
                                    u = (i + n) / 2,
                                    h = (l + c) / 2,
                                    d = (c + u) / 2,
                                    p = (d - h) / 8;
                                return (r.b = l + (t - l) / 4), (o.b = h + p), (r.c = o.a = (r.b + o.b) / 2), (o.c = a.a = (h + d) / 2), (a.b = d - p), (s.b = u + (n - u) / 4), (a.c = s.a = (a.b + s.b) / 2), [r, o, a, s];
                            },
                            c = function (t, r, o, a, s) {
                                var c,
                                    u,
                                    h,
                                    d,
                                    p,
                                    f,
                                    m,
                                    v,
                                    g,
                                    y,
                                    _,
                                    b,
                                    x,
                                    w = t.length - 1,
                                    T = 0,
                                    E = t[0].a;
                                for (c = 0; c < w; c++)
                                    (p = t[T]),
                                        (u = p.a),
                                        (h = p.d),
                                        (d = t[T + 1].d),
                                        s
                                            ? ((_ = e[c]),
                                              (b = i[c]),
                                              (x = ((b + _) * r * 0.25) / (a ? 0.5 : n[c] || 0.5)),
                                              (f = h - (h - u) * (a ? 0.5 * r : 0 !== _ ? x / _ : 0)),
                                              (m = h + (d - h) * (a ? 0.5 * r : 0 !== b ? x / b : 0)),
                                              (v = h - (f + (((m - f) * ((3 * _) / (_ + b) + 0.5)) / 4 || 0))))
                                            : ((f = h - (h - u) * r * 0.5), (m = h + (d - h) * r * 0.5), (v = h - (f + m) / 2)),
                                        (f += v),
                                        (m += v),
                                        (p.c = g = f),
                                        (p.b = 0 !== c ? E : (E = p.a + 0.6 * (p.c - p.a))),
                                        (p.da = h - u),
                                        (p.ca = g - u),
                                        (p.ba = E - u),
                                        o ? ((y = l(u, E, g, h)), t.splice(T, 1, y[0], y[1], y[2], y[3]), (T += 4)) : T++,
                                        (E = m);
                                (p = t[T]), (p.b = E), (p.c = E + 0.4 * (p.d - E)), (p.da = p.d - p.a), (p.ca = p.c - p.a), (p.ba = E - p.a), o && ((y = l(p.a, E, p.c, p.d)), t.splice(T, 1, y[0], y[1], y[2], y[3]));
                            },
                            u = function (t, n, r, o) {
                                var a,
                                    l,
                                    c,
                                    u,
                                    h,
                                    d,
                                    p = [];
                                if (o) for (t = [o].concat(t), l = t.length; --l > -1; ) "string" == typeof (d = t[l][n]) && "=" === d.charAt(1) && (t[l][n] = o[n] + Number(d.charAt(0) + d.substr(2)));
                                if ((a = t.length - 2) < 0) return (p[0] = new s(t[0][n], 0, 0, t[0][n])), p;
                                for (l = 0; l < a; l++) (c = t[l][n]), (u = t[l + 1][n]), (p[l] = new s(c, 0, 0, u)), r && ((h = t[l + 2][n]), (e[l] = (e[l] || 0) + (u - c) * (u - c)), (i[l] = (i[l] || 0) + (h - u) * (h - u)));
                                return (p[l] = new s(t[l][n], 0, 0, t[l + 1][n])), p;
                            },
                            h = function (t, o, a, s, l, h) {
                                var d,
                                    p,
                                    f,
                                    m,
                                    v,
                                    g,
                                    y,
                                    _,
                                    b = {},
                                    x = [],
                                    w = h || t[0];
                                (l =
                                    "string" == typeof l
                                        ? "," + l + ","
                                        : ",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,"),
                                    null == o && (o = 1);
                                for (p in t[0]) x.push(p);
                                if (t.length > 1) {
                                    for (_ = t[t.length - 1], y = !0, d = x.length; --d > -1; )
                                        if (((p = x[d]), Math.abs(w[p] - _[p]) > 0.05)) {
                                            y = !1;
                                            break;
                                        }
                                    y && ((t = t.concat()), h && t.unshift(h), t.push(t[1]), (h = t[t.length - 3]));
                                }
                                for (e.length = i.length = n.length = 0, d = x.length; --d > -1; ) (p = x[d]), (r[p] = -1 !== l.indexOf("," + p + ",")), (b[p] = u(t, p, r[p], h));
                                for (d = e.length; --d > -1; ) (e[d] = Math.sqrt(e[d])), (i[d] = Math.sqrt(i[d]));
                                if (!s) {
                                    for (d = x.length; --d > -1; ) if (r[p]) for (f = b[x[d]], g = f.length - 1, m = 0; m < g; m++) (v = f[m + 1].da / i[m] + f[m].da / e[m] || 0), (n[m] = (n[m] || 0) + v * v);
                                    for (d = n.length; --d > -1; ) n[d] = Math.sqrt(n[d]);
                                }
                                for (d = x.length, m = a ? 4 : 1; --d > -1; ) (p = x[d]), (f = b[p]), c(f, o, a, s, r[p]), y && (f.splice(0, m), f.splice(f.length - m, m));
                                return b;
                            },
                            d = function (t, e, i) {
                                e = e || "soft";
                                var n,
                                    r,
                                    o,
                                    a,
                                    l,
                                    c,
                                    u,
                                    h,
                                    d,
                                    p,
                                    f,
                                    m = {},
                                    v = "cubic" === e ? 3 : 2,
                                    g = "soft" === e,
                                    y = [];
                                if ((g && i && (t = [i].concat(t)), null == t || t.length < v + 1)) throw "invalid Bezier data";
                                for (d in t[0]) y.push(d);
                                for (c = y.length; --c > -1; ) {
                                    for (d = y[c], m[d] = l = [], p = 0, h = t.length, u = 0; u < h; u++)
                                        (n = null == i ? t[u][d] : "string" == typeof (f = t[u][d]) && "=" === f.charAt(1) ? i[d] + Number(f.charAt(0) + f.substr(2)) : Number(f)),
                                            g && u > 1 && u < h - 1 && (l[p++] = (n + l[p - 2]) / 2),
                                            (l[p++] = n);
                                    for (h = p - v + 1, p = 0, u = 0; u < h; u += v)
                                        (n = l[u]), (r = l[u + 1]), (o = l[u + 2]), (a = 2 === v ? 0 : l[u + 3]), (l[p++] = f = 3 === v ? new s(n, r, o, a) : new s(n, (2 * r + n) / 3, (2 * r + o) / 3, o));
                                    l.length = p;
                                }
                                return m;
                            },
                            p = function (t, e, i) {
                                for (var n, r, o, a, s, l, c, u, h, d, p, f = 1 / i, m = t.length; --m > -1; )
                                    for (d = t[m], o = d.a, a = d.d - o, s = d.c - o, l = d.b - o, n = r = 0, u = 1; u <= i; u++)
                                        (c = f * u), (h = 1 - c), (n = r - (r = (c * c * a + 3 * h * (c * s + h * l)) * c)), (p = m * i + u - 1), (e[p] = (e[p] || 0) + n * n);
                            },
                            f = function (t, e) {
                                e = e >> 0 || 6;
                                var i,
                                    n,
                                    r,
                                    o,
                                    a = [],
                                    s = [],
                                    l = 0,
                                    c = 0,
                                    u = e - 1,
                                    h = [],
                                    d = [];
                                for (i in t) p(t[i], a, e);
                                for (r = a.length, n = 0; n < r; n++) (l += Math.sqrt(a[n])), (o = n % e), (d[o] = l), o === u && ((c += l), (o = (n / e) >> 0), (h[o] = d), (s[o] = c), (l = 0), (d = []));
                                return { length: c, lengths: s, segments: h };
                            },
                            m = o._gsDefine.plugin({
                                propName: "bezier",
                                priority: -1,
                                version: "1.3.8",
                                API: 2,
                                global: !0,
                                init: function (t, e, i) {
                                    (this._target = t), e instanceof Array && (e = { values: e }), (this._func = {}), (this._mod = {}), (this._props = []), (this._timeRes = null == e.timeResolution ? 6 : parseInt(e.timeResolution, 10));
                                    var n,
                                        r,
                                        o,
                                        a,
                                        s,
                                        l = e.values || [],
                                        c = {},
                                        u = l[0],
                                        p = e.autoRotate || i.vars.orientToBezier;
                                    this._autoRotate = p ? (p instanceof Array ? p : [["x", "y", "rotation", !0 === p ? 0 : Number(p) || 0]]) : null;
                                    for (n in u) this._props.push(n);
                                    for (o = this._props.length; --o > -1; )
                                        (n = this._props[o]),
                                            this._overwriteProps.push(n),
                                            (r = this._func[n] = "function" == typeof t[n]),
                                            (c[n] = r ? t[n.indexOf("set") || "function" != typeof t["get" + n.substr(3)] ? n : "get" + n.substr(3)]() : parseFloat(t[n])),
                                            s || (c[n] !== l[0][n] && (s = c));
                                    if (
                                        ((this._beziers = "cubic" !== e.type && "quadratic" !== e.type && "soft" !== e.type ? h(l, isNaN(e.curviness) ? 1 : e.curviness, !1, "thruBasic" === e.type, e.correlate, s) : d(l, e.type, c)),
                                        (this._segCount = this._beziers[n].length),
                                        this._timeRes)
                                    ) {
                                        var m = f(this._beziers, this._timeRes);
                                        (this._length = m.length),
                                            (this._lengths = m.lengths),
                                            (this._segments = m.segments),
                                            (this._l1 = this._li = this._s1 = this._si = 0),
                                            (this._l2 = this._lengths[0]),
                                            (this._curSeg = this._segments[0]),
                                            (this._s2 = this._curSeg[0]),
                                            (this._prec = 1 / this._curSeg.length);
                                    }
                                    if ((p = this._autoRotate))
                                        for (this._initialRotations = [], p[0] instanceof Array || (this._autoRotate = p = [p]), o = p.length; --o > -1; ) {
                                            for (a = 0; a < 3; a++) (n = p[o][a]), (this._func[n] = "function" == typeof t[n] && t[n.indexOf("set") || "function" != typeof t["get" + n.substr(3)] ? n : "get" + n.substr(3)]);
                                            (n = p[o][2]), (this._initialRotations[o] = (this._func[n] ? this._func[n].call(this._target) : this._target[n]) || 0), this._overwriteProps.push(n);
                                        }
                                    return (this._startRatio = i.vars.runBackwards ? 1 : 0), !0;
                                },
                                set: function (e) {
                                    var i,
                                        n,
                                        r,
                                        o,
                                        a,
                                        s,
                                        l,
                                        c,
                                        u,
                                        h,
                                        d = this._segCount,
                                        p = this._func,
                                        f = this._target,
                                        m = e !== this._startRatio;
                                    if (this._timeRes) {
                                        if (((u = this._lengths), (h = this._curSeg), (e *= this._length), (r = this._li), e > this._l2 && r < d - 1)) {
                                            for (c = d - 1; r < c && (this._l2 = u[++r]) <= e; );
                                            (this._l1 = u[r - 1]), (this._li = r), (this._curSeg = h = this._segments[r]), (this._s2 = h[(this._s1 = this._si = 0)]);
                                        } else if (e < this._l1 && r > 0) {
                                            for (; r > 0 && (this._l1 = u[--r]) >= e; );
                                            0 === r && e < this._l1 ? (this._l1 = 0) : r++,
                                                (this._l2 = u[r]),
                                                (this._li = r),
                                                (this._curSeg = h = this._segments[r]),
                                                (this._s1 = h[(this._si = h.length - 1) - 1] || 0),
                                                (this._s2 = h[this._si]);
                                        }
                                        if (((i = r), (e -= this._l1), (r = this._si), e > this._s2 && r < h.length - 1)) {
                                            for (c = h.length - 1; r < c && (this._s2 = h[++r]) <= e; );
                                            (this._s1 = h[r - 1]), (this._si = r);
                                        } else if (e < this._s1 && r > 0) {
                                            for (; r > 0 && (this._s1 = h[--r]) >= e; );
                                            0 === r && e < this._s1 ? (this._s1 = 0) : r++, (this._s2 = h[r]), (this._si = r);
                                        }
                                        s = (r + (e - this._s1) / (this._s2 - this._s1)) * this._prec || 0;
                                    } else (i = e < 0 ? 0 : e >= 1 ? d - 1 : (d * e) >> 0), (s = (e - i * (1 / d)) * d);
                                    for (n = 1 - s, r = this._props.length; --r > -1; )
                                        (o = this._props[r]), (a = this._beziers[o][i]), (l = (s * s * a.da + 3 * n * (s * a.ca + n * a.ba)) * s + a.a), this._mod[o] && (l = this._mod[o](l, f)), p[o] ? f[o](l) : (f[o] = l);
                                    if (this._autoRotate) {
                                        var v,
                                            g,
                                            y,
                                            _,
                                            b,
                                            x,
                                            w,
                                            T = this._autoRotate;
                                        for (r = T.length; --r > -1; )
                                            (o = T[r][2]),
                                                (x = T[r][3] || 0),
                                                (w = !0 === T[r][4] ? 1 : t),
                                                (a = this._beziers[T[r][0]]),
                                                (v = this._beziers[T[r][1]]),
                                                a &&
                                                    v &&
                                                    ((a = a[i]),
                                                    (v = v[i]),
                                                    (g = a.a + (a.b - a.a) * s),
                                                    (_ = a.b + (a.c - a.b) * s),
                                                    (g += (_ - g) * s),
                                                    (_ += (a.c + (a.d - a.c) * s - _) * s),
                                                    (y = v.a + (v.b - v.a) * s),
                                                    (b = v.b + (v.c - v.b) * s),
                                                    (y += (b - y) * s),
                                                    (b += (v.c + (v.d - v.c) * s - b) * s),
                                                    (l = m ? Math.atan2(b - y, _ - g) * w + x : this._initialRotations[r]),
                                                    this._mod[o] && (l = this._mod[o](l, f)),
                                                    p[o] ? f[o](l) : (f[o] = l));
                                    }
                                },
                            }),
                            v = m.prototype;
                        (m.bezierThrough = h),
                            (m.cubicToQuadratic = l),
                            (m._autoCSS = !0),
                            (m.quadraticToCubic = function (t, e, i) {
                                return new s(t, (2 * e + t) / 3, (2 * e + i) / 3, i);
                            }),
                            (m._cssRegister = function () {
                                var t = a.CSSPlugin;
                                if (t) {
                                    var e = t._internals,
                                        i = e._parseToProxy,
                                        n = e._setPluginRatio,
                                        r = e.CSSPropTween;
                                    e._registerComplexSpecialProp("bezier", {
                                        parser: function (t, e, o, a, s, l) {
                                            e instanceof Array && (e = { values: e }), (l = new m());
                                            var c,
                                                u,
                                                h,
                                                d = e.values,
                                                p = d.length - 1,
                                                f = [],
                                                v = {};
                                            if (p < 0) return s;
                                            for (c = 0; c <= p; c++) (h = i(t, d[c], a, s, l, p !== c)), (f[c] = h.end);
                                            for (u in e) v[u] = e[u];
                                            return (
                                                (v.values = f),
                                                (s = new r(t, "bezier", 0, 0, h.pt, 2)),
                                                (s.data = h),
                                                (s.plugin = l),
                                                (s.setRatio = n),
                                                0 === v.autoRotate && (v.autoRotate = !0),
                                                !v.autoRotate ||
                                                    v.autoRotate instanceof Array ||
                                                    ((c = !0 === v.autoRotate ? 0 : Number(v.autoRotate)), (v.autoRotate = null != h.end.left ? [["left", "top", "rotation", c, !1]] : null != h.end.x && [["x", "y", "rotation", c, !1]])),
                                                v.autoRotate && (a._transform || a._enableTransforms(!1), (h.autoRotate = a._target._gsTransform), (h.proxy.rotation = h.autoRotate.rotation || 0), a._overwriteProps.push("rotation")),
                                                l._onInitTween(h.proxy, v, a._tween),
                                                s
                                            );
                                        },
                                    });
                                }
                            }),
                            (v._mod = function (t) {
                                for (var e, i = this._overwriteProps, n = i.length; --n > -1; ) (e = t[i[n]]) && "function" == typeof e && (this._mod[i[n]] = e);
                            }),
                            (v._kill = function (t) {
                                var e,
                                    i,
                                    n = this._props;
                                for (e in this._beziers) if (e in t) for (delete this._beziers[e], delete this._func[e], i = n.length; --i > -1; ) n[i] === e && n.splice(i, 1);
                                if ((n = this._autoRotate)) for (i = n.length; --i > -1; ) t[n[i][2]] && n.splice(i, 1);
                                return this._super._kill.call(this, t);
                            });
                    })(),
                    o._gsDefine(
                        "plugins.CSSPlugin",
                        ["plugins.TweenPlugin", "TweenLite"],
                        function (t, e) {
                            var i,
                                n,
                                r,
                                a,
                                s = function () {
                                    t.call(this, "css"), (this._overwriteProps.length = 0), (this.setRatio = s.prototype.setRatio);
                                },
                                l = o._gsDefine.globals,
                                c = {},
                                u = (s.prototype = new t("css"));
                            (u.constructor = s),
                                (s.version = "1.20.3"),
                                (s.API = 2),
                                (s.defaultTransformPerspective = 0),
                                (s.defaultSkewType = "compensated"),
                                (s.defaultSmoothOrigin = !0),
                                (u = "px"),
                                (s.suffixMap = { top: u, right: u, bottom: u, left: u, width: u, height: u, fontSize: u, padding: u, margin: u, perspective: u, lineHeight: "" });
                            var h,
                                d,
                                p,
                                f,
                                m,
                                v,
                                g,
                                y,
                                _ = /(?:\-|\.|\b)(\d|\.|e\-)+/g,
                                b = /(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g,
                                x = /(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi,
                                w = /(?![+-]?\d*\.?\d+|[+-]|e[+-]\d+)[^0-9]/g,
                                T = /(?:\d|\-|\+|=|#|\.)*/g,
                                E = /opacity *= *([^)]*)/i,
                                M = /opacity:([^;]*)/i,
                                S = /alpha\(opacity *=.+?\)/i,
                                A = /^(rgb|hsl)/,
                                R = /([A-Z])/g,
                                C = /-([a-z])/gi,
                                P = /(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi,
                                D = function (t, e) {
                                    return e.toUpperCase();
                                },
                                O = /(?:Left|Right|Width)/i,
                                L = /(M11|M12|M21|M22)=[\d\-\.e]+/gi,
                                j = /progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i,
                                k = /,(?=[^\)]*(?:\(|$))/gi,
                                I = /[\s,\(]/i,
                                N = Math.PI / 180,
                                F = 180 / Math.PI,
                                U = {},
                                B = { style: {} },
                                G = o.document || {
                                    createElement: function () {
                                        return B;
                                    },
                                },
                                z = function (t, e) {
                                    return G.createElementNS ? G.createElementNS(e || "http://www.w3.org/1999/xhtml", t) : G.createElement(t);
                                },
                                V = z("div"),
                                H = z("img"),
                                W = (s._internals = { _specialProps: c }),
                                X = (o.navigator || {}).userAgent || "",
                                q = (function () {
                                    var t = X.indexOf("Android"),
                                        e = z("a");
                                    return (
                                        (p = -1 !== X.indexOf("Safari") && -1 === X.indexOf("Chrome") && (-1 === t || parseFloat(X.substr(t + 8, 2)) > 3)),
                                        (m = p && parseFloat(X.substr(X.indexOf("Version/") + 8, 2)) < 6),
                                        (f = -1 !== X.indexOf("Firefox")),
                                        (/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(X) || /Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(X)) && (v = parseFloat(RegExp.$1)),
                                        !!e && ((e.style.cssText = "top:1px;opacity:.55;"), /^0.55/.test(e.style.opacity))
                                    );
                                })(),
                                Y = function (t) {
                                    return E.test("string" == typeof t ? t : (t.currentStyle ? t.currentStyle.filter : t.style.filter) || "") ? parseFloat(RegExp.$1) / 100 : 1;
                                },
                                Z = function (t) {
                                    o.console && console.log(t);
                                },
                                J = "",
                                Q = "",
                                $ = function (t, e) {
                                    e = e || V;
                                    var i,
                                        n,
                                        r = e.style;
                                    if (void 0 !== r[t]) return t;
                                    for (t = t.charAt(0).toUpperCase() + t.substr(1), i = ["O", "Moz", "ms", "Ms", "Webkit"], n = 5; --n > -1 && void 0 === r[i[n] + t]; );
                                    return n >= 0 ? ((Q = 3 === n ? "ms" : i[n]), (J = "-" + Q.toLowerCase() + "-"), Q + t) : null;
                                },
                                K = G.defaultView ? G.defaultView.getComputedStyle : function () {},
                                tt = (s.getStyle = function (t, e, i, n, r) {
                                    var o;
                                    return q || "opacity" !== e
                                        ? (!n && t.style[e] ? (o = t.style[e]) : (i = i || K(t)) ? (o = i[e] || i.getPropertyValue(e) || i.getPropertyValue(e.replace(R, "-$1").toLowerCase())) : t.currentStyle && (o = t.currentStyle[e]),
                                          null == r || (o && "none" !== o && "auto" !== o && "auto auto" !== o) ? o : r)
                                        : Y(t);
                                }),
                                et = (W.convertToPixels = function (t, i, n, r, o) {
                                    if ("px" === r || (!r && "lineHeight" !== i)) return n;
                                    if ("auto" === r || !n) return 0;
                                    var a,
                                        l,
                                        c,
                                        u = O.test(i),
                                        h = t,
                                        d = V.style,
                                        p = n < 0,
                                        f = 1 === n;
                                    if ((p && (n = -n), f && (n *= 100), "lineHeight" !== i || r))
                                        if ("%" === r && -1 !== i.indexOf("border")) a = (n / 100) * (u ? t.clientWidth : t.clientHeight);
                                        else {
                                            if (((d.cssText = "border:0 solid red;position:" + tt(t, "position") + ";line-height:0;"), "%" !== r && h.appendChild && "v" !== r.charAt(0) && "rem" !== r))
                                                d[u ? "borderLeftWidth" : "borderTopWidth"] = n + r;
                                            else {
                                                if (((h = t.parentNode || G.body), -1 !== tt(h, "display").indexOf("flex") && (d.position = "absolute"), (l = h._gsCache), (c = e.ticker.frame), l && u && l.time === c))
                                                    return (l.width * n) / 100;
                                                d[u ? "width" : "height"] = n + r;
                                            }
                                            h.appendChild(V),
                                                (a = parseFloat(V[u ? "offsetWidth" : "offsetHeight"])),
                                                h.removeChild(V),
                                                u && "%" === r && !1 !== s.cacheWidths && ((l = h._gsCache = h._gsCache || {}), (l.time = c), (l.width = (a / n) * 100)),
                                                0 !== a || o || (a = et(t, i, n, r, !0));
                                        }
                                    else (l = K(t).lineHeight), (t.style.lineHeight = n), (a = parseFloat(K(t).lineHeight)), (t.style.lineHeight = l);
                                    return f && (a /= 100), p ? -a : a;
                                }),
                                it = (W.calculateOffset = function (t, e, i) {
                                    if ("absolute" !== tt(t, "position", i)) return 0;
                                    var n = "left" === e ? "Left" : "Top",
                                        r = tt(t, "margin" + n, i);
                                    return t["offset" + n] - (et(t, e, parseFloat(r), r.replace(T, "")) || 0);
                                }),
                                nt = function (t, e) {
                                    var i,
                                        n,
                                        r,
                                        o = {};
                                    if ((e = e || K(t, null)))
                                        if ((i = e.length)) for (; --i > -1; ) (r = e[i]), (-1 !== r.indexOf("-transform") && Pt !== r) || (o[r.replace(C, D)] = e.getPropertyValue(r));
                                        else for (i in e) (-1 !== i.indexOf("Transform") && Ct !== i) || (o[i] = e[i]);
                                    else if ((e = t.currentStyle || t.style)) for (i in e) "string" == typeof i && void 0 === o[i] && (o[i.replace(C, D)] = e[i]);
                                    return (
                                        q || (o.opacity = Y(t)),
                                        (n = Ht(t, e, !1)),
                                        (o.rotation = n.rotation),
                                        (o.skewX = n.skewX),
                                        (o.scaleX = n.scaleX),
                                        (o.scaleY = n.scaleY),
                                        (o.x = n.x),
                                        (o.y = n.y),
                                        Ot && ((o.z = n.z), (o.rotationX = n.rotationX), (o.rotationY = n.rotationY), (o.scaleZ = n.scaleZ)),
                                        o.filters && delete o.filters,
                                        o
                                    );
                                },
                                rt = function (t, e, i, n, r) {
                                    var o,
                                        a,
                                        s,
                                        l = {},
                                        c = t.style;
                                    for (a in i)
                                        "cssText" !== a &&
                                            "length" !== a &&
                                            isNaN(a) &&
                                            (e[a] !== (o = i[a]) || (r && r[a])) &&
                                            -1 === a.indexOf("Origin") &&
                                            (("number" != typeof o && "string" != typeof o) ||
                                                ((l[a] = "auto" !== o || ("left" !== a && "top" !== a) ? (("" !== o && "auto" !== o && "none" !== o) || "string" != typeof e[a] || "" === e[a].replace(w, "") ? o : 0) : it(t, a)),
                                                void 0 !== c[a] && (s = new _t(c, a, c[a], s))));
                                    if (n) for (a in n) "className" !== a && (l[a] = n[a]);
                                    return { difs: l, firstMPT: s };
                                },
                                ot = { width: ["Left", "Right"], height: ["Top", "Bottom"] },
                                at = ["marginLeft", "marginRight", "marginTop", "marginBottom"],
                                st = function (t, e, i) {
                                    if ("svg" === (t.nodeName + "").toLowerCase()) return (i || K(t))[e] || 0;
                                    if (t.getCTM && Gt(t)) return t.getBBox()[e] || 0;
                                    var n = parseFloat("width" === e ? t.offsetWidth : t.offsetHeight),
                                        r = ot[e],
                                        o = r.length;
                                    for (i = i || K(t, null); --o > -1; ) (n -= parseFloat(tt(t, "padding" + r[o], i, !0)) || 0), (n -= parseFloat(tt(t, "border" + r[o] + "Width", i, !0)) || 0);
                                    return n;
                                },
                                lt = function (t, e) {
                                    if ("contain" === t || "auto" === t || "auto auto" === t) return t + " ";
                                    (null != t && "" !== t) || (t = "0 0");
                                    var i,
                                        n = t.split(" "),
                                        r = -1 !== t.indexOf("left") ? "0%" : -1 !== t.indexOf("right") ? "100%" : n[0],
                                        o = -1 !== t.indexOf("top") ? "0%" : -1 !== t.indexOf("bottom") ? "100%" : n[1];
                                    if (n.length > 3 && !e) {
                                        for (n = t.split(", ").join(",").split(","), t = [], i = 0; i < n.length; i++) t.push(lt(n[i]));
                                        return t.join(",");
                                    }
                                    return (
                                        null == o ? (o = "center" === r ? "50%" : "0") : "center" === o && (o = "50%"),
                                        ("center" === r || (isNaN(parseFloat(r)) && -1 === (r + "").indexOf("="))) && (r = "50%"),
                                        (t = r + " " + o + (n.length > 2 ? " " + n[2] : "")),
                                        e &&
                                            ((e.oxp = -1 !== r.indexOf("%")),
                                            (e.oyp = -1 !== o.indexOf("%")),
                                            (e.oxr = "=" === r.charAt(1)),
                                            (e.oyr = "=" === o.charAt(1)),
                                            (e.ox = parseFloat(r.replace(w, ""))),
                                            (e.oy = parseFloat(o.replace(w, ""))),
                                            (e.v = t)),
                                        e || t
                                    );
                                },
                                ct = function (t, e) {
                                    return "function" == typeof t && (t = t(y, g)), "string" == typeof t && "=" === t.charAt(1) ? parseInt(t.charAt(0) + "1", 10) * parseFloat(t.substr(2)) : parseFloat(t) - parseFloat(e) || 0;
                                },
                                ut = function (t, e) {
                                    return "function" == typeof t && (t = t(y, g)), null == t ? e : "string" == typeof t && "=" === t.charAt(1) ? parseInt(t.charAt(0) + "1", 10) * parseFloat(t.substr(2)) + e : parseFloat(t) || 0;
                                },
                                ht = function (t, e, i, n) {
                                    var r, o, a, s, l;
                                    return (
                                        "function" == typeof t && (t = t(y, g)),
                                        null == t
                                            ? (s = e)
                                            : "number" == typeof t
                                            ? (s = t)
                                            : ((r = 360),
                                              (o = t.split("_")),
                                              (l = "=" === t.charAt(1)),
                                              (a = (l ? parseInt(t.charAt(0) + "1", 10) * parseFloat(o[0].substr(2)) : parseFloat(o[0])) * (-1 === t.indexOf("rad") ? 1 : F) - (l ? 0 : e)),
                                              o.length &&
                                                  (n && (n[i] = e + a),
                                                  -1 !== t.indexOf("short") && (a %= r) !== a % (r / 2) && (a = a < 0 ? a + r : a - r),
                                                  -1 !== t.indexOf("_cw") && a < 0 ? (a = ((a + 9999999999 * r) % r) - ((a / r) | 0) * r) : -1 !== t.indexOf("ccw") && a > 0 && (a = ((a - 9999999999 * r) % r) - ((a / r) | 0) * r)),
                                              (s = e + a)),
                                        s < 1e-6 && s > -1e-6 && (s = 0),
                                        s
                                    );
                                },
                                dt = {
                                    aqua: [0, 255, 255],
                                    lime: [0, 255, 0],
                                    silver: [192, 192, 192],
                                    black: [0, 0, 0],
                                    maroon: [128, 0, 0],
                                    teal: [0, 128, 128],
                                    blue: [0, 0, 255],
                                    navy: [0, 0, 128],
                                    white: [255, 255, 255],
                                    fuchsia: [255, 0, 255],
                                    olive: [128, 128, 0],
                                    yellow: [255, 255, 0],
                                    orange: [255, 165, 0],
                                    gray: [128, 128, 128],
                                    purple: [128, 0, 128],
                                    green: [0, 128, 0],
                                    red: [255, 0, 0],
                                    pink: [255, 192, 203],
                                    cyan: [0, 255, 255],
                                    transparent: [255, 255, 255, 0],
                                },
                                pt = function (t, e, i) {
                                    return (t = t < 0 ? t + 1 : t > 1 ? t - 1 : t), (255 * (6 * t < 1 ? e + (i - e) * t * 6 : t < 0.5 ? i : 3 * t < 2 ? e + (i - e) * (2 / 3 - t) * 6 : e) + 0.5) | 0;
                                },
                                ft = (s.parseColor = function (t, e) {
                                    var i, n, r, o, a, s, l, c, u, h, d;
                                    if (t)
                                        if ("number" == typeof t) i = [t >> 16, (t >> 8) & 255, 255 & t];
                                        else {
                                            if (("," === t.charAt(t.length - 1) && (t = t.substr(0, t.length - 1)), dt[t])) i = dt[t];
                                            else if ("#" === t.charAt(0))
                                                4 === t.length && ((n = t.charAt(1)), (r = t.charAt(2)), (o = t.charAt(3)), (t = "#" + n + n + r + r + o + o)), (t = parseInt(t.substr(1), 16)), (i = [t >> 16, (t >> 8) & 255, 255 & t]);
                                            else if ("hsl" === t.substr(0, 3))
                                                if (((i = d = t.match(_)), e)) {
                                                    if (-1 !== t.indexOf("=")) return t.match(b);
                                                } else
                                                    (a = (Number(i[0]) % 360) / 360),
                                                        (s = Number(i[1]) / 100),
                                                        (l = Number(i[2]) / 100),
                                                        (r = l <= 0.5 ? l * (s + 1) : l + s - l * s),
                                                        (n = 2 * l - r),
                                                        i.length > 3 && (i[3] = Number(i[3])),
                                                        (i[0] = pt(a + 1 / 3, n, r)),
                                                        (i[1] = pt(a, n, r)),
                                                        (i[2] = pt(a - 1 / 3, n, r));
                                            else i = t.match(_) || dt.transparent;
                                            (i[0] = Number(i[0])), (i[1] = Number(i[1])), (i[2] = Number(i[2])), i.length > 3 && (i[3] = Number(i[3]));
                                        }
                                    else i = dt.black;
                                    return (
                                        e &&
                                            !d &&
                                            ((n = i[0] / 255),
                                            (r = i[1] / 255),
                                            (o = i[2] / 255),
                                            (c = Math.max(n, r, o)),
                                            (u = Math.min(n, r, o)),
                                            (l = (c + u) / 2),
                                            c === u ? (a = s = 0) : ((h = c - u), (s = l > 0.5 ? h / (2 - c - u) : h / (c + u)), (a = c === n ? (r - o) / h + (r < o ? 6 : 0) : c === r ? (o - n) / h + 2 : (n - r) / h + 4), (a *= 60)),
                                            (i[0] = (a + 0.5) | 0),
                                            (i[1] = (100 * s + 0.5) | 0),
                                            (i[2] = (100 * l + 0.5) | 0)),
                                        i
                                    );
                                }),
                                mt = function (t, e) {
                                    var i,
                                        n,
                                        r,
                                        o = t.match(vt) || [],
                                        a = 0,
                                        s = "";
                                    if (!o.length) return t;
                                    for (i = 0; i < o.length; i++)
                                        (n = o[i]),
                                            (r = t.substr(a, t.indexOf(n, a) - a)),
                                            (a += r.length + n.length),
                                            (n = ft(n, e)),
                                            3 === n.length && n.push(1),
                                            (s += r + (e ? "hsla(" + n[0] + "," + n[1] + "%," + n[2] + "%," + n[3] : "rgba(" + n.join(",")) + ")");
                                    return s + t.substr(a);
                                },
                                vt = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3}){1,2}\\b";
                            for (u in dt) vt += "|" + u + "\\b";
                            (vt = new RegExp(vt + ")", "gi")),
                                (s.colorStringFilter = function (t) {
                                    var e,
                                        i = t[0] + " " + t[1];
                                    vt.test(i) && ((e = -1 !== i.indexOf("hsl(") || -1 !== i.indexOf("hsla(")), (t[0] = mt(t[0], e)), (t[1] = mt(t[1], e))), (vt.lastIndex = 0);
                                }),
                                e.defaultStringFilter || (e.defaultStringFilter = s.colorStringFilter);
                            var gt = function (t, e, i, n) {
                                    if (null == t)
                                        return function (t) {
                                            return t;
                                        };
                                    var r,
                                        o = e ? (t.match(vt) || [""])[0] : "",
                                        a = t.split(o).join("").match(x) || [],
                                        s = t.substr(0, t.indexOf(a[0])),
                                        l = ")" === t.charAt(t.length - 1) ? ")" : "",
                                        c = -1 !== t.indexOf(" ") ? " " : ",",
                                        u = a.length,
                                        h = u > 0 ? a[0].replace(_, "") : "";
                                    return u
                                        ? (r = e
                                              ? function (t) {
                                                    var e, d, p, f;
                                                    if ("number" == typeof t) t += h;
                                                    else if (n && k.test(t)) {
                                                        for (f = t.replace(k, "|").split("|"), p = 0; p < f.length; p++) f[p] = r(f[p]);
                                                        return f.join(",");
                                                    }
                                                    if (((e = (t.match(vt) || [o])[0]), (d = t.split(e).join("").match(x) || []), (p = d.length), u > p--)) for (; ++p < u; ) d[p] = i ? d[((p - 1) / 2) | 0] : a[p];
                                                    return s + d.join(c) + c + e + l + (-1 !== t.indexOf("inset") ? " inset" : "");
                                                }
                                              : function (t) {
                                                    var e, o, d;
                                                    if ("number" == typeof t) t += h;
                                                    else if (n && k.test(t)) {
                                                        for (o = t.replace(k, "|").split("|"), d = 0; d < o.length; d++) o[d] = r(o[d]);
                                                        return o.join(",");
                                                    }
                                                    if (((e = t.match(x) || []), (d = e.length), u > d--)) for (; ++d < u; ) e[d] = i ? e[((d - 1) / 2) | 0] : a[d];
                                                    return s + e.join(c) + l;
                                                })
                                        : function (t) {
                                              return t;
                                          };
                                },
                                yt = function (t) {
                                    return (
                                        (t = t.split(",")),
                                        function (e, i, n, r, o, a, s) {
                                            var l,
                                                c = (i + "").split(" ");
                                            for (s = {}, l = 0; l < 4; l++) s[t[l]] = c[l] = c[l] || c[((l - 1) / 2) >> 0];
                                            return r.parse(e, s, o, a);
                                        }
                                    );
                                },
                                _t =
                                    ((W._setPluginRatio = function (t) {
                                        this.plugin.setRatio(t);
                                        for (var e, i, n, r, o, a = this.data, s = a.proxy, l = a.firstMPT; l; ) (e = s[l.v]), l.r ? (e = Math.round(e)) : e < 1e-6 && e > -1e-6 && (e = 0), (l.t[l.p] = e), (l = l._next);
                                        if ((a.autoRotate && (a.autoRotate.rotation = a.mod ? a.mod(s.rotation, this.t) : s.rotation), 1 === t || 0 === t))
                                            for (l = a.firstMPT, o = 1 === t ? "e" : "b"; l; ) {
                                                if (((i = l.t), i.type)) {
                                                    if (1 === i.type) {
                                                        for (r = i.xs0 + i.s + i.xs1, n = 1; n < i.l; n++) r += i["xn" + n] + i["xs" + (n + 1)];
                                                        i[o] = r;
                                                    }
                                                } else i[o] = i.s + i.xs0;
                                                l = l._next;
                                            }
                                    }),
                                    function (t, e, i, n, r) {
                                        (this.t = t), (this.p = e), (this.v = i), (this.r = r), n && ((n._prev = this), (this._next = n));
                                    }),
                                bt =
                                    ((W._parseToProxy = function (t, e, i, n, r, o) {
                                        var a,
                                            s,
                                            l,
                                            c,
                                            u,
                                            h = n,
                                            d = {},
                                            p = {},
                                            f = i._transform,
                                            m = U;
                                        for (i._transform = null, U = e, n = u = i.parse(t, e, n, r), U = m, o && ((i._transform = f), h && ((h._prev = null), h._prev && (h._prev._next = null))); n && n !== h; ) {
                                            if (n.type <= 1 && ((s = n.p), (p[s] = n.s + n.c), (d[s] = n.s), o || ((c = new _t(n, "s", s, c, n.r)), (n.c = 0)), 1 === n.type))
                                                for (a = n.l; --a > 0; ) (l = "xn" + a), (s = n.p + "_" + l), (p[s] = n.data[l]), (d[s] = n[l]), o || (c = new _t(n, l, s, c, n.rxp[l]));
                                            n = n._next;
                                        }
                                        return { proxy: d, end: p, firstMPT: c, pt: u };
                                    }),
                                    (W.CSSPropTween = function (t, e, n, r, o, s, l, c, u, h, d) {
                                        (this.t = t),
                                            (this.p = e),
                                            (this.s = n),
                                            (this.c = r),
                                            (this.n = l || e),
                                            t instanceof bt || a.push(this.n),
                                            (this.r = c),
                                            (this.type = s || 0),
                                            u && ((this.pr = u), (i = !0)),
                                            (this.b = void 0 === h ? n : h),
                                            (this.e = void 0 === d ? n + r : d),
                                            o && ((this._next = o), (o._prev = this));
                                    })),
                                xt = function (t, e, i, n, r, o) {
                                    var a = new bt(t, e, i, n - i, r, -1, o);
                                    return (a.b = i), (a.e = a.xs0 = n), a;
                                },
                                wt = (s.parseComplex = function (t, e, i, n, r, o, a, l, c, u) {
                                    (i = i || o || ""),
                                        "function" == typeof n && (n = n(y, g)),
                                        (a = new bt(t, e, 0, 0, a, u ? 2 : 1, null, !1, l, i, n)),
                                        (n += ""),
                                        r && vt.test(n + i) && ((n = [i, n]), s.colorStringFilter(n), (i = n[0]), (n = n[1]));
                                    var d,
                                        p,
                                        f,
                                        m,
                                        v,
                                        x,
                                        w,
                                        T,
                                        E,
                                        M,
                                        S,
                                        A,
                                        R,
                                        C = i.split(", ").join(",").split(" "),
                                        P = n.split(", ").join(",").split(" "),
                                        D = C.length,
                                        O = !1 !== h;
                                    for (
                                        (-1 === n.indexOf(",") && -1 === i.indexOf(",")) ||
                                            (-1 !== (n + i).indexOf("rgb") || -1 !== (n + i).indexOf("hsl")
                                                ? ((C = C.join(" ").replace(k, ", ").split(" ")), (P = P.join(" ").replace(k, ", ").split(" ")))
                                                : ((C = C.join(" ").split(",").join(", ").split(" ")), (P = P.join(" ").split(",").join(", ").split(" "))),
                                            (D = C.length)),
                                            D !== P.length && ((C = (o || "").split(" ")), (D = C.length)),
                                            a.plugin = c,
                                            a.setRatio = u,
                                            vt.lastIndex = 0,
                                            d = 0;
                                        d < D;
                                        d++
                                    )
                                        if (((m = C[d]), (v = P[d]), (T = parseFloat(m)) || 0 === T)) a.appendXtra("", T, ct(v, T), v.replace(b, ""), O && -1 !== v.indexOf("px"), !0);
                                        else if (r && vt.test(m))
                                            (A = v.indexOf(")") + 1),
                                                (A = ")" + (A ? v.substr(A) : "")),
                                                (R = -1 !== v.indexOf("hsl") && q),
                                                (M = v),
                                                (m = ft(m, R)),
                                                (v = ft(v, R)),
                                                (E = m.length + v.length > 6),
                                                E && !q && 0 === v[3]
                                                    ? ((a["xs" + a.l] += a.l ? " transparent" : "transparent"), (a.e = a.e.split(P[d]).join("transparent")))
                                                    : (q || (E = !1),
                                                      R
                                                          ? a
                                                                .appendXtra(M.substr(0, M.indexOf("hsl")) + (E ? "hsla(" : "hsl("), m[0], ct(v[0], m[0]), ",", !1, !0)
                                                                .appendXtra("", m[1], ct(v[1], m[1]), "%,", !1)
                                                                .appendXtra("", m[2], ct(v[2], m[2]), E ? "%," : "%" + A, !1)
                                                          : a
                                                                .appendXtra(M.substr(0, M.indexOf("rgb")) + (E ? "rgba(" : "rgb("), m[0], v[0] - m[0], ",", !0, !0)
                                                                .appendXtra("", m[1], v[1] - m[1], ",", !0)
                                                                .appendXtra("", m[2], v[2] - m[2], E ? "," : A, !0),
                                                      E && ((m = m.length < 4 ? 1 : m[3]), a.appendXtra("", m, (v.length < 4 ? 1 : v[3]) - m, A, !1))),
                                                (vt.lastIndex = 0);
                                        else if ((x = m.match(_))) {
                                            if (!(w = v.match(b)) || w.length !== x.length) return a;
                                            for (f = 0, p = 0; p < x.length; p++)
                                                (S = x[p]), (M = m.indexOf(S, f)), a.appendXtra(m.substr(f, M - f), Number(S), ct(w[p], S), "", O && "px" === m.substr(M + S.length, 2), 0 === p), (f = M + S.length);
                                            a["xs" + a.l] += m.substr(f);
                                        } else a["xs" + a.l] += a.l || a["xs" + a.l] ? " " + v : v;
                                    if (-1 !== n.indexOf("=") && a.data) {
                                        for (A = a.xs0 + a.data.s, d = 1; d < a.l; d++) A += a["xs" + d] + a.data["xn" + d];
                                        a.e = A + a["xs" + d];
                                    }
                                    return a.l || ((a.type = -1), (a.xs0 = a.e)), a.xfirst || a;
                                }),
                                Tt = 9;
                            for (u = bt.prototype, u.l = u.pr = 0; --Tt > 0; ) (u["xn" + Tt] = 0), (u["xs" + Tt] = "");
                            (u.xs0 = ""),
                                (u._next = u._prev = u.xfirst = u.data = u.plugin = u.setRatio = u.rxp = null),
                                (u.appendXtra = function (t, e, i, n, r, o) {
                                    var a = this,
                                        s = a.l;
                                    return (
                                        (a["xs" + s] += o && (s || a["xs" + s]) ? " " + t : t || ""),
                                        i || 0 === s || a.plugin
                                            ? (a.l++,
                                              (a.type = a.setRatio ? 2 : 1),
                                              (a["xs" + a.l] = n || ""),
                                              s > 0
                                                  ? ((a.data["xn" + s] = e + i), (a.rxp["xn" + s] = r), (a["xn" + s] = e), a.plugin || ((a.xfirst = new bt(a, "xn" + s, e, i, a.xfirst || a, 0, a.n, r, a.pr)), (a.xfirst.xs0 = 0)), a)
                                                  : ((a.data = { s: e + i }), (a.rxp = {}), (a.s = e), (a.c = i), (a.r = r), a))
                                            : ((a["xs" + s] += e + (n || "")), a)
                                    );
                                });
                            var Et = function (t, e) {
                                    (e = e || {}),
                                        (this.p = e.prefix ? $(t) || t : t),
                                        (c[t] = c[this.p] = this),
                                        (this.format = e.formatter || gt(e.defaultValue, e.color, e.collapsible, e.multi)),
                                        e.parser && (this.parse = e.parser),
                                        (this.clrs = e.color),
                                        (this.multi = e.multi),
                                        (this.keyword = e.keyword),
                                        (this.dflt = e.defaultValue),
                                        (this.pr = e.priority || 0);
                                },
                                Mt = (W._registerComplexSpecialProp = function (t, e, i) {
                                    "object" != typeof e && (e = { parser: i });
                                    var n,
                                        r = t.split(","),
                                        o = e.defaultValue;
                                    for (i = i || [o], n = 0; n < r.length; n++) (e.prefix = 0 === n && e.prefix), (e.defaultValue = i[n] || o), new Et(r[n], e);
                                }),
                                St = (W._registerPluginProp = function (t) {
                                    if (!c[t]) {
                                        var e = t.charAt(0).toUpperCase() + t.substr(1) + "Plugin";
                                        Mt(t, {
                                            parser: function (t, i, n, r, o, a, s) {
                                                var u = l.com.greensock.plugins[e];
                                                return u ? (u._cssRegister(), c[n].parse(t, i, n, r, o, a, s)) : (Z("Error: " + e + " js file not loaded."), o);
                                            },
                                        });
                                    }
                                });
                            (u = Et.prototype),
                                (u.parseComplex = function (t, e, i, n, r, o) {
                                    var a,
                                        s,
                                        l,
                                        c,
                                        u,
                                        h,
                                        d = this.keyword;
                                    if ((this.multi && (k.test(i) || k.test(e) ? ((s = e.replace(k, "|").split("|")), (l = i.replace(k, "|").split("|"))) : d && ((s = [e]), (l = [i]))), l)) {
                                        for (c = l.length > s.length ? l.length : s.length, a = 0; a < c; a++)
                                            (e = s[a] = s[a] || this.dflt),
                                                (i = l[a] = l[a] || this.dflt),
                                                d && ((u = e.indexOf(d)), (h = i.indexOf(d)), u !== h && (-1 === h ? (s[a] = s[a].split(d).join("")) : -1 === u && (s[a] += " " + d)));
                                        (e = s.join(", ")), (i = l.join(", "));
                                    }
                                    return wt(t, this.p, e, i, this.clrs, this.dflt, n, this.pr, r, o);
                                }),
                                (u.parse = function (t, e, i, n, o, a, s) {
                                    return this.parseComplex(t.style, this.format(tt(t, this.p, r, !1, this.dflt)), this.format(e), o, a);
                                }),
                                (s.registerSpecialProp = function (t, e, i) {
                                    Mt(t, {
                                        parser: function (t, n, r, o, a, s, l) {
                                            var c = new bt(t, r, 0, 0, a, 2, r, !1, i);
                                            return (c.plugin = s), (c.setRatio = e(t, n, o._tween, r)), c;
                                        },
                                        priority: i,
                                    });
                                }),
                                (s.useSVGTransformAttr = !0);
                            var At,
                                Rt = "scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(","),
                                Ct = $("transform"),
                                Pt = J + "transform",
                                Dt = $("transformOrigin"),
                                Ot = null !== $("perspective"),
                                Lt = (W.Transform = function () {
                                    (this.perspective = parseFloat(s.defaultTransformPerspective) || 0), (this.force3D = !(!1 === s.defaultForce3D || !Ot) && (s.defaultForce3D || "auto"));
                                }),
                                jt = o.SVGElement,
                                kt = function (t, e, i) {
                                    var n,
                                        r = G.createElementNS("http://www.w3.org/2000/svg", t),
                                        o = /([a-z])([A-Z])/g;
                                    for (n in i) r.setAttributeNS(null, n.replace(o, "$1-$2").toLowerCase(), i[n]);
                                    return e.appendChild(r), r;
                                },
                                It = G.documentElement || {},
                                Nt = (function () {
                                    var t,
                                        e,
                                        i,
                                        n = v || (/Android/i.test(X) && !o.chrome);
                                    return (
                                        G.createElementNS &&
                                            !n &&
                                            ((t = kt("svg", It)),
                                            (e = kt("rect", t, { width: 100, height: 50, x: 100 })),
                                            (i = e.getBoundingClientRect().width),
                                            (e.style[Dt] = "50% 50%"),
                                            (e.style[Ct] = "scaleX(0.5)"),
                                            (n = i === e.getBoundingClientRect().width && !(f && Ot)),
                                            It.removeChild(t)),
                                        n
                                    );
                                })(),
                                Ft = function (t, e, i, n, r, o) {
                                    var a,
                                        l,
                                        c,
                                        u,
                                        h,
                                        d,
                                        p,
                                        f,
                                        m,
                                        v,
                                        g,
                                        y,
                                        _,
                                        b,
                                        x = t._gsTransform,
                                        w = Vt(t, !0);
                                    x && ((_ = x.xOrigin), (b = x.yOrigin)),
                                        (!n || (a = n.split(" ")).length < 2) &&
                                            ((p = t.getBBox()),
                                            0 === p.x &&
                                                0 === p.y &&
                                                p.width + p.height === 0 &&
                                                (p = {
                                                    x: parseFloat(t.hasAttribute("x") ? t.getAttribute("x") : t.hasAttribute("cx") ? t.getAttribute("cx") : 0) || 0,
                                                    y: parseFloat(t.hasAttribute("y") ? t.getAttribute("y") : t.hasAttribute("cy") ? t.getAttribute("cy") : 0) || 0,
                                                    width: 0,
                                                    height: 0,
                                                }),
                                            (e = lt(e).split(" ")),
                                            (a = [(-1 !== e[0].indexOf("%") ? (parseFloat(e[0]) / 100) * p.width : parseFloat(e[0])) + p.x, (-1 !== e[1].indexOf("%") ? (parseFloat(e[1]) / 100) * p.height : parseFloat(e[1])) + p.y])),
                                        (i.xOrigin = u = parseFloat(a[0])),
                                        (i.yOrigin = h = parseFloat(a[1])),
                                        n &&
                                            w !== zt &&
                                            ((d = w[0]),
                                            (p = w[1]),
                                            (f = w[2]),
                                            (m = w[3]),
                                            (v = w[4]),
                                            (g = w[5]),
                                            (y = d * m - p * f) && ((l = u * (m / y) + h * (-f / y) + (f * g - m * v) / y), (c = u * (-p / y) + h * (d / y) - (d * g - p * v) / y), (u = i.xOrigin = a[0] = l), (h = i.yOrigin = a[1] = c))),
                                        x &&
                                            (o && ((i.xOffset = x.xOffset), (i.yOffset = x.yOffset), (x = i)),
                                            r || (!1 !== r && !1 !== s.defaultSmoothOrigin) ? ((l = u - _), (c = h - b), (x.xOffset += l * w[0] + c * w[2] - l), (x.yOffset += l * w[1] + c * w[3] - c)) : (x.xOffset = x.yOffset = 0)),
                                        o || t.setAttribute("data-svg-origin", a.join(" "));
                                },
                                Ut = function (t) {
                                    var e,
                                        i = z("svg", (this.ownerSVGElement && this.ownerSVGElement.getAttribute("xmlns")) || "http://www.w3.org/2000/svg"),
                                        n = this.parentNode,
                                        r = this.nextSibling,
                                        o = this.style.cssText;
                                    if ((It.appendChild(i), i.appendChild(this), (this.style.display = "block"), t))
                                        try {
                                            (e = this.getBBox()), (this._originalGetBBox = this.getBBox), (this.getBBox = Ut);
                                        } catch (t) {}
                                    else this._originalGetBBox && (e = this._originalGetBBox());
                                    return r ? n.insertBefore(this, r) : n.appendChild(this), It.removeChild(i), (this.style.cssText = o), e;
                                },
                                Bt = function (t) {
                                    try {
                                        return t.getBBox();
                                    } catch (e) {
                                        return Ut.call(t, !0);
                                    }
                                },
                                Gt = function (t) {
                                    return !(!jt || !t.getCTM || (t.parentNode && !t.ownerSVGElement) || !Bt(t));
                                },
                                zt = [1, 0, 0, 1, 0, 0],
                                Vt = function (t, e) {
                                    var i,
                                        n,
                                        r,
                                        o,
                                        a,
                                        s,
                                        l = t._gsTransform || new Lt(),
                                        c = t.style;
                                    if (
                                        (Ct
                                            ? (n = tt(t, Pt, null, !0))
                                            : t.currentStyle &&
                                              ((n = t.currentStyle.filter.match(L)), (n = n && 4 === n.length ? [n[0].substr(4), Number(n[2].substr(4)), Number(n[1].substr(4)), n[3].substr(4), l.x || 0, l.y || 0].join(",") : "")),
                                        (i = !n || "none" === n || "matrix(1, 0, 0, 1, 0, 0)" === n),
                                        !Ct ||
                                            (!(s = !K(t) || "none" === K(t).display) && t.parentNode) ||
                                            (s && ((o = c.display), (c.display = "block")),
                                            t.parentNode || ((a = 1), It.appendChild(t)),
                                            (n = tt(t, Pt, null, !0)),
                                            (i = !n || "none" === n || "matrix(1, 0, 0, 1, 0, 0)" === n),
                                            o ? (c.display = o) : s && Yt(c, "display"),
                                            a && It.removeChild(t)),
                                        (l.svg || (t.getCTM && Gt(t))) &&
                                            (i && -1 !== (c[Ct] + "").indexOf("matrix") && ((n = c[Ct]), (i = 0)),
                                            (r = t.getAttribute("transform")),
                                            i && r && (-1 !== r.indexOf("matrix") ? ((n = r), (i = 0)) : -1 !== r.indexOf("translate") && ((n = "matrix(1,0,0,1," + r.match(/(?:\-|\b)[\d\-\.e]+\b/gi).join(",") + ")"), (i = 0)))),
                                        i)
                                    )
                                        return zt;
                                    for (r = (n || "").match(_) || [], Tt = r.length; --Tt > -1; ) (o = Number(r[Tt])), (r[Tt] = (a = o - (o |= 0)) ? ((1e5 * a + (a < 0 ? -0.5 : 0.5)) | 0) / 1e5 + o : o);
                                    return e && r.length > 6 ? [r[0], r[1], r[4], r[5], r[12], r[13]] : r;
                                },
                                Ht = (W.getTransform = function (t, i, n, r) {
                                    if (t._gsTransform && n && !r) return t._gsTransform;
                                    var o,
                                        a,
                                        l,
                                        c,
                                        u,
                                        h,
                                        d = n ? t._gsTransform || new Lt() : new Lt(),
                                        p = d.scaleX < 0,
                                        f = Ot ? parseFloat(tt(t, Dt, i, !1, "0 0 0").split(" ")[2]) || d.zOrigin || 0 : 0,
                                        m = parseFloat(s.defaultTransformPerspective) || 0;
                                    if (((d.svg = !(!t.getCTM || !Gt(t))), d.svg && (Ft(t, tt(t, Dt, i, !1, "50% 50%") + "", d, t.getAttribute("data-svg-origin")), (At = s.useSVGTransformAttr || Nt)), (o = Vt(t)) !== zt)) {
                                        if (16 === o.length) {
                                            var v,
                                                g,
                                                y,
                                                _,
                                                b,
                                                x = o[0],
                                                w = o[1],
                                                T = o[2],
                                                E = o[3],
                                                M = o[4],
                                                S = o[5],
                                                A = o[6],
                                                R = o[7],
                                                C = o[8],
                                                P = o[9],
                                                D = o[10],
                                                O = o[12],
                                                L = o[13],
                                                j = o[14],
                                                k = o[11],
                                                I = Math.atan2(A, D);
                                            d.zOrigin && ((j = -d.zOrigin), (O = C * j - o[12]), (L = P * j - o[13]), (j = D * j + d.zOrigin - o[14])),
                                                (d.rotationX = I * F),
                                                I &&
                                                    ((_ = Math.cos(-I)),
                                                    (b = Math.sin(-I)),
                                                    (v = M * _ + C * b),
                                                    (g = S * _ + P * b),
                                                    (y = A * _ + D * b),
                                                    (C = M * -b + C * _),
                                                    (P = S * -b + P * _),
                                                    (D = A * -b + D * _),
                                                    (k = R * -b + k * _),
                                                    (M = v),
                                                    (S = g),
                                                    (A = y)),
                                                (I = Math.atan2(-T, D)),
                                                (d.rotationY = I * F),
                                                I &&
                                                    ((_ = Math.cos(-I)),
                                                    (b = Math.sin(-I)),
                                                    (v = x * _ - C * b),
                                                    (g = w * _ - P * b),
                                                    (y = T * _ - D * b),
                                                    (P = w * b + P * _),
                                                    (D = T * b + D * _),
                                                    (k = E * b + k * _),
                                                    (x = v),
                                                    (w = g),
                                                    (T = y)),
                                                (I = Math.atan2(w, x)),
                                                (d.rotation = I * F),
                                                I &&
                                                    ((_ = Math.cos(I)),
                                                    (b = Math.sin(I)),
                                                    (v = x * _ + w * b),
                                                    (g = M * _ + S * b),
                                                    (y = C * _ + P * b),
                                                    (w = w * _ - x * b),
                                                    (S = S * _ - M * b),
                                                    (P = P * _ - C * b),
                                                    (x = v),
                                                    (M = g),
                                                    (C = y)),
                                                d.rotationX && Math.abs(d.rotationX) + Math.abs(d.rotation) > 359.9 && ((d.rotationX = d.rotation = 0), (d.rotationY = 180 - d.rotationY)),
                                                (I = Math.atan2(M, S)),
                                                (d.scaleX = ((1e5 * Math.sqrt(x * x + w * w + T * T) + 0.5) | 0) / 1e5),
                                                (d.scaleY = ((1e5 * Math.sqrt(S * S + A * A) + 0.5) | 0) / 1e5),
                                                (d.scaleZ = ((1e5 * Math.sqrt(C * C + P * P + D * D) + 0.5) | 0) / 1e5),
                                                (x /= d.scaleX),
                                                (M /= d.scaleY),
                                                (w /= d.scaleX),
                                                (S /= d.scaleY),
                                                Math.abs(I) > 2e-5 ? ((d.skewX = I * F), (M = 0), "simple" !== d.skewType && (d.scaleY *= 1 / Math.cos(I))) : (d.skewX = 0),
                                                (d.perspective = k ? 1 / (k < 0 ? -k : k) : 0),
                                                (d.x = O),
                                                (d.y = L),
                                                (d.z = j),
                                                d.svg && ((d.x -= d.xOrigin - (d.xOrigin * x - d.yOrigin * M)), (d.y -= d.yOrigin - (d.yOrigin * w - d.xOrigin * S)));
                                        } else if (!Ot || r || !o.length || d.x !== o[4] || d.y !== o[5] || (!d.rotationX && !d.rotationY)) {
                                            var N = o.length >= 6,
                                                U = N ? o[0] : 1,
                                                B = o[1] || 0,
                                                G = o[2] || 0,
                                                z = N ? o[3] : 1;
                                            (d.x = o[4] || 0),
                                                (d.y = o[5] || 0),
                                                (l = Math.sqrt(U * U + B * B)),
                                                (c = Math.sqrt(z * z + G * G)),
                                                (u = U || B ? Math.atan2(B, U) * F : d.rotation || 0),
                                                (h = G || z ? Math.atan2(G, z) * F + u : d.skewX || 0),
                                                (d.scaleX = l),
                                                (d.scaleY = c),
                                                (d.rotation = u),
                                                (d.skewX = h),
                                                Ot && ((d.rotationX = d.rotationY = d.z = 0), (d.perspective = m), (d.scaleZ = 1)),
                                                d.svg && ((d.x -= d.xOrigin - (d.xOrigin * U + d.yOrigin * G)), (d.y -= d.yOrigin - (d.xOrigin * B + d.yOrigin * z)));
                                        }
                                        Math.abs(d.skewX) > 90 &&
                                            Math.abs(d.skewX) < 270 &&
                                            (p ? ((d.scaleX *= -1), (d.skewX += d.rotation <= 0 ? 180 : -180), (d.rotation += d.rotation <= 0 ? 180 : -180)) : ((d.scaleY *= -1), (d.skewX += d.skewX <= 0 ? 180 : -180))),
                                            (d.zOrigin = f);
                                        for (a in d) d[a] < 2e-5 && d[a] > -2e-5 && (d[a] = 0);
                                    }
                                    return (
                                        n &&
                                            ((t._gsTransform = d),
                                            d.svg &&
                                                (At && t.style[Ct]
                                                    ? e.delayedCall(0.001, function () {
                                                          Yt(t.style, Ct);
                                                      })
                                                    : !At &&
                                                      t.getAttribute("transform") &&
                                                      e.delayedCall(0.001, function () {
                                                          t.removeAttribute("transform");
                                                      }))),
                                        d
                                    );
                                }),
                                Wt = function (t) {
                                    var e,
                                        i,
                                        n = this.data,
                                        r = -n.rotation * N,
                                        o = r + n.skewX * N,
                                        a = ((Math.cos(r) * n.scaleX * 1e5) | 0) / 1e5,
                                        s = ((Math.sin(r) * n.scaleX * 1e5) | 0) / 1e5,
                                        l = ((Math.sin(o) * -n.scaleY * 1e5) | 0) / 1e5,
                                        c = ((Math.cos(o) * n.scaleY * 1e5) | 0) / 1e5,
                                        u = this.t.style,
                                        h = this.t.currentStyle;
                                    if (h) {
                                        (i = s), (s = -l), (l = -i), (e = h.filter), (u.filter = "");
                                        var d,
                                            p,
                                            f = this.t.offsetWidth,
                                            m = this.t.offsetHeight,
                                            g = "absolute" !== h.position,
                                            y = "progid:DXImageTransform.Microsoft.Matrix(M11=" + a + ", M12=" + s + ", M21=" + l + ", M22=" + c,
                                            _ = n.x + (f * n.xPercent) / 100,
                                            b = n.y + (m * n.yPercent) / 100;
                                        if (
                                            (null != n.ox && ((d = (n.oxp ? f * n.ox * 0.01 : n.ox) - f / 2), (p = (n.oyp ? m * n.oy * 0.01 : n.oy) - m / 2), (_ += d - (d * a + p * s)), (b += p - (d * l + p * c))),
                                            g ? ((d = f / 2), (p = m / 2), (y += ", Dx=" + (d - (d * a + p * s) + _) + ", Dy=" + (p - (d * l + p * c) + b) + ")")) : (y += ", sizingMethod='auto expand')"),
                                            -1 !== e.indexOf("DXImageTransform.Microsoft.Matrix(") ? (u.filter = e.replace(j, y)) : (u.filter = y + " " + e),
                                            (0 !== t && 1 !== t) ||
                                                (1 === a &&
                                                    0 === s &&
                                                    0 === l &&
                                                    1 === c &&
                                                    ((g && -1 === y.indexOf("Dx=0, Dy=0")) || (E.test(e) && 100 !== parseFloat(RegExp.$1)) || (-1 === e.indexOf(e.indexOf("Alpha")) && u.removeAttribute("filter")))),
                                            !g)
                                        ) {
                                            var x,
                                                w,
                                                M,
                                                S = v < 8 ? 1 : -1;
                                            for (
                                                d = n.ieOffsetX || 0,
                                                    p = n.ieOffsetY || 0,
                                                    n.ieOffsetX = Math.round((f - ((a < 0 ? -a : a) * f + (s < 0 ? -s : s) * m)) / 2 + _),
                                                    n.ieOffsetY = Math.round((m - ((c < 0 ? -c : c) * m + (l < 0 ? -l : l) * f)) / 2 + b),
                                                    Tt = 0;
                                                Tt < 4;
                                                Tt++
                                            )
                                                (w = at[Tt]),
                                                    (x = h[w]),
                                                    (i = -1 !== x.indexOf("px") ? parseFloat(x) : et(this.t, w, parseFloat(x), x.replace(T, "")) || 0),
                                                    (M = i !== n[w] ? (Tt < 2 ? -n.ieOffsetX : -n.ieOffsetY) : Tt < 2 ? d - n.ieOffsetX : p - n.ieOffsetY),
                                                    (u[w] = (n[w] = Math.round(i - M * (0 === Tt || 2 === Tt ? 1 : S))) + "px");
                                        }
                                    }
                                },
                                Xt = (W.set3DTransformRatio = W.setTransformRatio = function (t) {
                                    var e,
                                        i,
                                        n,
                                        r,
                                        o,
                                        a,
                                        s,
                                        l,
                                        c,
                                        u,
                                        h,
                                        d,
                                        p,
                                        m,
                                        v,
                                        g,
                                        y,
                                        _,
                                        b,
                                        x,
                                        w,
                                        T,
                                        E,
                                        M = this.data,
                                        S = this.t.style,
                                        A = M.rotation,
                                        R = M.rotationX,
                                        C = M.rotationY,
                                        P = M.scaleX,
                                        D = M.scaleY,
                                        O = M.scaleZ,
                                        L = M.x,
                                        j = M.y,
                                        k = M.z,
                                        I = M.svg,
                                        F = M.perspective,
                                        U = M.force3D,
                                        B = M.skewY,
                                        G = M.skewX;
                                    if (
                                        (B && ((G += B), (A += B)),
                                        ((((1 === t || 0 === t) && "auto" === U && (this.tween._totalTime === this.tween._totalDuration || !this.tween._totalTime)) || !U) && !k && !F && !C && !R && 1 === O) || (At && I) || !Ot)
                                    )
                                        return void (A || G || I
                                            ? ((A *= N),
                                              (T = G * N),
                                              (E = 1e5),
                                              (i = Math.cos(A) * P),
                                              (o = Math.sin(A) * P),
                                              (n = Math.sin(A - T) * -D),
                                              (a = Math.cos(A - T) * D),
                                              T && "simple" === M.skewType && ((e = Math.tan(T - B * N)), (e = Math.sqrt(1 + e * e)), (n *= e), (a *= e), B && ((e = Math.tan(B * N)), (e = Math.sqrt(1 + e * e)), (i *= e), (o *= e))),
                                              I &&
                                                  ((L += M.xOrigin - (M.xOrigin * i + M.yOrigin * n) + M.xOffset),
                                                  (j += M.yOrigin - (M.xOrigin * o + M.yOrigin * a) + M.yOffset),
                                                  At && (M.xPercent || M.yPercent) && ((v = this.t.getBBox()), (L += 0.01 * M.xPercent * v.width), (j += 0.01 * M.yPercent * v.height)),
                                                  (v = 1e-6),
                                                  L < v && L > -v && (L = 0),
                                                  j < v && j > -v && (j = 0)),
                                              (b = ((i * E) | 0) / E + "," + ((o * E) | 0) / E + "," + ((n * E) | 0) / E + "," + ((a * E) | 0) / E + "," + L + "," + j + ")"),
                                              I && At ? this.t.setAttribute("transform", "matrix(" + b) : (S[Ct] = (M.xPercent || M.yPercent ? "translate(" + M.xPercent + "%," + M.yPercent + "%) matrix(" : "matrix(") + b))
                                            : (S[Ct] = (M.xPercent || M.yPercent ? "translate(" + M.xPercent + "%," + M.yPercent + "%) matrix(" : "matrix(") + P + ",0,0," + D + "," + L + "," + j + ")"));
                                    if ((f && ((v = 1e-4), P < v && P > -v && (P = O = 2e-5), D < v && D > -v && (D = O = 2e-5), !F || M.z || M.rotationX || M.rotationY || (F = 0)), A || G))
                                        (A *= N),
                                            (g = i = Math.cos(A)),
                                            (y = o = Math.sin(A)),
                                            G &&
                                                ((A -= G * N),
                                                (g = Math.cos(A)),
                                                (y = Math.sin(A)),
                                                "simple" === M.skewType && ((e = Math.tan((G - B) * N)), (e = Math.sqrt(1 + e * e)), (g *= e), (y *= e), M.skewY && ((e = Math.tan(B * N)), (e = Math.sqrt(1 + e * e)), (i *= e), (o *= e)))),
                                            (n = -y),
                                            (a = g);
                                    else {
                                        if (!(C || R || 1 !== O || F || I))
                                            return void (S[Ct] =
                                                (M.xPercent || M.yPercent ? "translate(" + M.xPercent + "%," + M.yPercent + "%) translate3d(" : "translate3d(") +
                                                L +
                                                "px," +
                                                j +
                                                "px," +
                                                k +
                                                "px)" +
                                                (1 !== P || 1 !== D ? " scale(" + P + "," + D + ")" : ""));
                                        (i = a = 1), (n = o = 0);
                                    }
                                    (u = 1),
                                        (r = s = l = c = h = d = 0),
                                        (p = F ? -1 / F : 0),
                                        (m = M.zOrigin),
                                        (v = 1e-6),
                                        (x = ","),
                                        (w = "0"),
                                        (A = C * N),
                                        A && ((g = Math.cos(A)), (y = Math.sin(A)), (l = -y), (h = p * -y), (r = i * y), (s = o * y), (u = g), (p *= g), (i *= g), (o *= g)),
                                        (A = R * N),
                                        A && ((g = Math.cos(A)), (y = Math.sin(A)), (e = n * g + r * y), (_ = a * g + s * y), (c = u * y), (d = p * y), (r = n * -y + r * g), (s = a * -y + s * g), (u *= g), (p *= g), (n = e), (a = _)),
                                        1 !== O && ((r *= O), (s *= O), (u *= O), (p *= O)),
                                        1 !== D && ((n *= D), (a *= D), (c *= D), (d *= D)),
                                        1 !== P && ((i *= P), (o *= P), (l *= P), (h *= P)),
                                        (m || I) &&
                                            (m && ((L += r * -m), (j += s * -m), (k += u * -m + m)),
                                            I && ((L += M.xOrigin - (M.xOrigin * i + M.yOrigin * n) + M.xOffset), (j += M.yOrigin - (M.xOrigin * o + M.yOrigin * a) + M.yOffset)),
                                            L < v && L > -v && (L = w),
                                            j < v && j > -v && (j = w),
                                            k < v && k > -v && (k = 0)),
                                        (b = M.xPercent || M.yPercent ? "translate(" + M.xPercent + "%," + M.yPercent + "%) matrix3d(" : "matrix3d("),
                                        (b += (i < v && i > -v ? w : i) + x + (o < v && o > -v ? w : o) + x + (l < v && l > -v ? w : l)),
                                        (b += x + (h < v && h > -v ? w : h) + x + (n < v && n > -v ? w : n) + x + (a < v && a > -v ? w : a)),
                                        R || C || 1 !== O
                                            ? ((b += x + (c < v && c > -v ? w : c) + x + (d < v && d > -v ? w : d) + x + (r < v && r > -v ? w : r)),
                                              (b += x + (s < v && s > -v ? w : s) + x + (u < v && u > -v ? w : u) + x + (p < v && p > -v ? w : p) + x))
                                            : (b += ",0,0,0,0,1,0,"),
                                        (b += L + x + j + x + k + x + (F ? 1 + -k / F : 1) + ")"),
                                        (S[Ct] = b);
                                });
                            (u = Lt.prototype),
                                (u.x = u.y = u.z = u.skewX = u.skewY = u.rotation = u.rotationX = u.rotationY = u.zOrigin = u.xPercent = u.yPercent = u.xOffset = u.yOffset = 0),
                                (u.scaleX = u.scaleY = u.scaleZ = 1),
                                Mt(
                                    "transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin",
                                    {
                                        parser: function (t, e, i, n, o, a, l) {
                                            if (n._lastParsedTransform === l) return o;
                                            n._lastParsedTransform = l;
                                            var c,
                                                u = l.scale && "function" == typeof l.scale ? l.scale : 0;
                                            "function" == typeof l[i] && ((c = l[i]), (l[i] = e)), u && (l.scale = u(y, t));
                                            var h,
                                                d,
                                                p,
                                                f,
                                                m,
                                                v,
                                                _,
                                                b,
                                                x,
                                                w = t._gsTransform,
                                                T = t.style,
                                                E = Rt.length,
                                                M = l,
                                                S = {},
                                                A = Ht(t, r, !0, M.parseTransform),
                                                R = M.transform && ("function" == typeof M.transform ? M.transform(y, g) : M.transform);
                                            if (((A.skewType = M.skewType || A.skewType || s.defaultSkewType), (n._transform = A), R && "string" == typeof R && Ct))
                                                (d = V.style),
                                                    (d[Ct] = R),
                                                    (d.display = "block"),
                                                    (d.position = "absolute"),
                                                    G.body.appendChild(V),
                                                    (h = Ht(V, null, !1)),
                                                    "simple" === A.skewType && (h.scaleY *= Math.cos(h.skewX * N)),
                                                    A.svg &&
                                                        ((v = A.xOrigin),
                                                        (_ = A.yOrigin),
                                                        (h.x -= A.xOffset),
                                                        (h.y -= A.yOffset),
                                                        (M.transformOrigin || M.svgOrigin) &&
                                                            ((R = {}), Ft(t, lt(M.transformOrigin), R, M.svgOrigin, M.smoothOrigin, !0), (v = R.xOrigin), (_ = R.yOrigin), (h.x -= R.xOffset - A.xOffset), (h.y -= R.yOffset - A.yOffset)),
                                                        (v || _) && ((b = Vt(V, !0)), (h.x -= v - (v * b[0] + _ * b[2])), (h.y -= _ - (v * b[1] + _ * b[3])))),
                                                    G.body.removeChild(V),
                                                    h.perspective || (h.perspective = A.perspective),
                                                    null != M.xPercent && (h.xPercent = ut(M.xPercent, A.xPercent)),
                                                    null != M.yPercent && (h.yPercent = ut(M.yPercent, A.yPercent));
                                            else if ("object" == typeof M) {
                                                if (
                                                    ((h = {
                                                        scaleX: ut(null != M.scaleX ? M.scaleX : M.scale, A.scaleX),
                                                        scaleY: ut(null != M.scaleY ? M.scaleY : M.scale, A.scaleY),
                                                        scaleZ: ut(M.scaleZ, A.scaleZ),
                                                        x: ut(M.x, A.x),
                                                        y: ut(M.y, A.y),
                                                        z: ut(M.z, A.z),
                                                        xPercent: ut(M.xPercent, A.xPercent),
                                                        yPercent: ut(M.yPercent, A.yPercent),
                                                        perspective: ut(M.transformPerspective, A.perspective),
                                                    }),
                                                    null != (m = M.directionalRotation))
                                                )
                                                    if ("object" == typeof m) for (d in m) M[d] = m[d];
                                                    else M.rotation = m;
                                                "string" == typeof M.x && -1 !== M.x.indexOf("%") && ((h.x = 0), (h.xPercent = ut(M.x, A.xPercent))),
                                                    "string" == typeof M.y && -1 !== M.y.indexOf("%") && ((h.y = 0), (h.yPercent = ut(M.y, A.yPercent))),
                                                    (h.rotation = ht("rotation" in M ? M.rotation : "shortRotation" in M ? M.shortRotation + "_short" : "rotationZ" in M ? M.rotationZ : A.rotation, A.rotation, "rotation", S)),
                                                    Ot &&
                                                        ((h.rotationX = ht("rotationX" in M ? M.rotationX : "shortRotationX" in M ? M.shortRotationX + "_short" : A.rotationX || 0, A.rotationX, "rotationX", S)),
                                                        (h.rotationY = ht("rotationY" in M ? M.rotationY : "shortRotationY" in M ? M.shortRotationY + "_short" : A.rotationY || 0, A.rotationY, "rotationY", S))),
                                                    (h.skewX = ht(M.skewX, A.skewX)),
                                                    (h.skewY = ht(M.skewY, A.skewY));
                                            }
                                            for (
                                                Ot && null != M.force3D && ((A.force3D = M.force3D), (f = !0)),
                                                    p = A.force3D || A.z || A.rotationX || A.rotationY || h.z || h.rotationX || h.rotationY || h.perspective,
                                                    p || null == M.scale || (h.scaleZ = 1);
                                                --E > -1;

                                            )
                                                (x = Rt[E]),
                                                    ((R = h[x] - A[x]) > 1e-6 || R < -1e-6 || null != M[x] || null != U[x]) &&
                                                        ((f = !0), (o = new bt(A, x, A[x], R, o)), x in S && (o.e = S[x]), (o.xs0 = 0), (o.plugin = a), n._overwriteProps.push(o.n));
                                            return (
                                                (R = M.transformOrigin),
                                                A.svg &&
                                                    (R || M.svgOrigin) &&
                                                    ((v = A.xOffset),
                                                    (_ = A.yOffset),
                                                    Ft(t, lt(R), h, M.svgOrigin, M.smoothOrigin),
                                                    (o = xt(A, "xOrigin", (w ? A : h).xOrigin, h.xOrigin, o, "transformOrigin")),
                                                    (o = xt(A, "yOrigin", (w ? A : h).yOrigin, h.yOrigin, o, "transformOrigin")),
                                                    (v === A.xOffset && _ === A.yOffset) ||
                                                        ((o = xt(A, "xOffset", w ? v : A.xOffset, A.xOffset, o, "transformOrigin")), (o = xt(A, "yOffset", w ? _ : A.yOffset, A.yOffset, o, "transformOrigin"))),
                                                    (R = "0px 0px")),
                                                (R || (Ot && p && A.zOrigin)) &&
                                                    (Ct
                                                        ? ((f = !0),
                                                          (x = Dt),
                                                          (R = (R || tt(t, x, r, !1, "50% 50%")) + ""),
                                                          (o = new bt(T, x, 0, 0, o, -1, "transformOrigin")),
                                                          (o.b = T[x]),
                                                          (o.plugin = a),
                                                          Ot
                                                              ? ((d = A.zOrigin),
                                                                (R = R.split(" ")),
                                                                (A.zOrigin = (R.length > 2 && (0 === d || "0px" !== R[2]) ? parseFloat(R[2]) : d) || 0),
                                                                (o.xs0 = o.e = R[0] + " " + (R[1] || "50%") + " 0px"),
                                                                (o = new bt(A, "zOrigin", 0, 0, o, -1, o.n)),
                                                                (o.b = d),
                                                                (o.xs0 = o.e = A.zOrigin))
                                                              : (o.xs0 = o.e = R))
                                                        : lt(R + "", A)),
                                                f && (n._transformType = (A.svg && At) || (!p && 3 !== this._transformType) ? 2 : 3),
                                                c && (l[i] = c),
                                                u && (l.scale = u),
                                                o
                                            );
                                        },
                                        prefix: !0,
                                    }
                                ),
                                Mt("boxShadow", { defaultValue: "0px 0px 0px 0px #999", prefix: !0, color: !0, multi: !0, keyword: "inset" }),
                                Mt("borderRadius", {
                                    defaultValue: "0px",
                                    parser: function (t, e, i, o, a, s) {
                                        e = this.format(e);
                                        var l,
                                            c,
                                            u,
                                            h,
                                            d,
                                            p,
                                            f,
                                            m,
                                            v,
                                            g,
                                            y,
                                            _,
                                            b,
                                            x,
                                            w,
                                            T,
                                            E = ["borderTopLeftRadius", "borderTopRightRadius", "borderBottomRightRadius", "borderBottomLeftRadius"],
                                            M = t.style;
                                        for (v = parseFloat(t.offsetWidth), g = parseFloat(t.offsetHeight), l = e.split(" "), c = 0; c < E.length; c++)
                                            this.p.indexOf("border") && (E[c] = $(E[c])),
                                                (d = h = tt(t, E[c], r, !1, "0px")),
                                                -1 !== d.indexOf(" ") && ((h = d.split(" ")), (d = h[0]), (h = h[1])),
                                                (p = u = l[c]),
                                                (f = parseFloat(d)),
                                                (_ = d.substr((f + "").length)),
                                                (b = "=" === p.charAt(1)),
                                                b
                                                    ? ((m = parseInt(p.charAt(0) + "1", 10)), (p = p.substr(2)), (m *= parseFloat(p)), (y = p.substr((m + "").length - (m < 0 ? 1 : 0)) || ""))
                                                    : ((m = parseFloat(p)), (y = p.substr((m + "").length))),
                                                "" === y && (y = n[i] || _),
                                                y !== _ &&
                                                    ((x = et(t, "borderLeft", f, _)),
                                                    (w = et(t, "borderTop", f, _)),
                                                    "%" === y
                                                        ? ((d = (x / v) * 100 + "%"), (h = (w / g) * 100 + "%"))
                                                        : "em" === y
                                                        ? ((T = et(t, "borderLeft", 1, "em")), (d = x / T + "em"), (h = w / T + "em"))
                                                        : ((d = x + "px"), (h = w + "px")),
                                                    b && ((p = parseFloat(d) + m + y), (u = parseFloat(h) + m + y))),
                                                (a = wt(M, E[c], d + " " + h, p + " " + u, !1, "0px", a));
                                        return a;
                                    },
                                    prefix: !0,
                                    formatter: gt("0px 0px 0px 0px", !1, !0),
                                }),
                                Mt("borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius", {
                                    defaultValue: "0px",
                                    parser: function (t, e, i, n, o, a) {
                                        return wt(t.style, i, this.format(tt(t, i, r, !1, "0px 0px")), this.format(e), !1, "0px", o);
                                    },
                                    prefix: !0,
                                    formatter: gt("0px 0px", !1, !0),
                                }),
                                Mt("backgroundPosition", {
                                    defaultValue: "0 0",
                                    parser: function (t, e, i, n, o, a) {
                                        var s,
                                            l,
                                            c,
                                            u,
                                            h,
                                            d,
                                            p = "background-position",
                                            f = r || K(t, null),
                                            m = this.format(
                                                (f ? (v ? f.getPropertyValue(p + "-x") + " " + f.getPropertyValue(p + "-y") : f.getPropertyValue(p)) : t.currentStyle.backgroundPositionX + " " + t.currentStyle.backgroundPositionY) || "0 0"
                                            ),
                                            g = this.format(e);
                                        if ((-1 !== m.indexOf("%")) != (-1 !== g.indexOf("%")) && g.split(",").length < 2 && (d = tt(t, "backgroundImage").replace(P, "")) && "none" !== d) {
                                            for (s = m.split(" "), l = g.split(" "), H.setAttribute("src", d), c = 2; --c > -1; )
                                                (m = s[c]),
                                                    (u = -1 !== m.indexOf("%")) !== (-1 !== l[c].indexOf("%")) &&
                                                        ((h = 0 === c ? t.offsetWidth - H.width : t.offsetHeight - H.height), (s[c] = u ? (parseFloat(m) / 100) * h + "px" : (parseFloat(m) / h) * 100 + "%"));
                                            m = s.join(" ");
                                        }
                                        return this.parseComplex(t.style, m, g, o, a);
                                    },
                                    formatter: lt,
                                }),
                                Mt("backgroundSize", {
                                    defaultValue: "0 0",
                                    formatter: function (t) {
                                        return (t += ""), lt(-1 === t.indexOf(" ") ? t + " " + t : t);
                                    },
                                }),
                                Mt("perspective", { defaultValue: "0px", prefix: !0 }),
                                Mt("perspectiveOrigin", { defaultValue: "50% 50%", prefix: !0 }),
                                Mt("transformStyle", { prefix: !0 }),
                                Mt("backfaceVisibility", { prefix: !0 }),
                                Mt("userSelect", { prefix: !0 }),
                                Mt("margin", { parser: yt("marginTop,marginRight,marginBottom,marginLeft") }),
                                Mt("padding", { parser: yt("paddingTop,paddingRight,paddingBottom,paddingLeft") }),
                                Mt("clip", {
                                    defaultValue: "rect(0px,0px,0px,0px)",
                                    parser: function (t, e, i, n, o, a) {
                                        var s, l, c;
                                        return (
                                            v < 9
                                                ? ((l = t.currentStyle), (c = v < 8 ? " " : ","), (s = "rect(" + l.clipTop + c + l.clipRight + c + l.clipBottom + c + l.clipLeft + ")"), (e = this.format(e).split(",").join(c)))
                                                : ((s = this.format(tt(t, this.p, r, !1, this.dflt))), (e = this.format(e))),
                                            this.parseComplex(t.style, s, e, o, a)
                                        );
                                    },
                                }),
                                Mt("textShadow", { defaultValue: "0px 0px 0px #999", color: !0, multi: !0 }),
                                Mt("autoRound,strictUnits", {
                                    parser: function (t, e, i, n, r) {
                                        return r;
                                    },
                                }),
                                Mt("border", {
                                    defaultValue: "0px solid #000",
                                    parser: function (t, e, i, n, o, a) {
                                        var s = tt(t, "borderTopWidth", r, !1, "0px"),
                                            l = this.format(e).split(" "),
                                            c = l[0].replace(T, "");
                                        return (
                                            "px" !== c && (s = parseFloat(s) / et(t, "borderTopWidth", 1, c) + c),
                                            this.parseComplex(t.style, this.format(s + " " + tt(t, "borderTopStyle", r, !1, "solid") + " " + tt(t, "borderTopColor", r, !1, "#000")), l.join(" "), o, a)
                                        );
                                    },
                                    color: !0,
                                    formatter: function (t) {
                                        var e = t.split(" ");
                                        return e[0] + " " + (e[1] || "solid") + " " + (t.match(vt) || ["#000"])[0];
                                    },
                                }),
                                Mt("borderWidth", { parser: yt("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth") }),
                                Mt("float,cssFloat,styleFloat", {
                                    parser: function (t, e, i, n, r, o) {
                                        var a = t.style,
                                            s = "cssFloat" in a ? "cssFloat" : "styleFloat";
                                        return new bt(a, s, 0, 0, r, -1, i, !1, 0, a[s], e);
                                    },
                                });
                            var qt = function (t) {
                                var e,
                                    i = this.t,
                                    n = i.filter || tt(this.data, "filter") || "",
                                    r = (this.s + this.c * t) | 0;
                                100 === r &&
                                    (-1 === n.indexOf("atrix(") && -1 === n.indexOf("radient(") && -1 === n.indexOf("oader(") ? (i.removeAttribute("filter"), (e = !tt(this.data, "filter"))) : ((i.filter = n.replace(S, "")), (e = !0))),
                                    e ||
                                        (this.xn1 && (i.filter = n = n || "alpha(opacity=" + r + ")"),
                                        -1 === n.indexOf("pacity") ? (0 === r && this.xn1) || (i.filter = n + " alpha(opacity=" + r + ")") : (i.filter = n.replace(E, "opacity=" + r)));
                            };
                            Mt("opacity,alpha,autoAlpha", {
                                defaultValue: "1",
                                parser: function (t, e, i, n, o, a) {
                                    var s = parseFloat(tt(t, "opacity", r, !1, "1")),
                                        l = t.style,
                                        c = "autoAlpha" === i;
                                    return (
                                        "string" == typeof e && "=" === e.charAt(1) && (e = ("-" === e.charAt(0) ? -1 : 1) * parseFloat(e.substr(2)) + s),
                                        c && 1 === s && "hidden" === tt(t, "visibility", r) && 0 !== e && (s = 0),
                                        q
                                            ? (o = new bt(l, "opacity", s, e - s, o))
                                            : ((o = new bt(l, "opacity", 100 * s, 100 * (e - s), o)),
                                              (o.xn1 = c ? 1 : 0),
                                              (l.zoom = 1),
                                              (o.type = 2),
                                              (o.b = "alpha(opacity=" + o.s + ")"),
                                              (o.e = "alpha(opacity=" + (o.s + o.c) + ")"),
                                              (o.data = t),
                                              (o.plugin = a),
                                              (o.setRatio = qt)),
                                        c &&
                                            ((o = new bt(l, "visibility", 0, 0, o, -1, null, !1, 0, 0 !== s ? "inherit" : "hidden", 0 === e ? "hidden" : "inherit")),
                                            (o.xs0 = "inherit"),
                                            n._overwriteProps.push(o.n),
                                            n._overwriteProps.push(i)),
                                        o
                                    );
                                },
                            });
                            var Yt = function (t, e) {
                                    e && (t.removeProperty ? (("ms" !== e.substr(0, 2) && "webkit" !== e.substr(0, 6)) || (e = "-" + e), t.removeProperty(e.replace(R, "-$1").toLowerCase())) : t.removeAttribute(e));
                                },
                                Zt = function (t) {
                                    if (((this.t._gsClassPT = this), 1 === t || 0 === t)) {
                                        this.t.setAttribute("class", 0 === t ? this.b : this.e);
                                        for (var e = this.data, i = this.t.style; e; ) e.v ? (i[e.p] = e.v) : Yt(i, e.p), (e = e._next);
                                        1 === t && this.t._gsClassPT === this && (this.t._gsClassPT = null);
                                    } else this.t.getAttribute("class") !== this.e && this.t.setAttribute("class", this.e);
                                };
                            Mt("className", {
                                parser: function (t, e, n, o, a, s, l) {
                                    var c,
                                        u,
                                        h,
                                        d,
                                        p,
                                        f = t.getAttribute("class") || "",
                                        m = t.style.cssText;
                                    if (((a = o._classNamePT = new bt(t, n, 0, 0, a, 2)), (a.setRatio = Zt), (a.pr = -11), (i = !0), (a.b = f), (u = nt(t, r)), (h = t._gsClassPT))) {
                                        for (d = {}, p = h.data; p; ) (d[p.p] = 1), (p = p._next);
                                        h.setRatio(1);
                                    }
                                    return (
                                        (t._gsClassPT = a),
                                        (a.e = "=" !== e.charAt(1) ? e : f.replace(new RegExp("(?:\\s|^)" + e.substr(2) + "(?![\\w-])"), "") + ("+" === e.charAt(0) ? " " + e.substr(2) : "")),
                                        t.setAttribute("class", a.e),
                                        (c = rt(t, u, nt(t), l, d)),
                                        t.setAttribute("class", f),
                                        (a.data = c.firstMPT),
                                        (t.style.cssText = m),
                                        (a = a.xfirst = o.parse(t, c.difs, a, s))
                                    );
                                },
                            });
                            var Jt = function (t) {
                                if ((1 === t || 0 === t) && this.data._totalTime === this.data._totalDuration && "isFromStart" !== this.data.data) {
                                    var e,
                                        i,
                                        n,
                                        r,
                                        o,
                                        a = this.t.style,
                                        s = c.transform.parse;
                                    if ("all" === this.e) (a.cssText = ""), (r = !0);
                                    else for (e = this.e.split(" ").join("").split(","), n = e.length; --n > -1; ) (i = e[n]), c[i] && (c[i].parse === s ? (r = !0) : (i = "transformOrigin" === i ? Dt : c[i].p)), Yt(a, i);
                                    r && (Yt(a, Ct), (o = this.t._gsTransform) && (o.svg && (this.t.removeAttribute("data-svg-origin"), this.t.removeAttribute("transform")), delete this.t._gsTransform));
                                }
                            };
                            for (
                                Mt("clearProps", {
                                    parser: function (t, e, n, r, o) {
                                        return (o = new bt(t, n, 0, 0, o, 2)), (o.setRatio = Jt), (o.e = e), (o.pr = -10), (o.data = r._tween), (i = !0), o;
                                    },
                                }),
                                    u = "bezier,throwProps,physicsProps,physics2D".split(","),
                                    Tt = u.length;
                                Tt--;

                            )
                                St(u[Tt]);
                            (u = s.prototype),
                                (u._firstPT = u._lastParsedTransform = u._transform = null),
                                (u._onInitTween = function (t, e, o, l) {
                                    if (!t.nodeType) return !1;
                                    (this._target = g = t), (this._tween = o), (this._vars = e), (y = l), (h = e.autoRound), (i = !1), (n = e.suffixMap || s.suffixMap), (r = K(t, "")), (a = this._overwriteProps);
                                    var u,
                                        f,
                                        v,
                                        _,
                                        b,
                                        x,
                                        w,
                                        T,
                                        E,
                                        S = t.style;
                                    if (
                                        (d && "" === S.zIndex && (("auto" !== (u = tt(t, "zIndex", r)) && "" !== u) || this._addLazySet(S, "zIndex", 0)),
                                        "string" == typeof e && ((_ = S.cssText), (u = nt(t, r)), (S.cssText = _ + ";" + e), (u = rt(t, u, nt(t)).difs), !q && M.test(e) && (u.opacity = parseFloat(RegExp.$1)), (e = u), (S.cssText = _)),
                                        e.className ? (this._firstPT = f = c.className.parse(t, e.className, "className", this, null, null, e)) : (this._firstPT = f = this.parse(t, e, null)),
                                        this._transformType)
                                    ) {
                                        for (
                                            E = 3 === this._transformType,
                                                Ct
                                                    ? p &&
                                                      ((d = !0),
                                                      "" === S.zIndex && (("auto" !== (w = tt(t, "zIndex", r)) && "" !== w) || this._addLazySet(S, "zIndex", 0)),
                                                      m && this._addLazySet(S, "WebkitBackfaceVisibility", this._vars.WebkitBackfaceVisibility || (E ? "visible" : "hidden")))
                                                    : (S.zoom = 1),
                                                v = f;
                                            v && v._next;

                                        )
                                            v = v._next;
                                        (T = new bt(t, "transform", 0, 0, null, 2)), this._linkCSSP(T, null, v), (T.setRatio = Ct ? Xt : Wt), (T.data = this._transform || Ht(t, r, !0)), (T.tween = o), (T.pr = -1), a.pop();
                                    }
                                    if (i) {
                                        for (; f; ) {
                                            for (x = f._next, v = _; v && v.pr > f.pr; ) v = v._next;
                                            (f._prev = v ? v._prev : b) ? (f._prev._next = f) : (_ = f), (f._next = v) ? (v._prev = f) : (b = f), (f = x);
                                        }
                                        this._firstPT = _;
                                    }
                                    return !0;
                                }),
                                (u.parse = function (t, e, i, o) {
                                    var a,
                                        s,
                                        l,
                                        u,
                                        d,
                                        p,
                                        f,
                                        m,
                                        v,
                                        _,
                                        b = t.style;
                                    for (a in e) {
                                        if (((p = e[a]), "function" == typeof p && (p = p(y, g)), (s = c[a]))) i = s.parse(t, p, a, this, i, o, e);
                                        else {
                                            if ("--" === a.substr(0, 2)) {
                                                this._tween._propLookup[a] = this._addTween.call(this._tween, t.style, "setProperty", K(t).getPropertyValue(a) + "", p + "", a, !1, a);
                                                continue;
                                            }
                                            (d = tt(t, a, r) + ""),
                                                (v = "string" == typeof p),
                                                "color" === a || "fill" === a || "stroke" === a || -1 !== a.indexOf("Color") || (v && A.test(p))
                                                    ? (v || ((p = ft(p)), (p = (p.length > 3 ? "rgba(" : "rgb(") + p.join(",") + ")")), (i = wt(b, a, d, p, !0, "transparent", i, 0, o)))
                                                    : v && I.test(p)
                                                    ? (i = wt(b, a, d, p, !0, null, i, 0, o))
                                                    : ((l = parseFloat(d)),
                                                      (f = l || 0 === l ? d.substr((l + "").length) : ""),
                                                      ("" !== d && "auto" !== d) ||
                                                          ("width" === a || "height" === a ? ((l = st(t, a, r)), (f = "px")) : "left" === a || "top" === a ? ((l = it(t, a, r)), (f = "px")) : ((l = "opacity" !== a ? 0 : 1), (f = ""))),
                                                      (_ = v && "=" === p.charAt(1)),
                                                      _ ? ((u = parseInt(p.charAt(0) + "1", 10)), (p = p.substr(2)), (u *= parseFloat(p)), (m = p.replace(T, ""))) : ((u = parseFloat(p)), (m = v ? p.replace(T, "") : "")),
                                                      "" === m && (m = a in n ? n[a] : f),
                                                      (p = u || 0 === u ? (_ ? u + l : u) + m : e[a]),
                                                      f !== m &&
                                                          (("" === m && "lineHeight" !== a) ||
                                                              ((u || 0 === u) &&
                                                                  l &&
                                                                  ((l = et(t, a, l, f)),
                                                                  "%" === m
                                                                      ? ((l /= et(t, a, 100, "%") / 100), !0 !== e.strictUnits && (d = l + "%"))
                                                                      : "em" === m || "rem" === m || "vw" === m || "vh" === m
                                                                      ? (l /= et(t, a, 1, m))
                                                                      : "px" !== m && ((u = et(t, a, u, m)), (m = "px")),
                                                                  _ && (u || 0 === u) && (p = u + l + m)))),
                                                      _ && (u += l),
                                                      (!l && 0 !== l) || (!u && 0 !== u)
                                                          ? void 0 !== b[a] && (p || (p + "" != "NaN" && null != p))
                                                              ? ((i = new bt(b, a, u || l || 0, 0, i, -1, a, !1, 0, d, p)), (i.xs0 = "none" !== p || ("display" !== a && -1 === a.indexOf("Style")) ? p : d))
                                                              : Z("invalid " + a + " tween value: " + e[a])
                                                          : ((i = new bt(b, a, l, u - l, i, 0, a, !1 !== h && ("px" === m || "zIndex" === a), 0, d, p)), (i.xs0 = m)));
                                        }
                                        o && i && !i.plugin && (i.plugin = o);
                                    }
                                    return i;
                                }),
                                (u.setRatio = function (t) {
                                    var e,
                                        i,
                                        n,
                                        r = this._firstPT;
                                    if (1 !== t || (this._tween._time !== this._tween._duration && 0 !== this._tween._time))
                                        if (t || (this._tween._time !== this._tween._duration && 0 !== this._tween._time) || -1e-6 === this._tween._rawPrevTime)
                                            for (; r; ) {
                                                if (((e = r.c * t + r.s), r.r ? (e = Math.round(e)) : e < 1e-6 && e > -1e-6 && (e = 0), r.type))
                                                    if (1 === r.type)
                                                        if (2 === (n = r.l)) r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2;
                                                        else if (3 === n) r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2 + r.xn2 + r.xs3;
                                                        else if (4 === n) r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2 + r.xn2 + r.xs3 + r.xn3 + r.xs4;
                                                        else if (5 === n) r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2 + r.xn2 + r.xs3 + r.xn3 + r.xs4 + r.xn4 + r.xs5;
                                                        else {
                                                            for (i = r.xs0 + e + r.xs1, n = 1; n < r.l; n++) i += r["xn" + n] + r["xs" + (n + 1)];
                                                            r.t[r.p] = i;
                                                        }
                                                    else -1 === r.type ? (r.t[r.p] = r.xs0) : r.setRatio && r.setRatio(t);
                                                else r.t[r.p] = e + r.xs0;
                                                r = r._next;
                                            }
                                        else for (; r; ) 2 !== r.type ? (r.t[r.p] = r.b) : r.setRatio(t), (r = r._next);
                                    else
                                        for (; r; ) {
                                            if (2 !== r.type)
                                                if (r.r && -1 !== r.type)
                                                    if (((e = Math.round(r.s + r.c)), r.type)) {
                                                        if (1 === r.type) {
                                                            for (n = r.l, i = r.xs0 + e + r.xs1, n = 1; n < r.l; n++) i += r["xn" + n] + r["xs" + (n + 1)];
                                                            r.t[r.p] = i;
                                                        }
                                                    } else r.t[r.p] = e + r.xs0;
                                                else r.t[r.p] = r.e;
                                            else r.setRatio(t);
                                            r = r._next;
                                        }
                                }),
                                (u._enableTransforms = function (t) {
                                    (this._transform = this._transform || Ht(this._target, r, !0)), (this._transformType = (this._transform.svg && At) || (!t && 3 !== this._transformType) ? 2 : 3);
                                });
                            var Qt = function (t) {
                                (this.t[this.p] = this.e), this.data._linkCSSP(this, this._next, null, !0);
                            };
                            (u._addLazySet = function (t, e, i) {
                                var n = (this._firstPT = new bt(t, e, 0, 0, this._firstPT, 2));
                                (n.e = i), (n.setRatio = Qt), (n.data = this);
                            }),
                                (u._linkCSSP = function (t, e, i, n) {
                                    return (
                                        t &&
                                            (e && (e._prev = t),
                                            t._next && (t._next._prev = t._prev),
                                            t._prev ? (t._prev._next = t._next) : this._firstPT === t && ((this._firstPT = t._next), (n = !0)),
                                            i ? (i._next = t) : n || null !== this._firstPT || (this._firstPT = t),
                                            (t._next = e),
                                            (t._prev = i)),
                                        t
                                    );
                                }),
                                (u._mod = function (t) {
                                    for (var e = this._firstPT; e; ) "function" == typeof t[e.p] && t[e.p] === Math.round && (e.r = 1), (e = e._next);
                                }),
                                (u._kill = function (e) {
                                    var i,
                                        n,
                                        r,
                                        o = e;
                                    if (e.autoAlpha || e.alpha) {
                                        o = {};
                                        for (n in e) o[n] = e[n];
                                        (o.opacity = 1), o.autoAlpha && (o.visibility = 1);
                                    }
                                    for (
                                        e.className &&
                                            (i = this._classNamePT) &&
                                            ((r = i.xfirst),
                                            r && r._prev ? this._linkCSSP(r._prev, i._next, r._prev._prev) : r === this._firstPT && (this._firstPT = i._next),
                                            i._next && this._linkCSSP(i._next, i._next._next, r._prev),
                                            (this._classNamePT = null)),
                                            i = this._firstPT;
                                        i;

                                    )
                                        i.plugin && i.plugin !== n && i.plugin._kill && (i.plugin._kill(e), (n = i.plugin)), (i = i._next);
                                    return t.prototype._kill.call(this, o);
                                });
                            var $t = function (t, e, i) {
                                var n, r, o, a;
                                if (t.slice) for (r = t.length; --r > -1; ) $t(t[r], e, i);
                                else for (n = t.childNodes, r = n.length; --r > -1; ) (o = n[r]), (a = o.type), o.style && (e.push(nt(o)), i && i.push(o)), (1 !== a && 9 !== a && 11 !== a) || !o.childNodes.length || $t(o, e, i);
                            };
                            return (
                                (s.cascadeTo = function (t, i, n) {
                                    var r,
                                        o,
                                        a,
                                        s,
                                        l = e.to(t, i, n),
                                        c = [l],
                                        u = [],
                                        h = [],
                                        d = [],
                                        p = e._internals.reservedProps;
                                    for (t = l._targets || l.target, $t(t, u, d), l.render(i, !0, !0), $t(t, h), l.render(0, !0, !0), l._enabled(!0), r = d.length; --r > -1; )
                                        if (((o = rt(d[r], u[r], h[r])), o.firstMPT)) {
                                            o = o.difs;
                                            for (a in n) p[a] && (o[a] = n[a]);
                                            s = {};
                                            for (a in o) s[a] = u[r][a];
                                            c.push(e.fromTo(d[r], i, s, o));
                                        }
                                    return c;
                                }),
                                t.activate([s]),
                                s
                            );
                        },
                        !0
                    ),
                    (function () {
                        var t = o._gsDefine.plugin({
                                propName: "roundProps",
                                version: "1.6.0",
                                priority: -1,
                                API: 2,
                                init: function (t, e, i) {
                                    return (this._tween = i), !0;
                                },
                            }),
                            e = function (t) {
                                for (; t; ) t.f || t.blob || (t.m = Math.round), (t = t._next);
                            },
                            i = t.prototype;
                        (i._onInitAllProps = function () {
                            for (var t, i, n, r = this._tween, o = r.vars.roundProps.join ? r.vars.roundProps : r.vars.roundProps.split(","), a = o.length, s = {}, l = r._propLookup.roundProps; --a > -1; ) s[o[a]] = Math.round;
                            for (a = o.length; --a > -1; )
                                for (t = o[a], i = r._firstPT; i; )
                                    (n = i._next),
                                        i.pg
                                            ? i.t._mod(s)
                                            : i.n === t &&
                                              (2 === i.f && i.t
                                                  ? e(i.t._firstPT)
                                                  : (this._add(i.t, t, i.s, i.c), n && (n._prev = i._prev), i._prev ? (i._prev._next = n) : r._firstPT === i && (r._firstPT = n), (i._next = i._prev = null), (r._propLookup[t] = l))),
                                        (i = n);
                            return !1;
                        }),
                            (i._add = function (t, e, i, n) {
                                this._addTween(t, e, i, i + n, e, Math.round), this._overwriteProps.push(e);
                            });
                    })(),
                    (function () {
                        o._gsDefine.plugin({
                            propName: "attr",
                            API: 2,
                            version: "0.6.1",
                            init: function (t, e, i, n) {
                                var r, o;
                                if ("function" != typeof t.setAttribute) return !1;
                                for (r in e) (o = e[r]), "function" == typeof o && (o = o(n, t)), this._addTween(t, "setAttribute", t.getAttribute(r) + "", o + "", r, !1, r), this._overwriteProps.push(r);
                                return !0;
                            },
                        });
                    })(),
                    (o._gsDefine.plugin({
                        propName: "directionalRotation",
                        version: "0.3.1",
                        API: 2,
                        init: function (t, e, i, n) {
                            "object" != typeof e && (e = { rotation: e }), (this.finals = {});
                            var r,
                                o,
                                a,
                                s,
                                l,
                                c,
                                u = !0 === e.useRadians ? 2 * Math.PI : 360;
                            for (r in e)
                                "useRadians" !== r &&
                                    ((s = e[r]),
                                    "function" == typeof s && (s = s(n, t)),
                                    (c = (s + "").split("_")),
                                    (o = c[0]),
                                    (a = parseFloat("function" != typeof t[r] ? t[r] : t[r.indexOf("set") || "function" != typeof t["get" + r.substr(3)] ? r : "get" + r.substr(3)]())),
                                    (s = this.finals[r] = "string" == typeof o && "=" === o.charAt(1) ? a + parseInt(o.charAt(0) + "1", 10) * Number(o.substr(2)) : Number(o) || 0),
                                    (l = s - a),
                                    c.length &&
                                        ((o = c.join("_")),
                                        -1 !== o.indexOf("short") && (l %= u) !== l % (u / 2) && (l = l < 0 ? l + u : l - u),
                                        -1 !== o.indexOf("_cw") && l < 0 ? (l = ((l + 9999999999 * u) % u) - ((l / u) | 0) * u) : -1 !== o.indexOf("ccw") && l > 0 && (l = ((l - 9999999999 * u) % u) - ((l / u) | 0) * u)),
                                    (l > 1e-6 || l < -1e-6) && (this._addTween(t, r, a, a + l, r), this._overwriteProps.push(r)));
                            return !0;
                        },
                        set: function (t) {
                            var e;
                            if (1 !== t) this._super.setRatio.call(this, t);
                            else for (e = this._firstPT; e; ) e.f ? e.t[e.p](this.finals[e.p]) : (e.t[e.p] = this.finals[e.p]), (e = e._next);
                        },
                    })._autoCSS = !0),
                    o._gsDefine(
                        "easing.Back",
                        ["easing.Ease"],
                        function (t) {
                            var e,
                                i,
                                n,
                                r = o.GreenSockGlobals || o,
                                a = r.com.greensock,
                                s = 2 * Math.PI,
                                l = Math.PI / 2,
                                c = a._class,
                                u = function (e, i) {
                                    var n = c("easing." + e, function () {}, !0),
                                        r = (n.prototype = new t());
                                    return (r.constructor = n), (r.getRatio = i), n;
                                },
                                h = t.register || function () {},
                                d = function (t, e, i, n, r) {
                                    var o = c("easing." + t, { easeOut: new e(), easeIn: new i(), easeInOut: new n() }, !0);
                                    return h(o, t), o;
                                },
                                p = function (t, e, i) {
                                    (this.t = t), (this.v = e), i && ((this.next = i), (i.prev = this), (this.c = i.v - e), (this.gap = i.t - t));
                                },
                                f = function (e, i) {
                                    var n = c(
                                            "easing." + e,
                                            function (t) {
                                                (this._p1 = t || 0 === t ? t : 1.70158), (this._p2 = 1.525 * this._p1);
                                            },
                                            !0
                                        ),
                                        r = (n.prototype = new t());
                                    return (
                                        (r.constructor = n),
                                        (r.getRatio = i),
                                        (r.config = function (t) {
                                            return new n(t);
                                        }),
                                        n
                                    );
                                },
                                m = d(
                                    "Back",
                                    f("BackOut", function (t) {
                                        return (t -= 1) * t * ((this._p1 + 1) * t + this._p1) + 1;
                                    }),
                                    f("BackIn", function (t) {
                                        return t * t * ((this._p1 + 1) * t - this._p1);
                                    }),
                                    f("BackInOut", function (t) {
                                        return (t *= 2) < 1 ? 0.5 * t * t * ((this._p2 + 1) * t - this._p2) : 0.5 * ((t -= 2) * t * ((this._p2 + 1) * t + this._p2) + 2);
                                    })
                                ),
                                v = c(
                                    "easing.SlowMo",
                                    function (t, e, i) {
                                        (e = e || 0 === e ? e : 0.7),
                                            null == t ? (t = 0.7) : t > 1 && (t = 1),
                                            (this._p = 1 !== t ? e : 0),
                                            (this._p1 = (1 - t) / 2),
                                            (this._p2 = t),
                                            (this._p3 = this._p1 + this._p2),
                                            (this._calcEnd = !0 === i);
                                    },
                                    !0
                                ),
                                g = (v.prototype = new t());
                            return (
                                (g.constructor = v),
                                (g.getRatio = function (t) {
                                    var e = t + (0.5 - t) * this._p;
                                    return t < this._p1
                                        ? this._calcEnd
                                            ? 1 - (t = 1 - t / this._p1) * t
                                            : e - (t = 1 - t / this._p1) * t * t * t * e
                                        : t > this._p3
                                        ? this._calcEnd
                                            ? 1 === t
                                                ? 0
                                                : 1 - (t = (t - this._p3) / this._p1) * t
                                            : e + (t - e) * (t = (t - this._p3) / this._p1) * t * t * t
                                        : this._calcEnd
                                        ? 1
                                        : e;
                                }),
                                (v.ease = new v(0.7, 0.7)),
                                (g.config = v.config = function (t, e, i) {
                                    return new v(t, e, i);
                                }),
                                (e = c(
                                    "easing.SteppedEase",
                                    function (t, e) {
                                        (t = t || 1), (this._p1 = 1 / t), (this._p2 = t + (e ? 0 : 1)), (this._p3 = e ? 1 : 0);
                                    },
                                    !0
                                )),
                                (g = e.prototype = new t()),
                                (g.constructor = e),
                                (g.getRatio = function (t) {
                                    return t < 0 ? (t = 0) : t >= 1 && (t = 0.999999999), (((this._p2 * t) | 0) + this._p3) * this._p1;
                                }),
                                (g.config = e.config = function (t, i) {
                                    return new e(t, i);
                                }),
                                (i = c(
                                    "easing.RoughEase",
                                    function (e) {
                                        e = e || {};
                                        for (
                                            var i,
                                                n,
                                                r,
                                                o,
                                                a,
                                                s,
                                                l = e.taper || "none",
                                                c = [],
                                                u = 0,
                                                h = 0 | (e.points || 20),
                                                d = h,
                                                f = !1 !== e.randomize,
                                                m = !0 === e.clamp,
                                                v = e.template instanceof t ? e.template : null,
                                                g = "number" == typeof e.strength ? 0.4 * e.strength : 0.4;
                                            --d > -1;

                                        )
                                            (i = f ? Math.random() : (1 / h) * d),
                                                (n = v ? v.getRatio(i) : i),
                                                "none" === l
                                                    ? (r = g)
                                                    : "out" === l
                                                    ? ((o = 1 - i), (r = o * o * g))
                                                    : "in" === l
                                                    ? (r = i * i * g)
                                                    : i < 0.5
                                                    ? ((o = 2 * i), (r = o * o * 0.5 * g))
                                                    : ((o = 2 * (1 - i)), (r = o * o * 0.5 * g)),
                                                f ? (n += Math.random() * r - 0.5 * r) : d % 2 ? (n += 0.5 * r) : (n -= 0.5 * r),
                                                m && (n > 1 ? (n = 1) : n < 0 && (n = 0)),
                                                (c[u++] = { x: i, y: n });
                                        for (
                                            c.sort(function (t, e) {
                                                return t.x - e.x;
                                            }),
                                                s = new p(1, 1, null),
                                                d = h;
                                            --d > -1;

                                        )
                                            (a = c[d]), (s = new p(a.x, a.y, s));
                                        this._prev = new p(0, 0, 0 !== s.t ? s : s.next);
                                    },
                                    !0
                                )),
                                (g = i.prototype = new t()),
                                (g.constructor = i),
                                (g.getRatio = function (t) {
                                    var e = this._prev;
                                    if (t > e.t) {
                                        for (; e.next && t >= e.t; ) e = e.next;
                                        e = e.prev;
                                    } else for (; e.prev && t <= e.t; ) e = e.prev;
                                    return (this._prev = e), e.v + ((t - e.t) / e.gap) * e.c;
                                }),
                                (g.config = function (t) {
                                    return new i(t);
                                }),
                                (i.ease = new i()),
                                d(
                                    "Bounce",
                                    u("BounceOut", function (t) {
                                        return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + 0.75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375 : 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;
                                    }),
                                    u("BounceIn", function (t) {
                                        return (t = 1 - t) < 1 / 2.75
                                            ? 1 - 7.5625 * t * t
                                            : t < 2 / 2.75
                                            ? 1 - (7.5625 * (t -= 1.5 / 2.75) * t + 0.75)
                                            : t < 2.5 / 2.75
                                            ? 1 - (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375)
                                            : 1 - (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375);
                                    }),
                                    u("BounceInOut", function (t) {
                                        var e = t < 0.5;
                                        return (
                                            (t = e ? 1 - 2 * t : 2 * t - 1),
                                            t < 1 / 2.75
                                                ? (t *= 7.5625 * t)
                                                : (t = t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + 0.75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375 : 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375),
                                            e ? 0.5 * (1 - t) : 0.5 * t + 0.5
                                        );
                                    })
                                ),
                                d(
                                    "Circ",
                                    u("CircOut", function (t) {
                                        return Math.sqrt(1 - (t -= 1) * t);
                                    }),
                                    u("CircIn", function (t) {
                                        return -(Math.sqrt(1 - t * t) - 1);
                                    }),
                                    u("CircInOut", function (t) {
                                        return (t *= 2) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);
                                    })
                                ),
                                (n = function (e, i, n) {
                                    var r = c(
                                            "easing." + e,
                                            function (t, e) {
                                                (this._p1 = t >= 1 ? t : 1), (this._p2 = (e || n) / (t < 1 ? t : 1)), (this._p3 = (this._p2 / s) * (Math.asin(1 / this._p1) || 0)), (this._p2 = s / this._p2);
                                            },
                                            !0
                                        ),
                                        o = (r.prototype = new t());
                                    return (
                                        (o.constructor = r),
                                        (o.getRatio = i),
                                        (o.config = function (t, e) {
                                            return new r(t, e);
                                        }),
                                        r
                                    );
                                }),
                                d(
                                    "Elastic",
                                    n(
                                        "ElasticOut",
                                        function (t) {
                                            return this._p1 * Math.pow(2, -10 * t) * Math.sin((t - this._p3) * this._p2) + 1;
                                        },
                                        0.3
                                    ),
                                    n(
                                        "ElasticIn",
                                        function (t) {
                                            return -this._p1 * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - this._p3) * this._p2);
                                        },
                                        0.3
                                    ),
                                    n(
                                        "ElasticInOut",
                                        function (t) {
                                            return (t *= 2) < 1 ? this._p1 * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - this._p3) * this._p2) * -0.5 : this._p1 * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - this._p3) * this._p2) * 0.5 + 1;
                                        },
                                        0.45
                                    )
                                ),
                                d(
                                    "Expo",
                                    u("ExpoOut", function (t) {
                                        return 1 - Math.pow(2, -10 * t);
                                    }),
                                    u("ExpoIn", function (t) {
                                        return Math.pow(2, 10 * (t - 1)) - 0.001;
                                    }),
                                    u("ExpoInOut", function (t) {
                                        return (t *= 2) < 1 ? 0.5 * Math.pow(2, 10 * (t - 1)) : 0.5 * (2 - Math.pow(2, -10 * (t - 1)));
                                    })
                                ),
                                d(
                                    "Sine",
                                    u("SineOut", function (t) {
                                        return Math.sin(t * l);
                                    }),
                                    u("SineIn", function (t) {
                                        return 1 - Math.cos(t * l);
                                    }),
                                    u("SineInOut", function (t) {
                                        return -0.5 * (Math.cos(Math.PI * t) - 1);
                                    })
                                ),
                                c(
                                    "easing.EaseLookup",
                                    {
                                        find: function (e) {
                                            return t.map[e];
                                        },
                                    },
                                    !0
                                ),
                                h(r.SlowMo, "SlowMo", "ease,"),
                                h(i, "RoughEase", "ease,"),
                                h(e, "SteppedEase", "ease,"),
                                m
                            );
                        },
                        !0
                    );
            }),
                o._gsDefine && o._gsQueue.pop()(),
                (function (i, o) {
                    "use strict";
                    var a = {},
                        s = i.document,
                        l = (i.GreenSockGlobals = i.GreenSockGlobals || i);
                    if (!l.TweenLite) {
                        var c,
                            u,
                            h,
                            d,
                            p,
                            f = function (t) {
                                var e,
                                    i = t.split("."),
                                    n = l;
                                for (e = 0; e < i.length; e++) n[i[e]] = n = n[i[e]] || {};
                                return n;
                            },
                            m = f("com.greensock"),
                            v = function (t) {
                                var e,
                                    i = [],
                                    n = t.length;
                                for (e = 0; e !== n; i.push(t[e++]));
                                return i;
                            },
                            g = function () {},
                            y = (function () {
                                var t = Object.prototype.toString,
                                    e = t.call([]);
                                return function (i) {
                                    return null != i && (i instanceof Array || ("object" == typeof i && !!i.push && t.call(i) === e));
                                };
                            })(),
                            _ = {},
                            b = function (i, o, s, c) {
                                (this.sc = _[i] ? _[i].sc : []), (_[i] = this), (this.gsClass = null), (this.func = s);
                                var u = [];
                                (this.check = function (h) {
                                    for (var d, p, m, v, g = o.length, y = g; --g > -1; ) (d = _[o[g]] || new b(o[g], [])).gsClass ? ((u[g] = d.gsClass), y--) : h && d.sc.push(this);
                                    if (0 === y && s) {
                                        if (((p = ("com.greensock." + i).split(".")), (m = p.pop()), (v = f(p.join("."))[m] = this.gsClass = s.apply(s, u)), c))
                                            if (((l[m] = a[m] = v), void 0 !== t && t.exports))
                                                if ("TweenMax" === i) {
                                                    t.exports = a.TweenMax = v;
                                                    for (g in a) v[g] = a[g];
                                                } else a.TweenMax && (a.TweenMax[m] = v);
                                            else
                                                (n = []),
                                                    void 0 !==
                                                        (r = function () {
                                                            return v;
                                                        }.apply(e, n)) && (t.exports = r);
                                        for (g = 0; g < this.sc.length; g++) this.sc[g].check();
                                    }
                                }),
                                    this.check(!0);
                            },
                            x = (i._gsDefine = function (t, e, i, n) {
                                return new b(t, e, i, n);
                            }),
                            w = (m._class = function (t, e, i) {
                                return (
                                    (e = e || function () {}),
                                    x(
                                        t,
                                        [],
                                        function () {
                                            return e;
                                        },
                                        i
                                    ),
                                    e
                                );
                            });
                        x.globals = l;
                        var T = [0, 0, 1, 1],
                            E = w(
                                "easing.Ease",
                                function (t, e, i, n) {
                                    (this._func = t), (this._type = i || 0), (this._power = n || 0), (this._params = e ? T.concat(e) : T);
                                },
                                !0
                            ),
                            M = (E.map = {}),
                            S = (E.register = function (t, e, i, n) {
                                for (var r, o, a, s, l = e.split(","), c = l.length, u = (i || "easeIn,easeOut,easeInOut").split(","); --c > -1; )
                                    for (o = l[c], r = n ? w("easing." + o, null, !0) : m.easing[o] || {}, a = u.length; --a > -1; ) (s = u[a]), (M[o + "." + s] = M[s + o] = r[s] = t.getRatio ? t : t[s] || new t());
                            });
                        for (
                            h = E.prototype,
                                h._calcEnd = !1,
                                h.getRatio = function (t) {
                                    if (this._func) return (this._params[0] = t), this._func.apply(null, this._params);
                                    var e = this._type,
                                        i = this._power,
                                        n = 1 === e ? 1 - t : 2 === e ? t : t < 0.5 ? 2 * t : 2 * (1 - t);
                                    return 1 === i ? (n *= n) : 2 === i ? (n *= n * n) : 3 === i ? (n *= n * n * n) : 4 === i && (n *= n * n * n * n), 1 === e ? 1 - n : 2 === e ? n : t < 0.5 ? n / 2 : 1 - n / 2;
                                },
                                c = ["Linear", "Quad", "Cubic", "Quart", "Quint,Strong"],
                                u = c.length;
                            --u > -1;

                        )
                            (h = c[u] + ",Power" + u), S(new E(null, null, 1, u), h, "easeOut", !0), S(new E(null, null, 2, u), h, "easeIn" + (0 === u ? ",easeNone" : "")), S(new E(null, null, 3, u), h, "easeInOut");
                        (M.linear = m.easing.Linear.easeIn), (M.swing = m.easing.Quad.easeInOut);
                        var A = w("events.EventDispatcher", function (t) {
                            (this._listeners = {}), (this._eventTarget = t || this);
                        });
                        (h = A.prototype),
                            (h.addEventListener = function (t, e, i, n, r) {
                                r = r || 0;
                                var o,
                                    a,
                                    s = this._listeners[t],
                                    l = 0;
                                for (this !== d || p || d.wake(), null == s && (this._listeners[t] = s = []), a = s.length; --a > -1; ) (o = s[a]), o.c === e && o.s === i ? s.splice(a, 1) : 0 === l && o.pr < r && (l = a + 1);
                                s.splice(l, 0, { c: e, s: i, up: n, pr: r });
                            }),
                            (h.removeEventListener = function (t, e) {
                                var i,
                                    n = this._listeners[t];
                                if (n) for (i = n.length; --i > -1; ) if (n[i].c === e) return void n.splice(i, 1);
                            }),
                            (h.dispatchEvent = function (t) {
                                var e,
                                    i,
                                    n,
                                    r = this._listeners[t];
                                if (r) for (e = r.length, e > 1 && (r = r.slice(0)), i = this._eventTarget; --e > -1; ) (n = r[e]) && (n.up ? n.c.call(n.s || i, { type: t, target: i }) : n.c.call(n.s || i));
                            });
                        var R = i.requestAnimationFrame,
                            C = i.cancelAnimationFrame,
                            P =
                                Date.now ||
                                function () {
                                    return new Date().getTime();
                                },
                            D = P();
                        for (c = ["ms", "moz", "webkit", "o"], u = c.length; --u > -1 && !R; ) (R = i[c[u] + "RequestAnimationFrame"]), (C = i[c[u] + "CancelAnimationFrame"] || i[c[u] + "CancelRequestAnimationFrame"]);
                        w("Ticker", function (t, e) {
                            var i,
                                n,
                                r,
                                o,
                                a,
                                l = this,
                                c = P(),
                                u = !(!1 === e || !R) && "auto",
                                h = 500,
                                f = 33,
                                m = function (t) {
                                    var e,
                                        s,
                                        u = P() - D;
                                    u > h && (c += u - f),
                                        (D += u),
                                        (l.time = (D - c) / 1e3),
                                        (e = l.time - a),
                                        (!i || e > 0 || !0 === t) && (l.frame++, (a += e + (e >= o ? 0.004 : o - e)), (s = !0)),
                                        !0 !== t && (r = n(m)),
                                        s && l.dispatchEvent("tick");
                                };
                            A.call(l),
                                (l.time = l.frame = 0),
                                (l.tick = function () {
                                    m(!0);
                                }),
                                (l.lagSmoothing = function (t, e) {
                                    if (!arguments.length) return h < 1e10;
                                    (h = t || 1e10), (f = Math.min(e, h, 0));
                                }),
                                (l.sleep = function () {
                                    null != r && (u && C ? C(r) : clearTimeout(r), (n = g), (r = null), l === d && (p = !1));
                                }),
                                (l.wake = function (t) {
                                    null !== r ? l.sleep() : t ? (c += -D + (D = P())) : l.frame > 10 && (D = P() - h + 5),
                                        (n =
                                            0 === i
                                                ? g
                                                : u && R
                                                ? R
                                                : function (t) {
                                                      return setTimeout(t, (1e3 * (a - l.time) + 1) | 0);
                                                  }),
                                        l === d && (p = !0),
                                        m(2);
                                }),
                                (l.fps = function (t) {
                                    if (!arguments.length) return i;
                                    (i = t), (o = 1 / (i || 60)), (a = this.time + o), l.wake();
                                }),
                                (l.useRAF = function (t) {
                                    if (!arguments.length) return u;
                                    l.sleep(), (u = t), l.fps(i);
                                }),
                                l.fps(t),
                                setTimeout(function () {
                                    "auto" === u && l.frame < 5 && "hidden" !== s.visibilityState && l.useRAF(!1);
                                }, 1500);
                        }),
                            (h = m.Ticker.prototype = new m.events.EventDispatcher()),
                            (h.constructor = m.Ticker);
                        var O = w("core.Animation", function (t, e) {
                            if (
                                ((this.vars = e = e || {}),
                                (this._duration = this._totalDuration = t || 0),
                                (this._delay = Number(e.delay) || 0),
                                (this._timeScale = 1),
                                (this._active = !0 === e.immediateRender),
                                (this.data = e.data),
                                (this._reversed = !0 === e.reversed),
                                $)
                            ) {
                                p || d.wake();
                                var i = this.vars.useFrames ? Q : $;
                                i.add(this, i._time), this.vars.paused && this.paused(!0);
                            }
                        });
                        (d = O.ticker = new m.Ticker()),
                            (h = O.prototype),
                            (h._dirty = h._gc = h._initted = h._paused = !1),
                            (h._totalTime = h._time = 0),
                            (h._rawPrevTime = -1),
                            (h._next = h._last = h._onUpdate = h._timeline = h.timeline = null),
                            (h._paused = !1);
                        var L = function () {
                            p && P() - D > 2e3 && ("hidden" !== s.visibilityState || !d.lagSmoothing()) && d.wake();
                            var t = setTimeout(L, 2e3);
                            t.unref && t.unref();
                        };
                        L(),
                            (h.play = function (t, e) {
                                return null != t && this.seek(t, e), this.reversed(!1).paused(!1);
                            }),
                            (h.pause = function (t, e) {
                                return null != t && this.seek(t, e), this.paused(!0);
                            }),
                            (h.resume = function (t, e) {
                                return null != t && this.seek(t, e), this.paused(!1);
                            }),
                            (h.seek = function (t, e) {
                                return this.totalTime(Number(t), !1 !== e);
                            }),
                            (h.restart = function (t, e) {
                                return this.reversed(!1)
                                    .paused(!1)
                                    .totalTime(t ? -this._delay : 0, !1 !== e, !0);
                            }),
                            (h.reverse = function (t, e) {
                                return null != t && this.seek(t || this.totalDuration(), e), this.reversed(!0).paused(!1);
                            }),
                            (h.render = function (t, e, i) {}),
                            (h.invalidate = function () {
                                return (this._time = this._totalTime = 0), (this._initted = this._gc = !1), (this._rawPrevTime = -1), (!this._gc && this.timeline) || this._enabled(!0), this;
                            }),
                            (h.isActive = function () {
                                var t,
                                    e = this._timeline,
                                    i = this._startTime;
                                return !e || (!this._gc && !this._paused && e.isActive() && (t = e.rawTime(!0)) >= i && t < i + this.totalDuration() / this._timeScale - 1e-7);
                            }),
                            (h._enabled = function (t, e) {
                                return (
                                    p || d.wake(),
                                    (this._gc = !t),
                                    (this._active = this.isActive()),
                                    !0 !== e && (t && !this.timeline ? this._timeline.add(this, this._startTime - this._delay) : !t && this.timeline && this._timeline._remove(this, !0)),
                                    !1
                                );
                            }),
                            (h._kill = function (t, e) {
                                return this._enabled(!1, !1);
                            }),
                            (h.kill = function (t, e) {
                                return this._kill(t, e), this;
                            }),
                            (h._uncache = function (t) {
                                for (var e = t ? this : this.timeline; e; ) (e._dirty = !0), (e = e.timeline);
                                return this;
                            }),
                            (h._swapSelfInParams = function (t) {
                                for (var e = t.length, i = t.concat(); --e > -1; ) "{self}" === t[e] && (i[e] = this);
                                return i;
                            }),
                            (h._callback = function (t) {
                                var e = this.vars,
                                    i = e[t],
                                    n = e[t + "Params"],
                                    r = e[t + "Scope"] || e.callbackScope || this;
                                switch (n ? n.length : 0) {
                                    case 0:
                                        i.call(r);
                                        break;
                                    case 1:
                                        i.call(r, n[0]);
                                        break;
                                    case 2:
                                        i.call(r, n[0], n[1]);
                                        break;
                                    default:
                                        i.apply(r, n);
                                }
                            }),
                            (h.eventCallback = function (t, e, i, n) {
                                if ("on" === (t || "").substr(0, 2)) {
                                    var r = this.vars;
                                    if (1 === arguments.length) return r[t];
                                    null == e ? delete r[t] : ((r[t] = e), (r[t + "Params"] = y(i) && -1 !== i.join("").indexOf("{self}") ? this._swapSelfInParams(i) : i), (r[t + "Scope"] = n)), "onUpdate" === t && (this._onUpdate = e);
                                }
                                return this;
                            }),
                            (h.delay = function (t) {
                                return arguments.length ? (this._timeline.smoothChildTiming && this.startTime(this._startTime + t - this._delay), (this._delay = t), this) : this._delay;
                            }),
                            (h.duration = function (t) {
                                return arguments.length
                                    ? ((this._duration = this._totalDuration = t),
                                      this._uncache(!0),
                                      this._timeline.smoothChildTiming && this._time > 0 && this._time < this._duration && 0 !== t && this.totalTime(this._totalTime * (t / this._duration), !0),
                                      this)
                                    : ((this._dirty = !1), this._duration);
                            }),
                            (h.totalDuration = function (t) {
                                return (this._dirty = !1), arguments.length ? this.duration(t) : this._totalDuration;
                            }),
                            (h.time = function (t, e) {
                                return arguments.length ? (this._dirty && this.totalDuration(), this.totalTime(t > this._duration ? this._duration : t, e)) : this._time;
                            }),
                            (h.totalTime = function (t, e, i) {
                                if ((p || d.wake(), !arguments.length)) return this._totalTime;
                                if (this._timeline) {
                                    if ((t < 0 && !i && (t += this.totalDuration()), this._timeline.smoothChildTiming)) {
                                        this._dirty && this.totalDuration();
                                        var n = this._totalDuration,
                                            r = this._timeline;
                                        if ((t > n && !i && (t = n), (this._startTime = (this._paused ? this._pauseTime : r._time) - (this._reversed ? n - t : t) / this._timeScale), r._dirty || this._uncache(!1), r._timeline))
                                            for (; r._timeline; ) r._timeline._time !== (r._startTime + r._totalTime) / r._timeScale && r.totalTime(r._totalTime, !0), (r = r._timeline);
                                    }
                                    this._gc && this._enabled(!0, !1), (this._totalTime === t && 0 !== this._duration) || (F.length && tt(), this.render(t, e, !1), F.length && tt());
                                }
                                return this;
                            }),
                            (h.progress = h.totalProgress = function (t, e) {
                                var i = this.duration();
                                return arguments.length ? this.totalTime(i * t, e) : i ? this._time / i : this.ratio;
                            }),
                            (h.startTime = function (t) {
                                return arguments.length ? (t !== this._startTime && ((this._startTime = t), this.timeline && this.timeline._sortChildren && this.timeline.add(this, t - this._delay)), this) : this._startTime;
                            }),
                            (h.endTime = function (t) {
                                return this._startTime + (0 != t ? this.totalDuration() : this.duration()) / this._timeScale;
                            }),
                            (h.timeScale = function (t) {
                                if (!arguments.length) return this._timeScale;
                                var e, i;
                                for (
                                    t = t || 1e-10,
                                        this._timeline &&
                                            this._timeline.smoothChildTiming &&
                                            ((e = this._pauseTime), (i = e || 0 === e ? e : this._timeline.totalTime()), (this._startTime = i - ((i - this._startTime) * this._timeScale) / t)),
                                        this._timeScale = t,
                                        i = this.timeline;
                                    i && i.timeline;

                                )
                                    (i._dirty = !0), i.totalDuration(), (i = i.timeline);
                                return this;
                            }),
                            (h.reversed = function (t) {
                                return arguments.length
                                    ? (t != this._reversed && ((this._reversed = t), this.totalTime(this._timeline && !this._timeline.smoothChildTiming ? this.totalDuration() - this._totalTime : this._totalTime, !0)), this)
                                    : this._reversed;
                            }),
                            (h.paused = function (t) {
                                if (!arguments.length) return this._paused;
                                var e,
                                    i,
                                    n = this._timeline;
                                return (
                                    t != this._paused &&
                                        n &&
                                        (p || t || d.wake(),
                                        (e = n.rawTime()),
                                        (i = e - this._pauseTime),
                                        !t && n.smoothChildTiming && ((this._startTime += i), this._uncache(!1)),
                                        (this._pauseTime = t ? e : null),
                                        (this._paused = t),
                                        (this._active = this.isActive()),
                                        !t && 0 !== i && this._initted && this.duration() && ((e = n.smoothChildTiming ? this._totalTime : (e - this._startTime) / this._timeScale), this.render(e, e === this._totalTime, !0))),
                                    this._gc && !t && this._enabled(!0, !1),
                                    this
                                );
                            });
                        var j = w("core.SimpleTimeline", function (t) {
                            O.call(this, 0, t), (this.autoRemoveChildren = this.smoothChildTiming = !0);
                        });
                        (h = j.prototype = new O()),
                            (h.constructor = j),
                            (h.kill()._gc = !1),
                            (h._first = h._last = h._recent = null),
                            (h._sortChildren = !1),
                            (h.add = h.insert = function (t, e, i, n) {
                                var r, o;
                                if (
                                    ((t._startTime = Number(e || 0) + t._delay),
                                    t._paused && this !== t._timeline && (t._pauseTime = t._startTime + (this.rawTime() - t._startTime) / t._timeScale),
                                    t.timeline && t.timeline._remove(t, !0),
                                    (t.timeline = t._timeline = this),
                                    t._gc && t._enabled(!0, !0),
                                    (r = this._last),
                                    this._sortChildren)
                                )
                                    for (o = t._startTime; r && r._startTime > o; ) r = r._prev;
                                return (
                                    r ? ((t._next = r._next), (r._next = t)) : ((t._next = this._first), (this._first = t)),
                                    t._next ? (t._next._prev = t) : (this._last = t),
                                    (t._prev = r),
                                    (this._recent = t),
                                    this._timeline && this._uncache(!0),
                                    this
                                );
                            }),
                            (h._remove = function (t, e) {
                                return (
                                    t.timeline === this &&
                                        (e || t._enabled(!1, !0),
                                        t._prev ? (t._prev._next = t._next) : this._first === t && (this._first = t._next),
                                        t._next ? (t._next._prev = t._prev) : this._last === t && (this._last = t._prev),
                                        (t._next = t._prev = t.timeline = null),
                                        t === this._recent && (this._recent = this._last),
                                        this._timeline && this._uncache(!0)),
                                    this
                                );
                            }),
                            (h.render = function (t, e, i) {
                                var n,
                                    r = this._first;
                                for (this._totalTime = this._time = this._rawPrevTime = t; r; )
                                    (n = r._next),
                                        (r._active || (t >= r._startTime && !r._paused && !r._gc)) &&
                                            (r._reversed ? r.render((r._dirty ? r.totalDuration() : r._totalDuration) - (t - r._startTime) * r._timeScale, e, i) : r.render((t - r._startTime) * r._timeScale, e, i)),
                                        (r = n);
                            }),
                            (h.rawTime = function () {
                                return p || d.wake(), this._totalTime;
                            });
                        var k = w(
                                "TweenLite",
                                function (t, e, n) {
                                    if ((O.call(this, e, n), (this.render = k.prototype.render), null == t)) throw "Cannot tween a null target.";
                                    this.target = t = "string" != typeof t ? t : k.selector(t) || t;
                                    var r,
                                        o,
                                        a,
                                        s = t.jquery || (t.length && t !== i && t[0] && (t[0] === i || (t[0].nodeType && t[0].style && !t.nodeType))),
                                        l = this.vars.overwrite;
                                    if (((this._overwrite = l = null == l ? J[k.defaultOverwrite] : "number" == typeof l ? l >> 0 : J[l]), (s || t instanceof Array || (t.push && y(t))) && "number" != typeof t[0]))
                                        for (this._targets = a = v(t), this._propLookup = [], this._siblings = [], r = 0; r < a.length; r++)
                                            (o = a[r]),
                                                o
                                                    ? "string" != typeof o
                                                        ? o.length && o !== i && o[0] && (o[0] === i || (o[0].nodeType && o[0].style && !o.nodeType))
                                                            ? (a.splice(r--, 1), (this._targets = a = a.concat(v(o))))
                                                            : ((this._siblings[r] = et(o, this, !1)), 1 === l && this._siblings[r].length > 1 && nt(o, this, null, 1, this._siblings[r]))
                                                        : "string" == typeof (o = a[r--] = k.selector(o)) && a.splice(r + 1, 1)
                                                    : a.splice(r--, 1);
                                    else (this._propLookup = {}), (this._siblings = et(t, this, !1)), 1 === l && this._siblings.length > 1 && nt(t, this, null, 1, this._siblings);
                                    (this.vars.immediateRender || (0 === e && 0 === this._delay && !1 !== this.vars.immediateRender)) && ((this._time = -1e-10), this.render(Math.min(0, -this._delay)));
                                },
                                !0
                            ),
                            I = function (t) {
                                return t && t.length && t !== i && t[0] && (t[0] === i || (t[0].nodeType && t[0].style && !t.nodeType));
                            },
                            N = function (t, e) {
                                var i,
                                    n = {};
                                for (i in t)
                                    Z[i] ||
                                        (i in e && "transform" !== i && "x" !== i && "y" !== i && "width" !== i && "height" !== i && "className" !== i && "border" !== i) ||
                                        !(!X[i] || (X[i] && X[i]._autoCSS)) ||
                                        ((n[i] = t[i]), delete t[i]);
                                t.css = n;
                            };
                        (h = k.prototype = new O()),
                            (h.constructor = k),
                            (h.kill()._gc = !1),
                            (h.ratio = 0),
                            (h._firstPT = h._targets = h._overwrittenProps = h._startAt = null),
                            (h._notifyPluginsOfEnabled = h._lazy = !1),
                            (k.version = "1.20.3"),
                            (k.defaultEase = h._ease = new E(null, null, 1, 1)),
                            (k.defaultOverwrite = "auto"),
                            (k.ticker = d),
                            (k.autoSleep = 120),
                            (k.lagSmoothing = function (t, e) {
                                d.lagSmoothing(t, e);
                            }),
                            (k.selector =
                                i.$ ||
                                i.jQuery ||
                                function (t) {
                                    var e = i.$ || i.jQuery;
                                    return e ? ((k.selector = e), e(t)) : void 0 === s ? t : s.querySelectorAll ? s.querySelectorAll(t) : s.getElementById("#" === t.charAt(0) ? t.substr(1) : t);
                                });
                        var F = [],
                            U = {},
                            B = /(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi,
                            G = /[\+-]=-?[\.\d]/,
                            z = function (t) {
                                for (var e, i = this._firstPT; i; )
                                    (e = i.blob ? (1 === t && null != this.end ? this.end : t ? this.join("") : this.start) : i.c * t + i.s),
                                        i.m ? (e = i.m(e, this._target || i.t)) : e < 1e-6 && e > -1e-6 && !i.blob && (e = 0),
                                        i.f ? (i.fp ? i.t[i.p](i.fp, e) : i.t[i.p](e)) : (i.t[i.p] = e),
                                        (i = i._next);
                            },
                            V = function (t, e, i, n) {
                                var r,
                                    o,
                                    a,
                                    s,
                                    l,
                                    c,
                                    u,
                                    h = [],
                                    d = 0,
                                    p = "",
                                    f = 0;
                                for (
                                    h.start = t,
                                        h.end = e,
                                        t = h[0] = t + "",
                                        e = h[1] = e + "",
                                        i && (i(h), (t = h[0]), (e = h[1])),
                                        h.length = 0,
                                        r = t.match(B) || [],
                                        o = e.match(B) || [],
                                        n && ((n._next = null), (n.blob = 1), (h._firstPT = h._applyPT = n)),
                                        l = o.length,
                                        s = 0;
                                    s < l;
                                    s++
                                )
                                    (u = o[s]),
                                        (c = e.substr(d, e.indexOf(u, d) - d)),
                                        (p += c || !s ? c : ","),
                                        (d += c.length),
                                        f ? (f = (f + 1) % 5) : "rgba(" === c.substr(-5) && (f = 1),
                                        u === r[s] || r.length <= s
                                            ? (p += u)
                                            : (p && (h.push(p), (p = "")),
                                              (a = parseFloat(r[s])),
                                              h.push(a),
                                              (h._firstPT = {
                                                  _next: h._firstPT,
                                                  t: h,
                                                  p: h.length - 1,
                                                  s: a,
                                                  c: ("=" === u.charAt(1) ? parseInt(u.charAt(0) + "1", 10) * parseFloat(u.substr(2)) : parseFloat(u) - a) || 0,
                                                  f: 0,
                                                  m: f && f < 4 ? Math.round : 0,
                                              })),
                                        (d += u.length);
                                return (p += e.substr(d)), p && h.push(p), (h.setRatio = z), G.test(e) && (h.end = null), h;
                            },
                            H = function (t, e, i, n, r, o, a, s, l) {
                                "function" == typeof n && (n = n(l || 0, t));
                                var c,
                                    u = typeof t[e],
                                    h = "function" !== u ? "" : e.indexOf("set") || "function" != typeof t["get" + e.substr(3)] ? e : "get" + e.substr(3),
                                    d = "get" !== i ? i : h ? (a ? t[h](a) : t[h]()) : t[e],
                                    p = "string" == typeof n && "=" === n.charAt(1),
                                    f = {
                                        t: t,
                                        p: e,
                                        s: d,
                                        f: "function" === u,
                                        pg: 0,
                                        n: r || e,
                                        m: o ? ("function" == typeof o ? o : Math.round) : 0,
                                        pr: 0,
                                        c: p ? parseInt(n.charAt(0) + "1", 10) * parseFloat(n.substr(2)) : parseFloat(n) - d || 0,
                                    };
                                if (
                                    (("number" != typeof d || ("number" != typeof n && !p)) &&
                                        (a || isNaN(d) || (!p && isNaN(n)) || "boolean" == typeof d || "boolean" == typeof n
                                            ? ((f.fp = a), (c = V(d, p ? parseFloat(f.s) + f.c : n, s || k.defaultStringFilter, f)), (f = { t: c, p: "setRatio", s: 0, c: 1, f: 2, pg: 0, n: r || e, pr: 0, m: 0 }))
                                            : ((f.s = parseFloat(d)), p || (f.c = parseFloat(n) - f.s || 0))),
                                    f.c)
                                )
                                    return (f._next = this._firstPT) && (f._next._prev = f), (this._firstPT = f), f;
                            },
                            W = (k._internals = { isArray: y, isSelector: I, lazyTweens: F, blobDif: V }),
                            X = (k._plugins = {}),
                            q = (W.tweenLookup = {}),
                            Y = 0,
                            Z = (W.reservedProps = {
                                ease: 1,
                                delay: 1,
                                overwrite: 1,
                                onComplete: 1,
                                onCompleteParams: 1,
                                onCompleteScope: 1,
                                useFrames: 1,
                                runBackwards: 1,
                                startAt: 1,
                                onUpdate: 1,
                                onUpdateParams: 1,
                                onUpdateScope: 1,
                                onStart: 1,
                                onStartParams: 1,
                                onStartScope: 1,
                                onReverseComplete: 1,
                                onReverseCompleteParams: 1,
                                onReverseCompleteScope: 1,
                                onRepeat: 1,
                                onRepeatParams: 1,
                                onRepeatScope: 1,
                                easeParams: 1,
                                yoyo: 1,
                                immediateRender: 1,
                                repeat: 1,
                                repeatDelay: 1,
                                data: 1,
                                paused: 1,
                                reversed: 1,
                                autoCSS: 1,
                                lazy: 1,
                                onOverwrite: 1,
                                callbackScope: 1,
                                stringFilter: 1,
                                id: 1,
                                yoyoEase: 1,
                            }),
                            J = { none: 0, all: 1, auto: 2, concurrent: 3, allOnStart: 4, preexisting: 5, true: 1, false: 0 },
                            Q = (O._rootFramesTimeline = new j()),
                            $ = (O._rootTimeline = new j()),
                            K = 30,
                            tt = (W.lazyRender = function () {
                                var t,
                                    e = F.length;
                                for (U = {}; --e > -1; ) (t = F[e]) && !1 !== t._lazy && (t.render(t._lazy[0], t._lazy[1], !0), (t._lazy = !1));
                                F.length = 0;
                            });
                        ($._startTime = d.time),
                            (Q._startTime = d.frame),
                            ($._active = Q._active = !0),
                            setTimeout(tt, 1),
                            (O._updateRoot = k.render = function () {
                                var t, e, i;
                                if ((F.length && tt(), $.render((d.time - $._startTime) * $._timeScale, !1, !1), Q.render((d.frame - Q._startTime) * Q._timeScale, !1, !1), F.length && tt(), d.frame >= K)) {
                                    K = d.frame + (parseInt(k.autoSleep, 10) || 120);
                                    for (i in q) {
                                        for (e = q[i].tweens, t = e.length; --t > -1; ) e[t]._gc && e.splice(t, 1);
                                        0 === e.length && delete q[i];
                                    }
                                    if ((!(i = $._first) || i._paused) && k.autoSleep && !Q._first && 1 === d._listeners.tick.length) {
                                        for (; i && i._paused; ) i = i._next;
                                        i || d.sleep();
                                    }
                                }
                            }),
                            d.addEventListener("tick", O._updateRoot);
                        var et = function (t, e, i) {
                                var n,
                                    r,
                                    o = t._gsTweenID;
                                if ((q[o || (t._gsTweenID = o = "t" + Y++)] || (q[o] = { target: t, tweens: [] }), e && ((n = q[o].tweens), (n[(r = n.length)] = e), i))) for (; --r > -1; ) n[r] === e && n.splice(r, 1);
                                return q[o].tweens;
                            },
                            it = function (t, e, i, n) {
                                var r,
                                    o,
                                    a = t.vars.onOverwrite;
                                return a && (r = a(t, e, i, n)), (a = k.onOverwrite), a && (o = a(t, e, i, n)), !1 !== r && !1 !== o;
                            },
                            nt = function (t, e, i, n, r) {
                                var o, a, s, l;
                                if (1 === n || n >= 4) {
                                    for (l = r.length, o = 0; o < l; o++)
                                        if ((s = r[o]) !== e) s._gc || (s._kill(null, t, e) && (a = !0));
                                        else if (5 === n) break;
                                    return a;
                                }
                                var c,
                                    u = e._startTime + 1e-10,
                                    h = [],
                                    d = 0,
                                    p = 0 === e._duration;
                                for (o = r.length; --o > -1; )
                                    (s = r[o]) === e ||
                                        s._gc ||
                                        s._paused ||
                                        (s._timeline !== e._timeline
                                            ? ((c = c || rt(e, 0, p)), 0 === rt(s, c, p) && (h[d++] = s))
                                            : s._startTime <= u && s._startTime + s.totalDuration() / s._timeScale > u && (((p || !s._initted) && u - s._startTime <= 2e-10) || (h[d++] = s)));
                                for (o = d; --o > -1; )
                                    if (((s = h[o]), 2 === n && s._kill(i, t, e) && (a = !0), 2 !== n || (!s._firstPT && s._initted))) {
                                        if (2 !== n && !it(s, e)) continue;
                                        s._enabled(!1, !1) && (a = !0);
                                    }
                                return a;
                            },
                            rt = function (t, e, i) {
                                for (var n = t._timeline, r = n._timeScale, o = t._startTime; n._timeline; ) {
                                    if (((o += n._startTime), (r *= n._timeScale), n._paused)) return -100;
                                    n = n._timeline;
                                }
                                return (o /= r), o > e ? o - e : (i && o === e) || (!t._initted && o - e < 2e-10) ? 1e-10 : (o += t.totalDuration() / t._timeScale / r) > e + 1e-10 ? 0 : o - e - 1e-10;
                            };
                        (h._init = function () {
                            var t,
                                e,
                                i,
                                n,
                                r,
                                o,
                                a = this.vars,
                                s = this._overwrittenProps,
                                l = this._duration,
                                c = !!a.immediateRender,
                                u = a.ease;
                            if (a.startAt) {
                                this._startAt && (this._startAt.render(-1, !0), this._startAt.kill()), (r = {});
                                for (n in a.startAt) r[n] = a.startAt[n];
                                if (
                                    ((r.data = "isStart"),
                                    (r.overwrite = !1),
                                    (r.immediateRender = !0),
                                    (r.lazy = c && !1 !== a.lazy),
                                    (r.startAt = r.delay = null),
                                    (r.onUpdate = a.onUpdate),
                                    (r.onUpdateParams = a.onUpdateParams),
                                    (r.onUpdateScope = a.onUpdateScope || a.callbackScope || this),
                                    (this._startAt = k.to(this.target, 0, r)),
                                    c)
                                )
                                    if (this._time > 0) this._startAt = null;
                                    else if (0 !== l) return;
                            } else if (a.runBackwards && 0 !== l)
                                if (this._startAt) this._startAt.render(-1, !0), this._startAt.kill(), (this._startAt = null);
                                else {
                                    0 !== this._time && (c = !1), (i = {});
                                    for (n in a) (Z[n] && "autoCSS" !== n) || (i[n] = a[n]);
                                    if (((i.overwrite = 0), (i.data = "isFromStart"), (i.lazy = c && !1 !== a.lazy), (i.immediateRender = c), (this._startAt = k.to(this.target, 0, i)), c)) {
                                        if (0 === this._time) return;
                                    } else this._startAt._init(), this._startAt._enabled(!1), this.vars.immediateRender && (this._startAt = null);
                                }
                            if (
                                ((this._ease = u = u ? (u instanceof E ? u : "function" == typeof u ? new E(u, a.easeParams) : M[u] || k.defaultEase) : k.defaultEase),
                                a.easeParams instanceof Array && u.config && (this._ease = u.config.apply(u, a.easeParams)),
                                (this._easeType = this._ease._type),
                                (this._easePower = this._ease._power),
                                (this._firstPT = null),
                                this._targets)
                            )
                                for (o = this._targets.length, t = 0; t < o; t++) this._initProps(this._targets[t], (this._propLookup[t] = {}), this._siblings[t], s ? s[t] : null, t) && (e = !0);
                            else e = this._initProps(this.target, this._propLookup, this._siblings, s, 0);
                            if ((e && k._onPluginEvent("_onInitAllProps", this), s && (this._firstPT || ("function" != typeof this.target && this._enabled(!1, !1))), a.runBackwards))
                                for (i = this._firstPT; i; ) (i.s += i.c), (i.c = -i.c), (i = i._next);
                            (this._onUpdate = a.onUpdate), (this._initted = !0);
                        }),
                            (h._initProps = function (t, e, n, r, o) {
                                var a, s, l, c, u, h;
                                if (null == t) return !1;
                                U[t._gsTweenID] && tt(), this.vars.css || (t.style && t !== i && t.nodeType && X.css && !1 !== this.vars.autoCSS && N(this.vars, t));
                                for (a in this.vars)
                                    if (((h = this.vars[a]), Z[a])) h && (h instanceof Array || (h.push && y(h))) && -1 !== h.join("").indexOf("{self}") && (this.vars[a] = h = this._swapSelfInParams(h, this));
                                    else if (X[a] && (c = new X[a]())._onInitTween(t, this.vars[a], this, o)) {
                                        for (this._firstPT = u = { _next: this._firstPT, t: c, p: "setRatio", s: 0, c: 1, f: 1, n: a, pg: 1, pr: c._priority, m: 0 }, s = c._overwriteProps.length; --s > -1; )
                                            e[c._overwriteProps[s]] = this._firstPT;
                                        (c._priority || c._onInitAllProps) && (l = !0), (c._onDisable || c._onEnable) && (this._notifyPluginsOfEnabled = !0), u._next && (u._next._prev = u);
                                    } else e[a] = H.call(this, t, a, "get", h, a, 0, null, this.vars.stringFilter, o);
                                return r && this._kill(r, t)
                                    ? this._initProps(t, e, n, r, o)
                                    : this._overwrite > 1 && this._firstPT && n.length > 1 && nt(t, this, e, this._overwrite, n)
                                    ? (this._kill(e, t), this._initProps(t, e, n, r, o))
                                    : (this._firstPT && ((!1 !== this.vars.lazy && this._duration) || (this.vars.lazy && !this._duration)) && (U[t._gsTweenID] = !0), l);
                            }),
                            (h.render = function (t, e, i) {
                                var n,
                                    r,
                                    o,
                                    a,
                                    s = this._time,
                                    l = this._duration,
                                    c = this._rawPrevTime;
                                if (t >= l - 1e-7 && t >= 0)
                                    (this._totalTime = this._time = l),
                                        (this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1),
                                        this._reversed || ((n = !0), (r = "onComplete"), (i = i || this._timeline.autoRemoveChildren)),
                                        0 === l &&
                                            (this._initted || !this.vars.lazy || i) &&
                                            (this._startTime === this._timeline._duration && (t = 0),
                                            (c < 0 || (t <= 0 && t >= -1e-7) || (1e-10 === c && "isPause" !== this.data)) && c !== t && ((i = !0), c > 1e-10 && (r = "onReverseComplete")),
                                            (this._rawPrevTime = a = !e || t || c === t ? t : 1e-10));
                                else if (t < 1e-7)
                                    (this._totalTime = this._time = 0),
                                        (this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0),
                                        (0 !== s || (0 === l && c > 0)) && ((r = "onReverseComplete"), (n = this._reversed)),
                                        t < 0 &&
                                            ((this._active = !1),
                                            0 === l && (this._initted || !this.vars.lazy || i) && (c >= 0 && (1e-10 !== c || "isPause" !== this.data) && (i = !0), (this._rawPrevTime = a = !e || t || c === t ? t : 1e-10))),
                                        (!this._initted || (this._startAt && this._startAt.progress())) && (i = !0);
                                else if (((this._totalTime = this._time = t), this._easeType)) {
                                    var u = t / l,
                                        h = this._easeType,
                                        d = this._easePower;
                                    (1 === h || (3 === h && u >= 0.5)) && (u = 1 - u),
                                        3 === h && (u *= 2),
                                        1 === d ? (u *= u) : 2 === d ? (u *= u * u) : 3 === d ? (u *= u * u * u) : 4 === d && (u *= u * u * u * u),
                                        (this.ratio = 1 === h ? 1 - u : 2 === h ? u : t / l < 0.5 ? u / 2 : 1 - u / 2);
                                } else this.ratio = this._ease.getRatio(t / l);
                                if (this._time !== s || i) {
                                    if (!this._initted) {
                                        if ((this._init(), !this._initted || this._gc)) return;
                                        if (!i && this._firstPT && ((!1 !== this.vars.lazy && this._duration) || (this.vars.lazy && !this._duration)))
                                            return (this._time = this._totalTime = s), (this._rawPrevTime = c), F.push(this), void (this._lazy = [t, e]);
                                        this._time && !n ? (this.ratio = this._ease.getRatio(this._time / l)) : n && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1));
                                    }
                                    for (
                                        !1 !== this._lazy && (this._lazy = !1),
                                            this._active || (!this._paused && this._time !== s && t >= 0 && (this._active = !0)),
                                            0 === s && (this._startAt && (t >= 0 ? this._startAt.render(t, !0, i) : r || (r = "_dummyGS")), this.vars.onStart && ((0 === this._time && 0 !== l) || e || this._callback("onStart"))),
                                            o = this._firstPT;
                                        o;

                                    )
                                        o.f ? o.t[o.p](o.c * this.ratio + o.s) : (o.t[o.p] = o.c * this.ratio + o.s), (o = o._next);
                                    this._onUpdate && (t < 0 && this._startAt && -1e-4 !== t && this._startAt.render(t, !0, i), e || ((this._time !== s || n || i) && this._callback("onUpdate"))),
                                        r &&
                                            ((this._gc && !i) ||
                                                (t < 0 && this._startAt && !this._onUpdate && -1e-4 !== t && this._startAt.render(t, !0, i),
                                                n && (this._timeline.autoRemoveChildren && this._enabled(!1, !1), (this._active = !1)),
                                                !e && this.vars[r] && this._callback(r),
                                                0 === l && 1e-10 === this._rawPrevTime && 1e-10 !== a && (this._rawPrevTime = 0)));
                                }
                            }),
                            (h._kill = function (t, e, i) {
                                if (("all" === t && (t = null), null == t && (null == e || e === this.target))) return (this._lazy = !1), this._enabled(!1, !1);
                                e = "string" != typeof e ? e || this._targets || this.target : k.selector(e) || e;
                                var n,
                                    r,
                                    o,
                                    a,
                                    s,
                                    l,
                                    c,
                                    u,
                                    h,
                                    d = i && this._time && i._startTime === this._startTime && this._timeline === i._timeline;
                                if ((y(e) || I(e)) && "number" != typeof e[0]) for (n = e.length; --n > -1; ) this._kill(t, e[n], i) && (l = !0);
                                else {
                                    if (this._targets) {
                                        for (n = this._targets.length; --n > -1; )
                                            if (e === this._targets[n]) {
                                                (s = this._propLookup[n] || {}), (this._overwrittenProps = this._overwrittenProps || []), (r = this._overwrittenProps[n] = t ? this._overwrittenProps[n] || {} : "all");
                                                break;
                                            }
                                    } else {
                                        if (e !== this.target) return !1;
                                        (s = this._propLookup), (r = this._overwrittenProps = t ? this._overwrittenProps || {} : "all");
                                    }
                                    if (s) {
                                        if (((c = t || s), (u = t !== r && "all" !== r && t !== s && ("object" != typeof t || !t._tempKill)), i && (k.onOverwrite || this.vars.onOverwrite))) {
                                            for (o in c) s[o] && (h || (h = []), h.push(o));
                                            if ((h || !t) && !it(this, i, e, h)) return !1;
                                        }
                                        for (o in c)
                                            (a = s[o]) &&
                                                (d && (a.f ? a.t[a.p](a.s) : (a.t[a.p] = a.s), (l = !0)),
                                                a.pg && a.t._kill(c) && (l = !0),
                                                (a.pg && 0 !== a.t._overwriteProps.length) ||
                                                    (a._prev ? (a._prev._next = a._next) : a === this._firstPT && (this._firstPT = a._next), a._next && (a._next._prev = a._prev), (a._next = a._prev = null)),
                                                delete s[o]),
                                                u && (r[o] = 1);
                                        !this._firstPT && this._initted && this._enabled(!1, !1);
                                    }
                                }
                                return l;
                            }),
                            (h.invalidate = function () {
                                return (
                                    this._notifyPluginsOfEnabled && k._onPluginEvent("_onDisable", this),
                                    (this._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null),
                                    (this._notifyPluginsOfEnabled = this._active = this._lazy = !1),
                                    (this._propLookup = this._targets ? {} : []),
                                    O.prototype.invalidate.call(this),
                                    this.vars.immediateRender && ((this._time = -1e-10), this.render(Math.min(0, -this._delay))),
                                    this
                                );
                            }),
                            (h._enabled = function (t, e) {
                                if ((p || d.wake(), t && this._gc)) {
                                    var i,
                                        n = this._targets;
                                    if (n) for (i = n.length; --i > -1; ) this._siblings[i] = et(n[i], this, !0);
                                    else this._siblings = et(this.target, this, !0);
                                }
                                return O.prototype._enabled.call(this, t, e), !(!this._notifyPluginsOfEnabled || !this._firstPT) && k._onPluginEvent(t ? "_onEnable" : "_onDisable", this);
                            }),
                            (k.to = function (t, e, i) {
                                return new k(t, e, i);
                            }),
                            (k.from = function (t, e, i) {
                                return (i.runBackwards = !0), (i.immediateRender = 0 != i.immediateRender), new k(t, e, i);
                            }),
                            (k.fromTo = function (t, e, i, n) {
                                return (n.startAt = i), (n.immediateRender = 0 != n.immediateRender && 0 != i.immediateRender), new k(t, e, n);
                            }),
                            (k.delayedCall = function (t, e, i, n, r) {
                                return new k(e, 0, { delay: t, onComplete: e, onCompleteParams: i, callbackScope: n, onReverseComplete: e, onReverseCompleteParams: i, immediateRender: !1, lazy: !1, useFrames: r, overwrite: 0 });
                            }),
                            (k.set = function (t, e) {
                                return new k(t, 0, e);
                            }),
                            (k.getTweensOf = function (t, e) {
                                if (null == t) return [];
                                t = "string" != typeof t ? t : k.selector(t) || t;
                                var i, n, r, o;
                                if ((y(t) || I(t)) && "number" != typeof t[0]) {
                                    for (i = t.length, n = []; --i > -1; ) n = n.concat(k.getTweensOf(t[i], e));
                                    for (i = n.length; --i > -1; ) for (o = n[i], r = i; --r > -1; ) o === n[r] && n.splice(i, 1);
                                } else if (t._gsTweenID) for (n = et(t).concat(), i = n.length; --i > -1; ) (n[i]._gc || (e && !n[i].isActive())) && n.splice(i, 1);
                                return n || [];
                            }),
                            (k.killTweensOf = k.killDelayedCallsTo = function (t, e, i) {
                                "object" == typeof e && ((i = e), (e = !1));
                                for (var n = k.getTweensOf(t, e), r = n.length; --r > -1; ) n[r]._kill(i, t);
                            });
                        var ot = w(
                            "plugins.TweenPlugin",
                            function (t, e) {
                                (this._overwriteProps = (t || "").split(",")), (this._propName = this._overwriteProps[0]), (this._priority = e || 0), (this._super = ot.prototype);
                            },
                            !0
                        );
                        if (
                            ((h = ot.prototype),
                            (ot.version = "1.19.0"),
                            (ot.API = 2),
                            (h._firstPT = null),
                            (h._addTween = H),
                            (h.setRatio = z),
                            (h._kill = function (t) {
                                var e,
                                    i = this._overwriteProps,
                                    n = this._firstPT;
                                if (null != t[this._propName]) this._overwriteProps = [];
                                else for (e = i.length; --e > -1; ) null != t[i[e]] && i.splice(e, 1);
                                for (; n; ) null != t[n.n] && (n._next && (n._next._prev = n._prev), n._prev ? ((n._prev._next = n._next), (n._prev = null)) : this._firstPT === n && (this._firstPT = n._next)), (n = n._next);
                                return !1;
                            }),
                            (h._mod = h._roundProps = function (t) {
                                for (var e, i = this._firstPT; i; )
                                    (e = t[this._propName] || (null != i.n && t[i.n.split(this._propName + "_").join("")])), e && "function" == typeof e && (2 === i.f ? (i.t._applyPT.m = e) : (i.m = e)), (i = i._next);
                            }),
                            (k._onPluginEvent = function (t, e) {
                                var i,
                                    n,
                                    r,
                                    o,
                                    a,
                                    s = e._firstPT;
                                if ("_onInitAllProps" === t) {
                                    for (; s; ) {
                                        for (a = s._next, n = r; n && n.pr > s.pr; ) n = n._next;
                                        (s._prev = n ? n._prev : o) ? (s._prev._next = s) : (r = s), (s._next = n) ? (n._prev = s) : (o = s), (s = a);
                                    }
                                    s = e._firstPT = r;
                                }
                                for (; s; ) s.pg && "function" == typeof s.t[t] && s.t[t]() && (i = !0), (s = s._next);
                                return i;
                            }),
                            (ot.activate = function (t) {
                                for (var e = t.length; --e > -1; ) t[e].API === ot.API && (X[new t[e]()._propName] = t[e]);
                                return !0;
                            }),
                            (x.plugin = function (t) {
                                if (!(t && t.propName && t.init && t.API)) throw "illegal plugin definition.";
                                var e,
                                    i = t.propName,
                                    n = t.priority || 0,
                                    r = t.overwriteProps,
                                    o = { init: "_onInitTween", set: "setRatio", kill: "_kill", round: "_mod", mod: "_mod", initAll: "_onInitAllProps" },
                                    a = w(
                                        "plugins." + i.charAt(0).toUpperCase() + i.substr(1) + "Plugin",
                                        function () {
                                            ot.call(this, i, n), (this._overwriteProps = r || []);
                                        },
                                        !0 === t.global
                                    ),
                                    s = (a.prototype = new ot(i));
                                (s.constructor = a), (a.API = t.API);
                                for (e in o) "function" == typeof t[e] && (s[o[e]] = t[e]);
                                return (a.version = t.version), ot.activate([a]), a;
                            }),
                            (c = i._gsQueue))
                        ) {
                            for (u = 0; u < c.length; u++) c[u]();
                            for (h in _) _[h].func || i.console.log("GSAP encountered missing dependency: " + h);
                        }
                        p = !1;
                    }
                })(void 0 !== t && t.exports && void 0 !== i ? i : this || window);
        }.call(e, i("../node_modules/webpack/buildin/global.js")));
    },
    "../node_modules/jquery-mousewheel/jquery.mousewheel.js": function (t, e, i) {
        var n, r, o;
        !(function (a) {
            (r = [i("../node_modules/jquery/dist/jquery.js")]), (n = a), void 0 !== (o = "function" == typeof n ? n.apply(e, r) : n) && (t.exports = o);
        })(function (t) {
            function e(e) {
                var a = e || window.event,
                    s = l.call(arguments, 1),
                    c = 0,
                    h = 0,
                    d = 0,
                    p = 0,
                    f = 0,
                    m = 0;
                if (
                    ((e = t.event.fix(a)),
                    (e.type = "mousewheel"),
                    "detail" in a && (d = -1 * a.detail),
                    "wheelDelta" in a && (d = a.wheelDelta),
                    "wheelDeltaY" in a && (d = a.wheelDeltaY),
                    "wheelDeltaX" in a && (h = -1 * a.wheelDeltaX),
                    "axis" in a && a.axis === a.HORIZONTAL_AXIS && ((h = -1 * d), (d = 0)),
                    (c = 0 === d ? h : d),
                    "deltaY" in a && ((d = -1 * a.deltaY), (c = d)),
                    "deltaX" in a && ((h = a.deltaX), 0 === d && (c = -1 * h)),
                    0 !== d || 0 !== h)
                ) {
                    if (1 === a.deltaMode) {
                        var v = t.data(this, "mousewheel-line-height");
                        (c *= v), (d *= v), (h *= v);
                    } else if (2 === a.deltaMode) {
                        var g = t.data(this, "mousewheel-page-height");
                        (c *= g), (d *= g), (h *= g);
                    }
                    if (
                        ((p = Math.max(Math.abs(d), Math.abs(h))),
                        (!o || p < o) && ((o = p), n(a, p) && (o /= 40)),
                        n(a, p) && ((c /= 40), (h /= 40), (d /= 40)),
                        (c = Math[c >= 1 ? "floor" : "ceil"](c / o)),
                        (h = Math[h >= 1 ? "floor" : "ceil"](h / o)),
                        (d = Math[d >= 1 ? "floor" : "ceil"](d / o)),
                        u.settings.normalizeOffset && this.getBoundingClientRect)
                    ) {
                        var y = this.getBoundingClientRect();
                        (f = e.clientX - y.left), (m = e.clientY - y.top);
                    }
                    return (
                        (e.deltaX = h),
                        (e.deltaY = d),
                        (e.deltaFactor = o),
                        (e.offsetX = f),
                        (e.offsetY = m),
                        (e.deltaMode = 0),
                        s.unshift(e, c, h, d),
                        r && clearTimeout(r),
                        (r = setTimeout(i, 200)),
                        (t.event.dispatch || t.event.handle).apply(this, s)
                    );
                }
            }
            function i() {
                o = null;
            }
            function n(t, e) {
                return u.settings.adjustOldDeltas && "mousewheel" === t.type && e % 120 == 0;
            }
            var r,
                o,
                a = ["wheel", "mousewheel", "DOMMouseScroll", "MozMousePixelScroll"],
                s = "onwheel" in document || document.documentMode >= 9 ? ["wheel"] : ["mousewheel", "DomMouseScroll", "MozMousePixelScroll"],
                l = Array.prototype.slice;
            if (t.event.fixHooks) for (var c = a.length; c; ) t.event.fixHooks[a[--c]] = t.event.mouseHooks;
            var u = (t.event.special.mousewheel = {
                version: "3.1.12",
                setup: function () {
                    if (this.addEventListener) for (var i = s.length; i; ) this.addEventListener(s[--i], e, !1);
                    else this.onmousewheel = e;
                    t.data(this, "mousewheel-line-height", u.getLineHeight(this)), t.data(this, "mousewheel-page-height", u.getPageHeight(this));
                },
                teardown: function () {
                    if (this.removeEventListener) for (var i = s.length; i; ) this.removeEventListener(s[--i], e, !1);
                    else this.onmousewheel = null;
                    t.removeData(this, "mousewheel-line-height"), t.removeData(this, "mousewheel-page-height");
                },
                getLineHeight: function (e) {
                    var i = t(e),
                        n = i["offsetParent" in t.fn ? "offsetParent" : "parent"]();
                    return n.length || (n = t("body")), parseInt(n.css("fontSize"), 10) || parseInt(i.css("fontSize"), 10) || 16;
                },
                getPageHeight: function (e) {
                    return t(e).height();
                },
                settings: { adjustOldDeltas: !0, normalizeOffset: !0 },
            });
            t.fn.extend({
                mousewheel: function (t) {
                    return t ? this.bind("mousewheel", t) : this.trigger("mousewheel");
                },
                unmousewheel: function (t) {
                    return this.unbind("mousewheel", t);
                },
            });
        });
    },
    "../node_modules/jquery/dist/jquery.js": function (t, e, i) {
        var n, r;
        !(function (e, i) {
            "use strict";
            "object" == typeof t && "object" == typeof t.exports
                ? (t.exports = e.document
                      ? i(e, !0)
                      : function (t) {
                            if (!t.document) throw new Error("jQuery requires a window with a document");
                            return i(t);
                        })
                : i(e);
        })("undefined" != typeof window ? window : this, function (i, o) {
            "use strict";
            function a(t, e) {
                e = e || at;
                var i = e.createElement("script");
                (i.text = t), e.head.appendChild(i).parentNode.removeChild(i);
            }
            function s(t) {
                var e = !!t && "length" in t && t.length,
                    i = yt.type(t);
                return "function" !== i && !yt.isWindow(t) && ("array" === i || 0 === e || ("number" == typeof e && e > 0 && e - 1 in t));
            }
            function l(t, e) {
                return t.nodeName && t.nodeName.toLowerCase() === e.toLowerCase();
            }
            function c(t, e, i) {
                return yt.isFunction(e)
                    ? yt.grep(t, function (t, n) {
                          return !!e.call(t, n, t) !== i;
                      })
                    : e.nodeType
                    ? yt.grep(t, function (t) {
                          return (t === e) !== i;
                      })
                    : "string" != typeof e
                    ? yt.grep(t, function (t) {
                          return ht.call(e, t) > -1 !== i;
                      })
                    : Rt.test(e)
                    ? yt.filter(e, t, i)
                    : ((e = yt.filter(e, t)),
                      yt.grep(t, function (t) {
                          return ht.call(e, t) > -1 !== i && 1 === t.nodeType;
                      }));
            }
            function u(t, e) {
                for (; (t = t[e]) && 1 !== t.nodeType; );
                return t;
            }
            function h(t) {
                var e = {};
                return (
                    yt.each(t.match(Lt) || [], function (t, i) {
                        e[i] = !0;
                    }),
                    e
                );
            }
            function d(t) {
                return t;
            }
            function p(t) {
                throw t;
            }
            function f(t, e, i, n) {
                var r;
                try {
                    t && yt.isFunction((r = t.promise)) ? r.call(t).done(e).fail(i) : t && yt.isFunction((r = t.then)) ? r.call(t, e, i) : e.apply(void 0, [t].slice(n));
                } catch (t) {
                    i.apply(void 0, [t]);
                }
            }
            function m() {
                at.removeEventListener("DOMContentLoaded", m), i.removeEventListener("load", m), yt.ready();
            }
            function v() {
                this.expando = yt.expando + v.uid++;
            }
            function g(t) {
                return "true" === t || ("false" !== t && ("null" === t ? null : t === +t + "" ? +t : Bt.test(t) ? JSON.parse(t) : t));
            }
            function y(t, e, i) {
                var n;
                if (void 0 === i && 1 === t.nodeType)
                    if (((n = "data-" + e.replace(Gt, "-$&").toLowerCase()), "string" == typeof (i = t.getAttribute(n)))) {
                        try {
                            i = g(i);
                        } catch (t) {}
                        Ut.set(t, e, i);
                    } else i = void 0;
                return i;
            }
            function _(t, e, i, n) {
                var r,
                    o = 1,
                    a = 20,
                    s = n
                        ? function () {
                              return n.cur();
                          }
                        : function () {
                              return yt.css(t, e, "");
                          },
                    l = s(),
                    c = (i && i[3]) || (yt.cssNumber[e] ? "" : "px"),
                    u = (yt.cssNumber[e] || ("px" !== c && +l)) && Vt.exec(yt.css(t, e));
                if (u && u[3] !== c) {
                    (c = c || u[3]), (i = i || []), (u = +l || 1);
                    do {
                        (o = o || ".5"), (u /= o), yt.style(t, e, u + c);
                    } while (o !== (o = s() / l) && 1 !== o && --a);
                }
                return i && ((u = +u || +l || 0), (r = i[1] ? u + (i[1] + 1) * i[2] : +i[2]), n && ((n.unit = c), (n.start = u), (n.end = r))), r;
            }
            function b(t) {
                var e,
                    i = t.ownerDocument,
                    n = t.nodeName,
                    r = qt[n];
                return r || ((e = i.body.appendChild(i.createElement(n))), (r = yt.css(e, "display")), e.parentNode.removeChild(e), "none" === r && (r = "block"), (qt[n] = r), r);
            }
            function x(t, e) {
                for (var i, n, r = [], o = 0, a = t.length; o < a; o++)
                    (n = t[o]),
                        n.style &&
                            ((i = n.style.display),
                            e ? ("none" === i && ((r[o] = Ft.get(n, "display") || null), r[o] || (n.style.display = "")), "" === n.style.display && Wt(n) && (r[o] = b(n))) : "none" !== i && ((r[o] = "none"), Ft.set(n, "display", i)));
                for (o = 0; o < a; o++) null != r[o] && (t[o].style.display = r[o]);
                return t;
            }
            function w(t, e) {
                var i;
                return (i = void 0 !== t.getElementsByTagName ? t.getElementsByTagName(e || "*") : void 0 !== t.querySelectorAll ? t.querySelectorAll(e || "*") : []), void 0 === e || (e && l(t, e)) ? yt.merge([t], i) : i;
            }
            function T(t, e) {
                for (var i = 0, n = t.length; i < n; i++) Ft.set(t[i], "globalEval", !e || Ft.get(e[i], "globalEval"));
            }
            function E(t, e, i, n, r) {
                for (var o, a, s, l, c, u, h = e.createDocumentFragment(), d = [], p = 0, f = t.length; p < f; p++)
                    if ((o = t[p]) || 0 === o)
                        if ("object" === yt.type(o)) yt.merge(d, o.nodeType ? [o] : o);
                        else if ($t.test(o)) {
                            for (a = a || h.appendChild(e.createElement("div")), s = (Zt.exec(o) || ["", ""])[1].toLowerCase(), l = Qt[s] || Qt._default, a.innerHTML = l[1] + yt.htmlPrefilter(o) + l[2], u = l[0]; u--; ) a = a.lastChild;
                            yt.merge(d, a.childNodes), (a = h.firstChild), (a.textContent = "");
                        } else d.push(e.createTextNode(o));
                for (h.textContent = "", p = 0; (o = d[p++]); )
                    if (n && yt.inArray(o, n) > -1) r && r.push(o);
                    else if (((c = yt.contains(o.ownerDocument, o)), (a = w(h.appendChild(o), "script")), c && T(a), i)) for (u = 0; (o = a[u++]); ) Jt.test(o.type || "") && i.push(o);
                return h;
            }
            function M() {
                return !0;
            }
            function S() {
                return !1;
            }
            function A() {
                try {
                    return at.activeElement;
                } catch (t) {}
            }
            function R(t, e, i, n, r, o) {
                var a, s;
                if ("object" == typeof e) {
                    "string" != typeof i && ((n = n || i), (i = void 0));
                    for (s in e) R(t, s, i, n, e[s], o);
                    return t;
                }
                if ((null == n && null == r ? ((r = i), (n = i = void 0)) : null == r && ("string" == typeof i ? ((r = n), (n = void 0)) : ((r = n), (n = i), (i = void 0))), !1 === r)) r = S;
                else if (!r) return t;
                return (
                    1 === o &&
                        ((a = r),
                        (r = function (t) {
                            return yt().off(t), a.apply(this, arguments);
                        }),
                        (r.guid = a.guid || (a.guid = yt.guid++))),
                    t.each(function () {
                        yt.event.add(this, e, r, n, i);
                    })
                );
            }
            function C(t, e) {
                return l(t, "table") && l(11 !== e.nodeType ? e : e.firstChild, "tr") ? yt(">tbody", t)[0] || t : t;
            }
            function P(t) {
                return (t.type = (null !== t.getAttribute("type")) + "/" + t.type), t;
            }
            function D(t) {
                var e = ae.exec(t.type);
                return e ? (t.type = e[1]) : t.removeAttribute("type"), t;
            }
            function O(t, e) {
                var i, n, r, o, a, s, l, c;
                if (1 === e.nodeType) {
                    if (Ft.hasData(t) && ((o = Ft.access(t)), (a = Ft.set(e, o)), (c = o.events))) {
                        delete a.handle, (a.events = {});
                        for (r in c) for (i = 0, n = c[r].length; i < n; i++) yt.event.add(e, r, c[r][i]);
                    }
                    Ut.hasData(t) && ((s = Ut.access(t)), (l = yt.extend({}, s)), Ut.set(e, l));
                }
            }
            function L(t, e) {
                var i = e.nodeName.toLowerCase();
                "input" === i && Yt.test(t.type) ? (e.checked = t.checked) : ("input" !== i && "textarea" !== i) || (e.defaultValue = t.defaultValue);
            }
            function j(t, e, i, n) {
                e = ct.apply([], e);
                var r,
                    o,
                    s,
                    l,
                    c,
                    u,
                    h = 0,
                    d = t.length,
                    p = d - 1,
                    f = e[0],
                    m = yt.isFunction(f);
                if (m || (d > 1 && "string" == typeof f && !gt.checkClone && oe.test(f)))
                    return t.each(function (r) {
                        var o = t.eq(r);
                        m && (e[0] = f.call(this, r, o.html())), j(o, e, i, n);
                    });
                if (d && ((r = E(e, t[0].ownerDocument, !1, t, n)), (o = r.firstChild), 1 === r.childNodes.length && (r = o), o || n)) {
                    for (s = yt.map(w(r, "script"), P), l = s.length; h < d; h++) (c = r), h !== p && ((c = yt.clone(c, !0, !0)), l && yt.merge(s, w(c, "script"))), i.call(t[h], c, h);
                    if (l)
                        for (u = s[s.length - 1].ownerDocument, yt.map(s, D), h = 0; h < l; h++)
                            (c = s[h]), Jt.test(c.type || "") && !Ft.access(c, "globalEval") && yt.contains(u, c) && (c.src ? yt._evalUrl && yt._evalUrl(c.src) : a(c.textContent.replace(se, ""), u));
                }
                return t;
            }
            function k(t, e, i) {
                for (var n, r = e ? yt.filter(e, t) : t, o = 0; null != (n = r[o]); o++) i || 1 !== n.nodeType || yt.cleanData(w(n)), n.parentNode && (i && yt.contains(n.ownerDocument, n) && T(w(n, "script")), n.parentNode.removeChild(n));
                return t;
            }
            function I(t, e, i) {
                var n,
                    r,
                    o,
                    a,
                    s = t.style;
                return (
                    (i = i || ue(t)),
                    i &&
                        ((a = i.getPropertyValue(e) || i[e]),
                        "" !== a || yt.contains(t.ownerDocument, t) || (a = yt.style(t, e)),
                        !gt.pixelMarginRight() && ce.test(a) && le.test(e) && ((n = s.width), (r = s.minWidth), (o = s.maxWidth), (s.minWidth = s.maxWidth = s.width = a), (a = i.width), (s.width = n), (s.minWidth = r), (s.maxWidth = o))),
                    void 0 !== a ? a + "" : a
                );
            }
            function N(t, e) {
                return {
                    get: function () {
                        return t() ? void delete this.get : (this.get = e).apply(this, arguments);
                    },
                };
            }
            function F(t) {
                if (t in ve) return t;
                for (var e = t[0].toUpperCase() + t.slice(1), i = me.length; i--; ) if ((t = me[i] + e) in ve) return t;
            }
            function U(t) {
                var e = yt.cssProps[t];
                return e || (e = yt.cssProps[t] = F(t) || t), e;
            }
            function B(t, e, i) {
                var n = Vt.exec(e);
                return n ? Math.max(0, n[2] - (i || 0)) + (n[3] || "px") : e;
            }
            function G(t, e, i, n, r) {
                var o,
                    a = 0;
                for (o = i === (n ? "border" : "content") ? 4 : "width" === e ? 1 : 0; o < 4; o += 2)
                    "margin" === i && (a += yt.css(t, i + Ht[o], !0, r)),
                        n
                            ? ("content" === i && (a -= yt.css(t, "padding" + Ht[o], !0, r)), "margin" !== i && (a -= yt.css(t, "border" + Ht[o] + "Width", !0, r)))
                            : ((a += yt.css(t, "padding" + Ht[o], !0, r)), "padding" !== i && (a += yt.css(t, "border" + Ht[o] + "Width", !0, r)));
                return a;
            }
            function z(t, e, i) {
                var n,
                    r = ue(t),
                    o = I(t, e, r),
                    a = "border-box" === yt.css(t, "boxSizing", !1, r);
                return ce.test(o)
                    ? o
                    : ((n = a && (gt.boxSizingReliable() || o === t.style[e])), "auto" === o && (o = t["offset" + e[0].toUpperCase() + e.slice(1)]), (o = parseFloat(o) || 0) + G(t, e, i || (a ? "border" : "content"), n, r) + "px");
            }
            function V(t, e, i, n, r) {
                return new V.prototype.init(t, e, i, n, r);
            }
            function H() {
                ye && (!1 === at.hidden && i.requestAnimationFrame ? i.requestAnimationFrame(H) : i.setTimeout(H, yt.fx.interval), yt.fx.tick());
            }
            function W() {
                return (
                    i.setTimeout(function () {
                        ge = void 0;
                    }),
                    (ge = yt.now())
                );
            }
            function X(t, e) {
                var i,
                    n = 0,
                    r = { height: t };
                for (e = e ? 1 : 0; n < 4; n += 2 - e) (i = Ht[n]), (r["margin" + i] = r["padding" + i] = t);
                return e && (r.opacity = r.width = t), r;
            }
            function q(t, e, i) {
                for (var n, r = (J.tweeners[e] || []).concat(J.tweeners["*"]), o = 0, a = r.length; o < a; o++) if ((n = r[o].call(i, e, t))) return n;
            }
            function Y(t, e, i) {
                var n,
                    r,
                    o,
                    a,
                    s,
                    l,
                    c,
                    u,
                    h = "width" in e || "height" in e,
                    d = this,
                    p = {},
                    f = t.style,
                    m = t.nodeType && Wt(t),
                    v = Ft.get(t, "fxshow");
                i.queue ||
                    ((a = yt._queueHooks(t, "fx")),
                    null == a.unqueued &&
                        ((a.unqueued = 0),
                        (s = a.empty.fire),
                        (a.empty.fire = function () {
                            a.unqueued || s();
                        })),
                    a.unqueued++,
                    d.always(function () {
                        d.always(function () {
                            a.unqueued--, yt.queue(t, "fx").length || a.empty.fire();
                        });
                    }));
                for (n in e)
                    if (((r = e[n]), _e.test(r))) {
                        if ((delete e[n], (o = o || "toggle" === r), r === (m ? "hide" : "show"))) {
                            if ("show" !== r || !v || void 0 === v[n]) continue;
                            m = !0;
                        }
                        p[n] = (v && v[n]) || yt.style(t, n);
                    }
                if ((l = !yt.isEmptyObject(e)) || !yt.isEmptyObject(p)) {
                    h &&
                        1 === t.nodeType &&
                        ((i.overflow = [f.overflow, f.overflowX, f.overflowY]),
                        (c = v && v.display),
                        null == c && (c = Ft.get(t, "display")),
                        (u = yt.css(t, "display")),
                        "none" === u && (c ? (u = c) : (x([t], !0), (c = t.style.display || c), (u = yt.css(t, "display")), x([t]))),
                        ("inline" === u || ("inline-block" === u && null != c)) &&
                            "none" === yt.css(t, "float") &&
                            (l ||
                                (d.done(function () {
                                    f.display = c;
                                }),
                                null == c && ((u = f.display), (c = "none" === u ? "" : u))),
                            (f.display = "inline-block"))),
                        i.overflow &&
                            ((f.overflow = "hidden"),
                            d.always(function () {
                                (f.overflow = i.overflow[0]), (f.overflowX = i.overflow[1]), (f.overflowY = i.overflow[2]);
                            })),
                        (l = !1);
                    for (n in p)
                        l ||
                            (v ? "hidden" in v && (m = v.hidden) : (v = Ft.access(t, "fxshow", { display: c })),
                            o && (v.hidden = !m),
                            m && x([t], !0),
                            d.done(function () {
                                m || x([t]), Ft.remove(t, "fxshow");
                                for (n in p) yt.style(t, n, p[n]);
                            })),
                            (l = q(m ? v[n] : 0, n, d)),
                            n in v || ((v[n] = l.start), m && ((l.end = l.start), (l.start = 0)));
                }
            }
            function Z(t, e) {
                var i, n, r, o, a;
                for (i in t)
                    if (((n = yt.camelCase(i)), (r = e[n]), (o = t[i]), Array.isArray(o) && ((r = o[1]), (o = t[i] = o[0])), i !== n && ((t[n] = o), delete t[i]), (a = yt.cssHooks[n]) && "expand" in a)) {
                        (o = a.expand(o)), delete t[n];
                        for (i in o) i in t || ((t[i] = o[i]), (e[i] = r));
                    } else e[n] = r;
            }
            function J(t, e, i) {
                var n,
                    r,
                    o = 0,
                    a = J.prefilters.length,
                    s = yt.Deferred().always(function () {
                        delete l.elem;
                    }),
                    l = function () {
                        if (r) return !1;
                        for (var e = ge || W(), i = Math.max(0, c.startTime + c.duration - e), n = i / c.duration || 0, o = 1 - n, a = 0, l = c.tweens.length; a < l; a++) c.tweens[a].run(o);
                        return s.notifyWith(t, [c, o, i]), o < 1 && l ? i : (l || s.notifyWith(t, [c, 1, 0]), s.resolveWith(t, [c]), !1);
                    },
                    c = s.promise({
                        elem: t,
                        props: yt.extend({}, e),
                        opts: yt.extend(!0, { specialEasing: {}, easing: yt.easing._default }, i),
                        originalProperties: e,
                        originalOptions: i,
                        startTime: ge || W(),
                        duration: i.duration,
                        tweens: [],
                        createTween: function (e, i) {
                            var n = yt.Tween(t, c.opts, e, i, c.opts.specialEasing[e] || c.opts.easing);
                            return c.tweens.push(n), n;
                        },
                        stop: function (e) {
                            var i = 0,
                                n = e ? c.tweens.length : 0;
                            if (r) return this;
                            for (r = !0; i < n; i++) c.tweens[i].run(1);
                            return e ? (s.notifyWith(t, [c, 1, 0]), s.resolveWith(t, [c, e])) : s.rejectWith(t, [c, e]), this;
                        },
                    }),
                    u = c.props;
                for (Z(u, c.opts.specialEasing); o < a; o++) if ((n = J.prefilters[o].call(c, t, u, c.opts))) return yt.isFunction(n.stop) && (yt._queueHooks(c.elem, c.opts.queue).stop = yt.proxy(n.stop, n)), n;
                return (
                    yt.map(u, q, c),
                    yt.isFunction(c.opts.start) && c.opts.start.call(t, c),
                    c.progress(c.opts.progress).done(c.opts.done, c.opts.complete).fail(c.opts.fail).always(c.opts.always),
                    yt.fx.timer(yt.extend(l, { elem: t, anim: c, queue: c.opts.queue })),
                    c
                );
            }
            function Q(t) {
                return (t.match(Lt) || []).join(" ");
            }
            function $(t) {
                return (t.getAttribute && t.getAttribute("class")) || "";
            }
            function K(t, e, i, n) {
                var r;
                if (Array.isArray(e))
                    yt.each(e, function (e, r) {
                        i || Pe.test(t) ? n(t, r) : K(t + "[" + ("object" == typeof r && null != r ? e : "") + "]", r, i, n);
                    });
                else if (i || "object" !== yt.type(e)) n(t, e);
                else for (r in e) K(t + "[" + r + "]", e[r], i, n);
            }
            function tt(t) {
                return function (e, i) {
                    "string" != typeof e && ((i = e), (e = "*"));
                    var n,
                        r = 0,
                        o = e.toLowerCase().match(Lt) || [];
                    if (yt.isFunction(i)) for (; (n = o[r++]); ) "+" === n[0] ? ((n = n.slice(1) || "*"), (t[n] = t[n] || []).unshift(i)) : (t[n] = t[n] || []).push(i);
                };
            }
            function et(t, e, i, n) {
                function r(s) {
                    var l;
                    return (
                        (o[s] = !0),
                        yt.each(t[s] || [], function (t, s) {
                            var c = s(e, i, n);
                            return "string" != typeof c || a || o[c] ? (a ? !(l = c) : void 0) : (e.dataTypes.unshift(c), r(c), !1);
                        }),
                        l
                    );
                }
                var o = {},
                    a = t === ze;
                return r(e.dataTypes[0]) || (!o["*"] && r("*"));
            }
            function it(t, e) {
                var i,
                    n,
                    r = yt.ajaxSettings.flatOptions || {};
                for (i in e) void 0 !== e[i] && ((r[i] ? t : n || (n = {}))[i] = e[i]);
                return n && yt.extend(!0, t, n), t;
            }
            function nt(t, e, i) {
                for (var n, r, o, a, s = t.contents, l = t.dataTypes; "*" === l[0]; ) l.shift(), void 0 === n && (n = t.mimeType || e.getResponseHeader("Content-Type"));
                if (n)
                    for (r in s)
                        if (s[r] && s[r].test(n)) {
                            l.unshift(r);
                            break;
                        }
                if (l[0] in i) o = l[0];
                else {
                    for (r in i) {
                        if (!l[0] || t.converters[r + " " + l[0]]) {
                            o = r;
                            break;
                        }
                        a || (a = r);
                    }
                    o = o || a;
                }
                if (o) return o !== l[0] && l.unshift(o), i[o];
            }
            function rt(t, e, i, n) {
                var r,
                    o,
                    a,
                    s,
                    l,
                    c = {},
                    u = t.dataTypes.slice();
                if (u[1]) for (a in t.converters) c[a.toLowerCase()] = t.converters[a];
                for (o = u.shift(); o; )
                    if ((t.responseFields[o] && (i[t.responseFields[o]] = e), !l && n && t.dataFilter && (e = t.dataFilter(e, t.dataType)), (l = o), (o = u.shift())))
                        if ("*" === o) o = l;
                        else if ("*" !== l && l !== o) {
                            if (!(a = c[l + " " + o] || c["* " + o]))
                                for (r in c)
                                    if (((s = r.split(" ")), s[1] === o && (a = c[l + " " + s[0]] || c["* " + s[0]]))) {
                                        !0 === a ? (a = c[r]) : !0 !== c[r] && ((o = s[0]), u.unshift(s[1]));
                                        break;
                                    }
                            if (!0 !== a)
                                if (a && t.throws) e = a(e);
                                else
                                    try {
                                        e = a(e);
                                    } catch (t) {
                                        return { state: "parsererror", error: a ? t : "No conversion from " + l + " to " + o };
                                    }
                        }
                return { state: "success", data: e };
            }
            var ot = [],
                at = i.document,
                st = Object.getPrototypeOf,
                lt = ot.slice,
                ct = ot.concat,
                ut = ot.push,
                ht = ot.indexOf,
                dt = {},
                pt = dt.toString,
                ft = dt.hasOwnProperty,
                mt = ft.toString,
                vt = mt.call(Object),
                gt = {},
                yt = function (t, e) {
                    return new yt.fn.init(t, e);
                },
                _t = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
                bt = /^-ms-/,
                xt = /-([a-z])/g,
                wt = function (t, e) {
                    return e.toUpperCase();
                };
            (yt.fn = yt.prototype = {
                jquery: "3.2.1",
                constructor: yt,
                length: 0,
                toArray: function () {
                    return lt.call(this);
                },
                get: function (t) {
                    return null == t ? lt.call(this) : t < 0 ? this[t + this.length] : this[t];
                },
                pushStack: function (t) {
                    var e = yt.merge(this.constructor(), t);
                    return (e.prevObject = this), e;
                },
                each: function (t) {
                    return yt.each(this, t);
                },
                map: function (t) {
                    return this.pushStack(
                        yt.map(this, function (e, i) {
                            return t.call(e, i, e);
                        })
                    );
                },
                slice: function () {
                    return this.pushStack(lt.apply(this, arguments));
                },
                first: function () {
                    return this.eq(0);
                },
                last: function () {
                    return this.eq(-1);
                },
                eq: function (t) {
                    var e = this.length,
                        i = +t + (t < 0 ? e : 0);
                    return this.pushStack(i >= 0 && i < e ? [this[i]] : []);
                },
                end: function () {
                    return this.prevObject || this.constructor();
                },
                push: ut,
                sort: ot.sort,
                splice: ot.splice,
            }),
                (yt.extend = yt.fn.extend = function () {
                    var t,
                        e,
                        i,
                        n,
                        r,
                        o,
                        a = arguments[0] || {},
                        s = 1,
                        l = arguments.length,
                        c = !1;
                    for ("boolean" == typeof a && ((c = a), (a = arguments[s] || {}), s++), "object" == typeof a || yt.isFunction(a) || (a = {}), s === l && ((a = this), s--); s < l; s++)
                        if (null != (t = arguments[s]))
                            for (e in t)
                                (i = a[e]),
                                    (n = t[e]),
                                    a !== n &&
                                        (c && n && (yt.isPlainObject(n) || (r = Array.isArray(n)))
                                            ? (r ? ((r = !1), (o = i && Array.isArray(i) ? i : [])) : (o = i && yt.isPlainObject(i) ? i : {}), (a[e] = yt.extend(c, o, n)))
                                            : void 0 !== n && (a[e] = n));
                    return a;
                }),
                yt.extend({
                    expando: "jQuery" + ("3.2.1" + Math.random()).replace(/\D/g, ""),
                    isReady: !0,
                    error: function (t) {
                        throw new Error(t);
                    },
                    noop: function () {},
                    isFunction: function (t) {
                        return "function" === yt.type(t);
                    },
                    isWindow: function (t) {
                        return null != t && t === t.window;
                    },
                    isNumeric: function (t) {
                        var e = yt.type(t);
                        return ("number" === e || "string" === e) && !isNaN(t - parseFloat(t));
                    },
                    isPlainObject: function (t) {
                        var e, i;
                        return !(!t || "[object Object]" !== pt.call(t)) && (!(e = st(t)) || ("function" == typeof (i = ft.call(e, "constructor") && e.constructor) && mt.call(i) === vt));
                    },
                    isEmptyObject: function (t) {
                        var e;
                        for (e in t) return !1;
                        return !0;
                    },
                    type: function (t) {
                        return null == t ? t + "" : "object" == typeof t || "function" == typeof t ? dt[pt.call(t)] || "object" : typeof t;
                    },
                    globalEval: function (t) {
                        a(t);
                    },
                    camelCase: function (t) {
                        return t.replace(bt, "ms-").replace(xt, wt);
                    },
                    each: function (t, e) {
                        var i,
                            n = 0;
                        if (s(t)) for (i = t.length; n < i && !1 !== e.call(t[n], n, t[n]); n++);
                        else for (n in t) if (!1 === e.call(t[n], n, t[n])) break;
                        return t;
                    },
                    trim: function (t) {
                        return null == t ? "" : (t + "").replace(_t, "");
                    },
                    makeArray: function (t, e) {
                        var i = e || [];
                        return null != t && (s(Object(t)) ? yt.merge(i, "string" == typeof t ? [t] : t) : ut.call(i, t)), i;
                    },
                    inArray: function (t, e, i) {
                        return null == e ? -1 : ht.call(e, t, i);
                    },
                    merge: function (t, e) {
                        for (var i = +e.length, n = 0, r = t.length; n < i; n++) t[r++] = e[n];
                        return (t.length = r), t;
                    },
                    grep: function (t, e, i) {
                        for (var n = [], r = 0, o = t.length, a = !i; r < o; r++) !e(t[r], r) !== a && n.push(t[r]);
                        return n;
                    },
                    map: function (t, e, i) {
                        var n,
                            r,
                            o = 0,
                            a = [];
                        if (s(t)) for (n = t.length; o < n; o++) null != (r = e(t[o], o, i)) && a.push(r);
                        else for (o in t) null != (r = e(t[o], o, i)) && a.push(r);
                        return ct.apply([], a);
                    },
                    guid: 1,
                    proxy: function (t, e) {
                        var i, n, r;
                        if (("string" == typeof e && ((i = t[e]), (e = t), (t = i)), yt.isFunction(t)))
                            return (
                                (n = lt.call(arguments, 2)),
                                (r = function () {
                                    return t.apply(e || this, n.concat(lt.call(arguments)));
                                }),
                                (r.guid = t.guid = t.guid || yt.guid++),
                                r
                            );
                    },
                    now: Date.now,
                    support: gt,
                }),
                "function" == typeof Symbol && (yt.fn[Symbol.iterator] = ot[Symbol.iterator]),
                yt.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function (t, e) {
                    dt["[object " + e + "]"] = e.toLowerCase();
                });
            var Tt = (function (t) {
                function e(t, e, i, n) {
                    var r,
                        o,
                        a,
                        s,
                        l,
                        u,
                        d,
                        p = e && e.ownerDocument,
                        f = e ? e.nodeType : 9;
                    if (((i = i || []), "string" != typeof t || !t || (1 !== f && 9 !== f && 11 !== f))) return i;
                    if (!n && ((e ? e.ownerDocument || e : U) !== D && P(e), (e = e || D), L)) {
                        if (11 !== f && (l = mt.exec(t)))
                            if ((r = l[1])) {
                                if (9 === f) {
                                    if (!(a = e.getElementById(r))) return i;
                                    if (a.id === r) return i.push(a), i;
                                } else if (p && (a = p.getElementById(r)) && N(e, a) && a.id === r) return i.push(a), i;
                            } else {
                                if (l[2]) return J.apply(i, e.getElementsByTagName(t)), i;
                                if ((r = l[3]) && b.getElementsByClassName && e.getElementsByClassName) return J.apply(i, e.getElementsByClassName(r)), i;
                            }
                        if (b.qsa && !H[t + " "] && (!j || !j.test(t))) {
                            if (1 !== f) (p = e), (d = t);
                            else if ("object" !== e.nodeName.toLowerCase()) {
                                for ((s = e.getAttribute("id")) ? (s = s.replace(_t, bt)) : e.setAttribute("id", (s = F)), u = E(t), o = u.length; o--; ) u[o] = "#" + s + " " + h(u[o]);
                                (d = u.join(",")), (p = (vt.test(t) && c(e.parentNode)) || e);
                            }
                            if (d)
                                try {
                                    return J.apply(i, p.querySelectorAll(d)), i;
                                } catch (t) {
                                } finally {
                                    s === F && e.removeAttribute("id");
                                }
                        }
                    }
                    return S(t.replace(ot, "$1"), e, i, n);
                }
                function i() {
                    function t(i, n) {
                        return e.push(i + " ") > x.cacheLength && delete t[e.shift()], (t[i + " "] = n);
                    }
                    var e = [];
                    return t;
                }
                function n(t) {
                    return (t[F] = !0), t;
                }
                function r(t) {
                    var e = D.createElement("fieldset");
                    try {
                        return !!t(e);
                    } catch (t) {
                        return !1;
                    } finally {
                        e.parentNode && e.parentNode.removeChild(e), (e = null);
                    }
                }
                function o(t, e) {
                    for (var i = t.split("|"), n = i.length; n--; ) x.attrHandle[i[n]] = e;
                }
                function a(t, e) {
                    var i = e && t,
                        n = i && 1 === t.nodeType && 1 === e.nodeType && t.sourceIndex - e.sourceIndex;
                    if (n) return n;
                    if (i) for (; (i = i.nextSibling); ) if (i === e) return -1;
                    return t ? 1 : -1;
                }
                function s(t) {
                    return function (e) {
                        return "form" in e
                            ? e.parentNode && !1 === e.disabled
                                ? "label" in e
                                    ? "label" in e.parentNode
                                        ? e.parentNode.disabled === t
                                        : e.disabled === t
                                    : e.isDisabled === t || (e.isDisabled !== !t && wt(e) === t)
                                : e.disabled === t
                            : "label" in e && e.disabled === t;
                    };
                }
                function l(t) {
                    return n(function (e) {
                        return (
                            (e = +e),
                            n(function (i, n) {
                                for (var r, o = t([], i.length, e), a = o.length; a--; ) i[(r = o[a])] && (i[r] = !(n[r] = i[r]));
                            })
                        );
                    });
                }
                function c(t) {
                    return t && void 0 !== t.getElementsByTagName && t;
                }
                function u() {}
                function h(t) {
                    for (var e = 0, i = t.length, n = ""; e < i; e++) n += t[e].value;
                    return n;
                }
                function d(t, e, i) {
                    var n = e.dir,
                        r = e.next,
                        o = r || n,
                        a = i && "parentNode" === o,
                        s = G++;
                    return e.first
                        ? function (e, i, r) {
                              for (; (e = e[n]); ) if (1 === e.nodeType || a) return t(e, i, r);
                              return !1;
                          }
                        : function (e, i, l) {
                              var c,
                                  u,
                                  h,
                                  d = [B, s];
                              if (l) {
                                  for (; (e = e[n]); ) if ((1 === e.nodeType || a) && t(e, i, l)) return !0;
                              } else
                                  for (; (e = e[n]); )
                                      if (1 === e.nodeType || a)
                                          if (((h = e[F] || (e[F] = {})), (u = h[e.uniqueID] || (h[e.uniqueID] = {})), r && r === e.nodeName.toLowerCase())) e = e[n] || e;
                                          else {
                                              if ((c = u[o]) && c[0] === B && c[1] === s) return (d[2] = c[2]);
                                              if (((u[o] = d), (d[2] = t(e, i, l)))) return !0;
                                          }
                              return !1;
                          };
                }
                function p(t) {
                    return t.length > 1
                        ? function (e, i, n) {
                              for (var r = t.length; r--; ) if (!t[r](e, i, n)) return !1;
                              return !0;
                          }
                        : t[0];
                }
                function f(t, i, n) {
                    for (var r = 0, o = i.length; r < o; r++) e(t, i[r], n);
                    return n;
                }
                function m(t, e, i, n, r) {
                    for (var o, a = [], s = 0, l = t.length, c = null != e; s < l; s++) (o = t[s]) && ((i && !i(o, n, r)) || (a.push(o), c && e.push(s)));
                    return a;
                }
                function v(t, e, i, r, o, a) {
                    return (
                        r && !r[F] && (r = v(r)),
                        o && !o[F] && (o = v(o, a)),
                        n(function (n, a, s, l) {
                            var c,
                                u,
                                h,
                                d = [],
                                p = [],
                                v = a.length,
                                g = n || f(e || "*", s.nodeType ? [s] : s, []),
                                y = !t || (!n && e) ? g : m(g, d, t, s, l),
                                _ = i ? (o || (n ? t : v || r) ? [] : a) : y;
                            if ((i && i(y, _, s, l), r)) for (c = m(_, p), r(c, [], s, l), u = c.length; u--; ) (h = c[u]) && (_[p[u]] = !(y[p[u]] = h));
                            if (n) {
                                if (o || t) {
                                    if (o) {
                                        for (c = [], u = _.length; u--; ) (h = _[u]) && c.push((y[u] = h));
                                        o(null, (_ = []), c, l);
                                    }
                                    for (u = _.length; u--; ) (h = _[u]) && (c = o ? $(n, h) : d[u]) > -1 && (n[c] = !(a[c] = h));
                                }
                            } else (_ = m(_ === a ? _.splice(v, _.length) : _)), o ? o(null, a, _, l) : J.apply(a, _);
                        })
                    );
                }
                function g(t) {
                    for (
                        var e,
                            i,
                            n,
                            r = t.length,
                            o = x.relative[t[0].type],
                            a = o || x.relative[" "],
                            s = o ? 1 : 0,
                            l = d(
                                function (t) {
                                    return t === e;
                                },
                                a,
                                !0
                            ),
                            c = d(
                                function (t) {
                                    return $(e, t) > -1;
                                },
                                a,
                                !0
                            ),
                            u = [
                                function (t, i, n) {
                                    var r = (!o && (n || i !== A)) || ((e = i).nodeType ? l(t, i, n) : c(t, i, n));
                                    return (e = null), r;
                                },
                            ];
                        s < r;
                        s++
                    )
                        if ((i = x.relative[t[s].type])) u = [d(p(u), i)];
                        else {
                            if (((i = x.filter[t[s].type].apply(null, t[s].matches)), i[F])) {
                                for (n = ++s; n < r && !x.relative[t[n].type]; n++);
                                return v(s > 1 && p(u), s > 1 && h(t.slice(0, s - 1).concat({ value: " " === t[s - 2].type ? "*" : "" })).replace(ot, "$1"), i, s < n && g(t.slice(s, n)), n < r && g((t = t.slice(n))), n < r && h(t));
                            }
                            u.push(i);
                        }
                    return p(u);
                }
                function y(t, i) {
                    var r = i.length > 0,
                        o = t.length > 0,
                        a = function (n, a, s, l, c) {
                            var u,
                                h,
                                d,
                                p = 0,
                                f = "0",
                                v = n && [],
                                g = [],
                                y = A,
                                _ = n || (o && x.find.TAG("*", c)),
                                b = (B += null == y ? 1 : Math.random() || 0.1),
                                w = _.length;
                            for (c && (A = a === D || a || c); f !== w && null != (u = _[f]); f++) {
                                if (o && u) {
                                    for (h = 0, a || u.ownerDocument === D || (P(u), (s = !L)); (d = t[h++]); )
                                        if (d(u, a || D, s)) {
                                            l.push(u);
                                            break;
                                        }
                                    c && (B = b);
                                }
                                r && ((u = !d && u) && p--, n && v.push(u));
                            }
                            if (((p += f), r && f !== p)) {
                                for (h = 0; (d = i[h++]); ) d(v, g, a, s);
                                if (n) {
                                    if (p > 0) for (; f--; ) v[f] || g[f] || (g[f] = Y.call(l));
                                    g = m(g);
                                }
                                J.apply(l, g), c && !n && g.length > 0 && p + i.length > 1 && e.uniqueSort(l);
                            }
                            return c && ((B = b), (A = y)), v;
                        };
                    return r ? n(a) : a;
                }
                var _,
                    b,
                    x,
                    w,
                    T,
                    E,
                    M,
                    S,
                    A,
                    R,
                    C,
                    P,
                    D,
                    O,
                    L,
                    j,
                    k,
                    I,
                    N,
                    F = "sizzle" + 1 * new Date(),
                    U = t.document,
                    B = 0,
                    G = 0,
                    z = i(),
                    V = i(),
                    H = i(),
                    W = function (t, e) {
                        return t === e && (C = !0), 0;
                    },
                    X = {}.hasOwnProperty,
                    q = [],
                    Y = q.pop,
                    Z = q.push,
                    J = q.push,
                    Q = q.slice,
                    $ = function (t, e) {
                        for (var i = 0, n = t.length; i < n; i++) if (t[i] === e) return i;
                        return -1;
                    },
                    K = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
                    tt = "[\\x20\\t\\r\\n\\f]",
                    et = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",
                    it = "\\[" + tt + "*(" + et + ")(?:" + tt + "*([*^$|!~]?=)" + tt + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + et + "))|)" + tt + "*\\]",
                    nt = ":(" + et + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + it + ")*)|.*)\\)|)",
                    rt = new RegExp(tt + "+", "g"),
                    ot = new RegExp("^" + tt + "+|((?:^|[^\\\\])(?:\\\\.)*)" + tt + "+$", "g"),
                    at = new RegExp("^" + tt + "*," + tt + "*"),
                    st = new RegExp("^" + tt + "*([>+~]|" + tt + ")" + tt + "*"),
                    lt = new RegExp("=" + tt + "*([^\\]'\"]*?)" + tt + "*\\]", "g"),
                    ct = new RegExp(nt),
                    ut = new RegExp("^" + et + "$"),
                    ht = {
                        ID: new RegExp("^#(" + et + ")"),
                        CLASS: new RegExp("^\\.(" + et + ")"),
                        TAG: new RegExp("^(" + et + "|[*])"),
                        ATTR: new RegExp("^" + it),
                        PSEUDO: new RegExp("^" + nt),
                        CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + tt + "*(even|odd|(([+-]|)(\\d*)n|)" + tt + "*(?:([+-]|)" + tt + "*(\\d+)|))" + tt + "*\\)|)", "i"),
                        bool: new RegExp("^(?:" + K + ")$", "i"),
                        needsContext: new RegExp("^" + tt + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + tt + "*((?:-\\d)?\\d*)" + tt + "*\\)|)(?=[^-]|$)", "i"),
                    },
                    dt = /^(?:input|select|textarea|button)$/i,
                    pt = /^h\d$/i,
                    ft = /^[^{]+\{\s*\[native \w/,
                    mt = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
                    vt = /[+~]/,
                    gt = new RegExp("\\\\([\\da-f]{1,6}" + tt + "?|(" + tt + ")|.)", "ig"),
                    yt = function (t, e, i) {
                        var n = "0x" + e - 65536;
                        return n !== n || i ? e : n < 0 ? String.fromCharCode(n + 65536) : String.fromCharCode((n >> 10) | 55296, (1023 & n) | 56320);
                    },
                    _t = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
                    bt = function (t, e) {
                        return e ? ("\0" === t ? "�" : t.slice(0, -1) + "\\" + t.charCodeAt(t.length - 1).toString(16) + " ") : "\\" + t;
                    },
                    xt = function () {
                        P();
                    },
                    wt = d(
                        function (t) {
                            return !0 === t.disabled && ("form" in t || "label" in t);
                        },
                        { dir: "parentNode", next: "legend" }
                    );
                try {
                    J.apply((q = Q.call(U.childNodes)), U.childNodes), q[U.childNodes.length].nodeType;
                } catch (t) {
                    J = {
                        apply: q.length
                            ? function (t, e) {
                                  Z.apply(t, Q.call(e));
                              }
                            : function (t, e) {
                                  for (var i = t.length, n = 0; (t[i++] = e[n++]); );
                                  t.length = i - 1;
                              },
                    };
                }
                (b = e.support = {}),
                    (T = e.isXML = function (t) {
                        var e = t && (t.ownerDocument || t).documentElement;
                        return !!e && "HTML" !== e.nodeName;
                    }),
                    (P = e.setDocument = function (t) {
                        var e,
                            i,
                            n = t ? t.ownerDocument || t : U;
                        return n !== D && 9 === n.nodeType && n.documentElement
                            ? ((D = n),
                              (O = D.documentElement),
                              (L = !T(D)),
                              U !== D && (i = D.defaultView) && i.top !== i && (i.addEventListener ? i.addEventListener("unload", xt, !1) : i.attachEvent && i.attachEvent("onunload", xt)),
                              (b.attributes = r(function (t) {
                                  return (t.className = "i"), !t.getAttribute("className");
                              })),
                              (b.getElementsByTagName = r(function (t) {
                                  return t.appendChild(D.createComment("")), !t.getElementsByTagName("*").length;
                              })),
                              (b.getElementsByClassName = ft.test(D.getElementsByClassName)),
                              (b.getById = r(function (t) {
                                  return (O.appendChild(t).id = F), !D.getElementsByName || !D.getElementsByName(F).length;
                              })),
                              b.getById
                                  ? ((x.filter.ID = function (t) {
                                        var e = t.replace(gt, yt);
                                        return function (t) {
                                            return t.getAttribute("id") === e;
                                        };
                                    }),
                                    (x.find.ID = function (t, e) {
                                        if (void 0 !== e.getElementById && L) {
                                            var i = e.getElementById(t);
                                            return i ? [i] : [];
                                        }
                                    }))
                                  : ((x.filter.ID = function (t) {
                                        var e = t.replace(gt, yt);
                                        return function (t) {
                                            var i = void 0 !== t.getAttributeNode && t.getAttributeNode("id");
                                            return i && i.value === e;
                                        };
                                    }),
                                    (x.find.ID = function (t, e) {
                                        if (void 0 !== e.getElementById && L) {
                                            var i,
                                                n,
                                                r,
                                                o = e.getElementById(t);
                                            if (o) {
                                                if ((i = o.getAttributeNode("id")) && i.value === t) return [o];
                                                for (r = e.getElementsByName(t), n = 0; (o = r[n++]); ) if ((i = o.getAttributeNode("id")) && i.value === t) return [o];
                                            }
                                            return [];
                                        }
                                    })),
                              (x.find.TAG = b.getElementsByTagName
                                  ? function (t, e) {
                                        return void 0 !== e.getElementsByTagName ? e.getElementsByTagName(t) : b.qsa ? e.querySelectorAll(t) : void 0;
                                    }
                                  : function (t, e) {
                                        var i,
                                            n = [],
                                            r = 0,
                                            o = e.getElementsByTagName(t);
                                        if ("*" === t) {
                                            for (; (i = o[r++]); ) 1 === i.nodeType && n.push(i);
                                            return n;
                                        }
                                        return o;
                                    }),
                              (x.find.CLASS =
                                  b.getElementsByClassName &&
                                  function (t, e) {
                                      if (void 0 !== e.getElementsByClassName && L) return e.getElementsByClassName(t);
                                  }),
                              (k = []),
                              (j = []),
                              (b.qsa = ft.test(D.querySelectorAll)) &&
                                  (r(function (t) {
                                      (O.appendChild(t).innerHTML = "<a id='" + F + "'></a><select id='" + F + "-\r\\' msallowcapture=''><option selected=''></option></select>"),
                                          t.querySelectorAll("[msallowcapture^='']").length && j.push("[*^$]=" + tt + "*(?:''|\"\")"),
                                          t.querySelectorAll("[selected]").length || j.push("\\[" + tt + "*(?:value|" + K + ")"),
                                          t.querySelectorAll("[id~=" + F + "-]").length || j.push("~="),
                                          t.querySelectorAll(":checked").length || j.push(":checked"),
                                          t.querySelectorAll("a#" + F + "+*").length || j.push(".#.+[+~]");
                                  }),
                                  r(function (t) {
                                      t.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                                      var e = D.createElement("input");
                                      e.setAttribute("type", "hidden"),
                                          t.appendChild(e).setAttribute("name", "D"),
                                          t.querySelectorAll("[name=d]").length && j.push("name" + tt + "*[*^$|!~]?="),
                                          2 !== t.querySelectorAll(":enabled").length && j.push(":enabled", ":disabled"),
                                          (O.appendChild(t).disabled = !0),
                                          2 !== t.querySelectorAll(":disabled").length && j.push(":enabled", ":disabled"),
                                          t.querySelectorAll("*,:x"),
                                          j.push(",.*:");
                                  })),
                              (b.matchesSelector = ft.test((I = O.matches || O.webkitMatchesSelector || O.mozMatchesSelector || O.oMatchesSelector || O.msMatchesSelector))) &&
                                  r(function (t) {
                                      (b.disconnectedMatch = I.call(t, "*")), I.call(t, "[s!='']:x"), k.push("!=", nt);
                                  }),
                              (j = j.length && new RegExp(j.join("|"))),
                              (k = k.length && new RegExp(k.join("|"))),
                              (e = ft.test(O.compareDocumentPosition)),
                              (N =
                                  e || ft.test(O.contains)
                                      ? function (t, e) {
                                            var i = 9 === t.nodeType ? t.documentElement : t,
                                                n = e && e.parentNode;
                                            return t === n || !(!n || 1 !== n.nodeType || !(i.contains ? i.contains(n) : t.compareDocumentPosition && 16 & t.compareDocumentPosition(n)));
                                        }
                                      : function (t, e) {
                                            if (e) for (; (e = e.parentNode); ) if (e === t) return !0;
                                            return !1;
                                        }),
                              (W = e
                                  ? function (t, e) {
                                        if (t === e) return (C = !0), 0;
                                        var i = !t.compareDocumentPosition - !e.compareDocumentPosition;
                                        return (
                                            i ||
                                            ((i = (t.ownerDocument || t) === (e.ownerDocument || e) ? t.compareDocumentPosition(e) : 1),
                                            1 & i || (!b.sortDetached && e.compareDocumentPosition(t) === i)
                                                ? t === D || (t.ownerDocument === U && N(U, t))
                                                    ? -1
                                                    : e === D || (e.ownerDocument === U && N(U, e))
                                                    ? 1
                                                    : R
                                                    ? $(R, t) - $(R, e)
                                                    : 0
                                                : 4 & i
                                                ? -1
                                                : 1)
                                        );
                                    }
                                  : function (t, e) {
                                        if (t === e) return (C = !0), 0;
                                        var i,
                                            n = 0,
                                            r = t.parentNode,
                                            o = e.parentNode,
                                            s = [t],
                                            l = [e];
                                        if (!r || !o) return t === D ? -1 : e === D ? 1 : r ? -1 : o ? 1 : R ? $(R, t) - $(R, e) : 0;
                                        if (r === o) return a(t, e);
                                        for (i = t; (i = i.parentNode); ) s.unshift(i);
                                        for (i = e; (i = i.parentNode); ) l.unshift(i);
                                        for (; s[n] === l[n]; ) n++;
                                        return n ? a(s[n], l[n]) : s[n] === U ? -1 : l[n] === U ? 1 : 0;
                                    }),
                              D)
                            : D;
                    }),
                    (e.matches = function (t, i) {
                        return e(t, null, null, i);
                    }),
                    (e.matchesSelector = function (t, i) {
                        if (((t.ownerDocument || t) !== D && P(t), (i = i.replace(lt, "='$1']")), b.matchesSelector && L && !H[i + " "] && (!k || !k.test(i)) && (!j || !j.test(i))))
                            try {
                                var n = I.call(t, i);
                                if (n || b.disconnectedMatch || (t.document && 11 !== t.document.nodeType)) return n;
                            } catch (t) {}
                        return e(i, D, null, [t]).length > 0;
                    }),
                    (e.contains = function (t, e) {
                        return (t.ownerDocument || t) !== D && P(t), N(t, e);
                    }),
                    (e.attr = function (t, e) {
                        (t.ownerDocument || t) !== D && P(t);
                        var i = x.attrHandle[e.toLowerCase()],
                            n = i && X.call(x.attrHandle, e.toLowerCase()) ? i(t, e, !L) : void 0;
                        return void 0 !== n ? n : b.attributes || !L ? t.getAttribute(e) : (n = t.getAttributeNode(e)) && n.specified ? n.value : null;
                    }),
                    (e.escape = function (t) {
                        return (t + "").replace(_t, bt);
                    }),
                    (e.error = function (t) {
                        throw new Error("Syntax error, unrecognized expression: " + t);
                    }),
                    (e.uniqueSort = function (t) {
                        var e,
                            i = [],
                            n = 0,
                            r = 0;
                        if (((C = !b.detectDuplicates), (R = !b.sortStable && t.slice(0)), t.sort(W), C)) {
                            for (; (e = t[r++]); ) e === t[r] && (n = i.push(r));
                            for (; n--; ) t.splice(i[n], 1);
                        }
                        return (R = null), t;
                    }),
                    (w = e.getText = function (t) {
                        var e,
                            i = "",
                            n = 0,
                            r = t.nodeType;
                        if (r) {
                            if (1 === r || 9 === r || 11 === r) {
                                if ("string" == typeof t.textContent) return t.textContent;
                                for (t = t.firstChild; t; t = t.nextSibling) i += w(t);
                            } else if (3 === r || 4 === r) return t.nodeValue;
                        } else for (; (e = t[n++]); ) i += w(e);
                        return i;
                    }),
                    (x = e.selectors = {
                        cacheLength: 50,
                        createPseudo: n,
                        match: ht,
                        attrHandle: {},
                        find: {},
                        relative: { ">": { dir: "parentNode", first: !0 }, " ": { dir: "parentNode" }, "+": { dir: "previousSibling", first: !0 }, "~": { dir: "previousSibling" } },
                        preFilter: {
                            ATTR: function (t) {
                                return (t[1] = t[1].replace(gt, yt)), (t[3] = (t[3] || t[4] || t[5] || "").replace(gt, yt)), "~=" === t[2] && (t[3] = " " + t[3] + " "), t.slice(0, 4);
                            },
                            CHILD: function (t) {
                                return (
                                    (t[1] = t[1].toLowerCase()),
                                    "nth" === t[1].slice(0, 3) ? (t[3] || e.error(t[0]), (t[4] = +(t[4] ? t[5] + (t[6] || 1) : 2 * ("even" === t[3] || "odd" === t[3]))), (t[5] = +(t[7] + t[8] || "odd" === t[3]))) : t[3] && e.error(t[0]),
                                    t
                                );
                            },
                            PSEUDO: function (t) {
                                var e,
                                    i = !t[6] && t[2];
                                return ht.CHILD.test(t[0])
                                    ? null
                                    : (t[3] ? (t[2] = t[4] || t[5] || "") : i && ct.test(i) && (e = E(i, !0)) && (e = i.indexOf(")", i.length - e) - i.length) && ((t[0] = t[0].slice(0, e)), (t[2] = i.slice(0, e))), t.slice(0, 3));
                            },
                        },
                        filter: {
                            TAG: function (t) {
                                var e = t.replace(gt, yt).toLowerCase();
                                return "*" === t
                                    ? function () {
                                          return !0;
                                      }
                                    : function (t) {
                                          return t.nodeName && t.nodeName.toLowerCase() === e;
                                      };
                            },
                            CLASS: function (t) {
                                var e = z[t + " "];
                                return (
                                    e ||
                                    ((e = new RegExp("(^|" + tt + ")" + t + "(" + tt + "|$)")) &&
                                        z(t, function (t) {
                                            return e.test(("string" == typeof t.className && t.className) || (void 0 !== t.getAttribute && t.getAttribute("class")) || "");
                                        }))
                                );
                            },
                            ATTR: function (t, i, n) {
                                return function (r) {
                                    var o = e.attr(r, t);
                                    return null == o
                                        ? "!=" === i
                                        : !i ||
                                              ((o += ""),
                                              "=" === i
                                                  ? o === n
                                                  : "!=" === i
                                                  ? o !== n
                                                  : "^=" === i
                                                  ? n && 0 === o.indexOf(n)
                                                  : "*=" === i
                                                  ? n && o.indexOf(n) > -1
                                                  : "$=" === i
                                                  ? n && o.slice(-n.length) === n
                                                  : "~=" === i
                                                  ? (" " + o.replace(rt, " ") + " ").indexOf(n) > -1
                                                  : "|=" === i && (o === n || o.slice(0, n.length + 1) === n + "-"));
                                };
                            },
                            CHILD: function (t, e, i, n, r) {
                                var o = "nth" !== t.slice(0, 3),
                                    a = "last" !== t.slice(-4),
                                    s = "of-type" === e;
                                return 1 === n && 0 === r
                                    ? function (t) {
                                          return !!t.parentNode;
                                      }
                                    : function (e, i, l) {
                                          var c,
                                              u,
                                              h,
                                              d,
                                              p,
                                              f,
                                              m = o !== a ? "nextSibling" : "previousSibling",
                                              v = e.parentNode,
                                              g = s && e.nodeName.toLowerCase(),
                                              y = !l && !s,
                                              _ = !1;
                                          if (v) {
                                              if (o) {
                                                  for (; m; ) {
                                                      for (d = e; (d = d[m]); ) if (s ? d.nodeName.toLowerCase() === g : 1 === d.nodeType) return !1;
                                                      f = m = "only" === t && !f && "nextSibling";
                                                  }
                                                  return !0;
                                              }
                                              if (((f = [a ? v.firstChild : v.lastChild]), a && y)) {
                                                  for (
                                                      d = v, h = d[F] || (d[F] = {}), u = h[d.uniqueID] || (h[d.uniqueID] = {}), c = u[t] || [], p = c[0] === B && c[1], _ = p && c[2], d = p && v.childNodes[p];
                                                      (d = (++p && d && d[m]) || (_ = p = 0) || f.pop());

                                                  )
                                                      if (1 === d.nodeType && ++_ && d === e) {
                                                          u[t] = [B, p, _];
                                                          break;
                                                      }
                                              } else if ((y && ((d = e), (h = d[F] || (d[F] = {})), (u = h[d.uniqueID] || (h[d.uniqueID] = {})), (c = u[t] || []), (p = c[0] === B && c[1]), (_ = p)), !1 === _))
                                                  for (
                                                      ;
                                                      (d = (++p && d && d[m]) || (_ = p = 0) || f.pop()) &&
                                                      ((s ? d.nodeName.toLowerCase() !== g : 1 !== d.nodeType) || !++_ || (y && ((h = d[F] || (d[F] = {})), (u = h[d.uniqueID] || (h[d.uniqueID] = {})), (u[t] = [B, _])), d !== e));

                                                  );
                                              return (_ -= r) === n || (_ % n == 0 && _ / n >= 0);
                                          }
                                      };
                            },
                            PSEUDO: function (t, i) {
                                var r,
                                    o = x.pseudos[t] || x.setFilters[t.toLowerCase()] || e.error("unsupported pseudo: " + t);
                                return o[F]
                                    ? o(i)
                                    : o.length > 1
                                    ? ((r = [t, t, "", i]),
                                      x.setFilters.hasOwnProperty(t.toLowerCase())
                                          ? n(function (t, e) {
                                                for (var n, r = o(t, i), a = r.length; a--; ) (n = $(t, r[a])), (t[n] = !(e[n] = r[a]));
                                            })
                                          : function (t) {
                                                return o(t, 0, r);
                                            })
                                    : o;
                            },
                        },
                        pseudos: {
                            not: n(function (t) {
                                var e = [],
                                    i = [],
                                    r = M(t.replace(ot, "$1"));
                                return r[F]
                                    ? n(function (t, e, i, n) {
                                          for (var o, a = r(t, null, n, []), s = t.length; s--; ) (o = a[s]) && (t[s] = !(e[s] = o));
                                      })
                                    : function (t, n, o) {
                                          return (e[0] = t), r(e, null, o, i), (e[0] = null), !i.pop();
                                      };
                            }),
                            has: n(function (t) {
                                return function (i) {
                                    return e(t, i).length > 0;
                                };
                            }),
                            contains: n(function (t) {
                                return (
                                    (t = t.replace(gt, yt)),
                                    function (e) {
                                        return (e.textContent || e.innerText || w(e)).indexOf(t) > -1;
                                    }
                                );
                            }),
                            lang: n(function (t) {
                                return (
                                    ut.test(t || "") || e.error("unsupported lang: " + t),
                                    (t = t.replace(gt, yt).toLowerCase()),
                                    function (e) {
                                        var i;
                                        do {
                                            if ((i = L ? e.lang : e.getAttribute("xml:lang") || e.getAttribute("lang"))) return (i = i.toLowerCase()) === t || 0 === i.indexOf(t + "-");
                                        } while ((e = e.parentNode) && 1 === e.nodeType);
                                        return !1;
                                    }
                                );
                            }),
                            target: function (e) {
                                var i = t.location && t.location.hash;
                                return i && i.slice(1) === e.id;
                            },
                            root: function (t) {
                                return t === O;
                            },
                            focus: function (t) {
                                return t === D.activeElement && (!D.hasFocus || D.hasFocus()) && !!(t.type || t.href || ~t.tabIndex);
                            },
                            enabled: s(!1),
                            disabled: s(!0),
                            checked: function (t) {
                                var e = t.nodeName.toLowerCase();
                                return ("input" === e && !!t.checked) || ("option" === e && !!t.selected);
                            },
                            selected: function (t) {
                                return t.parentNode && t.parentNode.selectedIndex, !0 === t.selected;
                            },
                            empty: function (t) {
                                for (t = t.firstChild; t; t = t.nextSibling) if (t.nodeType < 6) return !1;
                                return !0;
                            },
                            parent: function (t) {
                                return !x.pseudos.empty(t);
                            },
                            header: function (t) {
                                return pt.test(t.nodeName);
                            },
                            input: function (t) {
                                return dt.test(t.nodeName);
                            },
                            button: function (t) {
                                var e = t.nodeName.toLowerCase();
                                return ("input" === e && "button" === t.type) || "button" === e;
                            },
                            text: function (t) {
                                var e;
                                return "input" === t.nodeName.toLowerCase() && "text" === t.type && (null == (e = t.getAttribute("type")) || "text" === e.toLowerCase());
                            },
                            first: l(function () {
                                return [0];
                            }),
                            last: l(function (t, e) {
                                return [e - 1];
                            }),
                            eq: l(function (t, e, i) {
                                return [i < 0 ? i + e : i];
                            }),
                            even: l(function (t, e) {
                                for (var i = 0; i < e; i += 2) t.push(i);
                                return t;
                            }),
                            odd: l(function (t, e) {
                                for (var i = 1; i < e; i += 2) t.push(i);
                                return t;
                            }),
                            lt: l(function (t, e, i) {
                                for (var n = i < 0 ? i + e : i; --n >= 0; ) t.push(n);
                                return t;
                            }),
                            gt: l(function (t, e, i) {
                                for (var n = i < 0 ? i + e : i; ++n < e; ) t.push(n);
                                return t;
                            }),
                        },
                    }),
                    (x.pseudos.nth = x.pseudos.eq);
                for (_ in { radio: !0, checkbox: !0, file: !0, password: !0, image: !0 })
                    x.pseudos[_] = (function (t) {
                        return function (e) {
                            return "input" === e.nodeName.toLowerCase() && e.type === t;
                        };
                    })(_);
                for (_ in { submit: !0, reset: !0 })
                    x.pseudos[_] = (function (t) {
                        return function (e) {
                            var i = e.nodeName.toLowerCase();
                            return ("input" === i || "button" === i) && e.type === t;
                        };
                    })(_);
                return (
                    (u.prototype = x.filters = x.pseudos),
                    (x.setFilters = new u()),
                    (E = e.tokenize = function (t, i) {
                        var n,
                            r,
                            o,
                            a,
                            s,
                            l,
                            c,
                            u = V[t + " "];
                        if (u) return i ? 0 : u.slice(0);
                        for (s = t, l = [], c = x.preFilter; s; ) {
                            (n && !(r = at.exec(s))) || (r && (s = s.slice(r[0].length) || s), l.push((o = []))), (n = !1), (r = st.exec(s)) && ((n = r.shift()), o.push({ value: n, type: r[0].replace(ot, " ") }), (s = s.slice(n.length)));
                            for (a in x.filter) !(r = ht[a].exec(s)) || (c[a] && !(r = c[a](r))) || ((n = r.shift()), o.push({ value: n, type: a, matches: r }), (s = s.slice(n.length)));
                            if (!n) break;
                        }
                        return i ? s.length : s ? e.error(t) : V(t, l).slice(0);
                    }),
                    (M = e.compile = function (t, e) {
                        var i,
                            n = [],
                            r = [],
                            o = H[t + " "];
                        if (!o) {
                            for (e || (e = E(t)), i = e.length; i--; ) (o = g(e[i])), o[F] ? n.push(o) : r.push(o);
                            (o = H(t, y(r, n))), (o.selector = t);
                        }
                        return o;
                    }),
                    (S = e.select = function (t, e, i, n) {
                        var r,
                            o,
                            a,
                            s,
                            l,
                            u = "function" == typeof t && t,
                            d = !n && E((t = u.selector || t));
                        if (((i = i || []), 1 === d.length)) {
                            if (((o = d[0] = d[0].slice(0)), o.length > 2 && "ID" === (a = o[0]).type && 9 === e.nodeType && L && x.relative[o[1].type])) {
                                if (!(e = (x.find.ID(a.matches[0].replace(gt, yt), e) || [])[0])) return i;
                                u && (e = e.parentNode), (t = t.slice(o.shift().value.length));
                            }
                            for (r = ht.needsContext.test(t) ? 0 : o.length; r-- && ((a = o[r]), !x.relative[(s = a.type)]); )
                                if ((l = x.find[s]) && (n = l(a.matches[0].replace(gt, yt), (vt.test(o[0].type) && c(e.parentNode)) || e))) {
                                    if ((o.splice(r, 1), !(t = n.length && h(o)))) return J.apply(i, n), i;
                                    break;
                                }
                        }
                        return (u || M(t, d))(n, e, !L, i, !e || (vt.test(t) && c(e.parentNode)) || e), i;
                    }),
                    (b.sortStable = F.split("").sort(W).join("") === F),
                    (b.detectDuplicates = !!C),
                    P(),
                    (b.sortDetached = r(function (t) {
                        return 1 & t.compareDocumentPosition(D.createElement("fieldset"));
                    })),
                    r(function (t) {
                        return (t.innerHTML = "<a href='#'></a>"), "#" === t.firstChild.getAttribute("href");
                    }) ||
                        o("type|href|height|width", function (t, e, i) {
                            if (!i) return t.getAttribute(e, "type" === e.toLowerCase() ? 1 : 2);
                        }),
                    (b.attributes &&
                        r(function (t) {
                            return (t.innerHTML = "<input/>"), t.firstChild.setAttribute("value", ""), "" === t.firstChild.getAttribute("value");
                        })) ||
                        o("value", function (t, e, i) {
                            if (!i && "input" === t.nodeName.toLowerCase()) return t.defaultValue;
                        }),
                    r(function (t) {
                        return null == t.getAttribute("disabled");
                    }) ||
                        o(K, function (t, e, i) {
                            var n;
                            if (!i) return !0 === t[e] ? e.toLowerCase() : (n = t.getAttributeNode(e)) && n.specified ? n.value : null;
                        }),
                    e
                );
            })(i);
            (yt.find = Tt),
                (yt.expr = Tt.selectors),
                (yt.expr[":"] = yt.expr.pseudos),
                (yt.uniqueSort = yt.unique = Tt.uniqueSort),
                (yt.text = Tt.getText),
                (yt.isXMLDoc = Tt.isXML),
                (yt.contains = Tt.contains),
                (yt.escapeSelector = Tt.escape);
            var Et = function (t, e, i) {
                    for (var n = [], r = void 0 !== i; (t = t[e]) && 9 !== t.nodeType; )
                        if (1 === t.nodeType) {
                            if (r && yt(t).is(i)) break;
                            n.push(t);
                        }
                    return n;
                },
                Mt = function (t, e) {
                    for (var i = []; t; t = t.nextSibling) 1 === t.nodeType && t !== e && i.push(t);
                    return i;
                },
                St = yt.expr.match.needsContext,
                At = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i,
                Rt = /^.[^:#\[\.,]*$/;
            (yt.filter = function (t, e, i) {
                var n = e[0];
                return (
                    i && (t = ":not(" + t + ")"),
                    1 === e.length && 1 === n.nodeType
                        ? yt.find.matchesSelector(n, t)
                            ? [n]
                            : []
                        : yt.find.matches(
                              t,
                              yt.grep(e, function (t) {
                                  return 1 === t.nodeType;
                              })
                          )
                );
            }),
                yt.fn.extend({
                    find: function (t) {
                        var e,
                            i,
                            n = this.length,
                            r = this;
                        if ("string" != typeof t)
                            return this.pushStack(
                                yt(t).filter(function () {
                                    for (e = 0; e < n; e++) if (yt.contains(r[e], this)) return !0;
                                })
                            );
                        for (i = this.pushStack([]), e = 0; e < n; e++) yt.find(t, r[e], i);
                        return n > 1 ? yt.uniqueSort(i) : i;
                    },
                    filter: function (t) {
                        return this.pushStack(c(this, t || [], !1));
                    },
                    not: function (t) {
                        return this.pushStack(c(this, t || [], !0));
                    },
                    is: function (t) {
                        return !!c(this, "string" == typeof t && St.test(t) ? yt(t) : t || [], !1).length;
                    },
                });
            var Ct,
                Pt = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;
            ((yt.fn.init = function (t, e, i) {
                var n, r;
                if (!t) return this;
                if (((i = i || Ct), "string" == typeof t)) {
                    if (!(n = "<" === t[0] && ">" === t[t.length - 1] && t.length >= 3 ? [null, t, null] : Pt.exec(t)) || (!n[1] && e)) return !e || e.jquery ? (e || i).find(t) : this.constructor(e).find(t);
                    if (n[1]) {
                        if (((e = e instanceof yt ? e[0] : e), yt.merge(this, yt.parseHTML(n[1], e && e.nodeType ? e.ownerDocument || e : at, !0)), At.test(n[1]) && yt.isPlainObject(e)))
                            for (n in e) yt.isFunction(this[n]) ? this[n](e[n]) : this.attr(n, e[n]);
                        return this;
                    }
                    return (r = at.getElementById(n[2])), r && ((this[0] = r), (this.length = 1)), this;
                }
                return t.nodeType ? ((this[0] = t), (this.length = 1), this) : yt.isFunction(t) ? (void 0 !== i.ready ? i.ready(t) : t(yt)) : yt.makeArray(t, this);
            }).prototype = yt.fn),
                (Ct = yt(at));
            var Dt = /^(?:parents|prev(?:Until|All))/,
                Ot = { children: !0, contents: !0, next: !0, prev: !0 };
            yt.fn.extend({
                has: function (t) {
                    var e = yt(t, this),
                        i = e.length;
                    return this.filter(function () {
                        for (var t = 0; t < i; t++) if (yt.contains(this, e[t])) return !0;
                    });
                },
                closest: function (t, e) {
                    var i,
                        n = 0,
                        r = this.length,
                        o = [],
                        a = "string" != typeof t && yt(t);
                    if (!St.test(t))
                        for (; n < r; n++)
                            for (i = this[n]; i && i !== e; i = i.parentNode)
                                if (i.nodeType < 11 && (a ? a.index(i) > -1 : 1 === i.nodeType && yt.find.matchesSelector(i, t))) {
                                    o.push(i);
                                    break;
                                }
                    return this.pushStack(o.length > 1 ? yt.uniqueSort(o) : o);
                },
                index: function (t) {
                    return t ? ("string" == typeof t ? ht.call(yt(t), this[0]) : ht.call(this, t.jquery ? t[0] : t)) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
                },
                add: function (t, e) {
                    return this.pushStack(yt.uniqueSort(yt.merge(this.get(), yt(t, e))));
                },
                addBack: function (t) {
                    return this.add(null == t ? this.prevObject : this.prevObject.filter(t));
                },
            }),
                yt.each(
                    {
                        parent: function (t) {
                            var e = t.parentNode;
                            return e && 11 !== e.nodeType ? e : null;
                        },
                        parents: function (t) {
                            return Et(t, "parentNode");
                        },
                        parentsUntil: function (t, e, i) {
                            return Et(t, "parentNode", i);
                        },
                        next: function (t) {
                            return u(t, "nextSibling");
                        },
                        prev: function (t) {
                            return u(t, "previousSibling");
                        },
                        nextAll: function (t) {
                            return Et(t, "nextSibling");
                        },
                        prevAll: function (t) {
                            return Et(t, "previousSibling");
                        },
                        nextUntil: function (t, e, i) {
                            return Et(t, "nextSibling", i);
                        },
                        prevUntil: function (t, e, i) {
                            return Et(t, "previousSibling", i);
                        },
                        siblings: function (t) {
                            return Mt((t.parentNode || {}).firstChild, t);
                        },
                        children: function (t) {
                            return Mt(t.firstChild);
                        },
                        contents: function (t) {
                            return l(t, "iframe") ? t.contentDocument : (l(t, "template") && (t = t.content || t), yt.merge([], t.childNodes));
                        },
                    },
                    function (t, e) {
                        yt.fn[t] = function (i, n) {
                            var r = yt.map(this, e, i);
                            return "Until" !== t.slice(-5) && (n = i), n && "string" == typeof n && (r = yt.filter(n, r)), this.length > 1 && (Ot[t] || yt.uniqueSort(r), Dt.test(t) && r.reverse()), this.pushStack(r);
                        };
                    }
                );
            var Lt = /[^\x20\t\r\n\f]+/g;
            (yt.Callbacks = function (t) {
                t = "string" == typeof t ? h(t) : yt.extend({}, t);
                var e,
                    i,
                    n,
                    r,
                    o = [],
                    a = [],
                    s = -1,
                    l = function () {
                        for (r = r || t.once, n = e = !0; a.length; s = -1) for (i = a.shift(); ++s < o.length; ) !1 === o[s].apply(i[0], i[1]) && t.stopOnFalse && ((s = o.length), (i = !1));
                        t.memory || (i = !1), (e = !1), r && (o = i ? [] : "");
                    },
                    c = {
                        add: function () {
                            return (
                                o &&
                                    (i && !e && ((s = o.length - 1), a.push(i)),
                                    (function e(i) {
                                        yt.each(i, function (i, n) {
                                            yt.isFunction(n) ? (t.unique && c.has(n)) || o.push(n) : n && n.length && "string" !== yt.type(n) && e(n);
                                        });
                                    })(arguments),
                                    i && !e && l()),
                                this
                            );
                        },
                        remove: function () {
                            return (
                                yt.each(arguments, function (t, e) {
                                    for (var i; (i = yt.inArray(e, o, i)) > -1; ) o.splice(i, 1), i <= s && s--;
                                }),
                                this
                            );
                        },
                        has: function (t) {
                            return t ? yt.inArray(t, o) > -1 : o.length > 0;
                        },
                        empty: function () {
                            return o && (o = []), this;
                        },
                        disable: function () {
                            return (r = a = []), (o = i = ""), this;
                        },
                        disabled: function () {
                            return !o;
                        },
                        lock: function () {
                            return (r = a = []), i || e || (o = i = ""), this;
                        },
                        locked: function () {
                            return !!r;
                        },
                        fireWith: function (t, i) {
                            return r || ((i = i || []), (i = [t, i.slice ? i.slice() : i]), a.push(i), e || l()), this;
                        },
                        fire: function () {
                            return c.fireWith(this, arguments), this;
                        },
                        fired: function () {
                            return !!n;
                        },
                    };
                return c;
            }),
                yt.extend({
                    Deferred: function (t) {
                        var e = [
                                ["notify", "progress", yt.Callbacks("memory"), yt.Callbacks("memory"), 2],
                                ["resolve", "done", yt.Callbacks("once memory"), yt.Callbacks("once memory"), 0, "resolved"],
                                ["reject", "fail", yt.Callbacks("once memory"), yt.Callbacks("once memory"), 1, "rejected"],
                            ],
                            n = "pending",
                            r = {
                                state: function () {
                                    return n;
                                },
                                always: function () {
                                    return o.done(arguments).fail(arguments), this;
                                },
                                catch: function (t) {
                                    return r.then(null, t);
                                },
                                pipe: function () {
                                    var t = arguments;
                                    return yt
                                        .Deferred(function (i) {
                                            yt.each(e, function (e, n) {
                                                var r = yt.isFunction(t[n[4]]) && t[n[4]];
                                                o[n[1]](function () {
                                                    var t = r && r.apply(this, arguments);
                                                    t && yt.isFunction(t.promise) ? t.promise().progress(i.notify).done(i.resolve).fail(i.reject) : i[n[0] + "With"](this, r ? [t] : arguments);
                                                });
                                            }),
                                                (t = null);
                                        })
                                        .promise();
                                },
                                then: function (t, n, r) {
                                    function o(t, e, n, r) {
                                        return function () {
                                            var s = this,
                                                l = arguments,
                                                c = function () {
                                                    var i, c;
                                                    if (!(t < a)) {
                                                        if ((i = n.apply(s, l)) === e.promise()) throw new TypeError("Thenable self-resolution");
                                                        (c = i && ("object" == typeof i || "function" == typeof i) && i.then),
                                                            yt.isFunction(c)
                                                                ? r
                                                                    ? c.call(i, o(a, e, d, r), o(a, e, p, r))
                                                                    : (a++, c.call(i, o(a, e, d, r), o(a, e, p, r), o(a, e, d, e.notifyWith)))
                                                                : (n !== d && ((s = void 0), (l = [i])), (r || e.resolveWith)(s, l));
                                                    }
                                                },
                                                u = r
                                                    ? c
                                                    : function () {
                                                          try {
                                                              c();
                                                          } catch (i) {
                                                              yt.Deferred.exceptionHook && yt.Deferred.exceptionHook(i, u.stackTrace), t + 1 >= a && (n !== p && ((s = void 0), (l = [i])), e.rejectWith(s, l));
                                                          }
                                                      };
                                            t ? u() : (yt.Deferred.getStackHook && (u.stackTrace = yt.Deferred.getStackHook()), i.setTimeout(u));
                                        };
                                    }
                                    var a = 0;
                                    return yt
                                        .Deferred(function (i) {
                                            e[0][3].add(o(0, i, yt.isFunction(r) ? r : d, i.notifyWith)), e[1][3].add(o(0, i, yt.isFunction(t) ? t : d)), e[2][3].add(o(0, i, yt.isFunction(n) ? n : p));
                                        })
                                        .promise();
                                },
                                promise: function (t) {
                                    return null != t ? yt.extend(t, r) : r;
                                },
                            },
                            o = {};
                        return (
                            yt.each(e, function (t, i) {
                                var a = i[2],
                                    s = i[5];
                                (r[i[1]] = a.add),
                                    s &&
                                        a.add(
                                            function () {
                                                n = s;
                                            },
                                            e[3 - t][2].disable,
                                            e[0][2].lock
                                        ),
                                    a.add(i[3].fire),
                                    (o[i[0]] = function () {
                                        return o[i[0] + "With"](this === o ? void 0 : this, arguments), this;
                                    }),
                                    (o[i[0] + "With"] = a.fireWith);
                            }),
                            r.promise(o),
                            t && t.call(o, o),
                            o
                        );
                    },
                    when: function (t) {
                        var e = arguments.length,
                            i = e,
                            n = Array(i),
                            r = lt.call(arguments),
                            o = yt.Deferred(),
                            a = function (t) {
                                return function (i) {
                                    (n[t] = this), (r[t] = arguments.length > 1 ? lt.call(arguments) : i), --e || o.resolveWith(n, r);
                                };
                            };
                        if (e <= 1 && (f(t, o.done(a(i)).resolve, o.reject, !e), "pending" === o.state() || yt.isFunction(r[i] && r[i].then))) return o.then();
                        for (; i--; ) f(r[i], a(i), o.reject);
                        return o.promise();
                    },
                });
            var jt = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
            (yt.Deferred.exceptionHook = function (t, e) {
                i.console && i.console.warn && t && jt.test(t.name) && i.console.warn("jQuery.Deferred exception: " + t.message, t.stack, e);
            }),
                (yt.readyException = function (t) {
                    i.setTimeout(function () {
                        throw t;
                    });
                });
            var kt = yt.Deferred();
            (yt.fn.ready = function (t) {
                return (
                    kt.then(t).catch(function (t) {
                        yt.readyException(t);
                    }),
                    this
                );
            }),
                yt.extend({
                    isReady: !1,
                    readyWait: 1,
                    ready: function (t) {
                        (!0 === t ? --yt.readyWait : yt.isReady) || ((yt.isReady = !0), (!0 !== t && --yt.readyWait > 0) || kt.resolveWith(at, [yt]));
                    },
                }),
                (yt.ready.then = kt.then),
                "complete" === at.readyState || ("loading" !== at.readyState && !at.documentElement.doScroll) ? i.setTimeout(yt.ready) : (at.addEventListener("DOMContentLoaded", m), i.addEventListener("load", m));
            var It = function (t, e, i, n, r, o, a) {
                    var s = 0,
                        l = t.length,
                        c = null == i;
                    if ("object" === yt.type(i)) {
                        r = !0;
                        for (s in i) It(t, e, s, i[s], !0, o, a);
                    } else if (
                        void 0 !== n &&
                        ((r = !0),
                        yt.isFunction(n) || (a = !0),
                        c &&
                            (a
                                ? (e.call(t, n), (e = null))
                                : ((c = e),
                                  (e = function (t, e, i) {
                                      return c.call(yt(t), i);
                                  }))),
                        e)
                    )
                        for (; s < l; s++) e(t[s], i, a ? n : n.call(t[s], s, e(t[s], i)));
                    return r ? t : c ? e.call(t) : l ? e(t[0], i) : o;
                },
                Nt = function (t) {
                    return 1 === t.nodeType || 9 === t.nodeType || !+t.nodeType;
                };
            (v.uid = 1),
                (v.prototype = {
                    cache: function (t) {
                        var e = t[this.expando];
                        return e || ((e = {}), Nt(t) && (t.nodeType ? (t[this.expando] = e) : Object.defineProperty(t, this.expando, { value: e, configurable: !0 }))), e;
                    },
                    set: function (t, e, i) {
                        var n,
                            r = this.cache(t);
                        if ("string" == typeof e) r[yt.camelCase(e)] = i;
                        else for (n in e) r[yt.camelCase(n)] = e[n];
                        return r;
                    },
                    get: function (t, e) {
                        return void 0 === e ? this.cache(t) : t[this.expando] && t[this.expando][yt.camelCase(e)];
                    },
                    access: function (t, e, i) {
                        return void 0 === e || (e && "string" == typeof e && void 0 === i) ? this.get(t, e) : (this.set(t, e, i), void 0 !== i ? i : e);
                    },
                    remove: function (t, e) {
                        var i,
                            n = t[this.expando];
                        if (void 0 !== n) {
                            if (void 0 !== e) {
                                Array.isArray(e) ? (e = e.map(yt.camelCase)) : ((e = yt.camelCase(e)), (e = e in n ? [e] : e.match(Lt) || [])), (i = e.length);
                                for (; i--; ) delete n[e[i]];
                            }
                            (void 0 === e || yt.isEmptyObject(n)) && (t.nodeType ? (t[this.expando] = void 0) : delete t[this.expando]);
                        }
                    },
                    hasData: function (t) {
                        var e = t[this.expando];
                        return void 0 !== e && !yt.isEmptyObject(e);
                    },
                });
            var Ft = new v(),
                Ut = new v(),
                Bt = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
                Gt = /[A-Z]/g;
            yt.extend({
                hasData: function (t) {
                    return Ut.hasData(t) || Ft.hasData(t);
                },
                data: function (t, e, i) {
                    return Ut.access(t, e, i);
                },
                removeData: function (t, e) {
                    Ut.remove(t, e);
                },
                _data: function (t, e, i) {
                    return Ft.access(t, e, i);
                },
                _removeData: function (t, e) {
                    Ft.remove(t, e);
                },
            }),
                yt.fn.extend({
                    data: function (t, e) {
                        var i,
                            n,
                            r,
                            o = this[0],
                            a = o && o.attributes;
                        if (void 0 === t) {
                            if (this.length && ((r = Ut.get(o)), 1 === o.nodeType && !Ft.get(o, "hasDataAttrs"))) {
                                for (i = a.length; i--; ) a[i] && ((n = a[i].name), 0 === n.indexOf("data-") && ((n = yt.camelCase(n.slice(5))), y(o, n, r[n])));
                                Ft.set(o, "hasDataAttrs", !0);
                            }
                            return r;
                        }
                        return "object" == typeof t
                            ? this.each(function () {
                                  Ut.set(this, t);
                              })
                            : It(
                                  this,
                                  function (e) {
                                      var i;
                                      if (o && void 0 === e) {
                                          if (void 0 !== (i = Ut.get(o, t))) return i;
                                          if (void 0 !== (i = y(o, t))) return i;
                                      } else
                                          this.each(function () {
                                              Ut.set(this, t, e);
                                          });
                                  },
                                  null,
                                  e,
                                  arguments.length > 1,
                                  null,
                                  !0
                              );
                    },
                    removeData: function (t) {
                        return this.each(function () {
                            Ut.remove(this, t);
                        });
                    },
                }),
                yt.extend({
                    queue: function (t, e, i) {
                        var n;
                        if (t) return (e = (e || "fx") + "queue"), (n = Ft.get(t, e)), i && (!n || Array.isArray(i) ? (n = Ft.access(t, e, yt.makeArray(i))) : n.push(i)), n || [];
                    },
                    dequeue: function (t, e) {
                        e = e || "fx";
                        var i = yt.queue(t, e),
                            n = i.length,
                            r = i.shift(),
                            o = yt._queueHooks(t, e),
                            a = function () {
                                yt.dequeue(t, e);
                            };
                        "inprogress" === r && ((r = i.shift()), n--), r && ("fx" === e && i.unshift("inprogress"), delete o.stop, r.call(t, a, o)), !n && o && o.empty.fire();
                    },
                    _queueHooks: function (t, e) {
                        var i = e + "queueHooks";
                        return (
                            Ft.get(t, i) ||
                            Ft.access(t, i, {
                                empty: yt.Callbacks("once memory").add(function () {
                                    Ft.remove(t, [e + "queue", i]);
                                }),
                            })
                        );
                    },
                }),
                yt.fn.extend({
                    queue: function (t, e) {
                        var i = 2;
                        return (
                            "string" != typeof t && ((e = t), (t = "fx"), i--),
                            arguments.length < i
                                ? yt.queue(this[0], t)
                                : void 0 === e
                                ? this
                                : this.each(function () {
                                      var i = yt.queue(this, t, e);
                                      yt._queueHooks(this, t), "fx" === t && "inprogress" !== i[0] && yt.dequeue(this, t);
                                  })
                        );
                    },
                    dequeue: function (t) {
                        return this.each(function () {
                            yt.dequeue(this, t);
                        });
                    },
                    clearQueue: function (t) {
                        return this.queue(t || "fx", []);
                    },
                    promise: function (t, e) {
                        var i,
                            n = 1,
                            r = yt.Deferred(),
                            o = this,
                            a = this.length,
                            s = function () {
                                --n || r.resolveWith(o, [o]);
                            };
                        for ("string" != typeof t && ((e = t), (t = void 0)), t = t || "fx"; a--; ) (i = Ft.get(o[a], t + "queueHooks")) && i.empty && (n++, i.empty.add(s));
                        return s(), r.promise(e);
                    },
                });
            var zt = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
                Vt = new RegExp("^(?:([+-])=|)(" + zt + ")([a-z%]*)$", "i"),
                Ht = ["Top", "Right", "Bottom", "Left"],
                Wt = function (t, e) {
                    return (t = e || t), "none" === t.style.display || ("" === t.style.display && yt.contains(t.ownerDocument, t) && "none" === yt.css(t, "display"));
                },
                Xt = function (t, e, i, n) {
                    var r,
                        o,
                        a = {};
                    for (o in e) (a[o] = t.style[o]), (t.style[o] = e[o]);
                    r = i.apply(t, n || []);
                    for (o in e) t.style[o] = a[o];
                    return r;
                },
                qt = {};
            yt.fn.extend({
                show: function () {
                    return x(this, !0);
                },
                hide: function () {
                    return x(this);
                },
                toggle: function (t) {
                    return "boolean" == typeof t
                        ? t
                            ? this.show()
                            : this.hide()
                        : this.each(function () {
                              Wt(this) ? yt(this).show() : yt(this).hide();
                          });
                },
            });
            var Yt = /^(?:checkbox|radio)$/i,
                Zt = /<([a-z][^\/\0>\x20\t\r\n\f]+)/i,
                Jt = /^$|\/(?:java|ecma)script/i,
                Qt = {
                    option: [1, "<select multiple='multiple'>", "</select>"],
                    thead: [1, "<table>", "</table>"],
                    col: [2, "<table><colgroup>", "</colgroup></table>"],
                    tr: [2, "<table><tbody>", "</tbody></table>"],
                    td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
                    _default: [0, "", ""],
                };
            (Qt.optgroup = Qt.option), (Qt.tbody = Qt.tfoot = Qt.colgroup = Qt.caption = Qt.thead), (Qt.th = Qt.td);
            var $t = /<|&#?\w+;/;
            !(function () {
                var t = at.createDocumentFragment(),
                    e = t.appendChild(at.createElement("div")),
                    i = at.createElement("input");
                i.setAttribute("type", "radio"),
                    i.setAttribute("checked", "checked"),
                    i.setAttribute("name", "t"),
                    e.appendChild(i),
                    (gt.checkClone = e.cloneNode(!0).cloneNode(!0).lastChild.checked),
                    (e.innerHTML = "<textarea>x</textarea>"),
                    (gt.noCloneChecked = !!e.cloneNode(!0).lastChild.defaultValue);
            })();
            var Kt = at.documentElement,
                te = /^key/,
                ee = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
                ie = /^([^.]*)(?:\.(.+)|)/;
            (yt.event = {
                global: {},
                add: function (t, e, i, n, r) {
                    var o,
                        a,
                        s,
                        l,
                        c,
                        u,
                        h,
                        d,
                        p,
                        f,
                        m,
                        v = Ft.get(t);
                    if (v)
                        for (
                            i.handler && ((o = i), (i = o.handler), (r = o.selector)),
                                r && yt.find.matchesSelector(Kt, r),
                                i.guid || (i.guid = yt.guid++),
                                (l = v.events) || (l = v.events = {}),
                                (a = v.handle) ||
                                    (a = v.handle = function (e) {
                                        return void 0 !== yt && yt.event.triggered !== e.type ? yt.event.dispatch.apply(t, arguments) : void 0;
                                    }),
                                e = (e || "").match(Lt) || [""],
                                c = e.length;
                            c--;

                        )
                            (s = ie.exec(e[c]) || []),
                                (p = m = s[1]),
                                (f = (s[2] || "").split(".").sort()),
                                p &&
                                    ((h = yt.event.special[p] || {}),
                                    (p = (r ? h.delegateType : h.bindType) || p),
                                    (h = yt.event.special[p] || {}),
                                    (u = yt.extend({ type: p, origType: m, data: n, handler: i, guid: i.guid, selector: r, needsContext: r && yt.expr.match.needsContext.test(r), namespace: f.join(".") }, o)),
                                    (d = l[p]) || ((d = l[p] = []), (d.delegateCount = 0), (h.setup && !1 !== h.setup.call(t, n, f, a)) || (t.addEventListener && t.addEventListener(p, a))),
                                    h.add && (h.add.call(t, u), u.handler.guid || (u.handler.guid = i.guid)),
                                    r ? d.splice(d.delegateCount++, 0, u) : d.push(u),
                                    (yt.event.global[p] = !0));
                },
                remove: function (t, e, i, n, r) {
                    var o,
                        a,
                        s,
                        l,
                        c,
                        u,
                        h,
                        d,
                        p,
                        f,
                        m,
                        v = Ft.hasData(t) && Ft.get(t);
                    if (v && (l = v.events)) {
                        for (e = (e || "").match(Lt) || [""], c = e.length; c--; )
                            if (((s = ie.exec(e[c]) || []), (p = m = s[1]), (f = (s[2] || "").split(".").sort()), p)) {
                                for (h = yt.event.special[p] || {}, p = (n ? h.delegateType : h.bindType) || p, d = l[p] || [], s = s[2] && new RegExp("(^|\\.)" + f.join("\\.(?:.*\\.|)") + "(\\.|$)"), a = o = d.length; o--; )
                                    (u = d[o]),
                                        (!r && m !== u.origType) ||
                                            (i && i.guid !== u.guid) ||
                                            (s && !s.test(u.namespace)) ||
                                            (n && n !== u.selector && ("**" !== n || !u.selector)) ||
                                            (d.splice(o, 1), u.selector && d.delegateCount--, h.remove && h.remove.call(t, u));
                                a && !d.length && ((h.teardown && !1 !== h.teardown.call(t, f, v.handle)) || yt.removeEvent(t, p, v.handle), delete l[p]);
                            } else for (p in l) yt.event.remove(t, p + e[c], i, n, !0);
                        yt.isEmptyObject(l) && Ft.remove(t, "handle events");
                    }
                },
                dispatch: function (t) {
                    var e,
                        i,
                        n,
                        r,
                        o,
                        a,
                        s = yt.event.fix(t),
                        l = new Array(arguments.length),
                        c = (Ft.get(this, "events") || {})[s.type] || [],
                        u = yt.event.special[s.type] || {};
                    for (l[0] = s, e = 1; e < arguments.length; e++) l[e] = arguments[e];
                    if (((s.delegateTarget = this), !u.preDispatch || !1 !== u.preDispatch.call(this, s))) {
                        for (a = yt.event.handlers.call(this, s, c), e = 0; (r = a[e++]) && !s.isPropagationStopped(); )
                            for (s.currentTarget = r.elem, i = 0; (o = r.handlers[i++]) && !s.isImmediatePropagationStopped(); )
                                (s.rnamespace && !s.rnamespace.test(o.namespace)) ||
                                    ((s.handleObj = o), (s.data = o.data), void 0 !== (n = ((yt.event.special[o.origType] || {}).handle || o.handler).apply(r.elem, l)) && !1 === (s.result = n) && (s.preventDefault(), s.stopPropagation()));
                        return u.postDispatch && u.postDispatch.call(this, s), s.result;
                    }
                },
                handlers: function (t, e) {
                    var i,
                        n,
                        r,
                        o,
                        a,
                        s = [],
                        l = e.delegateCount,
                        c = t.target;
                    if (l && c.nodeType && !("click" === t.type && t.button >= 1))
                        for (; c !== this; c = c.parentNode || this)
                            if (1 === c.nodeType && ("click" !== t.type || !0 !== c.disabled)) {
                                for (o = [], a = {}, i = 0; i < l; i++) (n = e[i]), (r = n.selector + " "), void 0 === a[r] && (a[r] = n.needsContext ? yt(r, this).index(c) > -1 : yt.find(r, this, null, [c]).length), a[r] && o.push(n);
                                o.length && s.push({ elem: c, handlers: o });
                            }
                    return (c = this), l < e.length && s.push({ elem: c, handlers: e.slice(l) }), s;
                },
                addProp: function (t, e) {
                    Object.defineProperty(yt.Event.prototype, t, {
                        enumerable: !0,
                        configurable: !0,
                        get: yt.isFunction(e)
                            ? function () {
                                  if (this.originalEvent) return e(this.originalEvent);
                              }
                            : function () {
                                  if (this.originalEvent) return this.originalEvent[t];
                              },
                        set: function (e) {
                            Object.defineProperty(this, t, { enumerable: !0, configurable: !0, writable: !0, value: e });
                        },
                    });
                },
                fix: function (t) {
                    return t[yt.expando] ? t : new yt.Event(t);
                },
                special: {
                    load: { noBubble: !0 },
                    focus: {
                        trigger: function () {
                            if (this !== A() && this.focus) return this.focus(), !1;
                        },
                        delegateType: "focusin",
                    },
                    blur: {
                        trigger: function () {
                            if (this === A() && this.blur) return this.blur(), !1;
                        },
                        delegateType: "focusout",
                    },
                    click: {
                        trigger: function () {
                            if ("checkbox" === this.type && this.click && l(this, "input")) return this.click(), !1;
                        },
                        _default: function (t) {
                            return l(t.target, "a");
                        },
                    },
                    beforeunload: {
                        postDispatch: function (t) {
                            void 0 !== t.result && t.originalEvent && (t.originalEvent.returnValue = t.result);
                        },
                    },
                },
            }),
                (yt.removeEvent = function (t, e, i) {
                    t.removeEventListener && t.removeEventListener(e, i);
                }),
                (yt.Event = function (t, e) {
                    if (!(this instanceof yt.Event)) return new yt.Event(t, e);
                    t && t.type
                        ? ((this.originalEvent = t),
                          (this.type = t.type),
                          (this.isDefaultPrevented = t.defaultPrevented || (void 0 === t.defaultPrevented && !1 === t.returnValue) ? M : S),
                          (this.target = t.target && 3 === t.target.nodeType ? t.target.parentNode : t.target),
                          (this.currentTarget = t.currentTarget),
                          (this.relatedTarget = t.relatedTarget))
                        : (this.type = t),
                        e && yt.extend(this, e),
                        (this.timeStamp = (t && t.timeStamp) || yt.now()),
                        (this[yt.expando] = !0);
                }),
                (yt.Event.prototype = {
                    constructor: yt.Event,
                    isDefaultPrevented: S,
                    isPropagationStopped: S,
                    isImmediatePropagationStopped: S,
                    isSimulated: !1,
                    preventDefault: function () {
                        var t = this.originalEvent;
                        (this.isDefaultPrevented = M), t && !this.isSimulated && t.preventDefault();
                    },
                    stopPropagation: function () {
                        var t = this.originalEvent;
                        (this.isPropagationStopped = M), t && !this.isSimulated && t.stopPropagation();
                    },
                    stopImmediatePropagation: function () {
                        var t = this.originalEvent;
                        (this.isImmediatePropagationStopped = M), t && !this.isSimulated && t.stopImmediatePropagation(), this.stopPropagation();
                    },
                }),
                yt.each(
                    {
                        altKey: !0,
                        bubbles: !0,
                        cancelable: !0,
                        changedTouches: !0,
                        ctrlKey: !0,
                        detail: !0,
                        eventPhase: !0,
                        metaKey: !0,
                        pageX: !0,
                        pageY: !0,
                        shiftKey: !0,
                        view: !0,
                        char: !0,
                        charCode: !0,
                        key: !0,
                        keyCode: !0,
                        button: !0,
                        buttons: !0,
                        clientX: !0,
                        clientY: !0,
                        offsetX: !0,
                        offsetY: !0,
                        pointerId: !0,
                        pointerType: !0,
                        screenX: !0,
                        screenY: !0,
                        targetTouches: !0,
                        toElement: !0,
                        touches: !0,
                        which: function (t) {
                            var e = t.button;
                            return null == t.which && te.test(t.type) ? (null != t.charCode ? t.charCode : t.keyCode) : !t.which && void 0 !== e && ee.test(t.type) ? (1 & e ? 1 : 2 & e ? 3 : 4 & e ? 2 : 0) : t.which;
                        },
                    },
                    yt.event.addProp
                ),
                yt.each({ mouseenter: "mouseover", mouseleave: "mouseout", pointerenter: "pointerover", pointerleave: "pointerout" }, function (t, e) {
                    yt.event.special[t] = {
                        delegateType: e,
                        bindType: e,
                        handle: function (t) {
                            var i,
                                n = this,
                                r = t.relatedTarget,
                                o = t.handleObj;
                            return (r && (r === n || yt.contains(n, r))) || ((t.type = o.origType), (i = o.handler.apply(this, arguments)), (t.type = e)), i;
                        },
                    };
                }),
                yt.fn.extend({
                    on: function (t, e, i, n) {
                        return R(this, t, e, i, n);
                    },
                    one: function (t, e, i, n) {
                        return R(this, t, e, i, n, 1);
                    },
                    off: function (t, e, i) {
                        var n, r;
                        if (t && t.preventDefault && t.handleObj) return (n = t.handleObj), yt(t.delegateTarget).off(n.namespace ? n.origType + "." + n.namespace : n.origType, n.selector, n.handler), this;
                        if ("object" == typeof t) {
                            for (r in t) this.off(r, e, t[r]);
                            return this;
                        }
                        return (
                            (!1 !== e && "function" != typeof e) || ((i = e), (e = void 0)),
                            !1 === i && (i = S),
                            this.each(function () {
                                yt.event.remove(this, t, i, e);
                            })
                        );
                    },
                });
            var ne = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,
                re = /<script|<style|<link/i,
                oe = /checked\s*(?:[^=]|=\s*.checked.)/i,
                ae = /^true\/(.*)/,
                se = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
            yt.extend({
                htmlPrefilter: function (t) {
                    return t.replace(ne, "<$1></$2>");
                },
                clone: function (t, e, i) {
                    var n,
                        r,
                        o,
                        a,
                        s = t.cloneNode(!0),
                        l = yt.contains(t.ownerDocument, t);
                    if (!(gt.noCloneChecked || (1 !== t.nodeType && 11 !== t.nodeType) || yt.isXMLDoc(t))) for (a = w(s), o = w(t), n = 0, r = o.length; n < r; n++) L(o[n], a[n]);
                    if (e)
                        if (i) for (o = o || w(t), a = a || w(s), n = 0, r = o.length; n < r; n++) O(o[n], a[n]);
                        else O(t, s);
                    return (a = w(s, "script")), a.length > 0 && T(a, !l && w(t, "script")), s;
                },
                cleanData: function (t) {
                    for (var e, i, n, r = yt.event.special, o = 0; void 0 !== (i = t[o]); o++)
                        if (Nt(i)) {
                            if ((e = i[Ft.expando])) {
                                if (e.events) for (n in e.events) r[n] ? yt.event.remove(i, n) : yt.removeEvent(i, n, e.handle);
                                i[Ft.expando] = void 0;
                            }
                            i[Ut.expando] && (i[Ut.expando] = void 0);
                        }
                },
            }),
                yt.fn.extend({
                    detach: function (t) {
                        return k(this, t, !0);
                    },
                    remove: function (t) {
                        return k(this, t);
                    },
                    text: function (t) {
                        return It(
                            this,
                            function (t) {
                                return void 0 === t
                                    ? yt.text(this)
                                    : this.empty().each(function () {
                                          (1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType) || (this.textContent = t);
                                      });
                            },
                            null,
                            t,
                            arguments.length
                        );
                    },
                    append: function () {
                        return j(this, arguments, function (t) {
                            if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                                C(this, t).appendChild(t);
                            }
                        });
                    },
                    prepend: function () {
                        return j(this, arguments, function (t) {
                            if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                                var e = C(this, t);
                                e.insertBefore(t, e.firstChild);
                            }
                        });
                    },
                    before: function () {
                        return j(this, arguments, function (t) {
                            this.parentNode && this.parentNode.insertBefore(t, this);
                        });
                    },
                    after: function () {
                        return j(this, arguments, function (t) {
                            this.parentNode && this.parentNode.insertBefore(t, this.nextSibling);
                        });
                    },
                    empty: function () {
                        for (var t, e = 0; null != (t = this[e]); e++) 1 === t.nodeType && (yt.cleanData(w(t, !1)), (t.textContent = ""));
                        return this;
                    },
                    clone: function (t, e) {
                        return (
                            (t = null != t && t),
                            (e = null == e ? t : e),
                            this.map(function () {
                                return yt.clone(this, t, e);
                            })
                        );
                    },
                    html: function (t) {
                        return It(
                            this,
                            function (t) {
                                var e = this[0] || {},
                                    i = 0,
                                    n = this.length;
                                if (void 0 === t && 1 === e.nodeType) return e.innerHTML;
                                if ("string" == typeof t && !re.test(t) && !Qt[(Zt.exec(t) || ["", ""])[1].toLowerCase()]) {
                                    t = yt.htmlPrefilter(t);
                                    try {
                                        for (; i < n; i++) (e = this[i] || {}), 1 === e.nodeType && (yt.cleanData(w(e, !1)), (e.innerHTML = t));
                                        e = 0;
                                    } catch (t) {}
                                }
                                e && this.empty().append(t);
                            },
                            null,
                            t,
                            arguments.length
                        );
                    },
                    replaceWith: function () {
                        var t = [];
                        return j(
                            this,
                            arguments,
                            function (e) {
                                var i = this.parentNode;
                                yt.inArray(this, t) < 0 && (yt.cleanData(w(this)), i && i.replaceChild(e, this));
                            },
                            t
                        );
                    },
                }),
                yt.each({ appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith" }, function (t, e) {
                    yt.fn[t] = function (t) {
                        for (var i, n = [], r = yt(t), o = r.length - 1, a = 0; a <= o; a++) (i = a === o ? this : this.clone(!0)), yt(r[a])[e](i), ut.apply(n, i.get());
                        return this.pushStack(n);
                    };
                });
            var le = /^margin/,
                ce = new RegExp("^(" + zt + ")(?!px)[a-z%]+$", "i"),
                ue = function (t) {
                    var e = t.ownerDocument.defaultView;
                    return (e && e.opener) || (e = i), e.getComputedStyle(t);
                };
            !(function () {
                function t() {
                    if (s) {
                        (s.style.cssText = "box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%"), (s.innerHTML = ""), Kt.appendChild(a);
                        var t = i.getComputedStyle(s);
                        (e = "1%" !== t.top), (o = "2px" === t.marginLeft), (n = "4px" === t.width), (s.style.marginRight = "50%"), (r = "4px" === t.marginRight), Kt.removeChild(a), (s = null);
                    }
                }
                var e,
                    n,
                    r,
                    o,
                    a = at.createElement("div"),
                    s = at.createElement("div");
                s.style &&
                    ((s.style.backgroundClip = "content-box"),
                    (s.cloneNode(!0).style.backgroundClip = ""),
                    (gt.clearCloneStyle = "content-box" === s.style.backgroundClip),
                    (a.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute"),
                    a.appendChild(s),
                    yt.extend(gt, {
                        pixelPosition: function () {
                            return t(), e;
                        },
                        boxSizingReliable: function () {
                            return t(), n;
                        },
                        pixelMarginRight: function () {
                            return t(), r;
                        },
                        reliableMarginLeft: function () {
                            return t(), o;
                        },
                    }));
            })();
            var he = /^(none|table(?!-c[ea]).+)/,
                de = /^--/,
                pe = { position: "absolute", visibility: "hidden", display: "block" },
                fe = { letterSpacing: "0", fontWeight: "400" },
                me = ["Webkit", "Moz", "ms"],
                ve = at.createElement("div").style;
            yt.extend({
                cssHooks: {
                    opacity: {
                        get: function (t, e) {
                            if (e) {
                                var i = I(t, "opacity");
                                return "" === i ? "1" : i;
                            }
                        },
                    },
                },
                cssNumber: { animationIterationCount: !0, columnCount: !0, fillOpacity: !0, flexGrow: !0, flexShrink: !0, fontWeight: !0, lineHeight: !0, opacity: !0, order: !0, orphans: !0, widows: !0, zIndex: !0, zoom: !0 },
                cssProps: { float: "cssFloat" },
                style: function (t, e, i, n) {
                    if (t && 3 !== t.nodeType && 8 !== t.nodeType && t.style) {
                        var r,
                            o,
                            a,
                            s = yt.camelCase(e),
                            l = de.test(e),
                            c = t.style;
                        if ((l || (e = U(s)), (a = yt.cssHooks[e] || yt.cssHooks[s]), void 0 === i)) return a && "get" in a && void 0 !== (r = a.get(t, !1, n)) ? r : c[e];
                        (o = typeof i),
                            "string" === o && (r = Vt.exec(i)) && r[1] && ((i = _(t, e, r)), (o = "number")),
                            null != i &&
                                i === i &&
                                ("number" === o && (i += (r && r[3]) || (yt.cssNumber[s] ? "" : "px")),
                                gt.clearCloneStyle || "" !== i || 0 !== e.indexOf("background") || (c[e] = "inherit"),
                                (a && "set" in a && void 0 === (i = a.set(t, i, n))) || (l ? c.setProperty(e, i) : (c[e] = i)));
                    }
                },
                css: function (t, e, i, n) {
                    var r,
                        o,
                        a,
                        s = yt.camelCase(e);
                    return (
                        de.test(e) || (e = U(s)),
                        (a = yt.cssHooks[e] || yt.cssHooks[s]),
                        a && "get" in a && (r = a.get(t, !0, i)),
                        void 0 === r && (r = I(t, e, n)),
                        "normal" === r && e in fe && (r = fe[e]),
                        "" === i || i ? ((o = parseFloat(r)), !0 === i || isFinite(o) ? o || 0 : r) : r
                    );
                },
            }),
                yt.each(["height", "width"], function (t, e) {
                    yt.cssHooks[e] = {
                        get: function (t, i, n) {
                            if (i)
                                return !he.test(yt.css(t, "display")) || (t.getClientRects().length && t.getBoundingClientRect().width)
                                    ? z(t, e, n)
                                    : Xt(t, pe, function () {
                                          return z(t, e, n);
                                      });
                        },
                        set: function (t, i, n) {
                            var r,
                                o = n && ue(t),
                                a = n && G(t, e, n, "border-box" === yt.css(t, "boxSizing", !1, o), o);
                            return a && (r = Vt.exec(i)) && "px" !== (r[3] || "px") && ((t.style[e] = i), (i = yt.css(t, e))), B(t, i, a);
                        },
                    };
                }),
                (yt.cssHooks.marginLeft = N(gt.reliableMarginLeft, function (t, e) {
                    if (e)
                        return (
                            (parseFloat(I(t, "marginLeft")) ||
                                t.getBoundingClientRect().left -
                                    Xt(t, { marginLeft: 0 }, function () {
                                        return t.getBoundingClientRect().left;
                                    })) + "px"
                        );
                })),
                yt.each({ margin: "", padding: "", border: "Width" }, function (t, e) {
                    (yt.cssHooks[t + e] = {
                        expand: function (i) {
                            for (var n = 0, r = {}, o = "string" == typeof i ? i.split(" ") : [i]; n < 4; n++) r[t + Ht[n] + e] = o[n] || o[n - 2] || o[0];
                            return r;
                        },
                    }),
                        le.test(t) || (yt.cssHooks[t + e].set = B);
                }),
                yt.fn.extend({
                    css: function (t, e) {
                        return It(
                            this,
                            function (t, e, i) {
                                var n,
                                    r,
                                    o = {},
                                    a = 0;
                                if (Array.isArray(e)) {
                                    for (n = ue(t), r = e.length; a < r; a++) o[e[a]] = yt.css(t, e[a], !1, n);
                                    return o;
                                }
                                return void 0 !== i ? yt.style(t, e, i) : yt.css(t, e);
                            },
                            t,
                            e,
                            arguments.length > 1
                        );
                    },
                }),
                (yt.Tween = V),
                (V.prototype = {
                    constructor: V,
                    init: function (t, e, i, n, r, o) {
                        (this.elem = t), (this.prop = i), (this.easing = r || yt.easing._default), (this.options = e), (this.start = this.now = this.cur()), (this.end = n), (this.unit = o || (yt.cssNumber[i] ? "" : "px"));
                    },
                    cur: function () {
                        var t = V.propHooks[this.prop];
                        return t && t.get ? t.get(this) : V.propHooks._default.get(this);
                    },
                    run: function (t) {
                        var e,
                            i = V.propHooks[this.prop];
                        return (
                            this.options.duration ? (this.pos = e = yt.easing[this.easing](t, this.options.duration * t, 0, 1, this.options.duration)) : (this.pos = e = t),
                            (this.now = (this.end - this.start) * e + this.start),
                            this.options.step && this.options.step.call(this.elem, this.now, this),
                            i && i.set ? i.set(this) : V.propHooks._default.set(this),
                            this
                        );
                    },
                }),
                (V.prototype.init.prototype = V.prototype),
                (V.propHooks = {
                    _default: {
                        get: function (t) {
                            var e;
                            return 1 !== t.elem.nodeType || (null != t.elem[t.prop] && null == t.elem.style[t.prop]) ? t.elem[t.prop] : ((e = yt.css(t.elem, t.prop, "")), e && "auto" !== e ? e : 0);
                        },
                        set: function (t) {
                            yt.fx.step[t.prop] ? yt.fx.step[t.prop](t) : 1 !== t.elem.nodeType || (null == t.elem.style[yt.cssProps[t.prop]] && !yt.cssHooks[t.prop]) ? (t.elem[t.prop] = t.now) : yt.style(t.elem, t.prop, t.now + t.unit);
                        },
                    },
                }),
                (V.propHooks.scrollTop = V.propHooks.scrollLeft = {
                    set: function (t) {
                        t.elem.nodeType && t.elem.parentNode && (t.elem[t.prop] = t.now);
                    },
                }),
                (yt.easing = {
                    linear: function (t) {
                        return t;
                    },
                    swing: function (t) {
                        return 0.5 - Math.cos(t * Math.PI) / 2;
                    },
                    _default: "swing",
                }),
                (yt.fx = V.prototype.init),
                (yt.fx.step = {});
            var ge,
                ye,
                _e = /^(?:toggle|show|hide)$/,
                be = /queueHooks$/;
            (yt.Animation = yt.extend(J, {
                tweeners: {
                    "*": [
                        function (t, e) {
                            var i = this.createTween(t, e);
                            return _(i.elem, t, Vt.exec(e), i), i;
                        },
                    ],
                },
                tweener: function (t, e) {
                    yt.isFunction(t) ? ((e = t), (t = ["*"])) : (t = t.match(Lt));
                    for (var i, n = 0, r = t.length; n < r; n++) (i = t[n]), (J.tweeners[i] = J.tweeners[i] || []), J.tweeners[i].unshift(e);
                },
                prefilters: [Y],
                prefilter: function (t, e) {
                    e ? J.prefilters.unshift(t) : J.prefilters.push(t);
                },
            })),
                (yt.speed = function (t, e, i) {
                    var n = t && "object" == typeof t ? yt.extend({}, t) : { complete: i || (!i && e) || (yt.isFunction(t) && t), duration: t, easing: (i && e) || (e && !yt.isFunction(e) && e) };
                    return (
                        yt.fx.off ? (n.duration = 0) : "number" != typeof n.duration && (n.duration in yt.fx.speeds ? (n.duration = yt.fx.speeds[n.duration]) : (n.duration = yt.fx.speeds._default)),
                        (null != n.queue && !0 !== n.queue) || (n.queue = "fx"),
                        (n.old = n.complete),
                        (n.complete = function () {
                            yt.isFunction(n.old) && n.old.call(this), n.queue && yt.dequeue(this, n.queue);
                        }),
                        n
                    );
                }),
                yt.fn.extend({
                    fadeTo: function (t, e, i, n) {
                        return this.filter(Wt).css("opacity", 0).show().end().animate({ opacity: e }, t, i, n);
                    },
                    animate: function (t, e, i, n) {
                        var r = yt.isEmptyObject(t),
                            o = yt.speed(e, i, n),
                            a = function () {
                                var e = J(this, yt.extend({}, t), o);
                                (r || Ft.get(this, "finish")) && e.stop(!0);
                            };
                        return (a.finish = a), r || !1 === o.queue ? this.each(a) : this.queue(o.queue, a);
                    },
                    stop: function (t, e, i) {
                        var n = function (t) {
                            var e = t.stop;
                            delete t.stop, e(i);
                        };
                        return (
                            "string" != typeof t && ((i = e), (e = t), (t = void 0)),
                            e && !1 !== t && this.queue(t || "fx", []),
                            this.each(function () {
                                var e = !0,
                                    r = null != t && t + "queueHooks",
                                    o = yt.timers,
                                    a = Ft.get(this);
                                if (r) a[r] && a[r].stop && n(a[r]);
                                else for (r in a) a[r] && a[r].stop && be.test(r) && n(a[r]);
                                for (r = o.length; r--; ) o[r].elem !== this || (null != t && o[r].queue !== t) || (o[r].anim.stop(i), (e = !1), o.splice(r, 1));
                                (!e && i) || yt.dequeue(this, t);
                            })
                        );
                    },
                    finish: function (t) {
                        return (
                            !1 !== t && (t = t || "fx"),
                            this.each(function () {
                                var e,
                                    i = Ft.get(this),
                                    n = i[t + "queue"],
                                    r = i[t + "queueHooks"],
                                    o = yt.timers,
                                    a = n ? n.length : 0;
                                for (i.finish = !0, yt.queue(this, t, []), r && r.stop && r.stop.call(this, !0), e = o.length; e--; ) o[e].elem === this && o[e].queue === t && (o[e].anim.stop(!0), o.splice(e, 1));
                                for (e = 0; e < a; e++) n[e] && n[e].finish && n[e].finish.call(this);
                                delete i.finish;
                            })
                        );
                    },
                }),
                yt.each(["toggle", "show", "hide"], function (t, e) {
                    var i = yt.fn[e];
                    yt.fn[e] = function (t, n, r) {
                        return null == t || "boolean" == typeof t ? i.apply(this, arguments) : this.animate(X(e, !0), t, n, r);
                    };
                }),
                yt.each({ slideDown: X("show"), slideUp: X("hide"), slideToggle: X("toggle"), fadeIn: { opacity: "show" }, fadeOut: { opacity: "hide" }, fadeToggle: { opacity: "toggle" } }, function (t, e) {
                    yt.fn[t] = function (t, i, n) {
                        return this.animate(e, t, i, n);
                    };
                }),
                (yt.timers = []),
                (yt.fx.tick = function () {
                    var t,
                        e = 0,
                        i = yt.timers;
                    for (ge = yt.now(); e < i.length; e++) (t = i[e])() || i[e] !== t || i.splice(e--, 1);
                    i.length || yt.fx.stop(), (ge = void 0);
                }),
                (yt.fx.timer = function (t) {
                    yt.timers.push(t), yt.fx.start();
                }),
                (yt.fx.interval = 13),
                (yt.fx.start = function () {
                    ye || ((ye = !0), H());
                }),
                (yt.fx.stop = function () {
                    ye = null;
                }),
                (yt.fx.speeds = { slow: 600, fast: 200, _default: 400 }),
                (yt.fn.delay = function (t, e) {
                    return (
                        (t = yt.fx ? yt.fx.speeds[t] || t : t),
                        (e = e || "fx"),
                        this.queue(e, function (e, n) {
                            var r = i.setTimeout(e, t);
                            n.stop = function () {
                                i.clearTimeout(r);
                            };
                        })
                    );
                }),
                (function () {
                    var t = at.createElement("input"),
                        e = at.createElement("select"),
                        i = e.appendChild(at.createElement("option"));
                    (t.type = "checkbox"), (gt.checkOn = "" !== t.value), (gt.optSelected = i.selected), (t = at.createElement("input")), (t.value = "t"), (t.type = "radio"), (gt.radioValue = "t" === t.value);
                })();
            var xe,
                we = yt.expr.attrHandle;
            yt.fn.extend({
                attr: function (t, e) {
                    return It(this, yt.attr, t, e, arguments.length > 1);
                },
                removeAttr: function (t) {
                    return this.each(function () {
                        yt.removeAttr(this, t);
                    });
                },
            }),
                yt.extend({
                    attr: function (t, e, i) {
                        var n,
                            r,
                            o = t.nodeType;
                        if (3 !== o && 8 !== o && 2 !== o)
                            return void 0 === t.getAttribute
                                ? yt.prop(t, e, i)
                                : ((1 === o && yt.isXMLDoc(t)) || (r = yt.attrHooks[e.toLowerCase()] || (yt.expr.match.bool.test(e) ? xe : void 0)),
                                  void 0 !== i
                                      ? null === i
                                          ? void yt.removeAttr(t, e)
                                          : r && "set" in r && void 0 !== (n = r.set(t, i, e))
                                          ? n
                                          : (t.setAttribute(e, i + ""), i)
                                      : r && "get" in r && null !== (n = r.get(t, e))
                                      ? n
                                      : ((n = yt.find.attr(t, e)), null == n ? void 0 : n));
                    },
                    attrHooks: {
                        type: {
                            set: function (t, e) {
                                if (!gt.radioValue && "radio" === e && l(t, "input")) {
                                    var i = t.value;
                                    return t.setAttribute("type", e), i && (t.value = i), e;
                                }
                            },
                        },
                    },
                    removeAttr: function (t, e) {
                        var i,
                            n = 0,
                            r = e && e.match(Lt);
                        if (r && 1 === t.nodeType) for (; (i = r[n++]); ) t.removeAttribute(i);
                    },
                }),
                (xe = {
                    set: function (t, e, i) {
                        return !1 === e ? yt.removeAttr(t, i) : t.setAttribute(i, i), i;
                    },
                }),
                yt.each(yt.expr.match.bool.source.match(/\w+/g), function (t, e) {
                    var i = we[e] || yt.find.attr;
                    we[e] = function (t, e, n) {
                        var r,
                            o,
                            a = e.toLowerCase();
                        return n || ((o = we[a]), (we[a] = r), (r = null != i(t, e, n) ? a : null), (we[a] = o)), r;
                    };
                });
            var Te = /^(?:input|select|textarea|button)$/i,
                Ee = /^(?:a|area)$/i;
            yt.fn.extend({
                prop: function (t, e) {
                    return It(this, yt.prop, t, e, arguments.length > 1);
                },
                removeProp: function (t) {
                    return this.each(function () {
                        delete this[yt.propFix[t] || t];
                    });
                },
            }),
                yt.extend({
                    prop: function (t, e, i) {
                        var n,
                            r,
                            o = t.nodeType;
                        if (3 !== o && 8 !== o && 2 !== o)
                            return (
                                (1 === o && yt.isXMLDoc(t)) || ((e = yt.propFix[e] || e), (r = yt.propHooks[e])),
                                void 0 !== i ? (r && "set" in r && void 0 !== (n = r.set(t, i, e)) ? n : (t[e] = i)) : r && "get" in r && null !== (n = r.get(t, e)) ? n : t[e]
                            );
                    },
                    propHooks: {
                        tabIndex: {
                            get: function (t) {
                                var e = yt.find.attr(t, "tabindex");
                                return e ? parseInt(e, 10) : Te.test(t.nodeName) || (Ee.test(t.nodeName) && t.href) ? 0 : -1;
                            },
                        },
                    },
                    propFix: { for: "htmlFor", class: "className" },
                }),
                gt.optSelected ||
                    (yt.propHooks.selected = {
                        get: function (t) {
                            var e = t.parentNode;
                            return e && e.parentNode && e.parentNode.selectedIndex, null;
                        },
                        set: function (t) {
                            var e = t.parentNode;
                            e && (e.selectedIndex, e.parentNode && e.parentNode.selectedIndex);
                        },
                    }),
                yt.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () {
                    yt.propFix[this.toLowerCase()] = this;
                }),
                yt.fn.extend({
                    addClass: function (t) {
                        var e,
                            i,
                            n,
                            r,
                            o,
                            a,
                            s,
                            l = 0;
                        if (yt.isFunction(t))
                            return this.each(function (e) {
                                yt(this).addClass(t.call(this, e, $(this)));
                            });
                        if ("string" == typeof t && t)
                            for (e = t.match(Lt) || []; (i = this[l++]); )
                                if (((r = $(i)), (n = 1 === i.nodeType && " " + Q(r) + " "))) {
                                    for (a = 0; (o = e[a++]); ) n.indexOf(" " + o + " ") < 0 && (n += o + " ");
                                    (s = Q(n)), r !== s && i.setAttribute("class", s);
                                }
                        return this;
                    },
                    removeClass: function (t) {
                        var e,
                            i,
                            n,
                            r,
                            o,
                            a,
                            s,
                            l = 0;
                        if (yt.isFunction(t))
                            return this.each(function (e) {
                                yt(this).removeClass(t.call(this, e, $(this)));
                            });
                        if (!arguments.length) return this.attr("class", "");
                        if ("string" == typeof t && t)
                            for (e = t.match(Lt) || []; (i = this[l++]); )
                                if (((r = $(i)), (n = 1 === i.nodeType && " " + Q(r) + " "))) {
                                    for (a = 0; (o = e[a++]); ) for (; n.indexOf(" " + o + " ") > -1; ) n = n.replace(" " + o + " ", " ");
                                    (s = Q(n)), r !== s && i.setAttribute("class", s);
                                }
                        return this;
                    },
                    toggleClass: function (t, e) {
                        var i = typeof t;
                        return "boolean" == typeof e && "string" === i
                            ? e
                                ? this.addClass(t)
                                : this.removeClass(t)
                            : yt.isFunction(t)
                            ? this.each(function (i) {
                                  yt(this).toggleClass(t.call(this, i, $(this), e), e);
                              })
                            : this.each(function () {
                                  var e, n, r, o;
                                  if ("string" === i) for (n = 0, r = yt(this), o = t.match(Lt) || []; (e = o[n++]); ) r.hasClass(e) ? r.removeClass(e) : r.addClass(e);
                                  else (void 0 !== t && "boolean" !== i) || ((e = $(this)), e && Ft.set(this, "__className__", e), this.setAttribute && this.setAttribute("class", e || !1 === t ? "" : Ft.get(this, "__className__") || ""));
                              });
                    },
                    hasClass: function (t) {
                        var e,
                            i,
                            n = 0;
                        for (e = " " + t + " "; (i = this[n++]); ) if (1 === i.nodeType && (" " + Q($(i)) + " ").indexOf(e) > -1) return !0;
                        return !1;
                    },
                });
            var Me = /\r/g;
            yt.fn.extend({
                val: function (t) {
                    var e,
                        i,
                        n,
                        r = this[0];
                    {
                        if (arguments.length)
                            return (
                                (n = yt.isFunction(t)),
                                this.each(function (i) {
                                    var r;
                                    1 === this.nodeType &&
                                        ((r = n ? t.call(this, i, yt(this).val()) : t),
                                        null == r
                                            ? (r = "")
                                            : "number" == typeof r
                                            ? (r += "")
                                            : Array.isArray(r) &&
                                              (r = yt.map(r, function (t) {
                                                  return null == t ? "" : t + "";
                                              })),
                                        ((e = yt.valHooks[this.type] || yt.valHooks[this.nodeName.toLowerCase()]) && "set" in e && void 0 !== e.set(this, r, "value")) || (this.value = r));
                                })
                            );
                        if (r)
                            return (e = yt.valHooks[r.type] || yt.valHooks[r.nodeName.toLowerCase()]) && "get" in e && void 0 !== (i = e.get(r, "value")) ? i : ((i = r.value), "string" == typeof i ? i.replace(Me, "") : null == i ? "" : i);
                    }
                },
            }),
                yt.extend({
                    valHooks: {
                        option: {
                            get: function (t) {
                                var e = yt.find.attr(t, "value");
                                return null != e ? e : Q(yt.text(t));
                            },
                        },
                        select: {
                            get: function (t) {
                                var e,
                                    i,
                                    n,
                                    r = t.options,
                                    o = t.selectedIndex,
                                    a = "select-one" === t.type,
                                    s = a ? null : [],
                                    c = a ? o + 1 : r.length;
                                for (n = o < 0 ? c : a ? o : 0; n < c; n++)
                                    if (((i = r[n]), (i.selected || n === o) && !i.disabled && (!i.parentNode.disabled || !l(i.parentNode, "optgroup")))) {
                                        if (((e = yt(i).val()), a)) return e;
                                        s.push(e);
                                    }
                                return s;
                            },
                            set: function (t, e) {
                                for (var i, n, r = t.options, o = yt.makeArray(e), a = r.length; a--; ) (n = r[a]), (n.selected = yt.inArray(yt.valHooks.option.get(n), o) > -1) && (i = !0);
                                return i || (t.selectedIndex = -1), o;
                            },
                        },
                    },
                }),
                yt.each(["radio", "checkbox"], function () {
                    (yt.valHooks[this] = {
                        set: function (t, e) {
                            if (Array.isArray(e)) return (t.checked = yt.inArray(yt(t).val(), e) > -1);
                        },
                    }),
                        gt.checkOn ||
                            (yt.valHooks[this].get = function (t) {
                                return null === t.getAttribute("value") ? "on" : t.value;
                            });
                });
            var Se = /^(?:focusinfocus|focusoutblur)$/;
            yt.extend(yt.event, {
                trigger: function (t, e, n, r) {
                    var o,
                        a,
                        s,
                        l,
                        c,
                        u,
                        h,
                        d = [n || at],
                        p = ft.call(t, "type") ? t.type : t,
                        f = ft.call(t, "namespace") ? t.namespace.split(".") : [];
                    if (
                        ((a = s = n = n || at),
                        3 !== n.nodeType &&
                            8 !== n.nodeType &&
                            !Se.test(p + yt.event.triggered) &&
                            (p.indexOf(".") > -1 && ((f = p.split(".")), (p = f.shift()), f.sort()),
                            (c = p.indexOf(":") < 0 && "on" + p),
                            (t = t[yt.expando] ? t : new yt.Event(p, "object" == typeof t && t)),
                            (t.isTrigger = r ? 2 : 3),
                            (t.namespace = f.join(".")),
                            (t.rnamespace = t.namespace ? new RegExp("(^|\\.)" + f.join("\\.(?:.*\\.|)") + "(\\.|$)") : null),
                            (t.result = void 0),
                            t.target || (t.target = n),
                            (e = null == e ? [t] : yt.makeArray(e, [t])),
                            (h = yt.event.special[p] || {}),
                            r || !h.trigger || !1 !== h.trigger.apply(n, e)))
                    ) {
                        if (!r && !h.noBubble && !yt.isWindow(n)) {
                            for (l = h.delegateType || p, Se.test(l + p) || (a = a.parentNode); a; a = a.parentNode) d.push(a), (s = a);
                            s === (n.ownerDocument || at) && d.push(s.defaultView || s.parentWindow || i);
                        }
                        for (o = 0; (a = d[o++]) && !t.isPropagationStopped(); )
                            (t.type = o > 1 ? l : h.bindType || p),
                                (u = (Ft.get(a, "events") || {})[t.type] && Ft.get(a, "handle")),
                                u && u.apply(a, e),
                                (u = c && a[c]) && u.apply && Nt(a) && ((t.result = u.apply(a, e)), !1 === t.result && t.preventDefault());
                        return (
                            (t.type = p),
                            r ||
                                t.isDefaultPrevented() ||
                                (h._default && !1 !== h._default.apply(d.pop(), e)) ||
                                !Nt(n) ||
                                (c && yt.isFunction(n[p]) && !yt.isWindow(n) && ((s = n[c]), s && (n[c] = null), (yt.event.triggered = p), n[p](), (yt.event.triggered = void 0), s && (n[c] = s))),
                            t.result
                        );
                    }
                },
                simulate: function (t, e, i) {
                    var n = yt.extend(new yt.Event(), i, { type: t, isSimulated: !0 });
                    yt.event.trigger(n, null, e);
                },
            }),
                yt.fn.extend({
                    trigger: function (t, e) {
                        return this.each(function () {
                            yt.event.trigger(t, e, this);
                        });
                    },
                    triggerHandler: function (t, e) {
                        var i = this[0];
                        if (i) return yt.event.trigger(t, e, i, !0);
                    },
                }),
                yt.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function (t, e) {
                    yt.fn[e] = function (t, i) {
                        return arguments.length > 0 ? this.on(e, null, t, i) : this.trigger(e);
                    };
                }),
                yt.fn.extend({
                    hover: function (t, e) {
                        return this.mouseenter(t).mouseleave(e || t);
                    },
                }),
                (gt.focusin = "onfocusin" in i),
                gt.focusin ||
                    yt.each({ focus: "focusin", blur: "focusout" }, function (t, e) {
                        var i = function (t) {
                            yt.event.simulate(e, t.target, yt.event.fix(t));
                        };
                        yt.event.special[e] = {
                            setup: function () {
                                var n = this.ownerDocument || this,
                                    r = Ft.access(n, e);
                                r || n.addEventListener(t, i, !0), Ft.access(n, e, (r || 0) + 1);
                            },
                            teardown: function () {
                                var n = this.ownerDocument || this,
                                    r = Ft.access(n, e) - 1;
                                r ? Ft.access(n, e, r) : (n.removeEventListener(t, i, !0), Ft.remove(n, e));
                            },
                        };
                    });
            var Ae = i.location,
                Re = yt.now(),
                Ce = /\?/;
            yt.parseXML = function (t) {
                var e;
                if (!t || "string" != typeof t) return null;
                try {
                    e = new i.DOMParser().parseFromString(t, "text/xml");
                } catch (t) {
                    e = void 0;
                }
                return (e && !e.getElementsByTagName("parsererror").length) || yt.error("Invalid XML: " + t), e;
            };
            var Pe = /\[\]$/,
                De = /\r?\n/g,
                Oe = /^(?:submit|button|image|reset|file)$/i,
                Le = /^(?:input|select|textarea|keygen)/i;
            (yt.param = function (t, e) {
                var i,
                    n = [],
                    r = function (t, e) {
                        var i = yt.isFunction(e) ? e() : e;
                        n[n.length] = encodeURIComponent(t) + "=" + encodeURIComponent(null == i ? "" : i);
                    };
                if (Array.isArray(t) || (t.jquery && !yt.isPlainObject(t)))
                    yt.each(t, function () {
                        r(this.name, this.value);
                    });
                else for (i in t) K(i, t[i], e, r);
                return n.join("&");
            }),
                yt.fn.extend({
                    serialize: function () {
                        return yt.param(this.serializeArray());
                    },
                    serializeArray: function () {
                        return this.map(function () {
                            var t = yt.prop(this, "elements");
                            return t ? yt.makeArray(t) : this;
                        })
                            .filter(function () {
                                var t = this.type;
                                return this.name && !yt(this).is(":disabled") && Le.test(this.nodeName) && !Oe.test(t) && (this.checked || !Yt.test(t));
                            })
                            .map(function (t, e) {
                                var i = yt(this).val();
                                return null == i
                                    ? null
                                    : Array.isArray(i)
                                    ? yt.map(i, function (t) {
                                          return { name: e.name, value: t.replace(De, "\r\n") };
                                      })
                                    : { name: e.name, value: i.replace(De, "\r\n") };
                            })
                            .get();
                    },
                });
            var je = /%20/g,
                ke = /#.*$/,
                Ie = /([?&])_=[^&]*/,
                Ne = /^(.*?):[ \t]*([^\r\n]*)$/gm,
                Fe = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
                Ue = /^(?:GET|HEAD)$/,
                Be = /^\/\//,
                Ge = {},
                ze = {},
                Ve = "*/".concat("*"),
                He = at.createElement("a");
            (He.href = Ae.href),
                yt.extend({
                    active: 0,
                    lastModified: {},
                    etag: {},
                    ajaxSettings: {
                        url: Ae.href,
                        type: "GET",
                        isLocal: Fe.test(Ae.protocol),
                        global: !0,
                        processData: !0,
                        async: !0,
                        contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                        accepts: { "*": Ve, text: "text/plain", html: "text/html", xml: "application/xml, text/xml", json: "application/json, text/javascript" },
                        contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ },
                        responseFields: { xml: "responseXML", text: "responseText", json: "responseJSON" },
                        converters: { "* text": String, "text html": !0, "text json": JSON.parse, "text xml": yt.parseXML },
                        flatOptions: { url: !0, context: !0 },
                    },
                    ajaxSetup: function (t, e) {
                        return e ? it(it(t, yt.ajaxSettings), e) : it(yt.ajaxSettings, t);
                    },
                    ajaxPrefilter: tt(Ge),
                    ajaxTransport: tt(ze),
                    ajax: function (t, e) {
                        function n(t, e, n, s) {
                            var c,
                                d,
                                p,
                                b,
                                x,
                                w = e;
                            u ||
                                ((u = !0),
                                l && i.clearTimeout(l),
                                (r = void 0),
                                (a = s || ""),
                                (T.readyState = t > 0 ? 4 : 0),
                                (c = (t >= 200 && t < 300) || 304 === t),
                                n && (b = nt(f, T, n)),
                                (b = rt(f, b, T, c)),
                                c
                                    ? (f.ifModified && ((x = T.getResponseHeader("Last-Modified")), x && (yt.lastModified[o] = x), (x = T.getResponseHeader("etag")) && (yt.etag[o] = x)),
                                      204 === t || "HEAD" === f.type ? (w = "nocontent") : 304 === t ? (w = "notmodified") : ((w = b.state), (d = b.data), (p = b.error), (c = !p)))
                                    : ((p = w), (!t && w) || ((w = "error"), t < 0 && (t = 0))),
                                (T.status = t),
                                (T.statusText = (e || w) + ""),
                                c ? g.resolveWith(m, [d, w, T]) : g.rejectWith(m, [T, w, p]),
                                T.statusCode(_),
                                (_ = void 0),
                                h && v.trigger(c ? "ajaxSuccess" : "ajaxError", [T, f, c ? d : p]),
                                y.fireWith(m, [T, w]),
                                h && (v.trigger("ajaxComplete", [T, f]), --yt.active || yt.event.trigger("ajaxStop")));
                        }
                        "object" == typeof t && ((e = t), (t = void 0)), (e = e || {});
                        var r,
                            o,
                            a,
                            s,
                            l,
                            c,
                            u,
                            h,
                            d,
                            p,
                            f = yt.ajaxSetup({}, e),
                            m = f.context || f,
                            v = f.context && (m.nodeType || m.jquery) ? yt(m) : yt.event,
                            g = yt.Deferred(),
                            y = yt.Callbacks("once memory"),
                            _ = f.statusCode || {},
                            b = {},
                            x = {},
                            w = "canceled",
                            T = {
                                readyState: 0,
                                getResponseHeader: function (t) {
                                    var e;
                                    if (u) {
                                        if (!s) for (s = {}; (e = Ne.exec(a)); ) s[e[1].toLowerCase()] = e[2];
                                        e = s[t.toLowerCase()];
                                    }
                                    return null == e ? null : e;
                                },
                                getAllResponseHeaders: function () {
                                    return u ? a : null;
                                },
                                setRequestHeader: function (t, e) {
                                    return null == u && ((t = x[t.toLowerCase()] = x[t.toLowerCase()] || t), (b[t] = e)), this;
                                },
                                overrideMimeType: function (t) {
                                    return null == u && (f.mimeType = t), this;
                                },
                                statusCode: function (t) {
                                    var e;
                                    if (t)
                                        if (u) T.always(t[T.status]);
                                        else for (e in t) _[e] = [_[e], t[e]];
                                    return this;
                                },
                                abort: function (t) {
                                    var e = t || w;
                                    return r && r.abort(e), n(0, e), this;
                                },
                            };
                        if (
                            (g.promise(T),
                            (f.url = ((t || f.url || Ae.href) + "").replace(Be, Ae.protocol + "//")),
                            (f.type = e.method || e.type || f.method || f.type),
                            (f.dataTypes = (f.dataType || "*").toLowerCase().match(Lt) || [""]),
                            null == f.crossDomain)
                        ) {
                            c = at.createElement("a");
                            try {
                                (c.href = f.url), (c.href = c.href), (f.crossDomain = He.protocol + "//" + He.host != c.protocol + "//" + c.host);
                            } catch (t) {
                                f.crossDomain = !0;
                            }
                        }
                        if ((f.data && f.processData && "string" != typeof f.data && (f.data = yt.param(f.data, f.traditional)), et(Ge, f, e, T), u)) return T;
                        (h = yt.event && f.global),
                            h && 0 == yt.active++ && yt.event.trigger("ajaxStart"),
                            (f.type = f.type.toUpperCase()),
                            (f.hasContent = !Ue.test(f.type)),
                            (o = f.url.replace(ke, "")),
                            f.hasContent
                                ? f.data && f.processData && 0 === (f.contentType || "").indexOf("application/x-www-form-urlencoded") && (f.data = f.data.replace(je, "+"))
                                : ((p = f.url.slice(o.length)),
                                  f.data && ((o += (Ce.test(o) ? "&" : "?") + f.data), delete f.data),
                                  !1 === f.cache && ((o = o.replace(Ie, "$1")), (p = (Ce.test(o) ? "&" : "?") + "_=" + Re++ + p)),
                                  (f.url = o + p)),
                            f.ifModified && (yt.lastModified[o] && T.setRequestHeader("If-Modified-Since", yt.lastModified[o]), yt.etag[o] && T.setRequestHeader("If-None-Match", yt.etag[o])),
                            ((f.data && f.hasContent && !1 !== f.contentType) || e.contentType) && T.setRequestHeader("Content-Type", f.contentType),
                            T.setRequestHeader("Accept", f.dataTypes[0] && f.accepts[f.dataTypes[0]] ? f.accepts[f.dataTypes[0]] + ("*" !== f.dataTypes[0] ? ", " + Ve + "; q=0.01" : "") : f.accepts["*"]);
                        for (d in f.headers) T.setRequestHeader(d, f.headers[d]);
                        if (f.beforeSend && (!1 === f.beforeSend.call(m, T, f) || u)) return T.abort();
                        if (((w = "abort"), y.add(f.complete), T.done(f.success), T.fail(f.error), (r = et(ze, f, e, T)))) {
                            if (((T.readyState = 1), h && v.trigger("ajaxSend", [T, f]), u)) return T;
                            f.async &&
                                f.timeout > 0 &&
                                (l = i.setTimeout(function () {
                                    T.abort("timeout");
                                }, f.timeout));
                            try {
                                (u = !1), r.send(b, n);
                            } catch (t) {
                                if (u) throw t;
                                n(-1, t);
                            }
                        } else n(-1, "No Transport");
                        return T;
                    },
                    getJSON: function (t, e, i) {
                        return yt.get(t, e, i, "json");
                    },
                    getScript: function (t, e) {
                        return yt.get(t, void 0, e, "script");
                    },
                }),
                yt.each(["get", "post"], function (t, e) {
                    yt[e] = function (t, i, n, r) {
                        return yt.isFunction(i) && ((r = r || n), (n = i), (i = void 0)), yt.ajax(yt.extend({ url: t, type: e, dataType: r, data: i, success: n }, yt.isPlainObject(t) && t));
                    };
                }),
                (yt._evalUrl = function (t) {
                    return yt.ajax({ url: t, type: "GET", dataType: "script", cache: !0, async: !1, global: !1, throws: !0 });
                }),
                yt.fn.extend({
                    wrapAll: function (t) {
                        var e;
                        return (
                            this[0] &&
                                (yt.isFunction(t) && (t = t.call(this[0])),
                                (e = yt(t, this[0].ownerDocument).eq(0).clone(!0)),
                                this[0].parentNode && e.insertBefore(this[0]),
                                e
                                    .map(function () {
                                        for (var t = this; t.firstElementChild; ) t = t.firstElementChild;
                                        return t;
                                    })
                                    .append(this)),
                            this
                        );
                    },
                    wrapInner: function (t) {
                        return yt.isFunction(t)
                            ? this.each(function (e) {
                                  yt(this).wrapInner(t.call(this, e));
                              })
                            : this.each(function () {
                                  var e = yt(this),
                                      i = e.contents();
                                  i.length ? i.wrapAll(t) : e.append(t);
                              });
                    },
                    wrap: function (t) {
                        var e = yt.isFunction(t);
                        return this.each(function (i) {
                            yt(this).wrapAll(e ? t.call(this, i) : t);
                        });
                    },
                    unwrap: function (t) {
                        return (
                            this.parent(t)
                                .not("body")
                                .each(function () {
                                    yt(this).replaceWith(this.childNodes);
                                }),
                            this
                        );
                    },
                }),
                (yt.expr.pseudos.hidden = function (t) {
                    return !yt.expr.pseudos.visible(t);
                }),
                (yt.expr.pseudos.visible = function (t) {
                    return !!(t.offsetWidth || t.offsetHeight || t.getClientRects().length);
                }),
                (yt.ajaxSettings.xhr = function () {
                    try {
                        return new i.XMLHttpRequest();
                    } catch (t) {}
                });
            var We = { 0: 200, 1223: 204 },
                Xe = yt.ajaxSettings.xhr();
            (gt.cors = !!Xe && "withCredentials" in Xe),
                (gt.ajax = Xe = !!Xe),
                yt.ajaxTransport(function (t) {
                    var e, n;
                    if (gt.cors || (Xe && !t.crossDomain))
                        return {
                            send: function (r, o) {
                                var a,
                                    s = t.xhr();
                                if ((s.open(t.type, t.url, t.async, t.username, t.password), t.xhrFields)) for (a in t.xhrFields) s[a] = t.xhrFields[a];
                                t.mimeType && s.overrideMimeType && s.overrideMimeType(t.mimeType), t.crossDomain || r["X-Requested-With"] || (r["X-Requested-With"] = "XMLHttpRequest");
                                for (a in r) s.setRequestHeader(a, r[a]);
                                (e = function (t) {
                                    return function () {
                                        e &&
                                            ((e = n = s.onload = s.onerror = s.onabort = s.onreadystatechange = null),
                                            "abort" === t
                                                ? s.abort()
                                                : "error" === t
                                                ? "number" != typeof s.status
                                                    ? o(0, "error")
                                                    : o(s.status, s.statusText)
                                                : o(
                                                      We[s.status] || s.status,
                                                      s.statusText,
                                                      "text" !== (s.responseType || "text") || "string" != typeof s.responseText ? { binary: s.response } : { text: s.responseText },
                                                      s.getAllResponseHeaders()
                                                  ));
                                    };
                                }),
                                    (s.onload = e()),
                                    (n = s.onerror = e("error")),
                                    void 0 !== s.onabort
                                        ? (s.onabort = n)
                                        : (s.onreadystatechange = function () {
                                              4 === s.readyState &&
                                                  i.setTimeout(function () {
                                                      e && n();
                                                  });
                                          }),
                                    (e = e("abort"));
                                try {
                                    s.send((t.hasContent && t.data) || null);
                                } catch (t) {
                                    if (e) throw t;
                                }
                            },
                            abort: function () {
                                e && e();
                            },
                        };
                }),
                yt.ajaxPrefilter(function (t) {
                    t.crossDomain && (t.contents.script = !1);
                }),
                yt.ajaxSetup({
                    accepts: { script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript" },
                    contents: { script: /\b(?:java|ecma)script\b/ },
                    converters: {
                        "text script": function (t) {
                            return yt.globalEval(t), t;
                        },
                    },
                }),
                yt.ajaxPrefilter("script", function (t) {
                    void 0 === t.cache && (t.cache = !1), t.crossDomain && (t.type = "GET");
                }),
                yt.ajaxTransport("script", function (t) {
                    if (t.crossDomain) {
                        var e, i;
                        return {
                            send: function (n, r) {
                                (e = yt("<script>")
                                    .prop({ charset: t.scriptCharset, src: t.url })
                                    .on(
                                        "load error",
                                        (i = function (t) {
                                            e.remove(), (i = null), t && r("error" === t.type ? 404 : 200, t.type);
                                        })
                                    )),
                                    at.head.appendChild(e[0]);
                            },
                            abort: function () {
                                i && i();
                            },
                        };
                    }
                });
            var qe = [],
                Ye = /(=)\?(?=&|$)|\?\?/;
            yt.ajaxSetup({
                jsonp: "callback",
                jsonpCallback: function () {
                    var t = qe.pop() || yt.expando + "_" + Re++;
                    return (this[t] = !0), t;
                },
            }),
                yt.ajaxPrefilter("json jsonp", function (t, e, n) {
                    var r,
                        o,
                        a,
                        s = !1 !== t.jsonp && (Ye.test(t.url) ? "url" : "string" == typeof t.data && 0 === (t.contentType || "").indexOf("application/x-www-form-urlencoded") && Ye.test(t.data) && "data");
                    if (s || "jsonp" === t.dataTypes[0])
                        return (
                            (r = t.jsonpCallback = yt.isFunction(t.jsonpCallback) ? t.jsonpCallback() : t.jsonpCallback),
                            s ? (t[s] = t[s].replace(Ye, "$1" + r)) : !1 !== t.jsonp && (t.url += (Ce.test(t.url) ? "&" : "?") + t.jsonp + "=" + r),
                            (t.converters["script json"] = function () {
                                return a || yt.error(r + " was not called"), a[0];
                            }),
                            (t.dataTypes[0] = "json"),
                            (o = i[r]),
                            (i[r] = function () {
                                a = arguments;
                            }),
                            n.always(function () {
                                void 0 === o ? yt(i).removeProp(r) : (i[r] = o), t[r] && ((t.jsonpCallback = e.jsonpCallback), qe.push(r)), a && yt.isFunction(o) && o(a[0]), (a = o = void 0);
                            }),
                            "script"
                        );
                }),
                (gt.createHTMLDocument = (function () {
                    var t = at.implementation.createHTMLDocument("").body;
                    return (t.innerHTML = "<form></form><form></form>"), 2 === t.childNodes.length;
                })()),
                (yt.parseHTML = function (t, e, i) {
                    if ("string" != typeof t) return [];
                    "boolean" == typeof e && ((i = e), (e = !1));
                    var n, r, o;
                    return (
                        e || (gt.createHTMLDocument ? ((e = at.implementation.createHTMLDocument("")), (n = e.createElement("base")), (n.href = at.location.href), e.head.appendChild(n)) : (e = at)),
                        (r = At.exec(t)),
                        (o = !i && []),
                        r ? [e.createElement(r[1])] : ((r = E([t], e, o)), o && o.length && yt(o).remove(), yt.merge([], r.childNodes))
                    );
                }),
                (yt.fn.load = function (t, e, i) {
                    var n,
                        r,
                        o,
                        a = this,
                        s = t.indexOf(" ");
                    return (
                        s > -1 && ((n = Q(t.slice(s))), (t = t.slice(0, s))),
                        yt.isFunction(e) ? ((i = e), (e = void 0)) : e && "object" == typeof e && (r = "POST"),
                        a.length > 0 &&
                            yt
                                .ajax({ url: t, type: r || "GET", dataType: "html", data: e })
                                .done(function (t) {
                                    (o = arguments), a.html(n ? yt("<div>").append(yt.parseHTML(t)).find(n) : t);
                                })
                                .always(
                                    i &&
                                        function (t, e) {
                                            a.each(function () {
                                                i.apply(this, o || [t.responseText, e, t]);
                                            });
                                        }
                                ),
                        this
                    );
                }),
                yt.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (t, e) {
                    yt.fn[e] = function (t) {
                        return this.on(e, t);
                    };
                }),
                (yt.expr.pseudos.animated = function (t) {
                    return yt.grep(yt.timers, function (e) {
                        return t === e.elem;
                    }).length;
                }),
                (yt.offset = {
                    setOffset: function (t, e, i) {
                        var n,
                            r,
                            o,
                            a,
                            s,
                            l,
                            c,
                            u = yt.css(t, "position"),
                            h = yt(t),
                            d = {};
                        "static" === u && (t.style.position = "relative"),
                            (s = h.offset()),
                            (o = yt.css(t, "top")),
                            (l = yt.css(t, "left")),
                            (c = ("absolute" === u || "fixed" === u) && (o + l).indexOf("auto") > -1),
                            c ? ((n = h.position()), (a = n.top), (r = n.left)) : ((a = parseFloat(o) || 0), (r = parseFloat(l) || 0)),
                            yt.isFunction(e) && (e = e.call(t, i, yt.extend({}, s))),
                            null != e.top && (d.top = e.top - s.top + a),
                            null != e.left && (d.left = e.left - s.left + r),
                            "using" in e ? e.using.call(t, d) : h.css(d);
                    },
                }),
                yt.fn.extend({
                    offset: function (t) {
                        if (arguments.length)
                            return void 0 === t
                                ? this
                                : this.each(function (e) {
                                      yt.offset.setOffset(this, t, e);
                                  });
                        var e,
                            i,
                            n,
                            r,
                            o = this[0];
                        if (o)
                            return o.getClientRects().length
                                ? ((n = o.getBoundingClientRect()), (e = o.ownerDocument), (i = e.documentElement), (r = e.defaultView), { top: n.top + r.pageYOffset - i.clientTop, left: n.left + r.pageXOffset - i.clientLeft })
                                : { top: 0, left: 0 };
                    },
                    position: function () {
                        if (this[0]) {
                            var t,
                                e,
                                i = this[0],
                                n = { top: 0, left: 0 };
                            return (
                                "fixed" === yt.css(i, "position")
                                    ? (e = i.getBoundingClientRect())
                                    : ((t = this.offsetParent()), (e = this.offset()), l(t[0], "html") || (n = t.offset()), (n = { top: n.top + yt.css(t[0], "borderTopWidth", !0), left: n.left + yt.css(t[0], "borderLeftWidth", !0) })),
                                { top: e.top - n.top - yt.css(i, "marginTop", !0), left: e.left - n.left - yt.css(i, "marginLeft", !0) }
                            );
                        }
                    },
                    offsetParent: function () {
                        return this.map(function () {
                            for (var t = this.offsetParent; t && "static" === yt.css(t, "position"); ) t = t.offsetParent;
                            return t || Kt;
                        });
                    },
                }),
                yt.each({ scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function (t, e) {
                    var i = "pageYOffset" === e;
                    yt.fn[t] = function (n) {
                        return It(
                            this,
                            function (t, n, r) {
                                var o;
                                if ((yt.isWindow(t) ? (o = t) : 9 === t.nodeType && (o = t.defaultView), void 0 === r)) return o ? o[e] : t[n];
                                o ? o.scrollTo(i ? o.pageXOffset : r, i ? r : o.pageYOffset) : (t[n] = r);
                            },
                            t,
                            n,
                            arguments.length
                        );
                    };
                }),
                yt.each(["top", "left"], function (t, e) {
                    yt.cssHooks[e] = N(gt.pixelPosition, function (t, i) {
                        if (i) return (i = I(t, e)), ce.test(i) ? yt(t).position()[e] + "px" : i;
                    });
                }),
                yt.each({ Height: "height", Width: "width" }, function (t, e) {
                    yt.each({ padding: "inner" + t, content: e, "": "outer" + t }, function (i, n) {
                        yt.fn[n] = function (r, o) {
                            var a = arguments.length && (i || "boolean" != typeof r),
                                s = i || (!0 === r || !0 === o ? "margin" : "border");
                            return It(
                                this,
                                function (e, i, r) {
                                    var o;
                                    return yt.isWindow(e)
                                        ? 0 === n.indexOf("outer")
                                            ? e["inner" + t]
                                            : e.document.documentElement["client" + t]
                                        : 9 === e.nodeType
                                        ? ((o = e.documentElement), Math.max(e.body["scroll" + t], o["scroll" + t], e.body["offset" + t], o["offset" + t], o["client" + t]))
                                        : void 0 === r
                                        ? yt.css(e, i, s)
                                        : yt.style(e, i, r, s);
                                },
                                e,
                                a ? r : void 0,
                                a
                            );
                        };
                    });
                }),
                yt.fn.extend({
                    bind: function (t, e, i) {
                        return this.on(t, null, e, i);
                    },
                    unbind: function (t, e) {
                        return this.off(t, null, e);
                    },
                    delegate: function (t, e, i, n) {
                        return this.on(e, t, i, n);
                    },
                    undelegate: function (t, e, i) {
                        return 1 === arguments.length ? this.off(t, "**") : this.off(e, t || "**", i);
                    },
                }),
                (yt.holdReady = function (t) {
                    t ? yt.readyWait++ : yt.ready(!0);
                }),
                (yt.isArray = Array.isArray),
                (yt.parseJSON = JSON.parse),
                (yt.nodeName = l),
                (n = []),
                void 0 !==
                    (r = function () {
                        return yt;
                    }.apply(e, n)) && (t.exports = r);
            var Ze = i.jQuery,
                Je = i.$;
            return (
                (yt.noConflict = function (t) {
                    return i.$ === yt && (i.$ = Je), t && i.jQuery === yt && (i.jQuery = Ze), yt;
                }),
                o || (i.jQuery = i.$ = yt),
                yt
            );
        });
    },
    "../node_modules/process/browser.js": function (t, e) {
        function i() {
            throw new Error("setTimeout has not been defined");
        }
        function n() {
            throw new Error("clearTimeout has not been defined");
        }
        function r(t) {
            if (u === setTimeout) return setTimeout(t, 0);
            if ((u === i || !u) && setTimeout) return (u = setTimeout), setTimeout(t, 0);
            try {
                return u(t, 0);
            } catch (e) {
                try {
                    return u.call(null, t, 0);
                } catch (e) {
                    return u.call(this, t, 0);
                }
            }
        }
        function o(t) {
            if (h === clearTimeout) return clearTimeout(t);
            if ((h === n || !h) && clearTimeout) return (h = clearTimeout), clearTimeout(t);
            try {
                return h(t);
            } catch (e) {
                try {
                    return h.call(null, t);
                } catch (e) {
                    return h.call(this, t);
                }
            }
        }
        function a() {
            m && p && ((m = !1), p.length ? (f = p.concat(f)) : (v = -1), f.length && s());
        }
        function s() {
            if (!m) {
                var t = r(a);
                m = !0;
                for (var e = f.length; e; ) {
                    for (p = f, f = []; ++v < e; ) p && p[v].run();
                    (v = -1), (e = f.length);
                }
                (p = null), (m = !1), o(t);
            }
        }
        function l(t, e) {
            (this.fun = t), (this.array = e);
        }
        function c() {}
        var u,
            h,
            d = (t.exports = {});
        !(function () {
            try {
                u = "function" == typeof setTimeout ? setTimeout : i;
            } catch (t) {
                u = i;
            }
            try {
                h = "function" == typeof clearTimeout ? clearTimeout : n;
            } catch (t) {
                h = n;
            }
        })();
        var p,
            f = [],
            m = !1,
            v = -1;
        (d.nextTick = function (t) {
            var e = new Array(arguments.length - 1);
            if (arguments.length > 1) for (var i = 1; i < arguments.length; i++) e[i - 1] = arguments[i];
            f.push(new l(t, e)), 1 !== f.length || m || r(s);
        }),
            (l.prototype.run = function () {
                this.fun.apply(null, this.array);
            }),
            (d.title = "browser"),
            (d.browser = !0),
            (d.env = {}),
            (d.argv = []),
            (d.version = ""),
            (d.versions = {}),
            (d.on = c),
            (d.addListener = c),
            (d.once = c),
            (d.off = c),
            (d.removeListener = c),
            (d.removeAllListeners = c),
            (d.emit = c),
            (d.prependListener = c),
            (d.prependOnceListener = c),
            (d.listeners = function (t) {
                return [];
            }),
            (d.binding = function (t) {
                throw new Error("process.binding is not supported");
            }),
            (d.cwd = function () {
                return "/";
            }),
            (d.chdir = function (t) {
                throw new Error("process.chdir is not supported");
            }),
            (d.umask = function () {
                return 0;
            });
    },
    "../node_modules/setimmediate/setImmediate.js": function (t, e, i) {
        (function (t, e) {
            !(function (t, i) {
                "use strict";
                function n(t) {
                    "function" != typeof t && (t = new Function("" + t));
                    for (var e = new Array(arguments.length - 1), i = 0; i < e.length; i++) e[i] = arguments[i + 1];
                    var n = { callback: t, args: e };
                    return (c[l] = n), s(l), l++;
                }
                function r(t) {
                    delete c[t];
                }
                function o(t) {
                    var e = t.callback,
                        n = t.args;
                    switch (n.length) {
                        case 0:
                            e();
                            break;
                        case 1:
                            e(n[0]);
                            break;
                        case 2:
                            e(n[0], n[1]);
                            break;
                        case 3:
                            e(n[0], n[1], n[2]);
                            break;
                        default:
                            e.apply(i, n);
                    }
                }
                function a(t) {
                    if (u) setTimeout(a, 0, t);
                    else {
                        var e = c[t];
                        if (e) {
                            u = !0;
                            try {
                                o(e);
                            } finally {
                                r(t), (u = !1);
                            }
                        }
                    }
                }
                if (!t.setImmediate) {
                    var s,
                        l = 1,
                        c = {},
                        u = !1,
                        h = t.document,
                        d = Object.getPrototypeOf && Object.getPrototypeOf(t);
                    (d = d && d.setTimeout ? d : t),
                        "[object process]" === {}.toString.call(t.process)
                            ? (function () {
                                  s = function (t) {
                                      e.nextTick(function () {
                                          a(t);
                                      });
                                  };
                              })()
                            : (function () {
                                  if (t.postMessage && !t.importScripts) {
                                      var e = !0,
                                          i = t.onmessage;
                                      return (
                                          (t.onmessage = function () {
                                              e = !1;
                                          }),
                                          t.postMessage("", "*"),
                                          (t.onmessage = i),
                                          e
                                      );
                                  }
                              })()
                            ? (function () {
                                  var e = "setImmediate$" + Math.random() + "$",
                                      i = function (i) {
                                          i.source === t && "string" == typeof i.data && 0 === i.data.indexOf(e) && a(+i.data.slice(e.length));
                                      };
                                  t.addEventListener ? t.addEventListener("message", i, !1) : t.attachEvent("onmessage", i),
                                      (s = function (i) {
                                          t.postMessage(e + i, "*");
                                      });
                              })()
                            : t.MessageChannel
                            ? (function () {
                                  var t = new MessageChannel();
                                  (t.port1.onmessage = function (t) {
                                      a(t.data);
                                  }),
                                      (s = function (e) {
                                          t.port2.postMessage(e);
                                      });
                              })()
                            : h && "onreadystatechange" in h.createElement("script")
                            ? (function () {
                                  var t = h.documentElement;
                                  s = function (e) {
                                      var i = h.createElement("script");
                                      (i.onreadystatechange = function () {
                                          a(e), (i.onreadystatechange = null), t.removeChild(i), (i = null);
                                      }),
                                          t.appendChild(i);
                                  };
                              })()
                            : (function () {
                                  s = function (t) {
                                      setTimeout(a, 0, t);
                                  };
                              })(),
                        (d.setImmediate = n),
                        (d.clearImmediate = r);
                }
            })("undefined" == typeof self ? (void 0 === t ? this : t) : self);
        }.call(e, i("../node_modules/webpack/buildin/global.js"), i("../node_modules/process/browser.js")));
    },
    "../node_modules/style-loader/index.js!./scss/master.scss": function (t, e, i) {
        var n = i(
            '../node_modules/extract-text-webpack-plugin/loader.js?{"omit":1,"remove":true}!../node_modules/style-loader/index.js!../node_modules/css-loader/index.js!../node_modules/postcss-loader/index.js!../node_modules/sass-loader/lib/loader.js!./scss/master.scss'
        );
        "string" == typeof n && (n = [[t.i, n, ""]]);
        var r = {};
        r.transform = void 0;
        i("../node_modules/style-loader/lib/addStyles.js")(n, r);
        n.locals && (t.exports = n.locals);
    },
    "../node_modules/style-loader/lib/addStyles.js": function (t, e, i) {
        function n(t, e) {
            for (var i = 0; i < t.length; i++) {
                var n = t[i],
                    r = f[n.id];
                if (r) {
                    r.refs++;
                    for (var o = 0; o < r.parts.length; o++) r.parts[o](n.parts[o]);
                    for (; o < n.parts.length; o++) r.parts.push(u(n.parts[o], e));
                } else {
                    for (var a = [], o = 0; o < n.parts.length; o++) a.push(u(n.parts[o], e));
                    f[n.id] = { id: n.id, refs: 1, parts: a };
                }
            }
        }
        function r(t, e) {
            for (var i = [], n = {}, r = 0; r < t.length; r++) {
                var o = t[r],
                    a = e.base ? o[0] + e.base : o[0],
                    s = o[1],
                    l = o[2],
                    c = o[3],
                    u = { css: s, media: l, sourceMap: c };
                n[a] ? n[a].parts.push(u) : i.push((n[a] = { id: a, parts: [u] }));
            }
            return i;
        }
        function o(t, e) {
            var i = v(t.insertInto);
            if (!i) throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
            var n = _[_.length - 1];
            if ("top" === t.insertAt) n ? (n.nextSibling ? i.insertBefore(e, n.nextSibling) : i.appendChild(e)) : i.insertBefore(e, i.firstChild), _.push(e);
            else {
                if ("bottom" !== t.insertAt) throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
                i.appendChild(e);
            }
        }
        function a(t) {
            if (null === t.parentNode) return !1;
            t.parentNode.removeChild(t);
            var e = _.indexOf(t);
            e >= 0 && _.splice(e, 1);
        }
        function s(t) {
            var e = document.createElement("style");
            return (t.attrs.type = "text/css"), c(e, t.attrs), o(t, e), e;
        }
        function l(t) {
            var e = document.createElement("link");
            return (t.attrs.type = "text/css"), (t.attrs.rel = "stylesheet"), c(e, t.attrs), o(t, e), e;
        }
        function c(t, e) {
            Object.keys(e).forEach(function (i) {
                t.setAttribute(i, e[i]);
            });
        }
        function u(t, e) {
            var i, n, r, o;
            if (e.transform && t.css) {
                if (!(o = e.transform(t.css))) return function () {};
                t.css = o;
            }
            if (e.singleton) {
                var c = y++;
                (i = g || (g = s(e))), (n = h.bind(null, i, c, !1)), (r = h.bind(null, i, c, !0));
            } else
                t.sourceMap && "function" == typeof URL && "function" == typeof URL.createObjectURL && "function" == typeof URL.revokeObjectURL && "function" == typeof Blob && "function" == typeof btoa
                    ? ((i = l(e)),
                      (n = p.bind(null, i, e)),
                      (r = function () {
                          a(i), i.href && URL.revokeObjectURL(i.href);
                      }))
                    : ((i = s(e)),
                      (n = d.bind(null, i)),
                      (r = function () {
                          a(i);
                      }));
            return (
                n(t),
                function (e) {
                    if (e) {
                        if (e.css === t.css && e.media === t.media && e.sourceMap === t.sourceMap) return;
                        n((t = e));
                    } else r();
                }
            );
        }
        function h(t, e, i, n) {
            var r = i ? "" : n.css;
            if (t.styleSheet) t.styleSheet.cssText = x(e, r);
            else {
                var o = document.createTextNode(r),
                    a = t.childNodes;
                a[e] && t.removeChild(a[e]), a.length ? t.insertBefore(o, a[e]) : t.appendChild(o);
            }
        }
        function d(t, e) {
            var i = e.css,
                n = e.media;
            if ((n && t.setAttribute("media", n), t.styleSheet)) t.styleSheet.cssText = i;
            else {
                for (; t.firstChild; ) t.removeChild(t.firstChild);
                t.appendChild(document.createTextNode(i));
            }
        }
        function p(t, e, i) {
            var n = i.css,
                r = i.sourceMap,
                o = void 0 === e.convertToAbsoluteUrls && r;
            (e.convertToAbsoluteUrls || o) && (n = b(n)), r && (n += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(r)))) + " */");
            var a = new Blob([n], { type: "text/css" }),
                s = t.href;
            (t.href = URL.createObjectURL(a)), s && URL.revokeObjectURL(s);
        }
        var f = {},
            m = (function (t) {
                var e;
                return function () {
                    return void 0 === e && (e = t.apply(this, arguments)), e;
                };
            })(function () {
                return window && document && document.all && !window.atob;
            }),
            v = (function (t) {
                var e = {};
                return function (i) {
                    return void 0 === e[i] && (e[i] = t.call(this, i)), e[i];
                };
            })(function (t) {
                return document.querySelector(t);
            }),
            g = null,
            y = 0,
            _ = [],
            b = i("../node_modules/style-loader/lib/urls.js");
        t.exports = function (t, e) {
            if ("undefined" != typeof DEBUG && DEBUG && "object" != typeof document) throw new Error("The style-loader cannot be used in a non-browser environment");
            (e = e || {}), (e.attrs = "object" == typeof e.attrs ? e.attrs : {}), e.singleton || (e.singleton = m()), e.insertInto || (e.insertInto = "head"), e.insertAt || (e.insertAt = "bottom");
            var i = r(t, e);
            return (
                n(i, e),
                function (t) {
                    for (var o = [], a = 0; a < i.length; a++) {
                        var s = i[a],
                            l = f[s.id];
                        l.refs--, o.push(l);
                    }
                    if (t) {
                        n(r(t, e), e);
                    }
                    for (var a = 0; a < o.length; a++) {
                        var l = o[a];
                        if (0 === l.refs) {
                            for (var c = 0; c < l.parts.length; c++) l.parts[c]();
                            delete f[l.id];
                        }
                    }
                }
            );
        };
        var x = (function () {
            var t = [];
            return function (e, i) {
                return (t[e] = i), t.filter(Boolean).join("\n");
            };
        })();
    },
    "../node_modules/style-loader/lib/urls.js": function (t, e) {
        t.exports = function (t) {
            var e = "undefined" != typeof window && window.location;
            if (!e) throw new Error("fixUrls requires window.location");
            if (!t || "string" != typeof t) return t;
            var i = e.protocol + "//" + e.host,
                n = i + e.pathname.replace(/\/[^\/]*$/, "/");
            return t.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function (t, e) {
                var r = e
                    .trim()
                    .replace(/^"(.*)"$/, function (t, e) {
                        return e;
                    })
                    .replace(/^'(.*)'$/, function (t, e) {
                        return e;
                    });
                if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(r)) return t;
                var o;
                return (o = 0 === r.indexOf("//") ? r : 0 === r.indexOf("/") ? i + r : n + r.replace(/^\.\//, "")), "url(" + JSON.stringify(o) + ")";
            });
        };
    },
    "../node_modules/three/build/three.js": function (t, e, i) {
        !(function (t, i) {
            i(e);
        })(0, function (t) {
            "use strict";
            function e() {}
            function i(t, e) {
                (this.x = t || 0), (this.y = e || 0);
            }
            function n(t, e, o, a, s, l, c, u, h, d) {
                Object.defineProperty(this, "id", { value: r() }),
                    (this.uuid = Ma.generateUUID()),
                    (this.name = ""),
                    (this.sourceFile = ""),
                    (this.image = void 0 !== t ? t : n.DEFAULT_IMAGE),
                    (this.mipmaps = []),
                    (this.mapping = void 0 !== e ? e : n.DEFAULT_MAPPING),
                    (this.wrapS = void 0 !== o ? o : So),
                    (this.wrapT = void 0 !== a ? a : So),
                    (this.magFilter = void 0 !== s ? s : Oo),
                    (this.minFilter = void 0 !== l ? l : jo),
                    (this.anisotropy = void 0 !== h ? h : 1),
                    (this.format = void 0 !== c ? c : Jo),
                    (this.type = void 0 !== u ? u : Io),
                    (this.offset = new i(0, 0)),
                    (this.repeat = new i(1, 1)),
                    (this.generateMipmaps = !0),
                    (this.premultiplyAlpha = !1),
                    (this.flipY = !0),
                    (this.unpackAlignment = 4),
                    (this.encoding = void 0 !== d ? d : va),
                    (this.version = 0),
                    (this.onUpdate = null);
            }
            function r() {
                return Sa++;
            }
            function o(t, e, i, n) {
                (this.x = t || 0), (this.y = e || 0), (this.z = i || 0), (this.w = void 0 !== n ? n : 1);
            }
            function a(t, e, i) {
                (this.uuid = Ma.generateUUID()),
                    (this.width = t),
                    (this.height = e),
                    (this.scissor = new o(0, 0, t, e)),
                    (this.scissorTest = !1),
                    (this.viewport = new o(0, 0, t, e)),
                    (i = i || {}),
                    void 0 === i.minFilter && (i.minFilter = Oo),
                    (this.texture = new n(void 0, void 0, i.wrapS, i.wrapT, i.magFilter, i.minFilter, i.format, i.type, i.anisotropy, i.encoding)),
                    (this.depthBuffer = void 0 === i.depthBuffer || i.depthBuffer),
                    (this.stencilBuffer = void 0 === i.stencilBuffer || i.stencilBuffer),
                    (this.depthTexture = void 0 !== i.depthTexture ? i.depthTexture : null);
            }
            function s(t, e, i) {
                a.call(this, t, e, i), (this.activeCubeFace = 0), (this.activeMipMapLevel = 0);
            }
            function l(t, e, i, n) {
                (this._x = t || 0), (this._y = e || 0), (this._z = i || 0), (this._w = void 0 !== n ? n : 1);
            }
            function c(t, e, i) {
                (this.x = t || 0), (this.y = e || 0), (this.z = i || 0);
            }
            function u() {
                (this.elements = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1])), arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.");
            }
            function h(t, e, i, r, o, a, s, l, c, u) {
                (t = void 0 !== t ? t : []), (e = void 0 !== e ? e : go), n.call(this, t, e, i, r, o, a, s, l, c, u), (this.flipY = !1);
            }
            function d() {
                (this.seq = []), (this.map = {});
            }
            function p(t, e, i) {
                var n = t[0];
                if (n <= 0 || n > 0) return t;
                var r = e * i,
                    o = Ca[r];
                if ((void 0 === o && ((o = new Float32Array(r)), (Ca[r] = o)), 0 !== e)) {
                    n.toArray(o, 0);
                    for (var a = 1, s = 0; a !== e; ++a) (s += i), t[a].toArray(o, s);
                }
                return o;
            }
            function f(t, e) {
                var i = Pa[e];
                void 0 === i && ((i = new Int32Array(e)), (Pa[e] = i));
                for (var n = 0; n !== e; ++n) i[n] = t.allocTextureUnit();
                return i;
            }
            function m(t, e) {
                t.uniform1f(this.addr, e);
            }
            function v(t, e) {
                t.uniform1i(this.addr, e);
            }
            function g(t, e) {
                void 0 === e.x ? t.uniform2fv(this.addr, e) : t.uniform2f(this.addr, e.x, e.y);
            }
            function y(t, e) {
                void 0 !== e.x ? t.uniform3f(this.addr, e.x, e.y, e.z) : void 0 !== e.r ? t.uniform3f(this.addr, e.r, e.g, e.b) : t.uniform3fv(this.addr, e);
            }
            function _(t, e) {
                void 0 === e.x ? t.uniform4fv(this.addr, e) : t.uniform4f(this.addr, e.x, e.y, e.z, e.w);
            }
            function b(t, e) {
                t.uniformMatrix2fv(this.addr, !1, e.elements || e);
            }
            function x(t, e) {
                t.uniformMatrix3fv(this.addr, !1, e.elements || e);
            }
            function w(t, e) {
                t.uniformMatrix4fv(this.addr, !1, e.elements || e);
            }
            function T(t, e, i) {
                var n = i.allocTextureUnit();
                t.uniform1i(this.addr, n), i.setTexture2D(e || Aa, n);
            }
            function E(t, e, i) {
                var n = i.allocTextureUnit();
                t.uniform1i(this.addr, n), i.setTextureCube(e || Ra, n);
            }
            function M(t, e) {
                t.uniform2iv(this.addr, e);
            }
            function S(t, e) {
                t.uniform3iv(this.addr, e);
            }
            function A(t, e) {
                t.uniform4iv(this.addr, e);
            }
            function R(t) {
                switch (t) {
                    case 5126:
                        return m;
                    case 35664:
                        return g;
                    case 35665:
                        return y;
                    case 35666:
                        return _;
                    case 35674:
                        return b;
                    case 35675:
                        return x;
                    case 35676:
                        return w;
                    case 35678:
                        return T;
                    case 35680:
                        return E;
                    case 5124:
                    case 35670:
                        return v;
                    case 35667:
                    case 35671:
                        return M;
                    case 35668:
                    case 35672:
                        return S;
                    case 35669:
                    case 35673:
                        return A;
                }
            }
            function C(t, e) {
                t.uniform1fv(this.addr, e);
            }
            function P(t, e) {
                t.uniform1iv(this.addr, e);
            }
            function D(t, e) {
                t.uniform2fv(this.addr, p(e, this.size, 2));
            }
            function O(t, e) {
                t.uniform3fv(this.addr, p(e, this.size, 3));
            }
            function L(t, e) {
                t.uniform4fv(this.addr, p(e, this.size, 4));
            }
            function j(t, e) {
                t.uniformMatrix2fv(this.addr, !1, p(e, this.size, 4));
            }
            function k(t, e) {
                t.uniformMatrix3fv(this.addr, !1, p(e, this.size, 9));
            }
            function I(t, e) {
                t.uniformMatrix4fv(this.addr, !1, p(e, this.size, 16));
            }
            function N(t, e, i) {
                var n = e.length,
                    r = f(i, n);
                t.uniform1iv(this.addr, r);
                for (var o = 0; o !== n; ++o) i.setTexture2D(e[o] || Aa, r[o]);
            }
            function F(t, e, i) {
                var n = e.length,
                    r = f(i, n);
                t.uniform1iv(this.addr, r);
                for (var o = 0; o !== n; ++o) i.setTextureCube(e[o] || Ra, r[o]);
            }
            function U(t) {
                switch (t) {
                    case 5126:
                        return C;
                    case 35664:
                        return D;
                    case 35665:
                        return O;
                    case 35666:
                        return L;
                    case 35674:
                        return j;
                    case 35675:
                        return k;
                    case 35676:
                        return I;
                    case 35678:
                        return N;
                    case 35680:
                        return F;
                    case 5124:
                    case 35670:
                        return P;
                    case 35667:
                    case 35671:
                        return M;
                    case 35668:
                    case 35672:
                        return S;
                    case 35669:
                    case 35673:
                        return A;
                }
            }
            function B(t, e, i) {
                (this.id = t), (this.addr = i), (this.setValue = R(e.type));
            }
            function G(t, e, i) {
                (this.id = t), (this.addr = i), (this.size = e.size), (this.setValue = U(e.type));
            }
            function z(t) {
                (this.id = t), d.call(this);
            }
            function V(t, e) {
                t.seq.push(e), (t.map[e.id] = e);
            }
            function H(t, e, i) {
                var n = t.name,
                    r = n.length;
                for (Da.lastIndex = 0; ; ) {
                    var o = Da.exec(n),
                        a = Da.lastIndex,
                        s = o[1],
                        l = "]" === o[2],
                        c = o[3];
                    if ((l && (s |= 0), void 0 === c || ("[" === c && a + 2 === r))) {
                        V(i, void 0 === c ? new B(s, t, e) : new G(s, t, e));
                        break;
                    }
                    var u = i.map,
                        h = u[s];
                    void 0 === h && ((h = new z(s)), V(i, h)), (i = h);
                }
            }
            function W(t, e, i) {
                d.call(this), (this.renderer = i);
                for (var n = t.getProgramParameter(e, t.ACTIVE_UNIFORMS), r = 0; r !== n; ++r) {
                    var o = t.getActiveUniform(e, r),
                        a = o.name;
                    H(o, t.getUniformLocation(e, a), this);
                }
            }
            function X(t, e, i) {
                return void 0 === e && void 0 === i ? this.set(t) : this.setRGB(t, e, i);
            }
            function q(t, e) {
                (this.min = void 0 !== t ? t : new i(1 / 0, 1 / 0)), (this.max = void 0 !== e ? e : new i(-1 / 0, -1 / 0));
            }
            function Y(t, e) {
                function n() {
                    var t = new Float32Array([-1, -1, 0, 0, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0, 1]),
                        e = new Uint16Array([0, 1, 2, 0, 2, 3]);
                    (o = f.createBuffer()),
                        (a = f.createBuffer()),
                        f.bindBuffer(f.ARRAY_BUFFER, o),
                        f.bufferData(f.ARRAY_BUFFER, t, f.STATIC_DRAW),
                        f.bindBuffer(f.ELEMENT_ARRAY_BUFFER, a),
                        f.bufferData(f.ELEMENT_ARRAY_BUFFER, e, f.STATIC_DRAW),
                        (d = f.createTexture()),
                        (p = f.createTexture()),
                        m.bindTexture(f.TEXTURE_2D, d),
                        f.texImage2D(f.TEXTURE_2D, 0, f.RGB, 16, 16, 0, f.RGB, f.UNSIGNED_BYTE, null),
                        f.texParameteri(f.TEXTURE_2D, f.TEXTURE_WRAP_S, f.CLAMP_TO_EDGE),
                        f.texParameteri(f.TEXTURE_2D, f.TEXTURE_WRAP_T, f.CLAMP_TO_EDGE),
                        f.texParameteri(f.TEXTURE_2D, f.TEXTURE_MAG_FILTER, f.NEAREST),
                        f.texParameteri(f.TEXTURE_2D, f.TEXTURE_MIN_FILTER, f.NEAREST),
                        m.bindTexture(f.TEXTURE_2D, p),
                        f.texImage2D(f.TEXTURE_2D, 0, f.RGBA, 16, 16, 0, f.RGBA, f.UNSIGNED_BYTE, null),
                        f.texParameteri(f.TEXTURE_2D, f.TEXTURE_WRAP_S, f.CLAMP_TO_EDGE),
                        f.texParameteri(f.TEXTURE_2D, f.TEXTURE_WRAP_T, f.CLAMP_TO_EDGE),
                        f.texParameteri(f.TEXTURE_2D, f.TEXTURE_MAG_FILTER, f.NEAREST),
                        f.texParameteri(f.TEXTURE_2D, f.TEXTURE_MIN_FILTER, f.NEAREST),
                        (s = {
                            vertexShader: [
                                "uniform lowp int renderType;",
                                "uniform vec3 screenPosition;",
                                "uniform vec2 scale;",
                                "uniform float rotation;",
                                "uniform sampler2D occlusionMap;",
                                "attribute vec2 position;",
                                "attribute vec2 uv;",
                                "varying vec2 vUV;",
                                "varying float vVisibility;",
                                "void main() {",
                                "vUV = uv;",
                                "vec2 pos = position;",
                                "if ( renderType == 2 ) {",
                                "vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );",
                                "visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );",
                                "visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );",
                                "visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );",
                                "visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );",
                                "visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );",
                                "visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );",
                                "visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );",
                                "visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );",
                                "vVisibility =        visibility.r / 9.0;",
                                "vVisibility *= 1.0 - visibility.g / 9.0;",
                                "vVisibility *=       visibility.b / 9.0;",
                                "vVisibility *= 1.0 - visibility.a / 9.0;",
                                "pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;",
                                "pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;",
                                "}",
                                "gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );",
                                "}",
                            ].join("\n"),
                            fragmentShader: [
                                "uniform lowp int renderType;",
                                "uniform sampler2D map;",
                                "uniform float opacity;",
                                "uniform vec3 color;",
                                "varying vec2 vUV;",
                                "varying float vVisibility;",
                                "void main() {",
                                "if ( renderType == 0 ) {",
                                "gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );",
                                "} else if ( renderType == 1 ) {",
                                "gl_FragColor = texture2D( map, vUV );",
                                "} else {",
                                "vec4 texture = texture2D( map, vUV );",
                                "texture.a *= opacity * vVisibility;",
                                "gl_FragColor = texture;",
                                "gl_FragColor.rgb *= color;",
                                "}",
                                "}",
                            ].join("\n"),
                        }),
                        (l = r(s)),
                        (u = { vertex: f.getAttribLocation(l, "position"), uv: f.getAttribLocation(l, "uv") }),
                        (h = {
                            renderType: f.getUniformLocation(l, "renderType"),
                            map: f.getUniformLocation(l, "map"),
                            occlusionMap: f.getUniformLocation(l, "occlusionMap"),
                            opacity: f.getUniformLocation(l, "opacity"),
                            color: f.getUniformLocation(l, "color"),
                            scale: f.getUniformLocation(l, "scale"),
                            rotation: f.getUniformLocation(l, "rotation"),
                            screenPosition: f.getUniformLocation(l, "screenPosition"),
                        });
                }
                function r(e) {
                    var i = f.createProgram(),
                        n = f.createShader(f.FRAGMENT_SHADER),
                        r = f.createShader(f.VERTEX_SHADER),
                        o = "precision " + t.getPrecision() + " float;\n";
                    return f.shaderSource(n, o + e.fragmentShader), f.shaderSource(r, o + e.vertexShader), f.compileShader(n), f.compileShader(r), f.attachShader(i, n), f.attachShader(i, r), f.linkProgram(i), i;
                }
                var o,
                    a,
                    s,
                    l,
                    u,
                    h,
                    d,
                    p,
                    f = t.context,
                    m = t.state;
                this.render = function (r, s, v) {
                    if (0 !== e.length) {
                        var g = new c(),
                            y = v.w / v.z,
                            _ = 0.5 * v.z,
                            b = 0.5 * v.w,
                            x = 16 / v.w,
                            w = new i(x * y, x),
                            T = new c(1, 1, 0),
                            E = new i(1, 1),
                            M = new q();
                        M.min.set(v.x, v.y),
                            M.max.set(v.x + (v.z - 16), v.y + (v.w - 16)),
                            void 0 === l && n(),
                            f.useProgram(l),
                            m.initAttributes(),
                            m.enableAttribute(u.vertex),
                            m.enableAttribute(u.uv),
                            m.disableUnusedAttributes(),
                            f.uniform1i(h.occlusionMap, 0),
                            f.uniform1i(h.map, 1),
                            f.bindBuffer(f.ARRAY_BUFFER, o),
                            f.vertexAttribPointer(u.vertex, 2, f.FLOAT, !1, 16, 0),
                            f.vertexAttribPointer(u.uv, 2, f.FLOAT, !1, 16, 8),
                            f.bindBuffer(f.ELEMENT_ARRAY_BUFFER, a),
                            m.disable(f.CULL_FACE),
                            m.setDepthWrite(!1);
                        for (var S = 0, A = e.length; S < A; S++) {
                            (x = 16 / v.w), w.set(x * y, x);
                            var R = e[S];
                            if (
                                (g.set(R.matrixWorld.elements[12], R.matrixWorld.elements[13], R.matrixWorld.elements[14]),
                                g.applyMatrix4(s.matrixWorldInverse),
                                g.applyProjection(s.projectionMatrix),
                                T.copy(g),
                                (E.x = v.x + T.x * _ + _ - 8),
                                (E.y = v.y + T.y * b + b - 8),
                                !0 === M.containsPoint(E))
                            ) {
                                m.activeTexture(f.TEXTURE0),
                                    m.bindTexture(f.TEXTURE_2D, null),
                                    m.activeTexture(f.TEXTURE1),
                                    m.bindTexture(f.TEXTURE_2D, d),
                                    f.copyTexImage2D(f.TEXTURE_2D, 0, f.RGB, E.x, E.y, 16, 16, 0),
                                    f.uniform1i(h.renderType, 0),
                                    f.uniform2f(h.scale, w.x, w.y),
                                    f.uniform3f(h.screenPosition, T.x, T.y, T.z),
                                    m.disable(f.BLEND),
                                    m.enable(f.DEPTH_TEST),
                                    f.drawElements(f.TRIANGLES, 6, f.UNSIGNED_SHORT, 0),
                                    m.activeTexture(f.TEXTURE0),
                                    m.bindTexture(f.TEXTURE_2D, p),
                                    f.copyTexImage2D(f.TEXTURE_2D, 0, f.RGBA, E.x, E.y, 16, 16, 0),
                                    f.uniform1i(h.renderType, 1),
                                    m.disable(f.DEPTH_TEST),
                                    m.activeTexture(f.TEXTURE1),
                                    m.bindTexture(f.TEXTURE_2D, d),
                                    f.drawElements(f.TRIANGLES, 6, f.UNSIGNED_SHORT, 0),
                                    R.positionScreen.copy(T),
                                    R.customUpdateCallback ? R.customUpdateCallback(R) : R.updateLensFlares(),
                                    f.uniform1i(h.renderType, 2),
                                    m.enable(f.BLEND);
                                for (var C = 0, P = R.lensFlares.length; C < P; C++) {
                                    var D = R.lensFlares[C];
                                    D.opacity > 0.001 &&
                                        D.scale > 0.001 &&
                                        ((T.x = D.x),
                                        (T.y = D.y),
                                        (T.z = D.z),
                                        (x = (D.size * D.scale) / v.w),
                                        (w.x = x * y),
                                        (w.y = x),
                                        f.uniform3f(h.screenPosition, T.x, T.y, T.z),
                                        f.uniform2f(h.scale, w.x, w.y),
                                        f.uniform1f(h.rotation, D.rotation),
                                        f.uniform1f(h.opacity, D.opacity),
                                        f.uniform3f(h.color, D.color.r, D.color.g, D.color.b),
                                        m.setBlending(D.blending, D.blendEquation, D.blendSrc, D.blendDst),
                                        t.setTexture2D(D.texture, 1),
                                        f.drawElements(f.TRIANGLES, 6, f.UNSIGNED_SHORT, 0));
                                }
                            }
                        }
                        m.enable(f.CULL_FACE), m.enable(f.DEPTH_TEST), m.setDepthWrite(!0), t.resetGLState();
                    }
                };
            }
            function Z(t, e) {
                function i() {
                    var t = new Float32Array([-0.5, -0.5, 0, 0, 0.5, -0.5, 1, 0, 0.5, 0.5, 1, 1, -0.5, 0.5, 0, 1]),
                        e = new Uint16Array([0, 1, 2, 0, 2, 3]);
                    (a = f.createBuffer()),
                        (s = f.createBuffer()),
                        f.bindBuffer(f.ARRAY_BUFFER, a),
                        f.bufferData(f.ARRAY_BUFFER, t, f.STATIC_DRAW),
                        f.bindBuffer(f.ELEMENT_ARRAY_BUFFER, s),
                        f.bufferData(f.ELEMENT_ARRAY_BUFFER, e, f.STATIC_DRAW),
                        (u = r()),
                        (h = { position: f.getAttribLocation(u, "position"), uv: f.getAttribLocation(u, "uv") }),
                        (d = {
                            uvOffset: f.getUniformLocation(u, "uvOffset"),
                            uvScale: f.getUniformLocation(u, "uvScale"),
                            rotation: f.getUniformLocation(u, "rotation"),
                            scale: f.getUniformLocation(u, "scale"),
                            color: f.getUniformLocation(u, "color"),
                            map: f.getUniformLocation(u, "map"),
                            opacity: f.getUniformLocation(u, "opacity"),
                            modelViewMatrix: f.getUniformLocation(u, "modelViewMatrix"),
                            projectionMatrix: f.getUniformLocation(u, "projectionMatrix"),
                            fogType: f.getUniformLocation(u, "fogType"),
                            fogDensity: f.getUniformLocation(u, "fogDensity"),
                            fogNear: f.getUniformLocation(u, "fogNear"),
                            fogFar: f.getUniformLocation(u, "fogFar"),
                            fogColor: f.getUniformLocation(u, "fogColor"),
                            alphaTest: f.getUniformLocation(u, "alphaTest"),
                        });
                    var i = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
                    (i.width = 8), (i.height = 8);
                    var o = i.getContext("2d");
                    (o.fillStyle = "white"), o.fillRect(0, 0, 8, 8), (p = new n(i)), (p.needsUpdate = !0);
                }
                function r() {
                    var e = f.createProgram(),
                        i = f.createShader(f.VERTEX_SHADER),
                        n = f.createShader(f.FRAGMENT_SHADER);
                    return (
                        f.shaderSource(
                            i,
                            [
                                "precision " + t.getPrecision() + " float;",
                                "uniform mat4 modelViewMatrix;",
                                "uniform mat4 projectionMatrix;",
                                "uniform float rotation;",
                                "uniform vec2 scale;",
                                "uniform vec2 uvOffset;",
                                "uniform vec2 uvScale;",
                                "attribute vec2 position;",
                                "attribute vec2 uv;",
                                "varying vec2 vUV;",
                                "void main() {",
                                "vUV = uvOffset + uv * uvScale;",
                                "vec2 alignedPosition = position * scale;",
                                "vec2 rotatedPosition;",
                                "rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;",
                                "rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;",
                                "vec4 finalPosition;",
                                "finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );",
                                "finalPosition.xy += rotatedPosition;",
                                "finalPosition = projectionMatrix * finalPosition;",
                                "gl_Position = finalPosition;",
                                "}",
                            ].join("\n")
                        ),
                        f.shaderSource(
                            n,
                            [
                                "precision " + t.getPrecision() + " float;",
                                "uniform vec3 color;",
                                "uniform sampler2D map;",
                                "uniform float opacity;",
                                "uniform int fogType;",
                                "uniform vec3 fogColor;",
                                "uniform float fogDensity;",
                                "uniform float fogNear;",
                                "uniform float fogFar;",
                                "uniform float alphaTest;",
                                "varying vec2 vUV;",
                                "void main() {",
                                "vec4 texture = texture2D( map, vUV );",
                                "if ( texture.a < alphaTest ) discard;",
                                "gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );",
                                "if ( fogType > 0 ) {",
                                "float depth = gl_FragCoord.z / gl_FragCoord.w;",
                                "float fogFactor = 0.0;",
                                "if ( fogType == 1 ) {",
                                "fogFactor = smoothstep( fogNear, fogFar, depth );",
                                "} else {",
                                "const float LOG2 = 1.442695;",
                                "fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );",
                                "fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );",
                                "}",
                                "gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );",
                                "}",
                                "}",
                            ].join("\n")
                        ),
                        f.compileShader(i),
                        f.compileShader(n),
                        f.attachShader(e, i),
                        f.attachShader(e, n),
                        f.linkProgram(e),
                        e
                    );
                }
                function o(t, e) {
                    return t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.z !== e.z ? e.z - t.z : e.id - t.id;
                }
                var a,
                    s,
                    u,
                    h,
                    d,
                    p,
                    f = t.context,
                    m = t.state,
                    v = new c(),
                    g = new l(),
                    y = new c();
                this.render = function (n, r) {
                    if (0 !== e.length) {
                        void 0 === u && i(),
                            f.useProgram(u),
                            m.initAttributes(),
                            m.enableAttribute(h.position),
                            m.enableAttribute(h.uv),
                            m.disableUnusedAttributes(),
                            m.disable(f.CULL_FACE),
                            m.enable(f.BLEND),
                            f.bindBuffer(f.ARRAY_BUFFER, a),
                            f.vertexAttribPointer(h.position, 2, f.FLOAT, !1, 16, 0),
                            f.vertexAttribPointer(h.uv, 2, f.FLOAT, !1, 16, 8),
                            f.bindBuffer(f.ELEMENT_ARRAY_BUFFER, s),
                            f.uniformMatrix4fv(d.projectionMatrix, !1, r.projectionMatrix.elements),
                            m.activeTexture(f.TEXTURE0),
                            f.uniform1i(d.map, 0);
                        var l = 0,
                            c = 0,
                            _ = n.fog;
                        _
                            ? (f.uniform3f(d.fogColor, _.color.r, _.color.g, _.color.b),
                              _ && _.isFog
                                  ? (f.uniform1f(d.fogNear, _.near), f.uniform1f(d.fogFar, _.far), f.uniform1i(d.fogType, 1), (l = 1), (c = 1))
                                  : _ && _.isFogExp2 && (f.uniform1f(d.fogDensity, _.density), f.uniform1i(d.fogType, 2), (l = 2), (c = 2)))
                            : (f.uniform1i(d.fogType, 0), (l = 0), (c = 0));
                        for (var b = 0, x = e.length; b < x; b++) {
                            var w = e[b];
                            w.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse, w.matrixWorld), (w.z = -w.modelViewMatrix.elements[14]);
                        }
                        e.sort(o);
                        for (var T = [], b = 0, x = e.length; b < x; b++) {
                            var w = e[b],
                                E = w.material;
                            if (!1 !== E.visible) {
                                f.uniform1f(d.alphaTest, E.alphaTest), f.uniformMatrix4fv(d.modelViewMatrix, !1, w.modelViewMatrix.elements), w.matrixWorld.decompose(v, g, y), (T[0] = y.x), (T[1] = y.y);
                                var M = 0;
                                n.fog && E.fog && (M = c),
                                    l !== M && (f.uniform1i(d.fogType, M), (l = M)),
                                    null !== E.map ? (f.uniform2f(d.uvOffset, E.map.offset.x, E.map.offset.y), f.uniform2f(d.uvScale, E.map.repeat.x, E.map.repeat.y)) : (f.uniform2f(d.uvOffset, 0, 0), f.uniform2f(d.uvScale, 1, 1)),
                                    f.uniform1f(d.opacity, E.opacity),
                                    f.uniform3f(d.color, E.color.r, E.color.g, E.color.b),
                                    f.uniform1f(d.rotation, E.rotation),
                                    f.uniform2fv(d.scale, T),
                                    m.setBlending(E.blending, E.blendEquation, E.blendSrc, E.blendDst),
                                    m.setDepthTest(E.depthTest),
                                    m.setDepthWrite(E.depthWrite),
                                    E.map ? t.setTexture2D(E.map, 0) : t.setTexture2D(p, 0),
                                    f.drawElements(f.TRIANGLES, 6, f.UNSIGNED_SHORT, 0);
                            }
                        }
                        m.enable(f.CULL_FACE), t.resetGLState();
                    }
                };
            }
            function J() {
                Object.defineProperty(this, "id", { value: Q() }),
                    (this.uuid = Ma.generateUUID()),
                    (this.name = ""),
                    (this.type = "Material"),
                    (this.fog = !0),
                    (this.lights = !0),
                    (this.blending = Or),
                    (this.side = Tr),
                    (this.shading = Ar),
                    (this.vertexColors = Rr),
                    (this.opacity = 1),
                    (this.transparent = !1),
                    (this.blendSrc = qr),
                    (this.blendDst = Yr),
                    (this.blendEquation = Fr),
                    (this.blendSrcAlpha = null),
                    (this.blendDstAlpha = null),
                    (this.blendEquationAlpha = null),
                    (this.depthFunc = no),
                    (this.depthTest = !0),
                    (this.depthWrite = !0),
                    (this.clippingPlanes = null),
                    (this.clipIntersection = !1),
                    (this.clipShadows = !1),
                    (this.colorWrite = !0),
                    (this.precision = null),
                    (this.polygonOffset = !1),
                    (this.polygonOffsetFactor = 0),
                    (this.polygonOffsetUnits = 0),
                    (this.alphaTest = 0),
                    (this.premultipliedAlpha = !1),
                    (this.overdraw = 0),
                    (this.visible = !0),
                    (this._needsUpdate = !0);
            }
            function Q() {
                return Na++;
            }
            function $(t) {
                J.call(this),
                    (this.type = "ShaderMaterial"),
                    (this.defines = {}),
                    (this.uniforms = {}),
                    (this.vertexShader = "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"),
                    (this.fragmentShader = "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}"),
                    (this.linewidth = 1),
                    (this.wireframe = !1),
                    (this.wireframeLinewidth = 1),
                    (this.fog = !1),
                    (this.lights = !1),
                    (this.clipping = !1),
                    (this.skinning = !1),
                    (this.morphTargets = !1),
                    (this.morphNormals = !1),
                    (this.extensions = { derivatives: !1, fragDepth: !1, drawBuffers: !1, shaderTextureLOD: !1 }),
                    (this.defaultAttributeValues = { color: [1, 1, 1], uv: [0, 0], uv2: [0, 0] }),
                    (this.index0AttributeName = void 0),
                    void 0 !== t && (void 0 !== t.attributes && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."), this.setValues(t));
            }
            function K(t) {
                J.call(this),
                    (this.type = "MeshDepthMaterial"),
                    (this.depthPacking = Ta),
                    (this.skinning = !1),
                    (this.morphTargets = !1),
                    (this.map = null),
                    (this.alphaMap = null),
                    (this.displacementMap = null),
                    (this.displacementScale = 1),
                    (this.displacementBias = 0),
                    (this.wireframe = !1),
                    (this.wireframeLinewidth = 1),
                    (this.fog = !1),
                    (this.lights = !1),
                    this.setValues(t);
            }
            function tt(t, e) {
                (this.min = void 0 !== t ? t : new c(1 / 0, 1 / 0, 1 / 0)), (this.max = void 0 !== e ? e : new c(-1 / 0, -1 / 0, -1 / 0));
            }
            function et(t, e) {
                (this.center = void 0 !== t ? t : new c()), (this.radius = void 0 !== e ? e : 0);
            }
            function it() {
                (this.elements = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1])), arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.");
            }
            function nt(t, e) {
                (this.normal = void 0 !== t ? t : new c(1, 0, 0)), (this.constant = void 0 !== e ? e : 0);
            }
            function rt(t, e, i, n, r, o) {
                this.planes = [void 0 !== t ? t : new nt(), void 0 !== e ? e : new nt(), void 0 !== i ? i : new nt(), void 0 !== n ? n : new nt(), void 0 !== r ? r : new nt(), void 0 !== o ? o : new nt()];
            }
            function ot(t, e, n, r) {
                function s(e, i, n, r) {
                    var o = e.geometry,
                        a = null,
                        s = E,
                        l = e.customDepthMaterial;
                    if ((n && ((s = M), (l = e.customDistanceMaterial)), l)) a = l;
                    else {
                        var c = !1;
                        i.morphTargets && (o && o.isBufferGeometry ? (c = o.morphAttributes && o.morphAttributes.position && o.morphAttributes.position.length > 0) : o && o.isGeometry && (c = o.morphTargets && o.morphTargets.length > 0));
                        var u = e.isSkinnedMesh && i.skinning,
                            h = 0;
                        c && (h |= x), u && (h |= w), (a = s[h]);
                    }
                    if (t.localClippingEnabled && !0 === i.clipShadows && 0 !== i.clippingPlanes.length) {
                        var d = a.uuid,
                            p = i.uuid,
                            f = S[d];
                        void 0 === f && ((f = {}), (S[d] = f));
                        var m = f[p];
                        void 0 === m && ((m = a.clone()), (f[p] = m)), (a = m);
                    }
                    (a.visible = i.visible), (a.wireframe = i.wireframe);
                    var v = i.side;
                    return (
                        F.renderSingleSided && v == Mr && (v = Tr),
                        F.renderReverseSided && (v === Tr ? (v = Er) : v === Er && (v = Tr)),
                        (a.side = v),
                        (a.clipShadows = i.clipShadows),
                        (a.clippingPlanes = i.clippingPlanes),
                        (a.wireframeLinewidth = i.wireframeLinewidth),
                        (a.linewidth = i.linewidth),
                        n && void 0 !== a.uniforms.lightPos && a.uniforms.lightPos.value.copy(r),
                        a
                    );
                }
                function l(t, e, i) {
                    if (!1 !== t.visible) {
                        if (0 != (t.layers.mask & e.layers.mask) && (t.isMesh || t.isLine || t.isPoints) && t.castShadow && (!1 === t.frustumCulled || !0 === p.intersectsObject(t))) {
                            !0 === t.material.visible && (t.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse, t.matrixWorld), b.push(t));
                        }
                        for (var n = t.children, r = 0, o = n.length; r < o; r++) l(n[r], e, i);
                    }
                }
                var h = t.context,
                    d = t.state,
                    p = new rt(),
                    f = new u(),
                    m = e.shadows,
                    v = new i(),
                    g = new i(r.maxTextureSize, r.maxTextureSize),
                    y = new c(),
                    _ = new c(),
                    b = [],
                    x = 1,
                    w = 2,
                    T = 1 + (x | w),
                    E = new Array(T),
                    M = new Array(T),
                    S = {},
                    A = [new c(1, 0, 0), new c(-1, 0, 0), new c(0, 0, 1), new c(0, 0, -1), new c(0, 1, 0), new c(0, -1, 0)],
                    R = [new c(0, 1, 0), new c(0, 1, 0), new c(0, 1, 0), new c(0, 1, 0), new c(0, 0, 1), new c(0, 0, -1)],
                    C = [new o(), new o(), new o(), new o(), new o(), new o()],
                    P = new K();
                (P.depthPacking = Ea), (P.clipping = !0);
                for (var D = Ia.distanceRGBA, O = Oa.clone(D.uniforms), L = 0; L !== T; ++L) {
                    var j = 0 != (L & x),
                        k = 0 != (L & w),
                        I = P.clone();
                    (I.morphTargets = j), (I.skinning = k), (E[L] = I);
                    var N = new $({ defines: { USE_SHADOWMAP: "" }, uniforms: O, vertexShader: D.vertexShader, fragmentShader: D.fragmentShader, morphTargets: j, skinning: k, clipping: !0 });
                    M[L] = N;
                }
                var F = this;
                (this.enabled = !1),
                    (this.autoUpdate = !0),
                    (this.needsUpdate = !1),
                    (this.type = xr),
                    (this.renderReverseSided = !0),
                    (this.renderSingleSided = !0),
                    (this.render = function (e, i) {
                        if (!1 !== F.enabled && (!1 !== F.autoUpdate || !1 !== F.needsUpdate) && 0 !== m.length) {
                            d.clearColor(1, 1, 1, 1), d.disable(h.BLEND), d.setDepthTest(!0), d.setScissorTest(!1);
                            for (var r, o, c = 0, u = m.length; c < u; c++) {
                                var x = m[c],
                                    w = x.shadow;
                                if (void 0 !== w) {
                                    var T = w.camera;
                                    if ((v.copy(w.mapSize), v.min(g), x && x.isPointLight)) {
                                        (r = 6), (o = !0);
                                        var E = v.x,
                                            M = v.y;
                                        C[0].set(2 * E, M, E, M), C[1].set(0, M, E, M), C[2].set(3 * E, M, E, M), C[3].set(E, M, E, M), C[4].set(3 * E, 0, E, M), C[5].set(E, 0, E, M), (v.x *= 4), (v.y *= 2);
                                    } else (r = 1), (o = !1);
                                    if (null === w.map) {
                                        var S = { minFilter: Co, magFilter: Co, format: Jo };
                                        (w.map = new a(v.x, v.y, S)), T.updateProjectionMatrix();
                                    }
                                    w && w.isSpotLightShadow && w.update(x);
                                    var P = w.map,
                                        D = w.matrix;
                                    _.setFromMatrixPosition(x.matrixWorld), T.position.copy(_), t.setRenderTarget(P), t.clear();
                                    for (var O = 0; O < r; O++) {
                                        if (o) {
                                            y.copy(T.position), y.add(A[O]), T.up.copy(R[O]), T.lookAt(y);
                                            var L = C[O];
                                            d.viewport(L);
                                        } else y.setFromMatrixPosition(x.target.matrixWorld), T.lookAt(y);
                                        T.updateMatrixWorld(),
                                            T.matrixWorldInverse.getInverse(T.matrixWorld),
                                            D.set(0.5, 0, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0, 1),
                                            D.multiply(T.projectionMatrix),
                                            D.multiply(T.matrixWorldInverse),
                                            f.multiplyMatrices(T.projectionMatrix, T.matrixWorldInverse),
                                            p.setFromMatrix(f),
                                            (b.length = 0),
                                            l(e, i, T);
                                        for (var j = 0, k = b.length; j < k; j++) {
                                            var I = b[j],
                                                N = n.update(I),
                                                U = I.material;
                                            if (U && U.isMultiMaterial)
                                                for (var B = N.groups, G = U.materials, z = 0, V = B.length; z < V; z++) {
                                                    var H = B[z],
                                                        W = G[H.materialIndex];
                                                    if (!0 === W.visible) {
                                                        var X = s(I, W, o, _);
                                                        t.renderBufferDirect(T, null, N, X, I, H);
                                                    }
                                                }
                                            else {
                                                var X = s(I, U, o, _);
                                                t.renderBufferDirect(T, null, N, X, I, null);
                                            }
                                        }
                                    }
                                } else console.warn("THREE.WebGLShadowMap:", x, "has no shadow.");
                            }
                            var q = t.getClearColor(),
                                Y = t.getClearAlpha();
                            t.setClearColor(q, Y), (F.needsUpdate = !1);
                        }
                    });
            }
            function at(t, e) {
                (this.origin = void 0 !== t ? t : new c()), (this.direction = void 0 !== e ? e : new c());
            }
            function st(t, e, i, n) {
                (this._x = t || 0), (this._y = e || 0), (this._z = i || 0), (this._order = n || st.DefaultOrder);
            }
            function lt() {
                this.mask = 1;
            }
            function ct() {
                function t() {
                    r.setFromEuler(n, !1);
                }
                function e() {
                    n.setFromQuaternion(r, void 0, !1);
                }
                Object.defineProperty(this, "id", { value: ut() }), (this.uuid = Ma.generateUUID()), (this.name = ""), (this.type = "Object3D"), (this.parent = null), (this.children = []), (this.up = ct.DefaultUp.clone());
                var i = new c(),
                    n = new st(),
                    r = new l(),
                    o = new c(1, 1, 1);
                n.onChange(t),
                    r.onChange(e),
                    Object.defineProperties(this, {
                        position: { enumerable: !0, value: i },
                        rotation: { enumerable: !0, value: n },
                        quaternion: { enumerable: !0, value: r },
                        scale: { enumerable: !0, value: o },
                        modelViewMatrix: { value: new u() },
                        normalMatrix: { value: new it() },
                    }),
                    (this.matrix = new u()),
                    (this.matrixWorld = new u()),
                    (this.matrixAutoUpdate = ct.DefaultMatrixAutoUpdate),
                    (this.matrixWorldNeedsUpdate = !1),
                    (this.layers = new lt()),
                    (this.visible = !0),
                    (this.castShadow = !1),
                    (this.receiveShadow = !1),
                    (this.frustumCulled = !0),
                    (this.renderOrder = 0),
                    (this.userData = {}),
                    (this.onBeforeRender = function () {}),
                    (this.onAfterRender = function () {});
            }
            function ut() {
                return Fa++;
            }
            function ht(t, e) {
                (this.start = void 0 !== t ? t : new c()), (this.end = void 0 !== e ? e : new c());
            }
            function dt(t, e, i) {
                (this.a = void 0 !== t ? t : new c()), (this.b = void 0 !== e ? e : new c()), (this.c = void 0 !== i ? i : new c());
            }
            function pt(t, e, i, n, r, o) {
                (this.a = t),
                    (this.b = e),
                    (this.c = i),
                    (this.normal = n && n.isVector3 ? n : new c()),
                    (this.vertexNormals = Array.isArray(n) ? n : []),
                    (this.color = r && r.isColor ? r : new X()),
                    (this.vertexColors = Array.isArray(r) ? r : []),
                    (this.materialIndex = void 0 !== o ? o : 0);
            }
            function ft(t) {
                J.call(this),
                    (this.type = "MeshBasicMaterial"),
                    (this.color = new X(16777215)),
                    (this.map = null),
                    (this.aoMap = null),
                    (this.aoMapIntensity = 1),
                    (this.specularMap = null),
                    (this.alphaMap = null),
                    (this.envMap = null),
                    (this.combine = lo),
                    (this.reflectivity = 1),
                    (this.refractionRatio = 0.98),
                    (this.wireframe = !1),
                    (this.wireframeLinewidth = 1),
                    (this.wireframeLinecap = "round"),
                    (this.wireframeLinejoin = "round"),
                    (this.skinning = !1),
                    (this.morphTargets = !1),
                    (this.lights = !1),
                    this.setValues(t);
            }
            function mt(t, e, i) {
                if (Array.isArray(t)) throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
                (this.uuid = Ma.generateUUID()),
                    (this.array = t),
                    (this.itemSize = e),
                    (this.count = void 0 !== t ? t.length / e : 0),
                    (this.normalized = !0 === i),
                    (this.dynamic = !1),
                    (this.updateRange = { offset: 0, count: -1 }),
                    (this.version = 0);
            }
            function vt(t, e) {
                return new mt(new Int8Array(t), e);
            }
            function gt(t, e) {
                return new mt(new Uint8Array(t), e);
            }
            function yt(t, e) {
                return new mt(new Uint8ClampedArray(t), e);
            }
            function _t(t, e) {
                return new mt(new Int16Array(t), e);
            }
            function bt(t, e) {
                return new mt(new Uint16Array(t), e);
            }
            function xt(t, e) {
                return new mt(new Int32Array(t), e);
            }
            function wt(t, e) {
                return new mt(new Uint32Array(t), e);
            }
            function Tt(t, e) {
                return new mt(new Float32Array(t), e);
            }
            function Et(t, e) {
                return new mt(new Float64Array(t), e);
            }
            function Mt(t, e) {
                return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."), new mt(t, e).setDynamic(!0);
            }
            function St() {
                Object.defineProperty(this, "id", { value: At() }),
                    (this.uuid = Ma.generateUUID()),
                    (this.name = ""),
                    (this.type = "Geometry"),
                    (this.vertices = []),
                    (this.colors = []),
                    (this.faces = []),
                    (this.faceVertexUvs = [[]]),
                    (this.morphTargets = []),
                    (this.morphNormals = []),
                    (this.skinWeights = []),
                    (this.skinIndices = []),
                    (this.lineDistances = []),
                    (this.boundingBox = null),
                    (this.boundingSphere = null),
                    (this.elementsNeedUpdate = !1),
                    (this.verticesNeedUpdate = !1),
                    (this.uvsNeedUpdate = !1),
                    (this.normalsNeedUpdate = !1),
                    (this.colorsNeedUpdate = !1),
                    (this.lineDistancesNeedUpdate = !1),
                    (this.groupsNeedUpdate = !1);
            }
            function At() {
                return Ua++;
            }
            function Rt() {
                Object.defineProperty(this, "id", { value: At() }),
                    (this.uuid = Ma.generateUUID()),
                    (this.name = ""),
                    (this.type = "DirectGeometry"),
                    (this.indices = []),
                    (this.vertices = []),
                    (this.normals = []),
                    (this.colors = []),
                    (this.uvs = []),
                    (this.uvs2 = []),
                    (this.groups = []),
                    (this.morphTargets = {}),
                    (this.skinWeights = []),
                    (this.skinIndices = []),
                    (this.boundingBox = null),
                    (this.boundingSphere = null),
                    (this.verticesNeedUpdate = !1),
                    (this.normalsNeedUpdate = !1),
                    (this.colorsNeedUpdate = !1),
                    (this.uvsNeedUpdate = !1),
                    (this.groupsNeedUpdate = !1);
            }
            function Ct() {
                Object.defineProperty(this, "id", { value: At() }),
                    (this.uuid = Ma.generateUUID()),
                    (this.name = ""),
                    (this.type = "BufferGeometry"),
                    (this.index = null),
                    (this.attributes = {}),
                    (this.morphAttributes = {}),
                    (this.groups = []),
                    (this.boundingBox = null),
                    (this.boundingSphere = null),
                    (this.drawRange = { start: 0, count: 1 / 0 });
            }
            function Pt(t, e) {
                ct.call(this), (this.type = "Mesh"), (this.geometry = void 0 !== t ? t : new Ct()), (this.material = void 0 !== e ? e : new ft({ color: 16777215 * Math.random() })), (this.drawMode = pa), this.updateMorphTargets();
            }
            function Dt(t, e, i, n, r, o) {
                function a(t, e, i, n, r, o, a, l, u, b, x) {
                    for (var w = o / u, T = a / b, E = o / 2, M = a / 2, S = l / 2, A = u + 1, R = b + 1, C = 0, P = 0, D = new c(), O = 0; O < R; O++)
                        for (var L = O * T - M, j = 0; j < A; j++) {
                            var k = j * w - E;
                            (D[t] = k * n),
                                (D[e] = L * r),
                                (D[i] = S),
                                (d[m] = D.x),
                                (d[m + 1] = D.y),
                                (d[m + 2] = D.z),
                                (D[t] = 0),
                                (D[e] = 0),
                                (D[i] = l > 0 ? 1 : -1),
                                (p[m] = D.x),
                                (p[m + 1] = D.y),
                                (p[m + 2] = D.z),
                                (f[v] = j / u),
                                (f[v + 1] = 1 - O / b),
                                (m += 3),
                                (v += 2),
                                (C += 1);
                        }
                    for (O = 0; O < b; O++)
                        for (j = 0; j < u; j++) {
                            var I = y + j + A * O,
                                N = y + j + A * (O + 1),
                                F = y + (j + 1) + A * (O + 1),
                                U = y + (j + 1) + A * O;
                            (h[g] = I), (h[g + 1] = N), (h[g + 2] = U), (h[g + 3] = N), (h[g + 4] = F), (h[g + 5] = U), (g += 6), (P += 6);
                        }
                    s.addGroup(_, P, x), (_ += P), (y += C);
                }
                Ct.call(this), (this.type = "BoxBufferGeometry"), (this.parameters = { width: t, height: e, depth: i, widthSegments: n, heightSegments: r, depthSegments: o });
                var s = this;
                (n = Math.floor(n) || 1), (r = Math.floor(r) || 1), (o = Math.floor(o) || 1);
                var l = (function (t, e, i) {
                        var n = 0;
                        return (n += (t + 1) * (e + 1) * 2), (n += (t + 1) * (i + 1) * 2), (n += (i + 1) * (e + 1) * 2);
                    })(n, r, o),
                    u = (function (t, e, i) {
                        var n = 0;
                        return (n += t * e * 2), (n += t * i * 2), 6 * (n += i * e * 2);
                    })(n, r, o),
                    h = new (u > 65535 ? Uint32Array : Uint16Array)(u),
                    d = new Float32Array(3 * l),
                    p = new Float32Array(3 * l),
                    f = new Float32Array(2 * l),
                    m = 0,
                    v = 0,
                    g = 0,
                    y = 0,
                    _ = 0;
                a("z", "y", "x", -1, -1, i, e, t, o, r, 0),
                    a("z", "y", "x", 1, -1, i, e, -t, o, r, 1),
                    a("x", "z", "y", 1, 1, t, i, e, n, o, 2),
                    a("x", "z", "y", 1, -1, t, i, -e, n, o, 3),
                    a("x", "y", "z", 1, -1, t, e, i, n, r, 4),
                    a("x", "y", "z", -1, -1, t, e, -i, n, r, 5),
                    this.setIndex(new mt(h, 1)),
                    this.addAttribute("position", new mt(d, 3)),
                    this.addAttribute("normal", new mt(p, 3)),
                    this.addAttribute("uv", new mt(f, 2));
            }
            function Ot(t, e, i, n) {
                Ct.call(this), (this.type = "PlaneBufferGeometry"), (this.parameters = { width: t, height: e, widthSegments: i, heightSegments: n });
                for (
                    var r = t / 2,
                        o = e / 2,
                        a = Math.floor(i) || 1,
                        s = Math.floor(n) || 1,
                        l = a + 1,
                        c = s + 1,
                        u = t / a,
                        h = e / s,
                        d = new Float32Array(l * c * 3),
                        p = new Float32Array(l * c * 3),
                        f = new Float32Array(l * c * 2),
                        m = 0,
                        v = 0,
                        g = 0;
                    g < c;
                    g++
                )
                    for (var y = g * h - o, _ = 0; _ < l; _++) {
                        var b = _ * u - r;
                        (d[m] = b), (d[m + 1] = -y), (p[m + 2] = 1), (f[v] = _ / a), (f[v + 1] = 1 - g / s), (m += 3), (v += 2);
                    }
                m = 0;
                for (var x = new (d.length / 3 > 65535 ? Uint32Array : Uint16Array)(a * s * 6), g = 0; g < s; g++)
                    for (var _ = 0; _ < a; _++) {
                        var w = _ + l * g,
                            T = _ + l * (g + 1),
                            E = _ + 1 + l * (g + 1),
                            M = _ + 1 + l * g;
                        (x[m] = w), (x[m + 1] = T), (x[m + 2] = M), (x[m + 3] = T), (x[m + 4] = E), (x[m + 5] = M), (m += 6);
                    }
                this.setIndex(new mt(x, 1)), this.addAttribute("position", new mt(d, 3)), this.addAttribute("normal", new mt(p, 3)), this.addAttribute("uv", new mt(f, 2));
            }
            function Lt() {
                ct.call(this), (this.type = "Camera"), (this.matrixWorldInverse = new u()), (this.projectionMatrix = new u());
            }
            function jt(t, e, i, n) {
                Lt.call(this),
                    (this.type = "PerspectiveCamera"),
                    (this.fov = void 0 !== t ? t : 50),
                    (this.zoom = 1),
                    (this.near = void 0 !== i ? i : 0.1),
                    (this.far = void 0 !== n ? n : 2e3),
                    (this.focus = 10),
                    (this.aspect = void 0 !== e ? e : 1),
                    (this.view = null),
                    (this.filmGauge = 35),
                    (this.filmOffset = 0),
                    this.updateProjectionMatrix();
            }
            function kt(t, e, i, n, r, o) {
                Lt.call(this),
                    (this.type = "OrthographicCamera"),
                    (this.zoom = 1),
                    (this.view = null),
                    (this.left = t),
                    (this.right = e),
                    (this.top = i),
                    (this.bottom = n),
                    (this.near = void 0 !== r ? r : 0.1),
                    (this.far = void 0 !== o ? o : 2e3),
                    this.updateProjectionMatrix();
            }
            function It(t, e, i) {
                function n(t) {
                    s = t;
                }
                function r(i) {
                    i.array instanceof Uint32Array && e.get("OES_element_index_uint") ? ((l = t.UNSIGNED_INT), (c = 4)) : ((l = t.UNSIGNED_SHORT), (c = 2));
                }
                function o(e, n) {
                    t.drawElements(s, n, l, e * c), i.calls++, (i.vertices += n), s === t.TRIANGLES && (i.faces += n / 3);
                }
                function a(n, r, o) {
                    var a = e.get("ANGLE_instanced_arrays");
                    if (null === a) return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
                    a.drawElementsInstancedANGLE(s, o, l, r * c, n.maxInstancedCount), i.calls++, (i.vertices += o * n.maxInstancedCount), s === t.TRIANGLES && (i.faces += (n.maxInstancedCount * o) / 3);
                }
                var s, l, c;
                return { setMode: n, setIndex: r, render: o, renderInstances: a };
            }
            function Nt(t, e, i) {
                function n(t) {
                    a = t;
                }
                function r(e, n) {
                    t.drawArrays(a, e, n), i.calls++, (i.vertices += n), a === t.TRIANGLES && (i.faces += n / 3);
                }
                function o(n) {
                    var r = e.get("ANGLE_instanced_arrays");
                    if (null === r) return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
                    var o = n.attributes.position,
                        s = 0;
                    o && o.isInterleavedBufferAttribute ? ((s = o.data.count), r.drawArraysInstancedANGLE(a, 0, s, n.maxInstancedCount)) : ((s = o.count), r.drawArraysInstancedANGLE(a, 0, s, n.maxInstancedCount)),
                        i.calls++,
                        (i.vertices += s * n.maxInstancedCount),
                        a === t.TRIANGLES && (i.faces += (n.maxInstancedCount * s) / 3);
                }
                var a;
                return { setMode: n, render: r, renderInstances: o };
            }
            function Ft() {
                var t = {};
                return {
                    get: function (e) {
                        if (void 0 !== t[e.id]) return t[e.id];
                        var n;
                        switch (e.type) {
                            case "DirectionalLight":
                                n = { direction: new c(), color: new X(), shadow: !1, shadowBias: 0, shadowRadius: 1, shadowMapSize: new i() };
                                break;
                            case "SpotLight":
                                n = { position: new c(), direction: new c(), color: new X(), distance: 0, coneCos: 0, penumbraCos: 0, decay: 0, shadow: !1, shadowBias: 0, shadowRadius: 1, shadowMapSize: new i() };
                                break;
                            case "PointLight":
                                n = { position: new c(), color: new X(), distance: 0, decay: 0, shadow: !1, shadowBias: 0, shadowRadius: 1, shadowMapSize: new i() };
                                break;
                            case "HemisphereLight":
                                n = { direction: new c(), skyColor: new X(), groundColor: new X() };
                        }
                        return (t[e.id] = n), n;
                    },
                };
            }
            function Ut(t) {
                for (var e = t.split("\n"), i = 0; i < e.length; i++) e[i] = i + 1 + ": " + e[i];
                return e.join("\n");
            }
            function Bt(t, e, i) {
                var n = t.createShader(e);
                return (
                    t.shaderSource(n, i),
                    t.compileShader(n),
                    !1 === t.getShaderParameter(n, t.COMPILE_STATUS) && console.error("THREE.WebGLShader: Shader couldn't compile."),
                    "" !== t.getShaderInfoLog(n) && console.warn("THREE.WebGLShader: gl.getShaderInfoLog()", e === t.VERTEX_SHADER ? "vertex" : "fragment", t.getShaderInfoLog(n), Ut(i)),
                    n
                );
            }
            function Gt(t) {
                switch (t) {
                    case va:
                        return ["Linear", "( value )"];
                    case ga:
                        return ["sRGB", "( value )"];
                    case _a:
                        return ["RGBE", "( value )"];
                    case ba:
                        return ["RGBM", "( value, 7.0 )"];
                    case xa:
                        return ["RGBM", "( value, 16.0 )"];
                    case wa:
                        return ["RGBD", "( value, 256.0 )"];
                    case ya:
                        return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
                    default:
                        throw new Error("unsupported encoding: " + t);
                }
            }
            function zt(t, e) {
                var i = Gt(e);
                return "vec4 " + t + "( vec4 value ) { return " + i[0] + "ToLinear" + i[1] + "; }";
            }
            function Vt(t, e) {
                var i = Gt(e);
                return "vec4 " + t + "( vec4 value ) { return LinearTo" + i[0] + i[1] + "; }";
            }
            function Ht(t, e) {
                var i;
                switch (e) {
                    case po:
                        i = "Linear";
                        break;
                    case fo:
                        i = "Reinhard";
                        break;
                    case mo:
                        i = "Uncharted2";
                        break;
                    case vo:
                        i = "OptimizedCineon";
                        break;
                    default:
                        throw new Error("unsupported toneMapping: " + e);
                }
                return "vec3 " + t + "( vec3 color ) { return " + i + "ToneMapping( color ); }";
            }
            function Wt(t, e, i) {
                return (
                    (t = t || {}),
                    [
                        t.derivatives || e.envMapCubeUV || e.bumpMap || e.normalMap || e.flatShading ? "#extension GL_OES_standard_derivatives : enable" : "",
                        (t.fragDepth || e.logarithmicDepthBuffer) && i.get("EXT_frag_depth") ? "#extension GL_EXT_frag_depth : enable" : "",
                        t.drawBuffers && i.get("WEBGL_draw_buffers") ? "#extension GL_EXT_draw_buffers : require" : "",
                        (t.shaderTextureLOD || e.envMap) && i.get("EXT_shader_texture_lod") ? "#extension GL_EXT_shader_texture_lod : enable" : "",
                    ]
                        .filter(Yt)
                        .join("\n")
                );
            }
            function Xt(t) {
                var e = [];
                for (var i in t) {
                    var n = t[i];
                    !1 !== n && e.push("#define " + i + " " + n);
                }
                return e.join("\n");
            }
            function qt(t, e, i) {
                for (var n = {}, r = t.getProgramParameter(e, t.ACTIVE_ATTRIBUTES), o = 0; o < r; o++) {
                    var a = t.getActiveAttrib(e, o),
                        s = a.name;
                    n[s] = t.getAttribLocation(e, s);
                }
                return n;
            }
            function Yt(t) {
                return "" !== t;
            }
            function Zt(t, e) {
                return t
                    .replace(/NUM_DIR_LIGHTS/g, e.numDirLights)
                    .replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights)
                    .replace(/NUM_POINT_LIGHTS/g, e.numPointLights)
                    .replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights);
            }
            function Jt(t) {
                function e(t, e) {
                    var i = La[e];
                    if (void 0 === i) throw new Error("Can not resolve #include <" + e + ">");
                    return Jt(i);
                }
                var i = /#include +<([\w\d.]+)>/g;
                return t.replace(i, e);
            }
            function Qt(t) {
                function e(t, e, i, n) {
                    for (var r = "", o = parseInt(e); o < parseInt(i); o++) r += n.replace(/\[ i \]/g, "[ " + o + " ]");
                    return r;
                }
                var i = /for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;
                return t.replace(i, e);
            }
            function $t(t, e, i, n) {
                var r = t.context,
                    o = i.extensions,
                    a = i.defines,
                    s = i.__webglShader.vertexShader,
                    l = i.__webglShader.fragmentShader,
                    c = "SHADOWMAP_TYPE_BASIC";
                n.shadowMapType === xr ? (c = "SHADOWMAP_TYPE_PCF") : n.shadowMapType === wr && (c = "SHADOWMAP_TYPE_PCF_SOFT");
                var u = "ENVMAP_TYPE_CUBE",
                    h = "ENVMAP_MODE_REFLECTION",
                    d = "ENVMAP_BLENDING_MULTIPLY";
                if (n.envMap) {
                    switch (i.envMap.mapping) {
                        case go:
                        case yo:
                            u = "ENVMAP_TYPE_CUBE";
                            break;
                        case wo:
                        case To:
                            u = "ENVMAP_TYPE_CUBE_UV";
                            break;
                        case _o:
                        case bo:
                            u = "ENVMAP_TYPE_EQUIREC";
                            break;
                        case xo:
                            u = "ENVMAP_TYPE_SPHERE";
                    }
                    switch (i.envMap.mapping) {
                        case yo:
                        case bo:
                            h = "ENVMAP_MODE_REFRACTION";
                    }
                    switch (i.combine) {
                        case lo:
                            d = "ENVMAP_BLENDING_MULTIPLY";
                            break;
                        case co:
                            d = "ENVMAP_BLENDING_MIX";
                            break;
                        case uo:
                            d = "ENVMAP_BLENDING_ADD";
                    }
                }
                var p,
                    f,
                    m = t.gammaFactor > 0 ? t.gammaFactor : 1,
                    v = Wt(o, n, t.extensions),
                    g = Xt(a),
                    y = r.createProgram();
                i.isRawShaderMaterial
                    ? ((p = [g, "\n"].filter(Yt).join("\n")), (f = [v, g, "\n"].filter(Yt).join("\n")))
                    : ((p = [
                          "precision " + n.precision + " float;",
                          "precision " + n.precision + " int;",
                          "#define SHADER_NAME " + i.__webglShader.name,
                          g,
                          n.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "",
                          "#define GAMMA_FACTOR " + m,
                          "#define MAX_BONES " + n.maxBones,
                          n.map ? "#define USE_MAP" : "",
                          n.envMap ? "#define USE_ENVMAP" : "",
                          n.envMap ? "#define " + h : "",
                          n.lightMap ? "#define USE_LIGHTMAP" : "",
                          n.aoMap ? "#define USE_AOMAP" : "",
                          n.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
                          n.bumpMap ? "#define USE_BUMPMAP" : "",
                          n.normalMap ? "#define USE_NORMALMAP" : "",
                          n.displacementMap && n.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "",
                          n.specularMap ? "#define USE_SPECULARMAP" : "",
                          n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
                          n.metalnessMap ? "#define USE_METALNESSMAP" : "",
                          n.alphaMap ? "#define USE_ALPHAMAP" : "",
                          n.vertexColors ? "#define USE_COLOR" : "",
                          n.flatShading ? "#define FLAT_SHADED" : "",
                          n.skinning ? "#define USE_SKINNING" : "",
                          n.useVertexTexture ? "#define BONE_TEXTURE" : "",
                          n.morphTargets ? "#define USE_MORPHTARGETS" : "",
                          n.morphNormals && !1 === n.flatShading ? "#define USE_MORPHNORMALS" : "",
                          n.doubleSided ? "#define DOUBLE_SIDED" : "",
                          n.flipSided ? "#define FLIP_SIDED" : "",
                          "#define NUM_CLIPPING_PLANES " + n.numClippingPlanes,
                          n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
                          n.shadowMapEnabled ? "#define " + c : "",
                          n.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "",
                          n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
                          n.logarithmicDepthBuffer && t.extensions.get("EXT_frag_depth") ? "#define USE_LOGDEPTHBUF_EXT" : "",
                          "uniform mat4 modelMatrix;",
                          "uniform mat4 modelViewMatrix;",
                          "uniform mat4 projectionMatrix;",
                          "uniform mat4 viewMatrix;",
                          "uniform mat3 normalMatrix;",
                          "uniform vec3 cameraPosition;",
                          "attribute vec3 position;",
                          "attribute vec3 normal;",
                          "attribute vec2 uv;",
                          "#ifdef USE_COLOR",
                          "\tattribute vec3 color;",
                          "#endif",
                          "#ifdef USE_MORPHTARGETS",
                          "\tattribute vec3 morphTarget0;",
                          "\tattribute vec3 morphTarget1;",
                          "\tattribute vec3 morphTarget2;",
                          "\tattribute vec3 morphTarget3;",
                          "\t#ifdef USE_MORPHNORMALS",
                          "\t\tattribute vec3 morphNormal0;",
                          "\t\tattribute vec3 morphNormal1;",
                          "\t\tattribute vec3 morphNormal2;",
                          "\t\tattribute vec3 morphNormal3;",
                          "\t#else",
                          "\t\tattribute vec3 morphTarget4;",
                          "\t\tattribute vec3 morphTarget5;",
                          "\t\tattribute vec3 morphTarget6;",
                          "\t\tattribute vec3 morphTarget7;",
                          "\t#endif",
                          "#endif",
                          "#ifdef USE_SKINNING",
                          "\tattribute vec4 skinIndex;",
                          "\tattribute vec4 skinWeight;",
                          "#endif",
                          "\n",
                      ]
                          .filter(Yt)
                          .join("\n")),
                      (f = [
                          v,
                          "precision " + n.precision + " float;",
                          "precision " + n.precision + " int;",
                          "#define SHADER_NAME " + i.__webglShader.name,
                          g,
                          n.alphaTest ? "#define ALPHATEST " + n.alphaTest : "",
                          "#define GAMMA_FACTOR " + m,
                          n.useFog && n.fog ? "#define USE_FOG" : "",
                          n.useFog && n.fogExp ? "#define FOG_EXP2" : "",
                          n.map ? "#define USE_MAP" : "",
                          n.envMap ? "#define USE_ENVMAP" : "",
                          n.envMap ? "#define " + u : "",
                          n.envMap ? "#define " + h : "",
                          n.envMap ? "#define " + d : "",
                          n.lightMap ? "#define USE_LIGHTMAP" : "",
                          n.aoMap ? "#define USE_AOMAP" : "",
                          n.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
                          n.bumpMap ? "#define USE_BUMPMAP" : "",
                          n.normalMap ? "#define USE_NORMALMAP" : "",
                          n.specularMap ? "#define USE_SPECULARMAP" : "",
                          n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
                          n.metalnessMap ? "#define USE_METALNESSMAP" : "",
                          n.alphaMap ? "#define USE_ALPHAMAP" : "",
                          n.vertexColors ? "#define USE_COLOR" : "",
                          n.flatShading ? "#define FLAT_SHADED" : "",
                          n.doubleSided ? "#define DOUBLE_SIDED" : "",
                          n.flipSided ? "#define FLIP_SIDED" : "",
                          "#define NUM_CLIPPING_PLANES " + n.numClippingPlanes,
                          "#define UNION_CLIPPING_PLANES " + (n.numClippingPlanes - n.numClipIntersection),
                          n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
                          n.shadowMapEnabled ? "#define " + c : "",
                          n.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "",
                          n.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "",
                          n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
                          n.logarithmicDepthBuffer && t.extensions.get("EXT_frag_depth") ? "#define USE_LOGDEPTHBUF_EXT" : "",
                          n.envMap && t.extensions.get("EXT_shader_texture_lod") ? "#define TEXTURE_LOD_EXT" : "",
                          "uniform mat4 viewMatrix;",
                          "uniform vec3 cameraPosition;",
                          n.toneMapping !== ho ? "#define TONE_MAPPING" : "",
                          n.toneMapping !== ho ? La.tonemapping_pars_fragment : "",
                          n.toneMapping !== ho ? Ht("toneMapping", n.toneMapping) : "",
                          n.outputEncoding || n.mapEncoding || n.envMapEncoding || n.emissiveMapEncoding ? La.encodings_pars_fragment : "",
                          n.mapEncoding ? zt("mapTexelToLinear", n.mapEncoding) : "",
                          n.envMapEncoding ? zt("envMapTexelToLinear", n.envMapEncoding) : "",
                          n.emissiveMapEncoding ? zt("emissiveMapTexelToLinear", n.emissiveMapEncoding) : "",
                          n.outputEncoding ? Vt("linearToOutputTexel", n.outputEncoding) : "",
                          n.depthPacking ? "#define DEPTH_PACKING " + i.depthPacking : "",
                          "\n",
                      ]
                          .filter(Yt)
                          .join("\n"))),
                    (s = Jt(s, n)),
                    (s = Zt(s, n)),
                    (l = Jt(l, n)),
                    (l = Zt(l, n)),
                    i.isShaderMaterial || ((s = Qt(s)), (l = Qt(l)));
                var _ = p + s,
                    b = f + l,
                    x = Bt(r, r.VERTEX_SHADER, _),
                    w = Bt(r, r.FRAGMENT_SHADER, b);
                r.attachShader(y, x), r.attachShader(y, w), void 0 !== i.index0AttributeName ? r.bindAttribLocation(y, 0, i.index0AttributeName) : !0 === n.morphTargets && r.bindAttribLocation(y, 0, "position"), r.linkProgram(y);
                var T = r.getProgramInfoLog(y),
                    E = r.getShaderInfoLog(x),
                    M = r.getShaderInfoLog(w),
                    S = !0,
                    A = !0;
                !1 === r.getProgramParameter(y, r.LINK_STATUS)
                    ? ((S = !1), console.error("THREE.WebGLProgram: shader error: ", r.getError(), "gl.VALIDATE_STATUS", r.getProgramParameter(y, r.VALIDATE_STATUS), "gl.getProgramInfoLog", T, E, M))
                    : "" !== T
                    ? console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", T)
                    : ("" !== E && "" !== M) || (A = !1),
                    A && (this.diagnostics = { runnable: S, material: i, programLog: T, vertexShader: { log: E, prefix: p }, fragmentShader: { log: M, prefix: f } }),
                    r.deleteShader(x),
                    r.deleteShader(w);
                var R;
                this.getUniforms = function () {
                    return void 0 === R && (R = new W(r, y, t)), R;
                };
                var C;
                return (
                    (this.getAttributes = function () {
                        return void 0 === C && (C = qt(r, y)), C;
                    }),
                    (this.destroy = function () {
                        r.deleteProgram(y), (this.program = void 0);
                    }),
                    Object.defineProperties(this, {
                        uniforms: {
                            get: function () {
                                return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."), this.getUniforms();
                            },
                        },
                        attributes: {
                            get: function () {
                                return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."), this.getAttributes();
                            },
                        },
                    }),
                    (this.id = Ba++),
                    (this.code = e),
                    (this.usedTimes = 1),
                    (this.program = y),
                    (this.vertexShader = x),
                    (this.fragmentShader = w),
                    this
                );
            }
            function Kt(t, e) {
                function i(t) {
                    if (e.floatVertexTextures && t && t.skeleton && t.skeleton.useVertexTexture) return 1024;
                    var i = e.maxVertexUniforms,
                        n = Math.floor((i - 20) / 4),
                        r = n;
                    return (
                        void 0 !== t &&
                            t &&
                            t.isSkinnedMesh &&
                            (r = Math.min(t.skeleton.bones.length, r)) < t.skeleton.bones.length &&
                            console.warn("WebGLRenderer: too many bones - " + t.skeleton.bones.length + ", this GPU supports just " + r + " (try OpenGL instead of ANGLE)"),
                        r
                    );
                }
                function n(t, e) {
                    var i;
                    return (
                        t
                            ? t && t.isTexture
                                ? (i = t.encoding)
                                : t && t.isWebGLRenderTarget && (console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."), (i = t.texture.encoding))
                            : (i = va),
                        i === va && e && (i = ya),
                        i
                    );
                }
                var r = [],
                    o = {
                        MeshDepthMaterial: "depth",
                        MeshNormalMaterial: "normal",
                        MeshBasicMaterial: "basic",
                        MeshLambertMaterial: "lambert",
                        MeshPhongMaterial: "phong",
                        MeshStandardMaterial: "physical",
                        MeshPhysicalMaterial: "physical",
                        LineBasicMaterial: "basic",
                        LineDashedMaterial: "dashed",
                        PointsMaterial: "points",
                    },
                    a = [
                        "precision",
                        "supportsVertexTextures",
                        "map",
                        "mapEncoding",
                        "envMap",
                        "envMapMode",
                        "envMapEncoding",
                        "lightMap",
                        "aoMap",
                        "emissiveMap",
                        "emissiveMapEncoding",
                        "bumpMap",
                        "normalMap",
                        "displacementMap",
                        "specularMap",
                        "roughnessMap",
                        "metalnessMap",
                        "alphaMap",
                        "combine",
                        "vertexColors",
                        "fog",
                        "useFog",
                        "fogExp",
                        "flatShading",
                        "sizeAttenuation",
                        "logarithmicDepthBuffer",
                        "skinning",
                        "maxBones",
                        "useVertexTexture",
                        "morphTargets",
                        "morphNormals",
                        "maxMorphTargets",
                        "maxMorphNormals",
                        "premultipliedAlpha",
                        "numDirLights",
                        "numPointLights",
                        "numSpotLights",
                        "numHemiLights",
                        "shadowMapEnabled",
                        "shadowMapType",
                        "toneMapping",
                        "physicallyCorrectLights",
                        "alphaTest",
                        "doubleSided",
                        "flipSided",
                        "numClippingPlanes",
                        "numClipIntersection",
                        "depthPacking",
                    ];
                (this.getParameters = function (r, a, s, l, c, u) {
                    var h = o[r.type],
                        d = i(u),
                        p = t.getPrecision();
                    null !== r.precision && (p = e.getMaxPrecision(r.precision)) !== r.precision && console.warn("THREE.WebGLProgram.getParameters:", r.precision, "not supported, using", p, "instead.");
                    var f = t.getCurrentRenderTarget();
                    return {
                        shaderID: h,
                        precision: p,
                        supportsVertexTextures: e.vertexTextures,
                        outputEncoding: n(f ? f.texture : null, t.gammaOutput),
                        map: !!r.map,
                        mapEncoding: n(r.map, t.gammaInput),
                        envMap: !!r.envMap,
                        envMapMode: r.envMap && r.envMap.mapping,
                        envMapEncoding: n(r.envMap, t.gammaInput),
                        envMapCubeUV: !!r.envMap && (r.envMap.mapping === wo || r.envMap.mapping === To),
                        lightMap: !!r.lightMap,
                        aoMap: !!r.aoMap,
                        emissiveMap: !!r.emissiveMap,
                        emissiveMapEncoding: n(r.emissiveMap, t.gammaInput),
                        bumpMap: !!r.bumpMap,
                        normalMap: !!r.normalMap,
                        displacementMap: !!r.displacementMap,
                        roughnessMap: !!r.roughnessMap,
                        metalnessMap: !!r.metalnessMap,
                        specularMap: !!r.specularMap,
                        alphaMap: !!r.alphaMap,
                        combine: r.combine,
                        vertexColors: r.vertexColors,
                        fog: !!s,
                        useFog: r.fog,
                        fogExp: s && s.isFogExp2,
                        flatShading: r.shading === Sr,
                        sizeAttenuation: r.sizeAttenuation,
                        logarithmicDepthBuffer: e.logarithmicDepthBuffer,
                        skinning: r.skinning,
                        maxBones: d,
                        useVertexTexture: e.floatVertexTextures && u && u.skeleton && u.skeleton.useVertexTexture,
                        morphTargets: r.morphTargets,
                        morphNormals: r.morphNormals,
                        maxMorphTargets: t.maxMorphTargets,
                        maxMorphNormals: t.maxMorphNormals,
                        numDirLights: a.directional.length,
                        numPointLights: a.point.length,
                        numSpotLights: a.spot.length,
                        numHemiLights: a.hemi.length,
                        numClippingPlanes: l,
                        numClipIntersection: c,
                        shadowMapEnabled: t.shadowMap.enabled && u.receiveShadow && a.shadows.length > 0,
                        shadowMapType: t.shadowMap.type,
                        toneMapping: t.toneMapping,
                        physicallyCorrectLights: t.physicallyCorrectLights,
                        premultipliedAlpha: r.premultipliedAlpha,
                        alphaTest: r.alphaTest,
                        doubleSided: r.side === Mr,
                        flipSided: r.side === Er,
                        depthPacking: void 0 !== r.depthPacking && r.depthPacking,
                    };
                }),
                    (this.getProgramCode = function (t, e) {
                        var i = [];
                        if ((e.shaderID ? i.push(e.shaderID) : (i.push(t.fragmentShader), i.push(t.vertexShader)), void 0 !== t.defines)) for (var n in t.defines) i.push(n), i.push(t.defines[n]);
                        for (var r = 0; r < a.length; r++) i.push(e[a[r]]);
                        return i.join();
                    }),
                    (this.acquireProgram = function (e, i, n) {
                        for (var o, a = 0, s = r.length; a < s; a++) {
                            var l = r[a];
                            if (l.code === n) {
                                (o = l), ++o.usedTimes;
                                break;
                            }
                        }
                        return void 0 === o && ((o = new $t(t, n, e, i)), r.push(o)), o;
                    }),
                    (this.releaseProgram = function (t) {
                        if (0 == --t.usedTimes) {
                            var e = r.indexOf(t);
                            (r[e] = r[r.length - 1]), r.pop(), t.destroy();
                        }
                    }),
                    (this.programs = r);
            }
            function te(t, e, i) {
                function n(t) {
                    var r = t.target,
                        s = l[r.id];
                    null !== s.index && o(s.index), a(s.attributes), r.removeEventListener("dispose", n), delete l[r.id];
                    var c = e.get(r);
                    c.wireframe && o(c.wireframe), e.delete(r);
                    var u = e.get(s);
                    u.wireframe && o(u.wireframe), e.delete(s), i.memory.geometries--;
                }
                function r(t) {
                    return t.isInterleavedBufferAttribute ? e.get(t.data).__webglBuffer : e.get(t).__webglBuffer;
                }
                function o(e) {
                    var i = r(e);
                    void 0 !== i && (t.deleteBuffer(i), s(e));
                }
                function a(t) {
                    for (var e in t) o(t[e]);
                }
                function s(t) {
                    t.isInterleavedBufferAttribute ? e.delete(t.data) : e.delete(t);
                }
                var l = {};
                return {
                    get: function (t) {
                        var e = t.geometry;
                        if (void 0 !== l[e.id]) return l[e.id];
                        e.addEventListener("dispose", n);
                        var r;
                        return e.isBufferGeometry ? (r = e) : e.isGeometry && (void 0 === e._bufferGeometry && (e._bufferGeometry = new Ct().setFromObject(t)), (r = e._bufferGeometry)), (l[e.id] = r), i.memory.geometries++, r;
                    },
                };
            }
            function ee(t, e, i) {
                function n(e) {
                    var i = c.get(e);
                    e.geometry.isGeometry && i.updateFromObject(e);
                    var n = i.index,
                        o = i.attributes;
                    null !== n && r(n, t.ELEMENT_ARRAY_BUFFER);
                    for (var a in o) r(o[a], t.ARRAY_BUFFER);
                    var s = i.morphAttributes;
                    for (var a in s) for (var l = s[a], u = 0, h = l.length; u < h; u++) r(l[u], t.ARRAY_BUFFER);
                    return i;
                }
                function r(t, i) {
                    var n = t.isInterleavedBufferAttribute ? t.data : t,
                        r = e.get(n);
                    void 0 === r.__webglBuffer ? o(r, n, i) : r.version !== n.version && a(r, n, i);
                }
                function o(e, i, n) {
                    (e.__webglBuffer = t.createBuffer()), t.bindBuffer(n, e.__webglBuffer);
                    var r = i.dynamic ? t.DYNAMIC_DRAW : t.STATIC_DRAW;
                    t.bufferData(n, i.array, r), (e.version = i.version);
                }
                function a(e, i, n) {
                    t.bindBuffer(n, e.__webglBuffer),
                        !1 === i.dynamic
                            ? t.bufferData(n, i.array, t.STATIC_DRAW)
                            : -1 === i.updateRange.count
                            ? t.bufferSubData(n, 0, i.array)
                            : 0 === i.updateRange.count
                            ? console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.")
                            : (t.bufferSubData(n, i.updateRange.offset * i.array.BYTES_PER_ELEMENT, i.array.subarray(i.updateRange.offset, i.updateRange.offset + i.updateRange.count)), (i.updateRange.count = 0)),
                        (e.version = i.version);
                }
                function s(t) {
                    return t.isInterleavedBufferAttribute ? e.get(t.data).__webglBuffer : e.get(t).__webglBuffer;
                }
                function l(i) {
                    var n = e.get(i);
                    if (void 0 !== n.wireframe) return n.wireframe;
                    var o = [],
                        a = i.index,
                        s = i.attributes,
                        l = s.position;
                    if (null !== a)
                        for (var c = a.array, u = 0, h = c.length; u < h; u += 3) {
                            var d = c[u + 0],
                                p = c[u + 1],
                                f = c[u + 2];
                            o.push(d, p, p, f, f, d);
                        }
                    else
                        for (var c = s.position.array, u = 0, h = c.length / 3 - 1; u < h; u += 3) {
                            var d = u + 0,
                                p = u + 1,
                                f = u + 2;
                            o.push(d, p, p, f, f, d);
                        }
                    var m = l.count > 65535 ? Uint32Array : Uint16Array,
                        v = new mt(new m(o), 1);
                    return r(v, t.ELEMENT_ARRAY_BUFFER), (n.wireframe = v), v;
                }
                var c = new te(t, e, i);
                return { getAttributeBuffer: s, getWireframeAttribute: l, update: n };
            }
            function ie(t, e, i, n, r, o, a) {
                function s(t, e) {
                    if (t.width > e || t.height > e) {
                        var i = e / Math.max(t.width, t.height),
                            n = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
                        (n.width = Math.floor(t.width * i)), (n.height = Math.floor(t.height * i));
                        return (
                            n.getContext("2d").drawImage(t, 0, 0, t.width, t.height, 0, 0, n.width, n.height),
                            console.warn("THREE.WebGLRenderer: image is too big (" + t.width + "x" + t.height + "). Resized to " + n.width + "x" + n.height, t),
                            n
                        );
                    }
                    return t;
                }
                function l(t) {
                    return Ma.isPowerOfTwo(t.width) && Ma.isPowerOfTwo(t.height);
                }
                function c(t) {
                    if (t instanceof HTMLImageElement || t instanceof HTMLCanvasElement) {
                        var e = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
                        (e.width = Ma.nearestPowerOfTwo(t.width)), (e.height = Ma.nearestPowerOfTwo(t.height));
                        return e.getContext("2d").drawImage(t, 0, 0, e.width, e.height), console.warn("THREE.WebGLRenderer: image is not power of two (" + t.width + "x" + t.height + "). Resized to " + e.width + "x" + e.height, t), e;
                    }
                    return t;
                }
                function u(t) {
                    return t.wrapS !== So || t.wrapT !== So || (t.minFilter !== Co && t.minFilter !== Oo);
                }
                function h(e) {
                    return e === Co || e === Po || e === Do ? t.NEAREST : t.LINEAR;
                }
                function d(t) {
                    var e = t.target;
                    e.removeEventListener("dispose", d), f(e), A.textures--;
                }
                function p(t) {
                    var e = t.target;
                    e.removeEventListener("dispose", p), m(e), A.textures--;
                }
                function f(e) {
                    var i = n.get(e);
                    if (e.image && i.__image__webglTextureCube) t.deleteTexture(i.__image__webglTextureCube);
                    else {
                        if (void 0 === i.__webglInit) return;
                        t.deleteTexture(i.__webglTexture);
                    }
                    n.delete(e);
                }
                function m(e) {
                    var i = n.get(e),
                        r = n.get(e.texture);
                    if (e) {
                        if ((void 0 !== r.__webglTexture && t.deleteTexture(r.__webglTexture), e.depthTexture && e.depthTexture.dispose(), e && e.isWebGLRenderTargetCube))
                            for (var o = 0; o < 6; o++) t.deleteFramebuffer(i.__webglFramebuffer[o]), i.__webglDepthbuffer && t.deleteRenderbuffer(i.__webglDepthbuffer[o]);
                        else t.deleteFramebuffer(i.__webglFramebuffer), i.__webglDepthbuffer && t.deleteRenderbuffer(i.__webglDepthbuffer);
                        n.delete(e.texture), n.delete(e);
                    }
                }
                function v(e, r) {
                    var o = n.get(e);
                    if (e.version > 0 && o.__version !== e.version) {
                        var a = e.image;
                        if (void 0 === a) console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined", e);
                        else {
                            if (!1 !== a.complete) return void b(o, e, r);
                            console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete", e);
                        }
                    }
                    i.activeTexture(t.TEXTURE0 + r), i.bindTexture(t.TEXTURE_2D, o.__webglTexture);
                }
                function g(e, a) {
                    var c = n.get(e);
                    if (6 === e.image.length)
                        if (e.version > 0 && c.__version !== e.version) {
                            c.__image__webglTextureCube || (e.addEventListener("dispose", d), (c.__image__webglTextureCube = t.createTexture()), A.textures++),
                                i.activeTexture(t.TEXTURE0 + a),
                                i.bindTexture(t.TEXTURE_CUBE_MAP, c.__image__webglTextureCube),
                                t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, e.flipY);
                            for (var u = e && e.isCompressedTexture, h = e.image[0] && e.image[0].isDataTexture, p = [], f = 0; f < 6; f++) p[f] = u || h ? (h ? e.image[f].image : e.image[f]) : s(e.image[f], r.maxCubemapSize);
                            var m = p[0],
                                v = l(m),
                                g = o(e.format),
                                y = o(e.type);
                            _(t.TEXTURE_CUBE_MAP, e, v);
                            for (var f = 0; f < 6; f++)
                                if (u)
                                    for (var b, x = p[f].mipmaps, w = 0, T = x.length; w < T; w++)
                                        (b = x[w]),
                                            e.format !== Jo && e.format !== Zo
                                                ? i.getCompressedTextureFormats().indexOf(g) > -1
                                                    ? i.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + f, w, g, b.width, b.height, 0, b.data)
                                                    : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()")
                                                : i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + f, w, g, b.width, b.height, 0, g, y, b.data);
                                else h ? i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + f, 0, g, p[f].width, p[f].height, 0, g, y, p[f].data) : i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + f, 0, g, g, y, p[f]);
                            e.generateMipmaps && v && t.generateMipmap(t.TEXTURE_CUBE_MAP), (c.__version = e.version), e.onUpdate && e.onUpdate(e);
                        } else i.activeTexture(t.TEXTURE0 + a), i.bindTexture(t.TEXTURE_CUBE_MAP, c.__image__webglTextureCube);
                }
                function y(e, r) {
                    i.activeTexture(t.TEXTURE0 + r), i.bindTexture(t.TEXTURE_CUBE_MAP, n.get(e).__webglTexture);
                }
                function _(i, a, s) {
                    var l;
                    if (
                        (s
                            ? (t.texParameteri(i, t.TEXTURE_WRAP_S, o(a.wrapS)),
                              t.texParameteri(i, t.TEXTURE_WRAP_T, o(a.wrapT)),
                              t.texParameteri(i, t.TEXTURE_MAG_FILTER, o(a.magFilter)),
                              t.texParameteri(i, t.TEXTURE_MIN_FILTER, o(a.minFilter)))
                            : (t.texParameteri(i, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE),
                              t.texParameteri(i, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE),
                              (a.wrapS === So && a.wrapT === So) || console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.", a),
                              t.texParameteri(i, t.TEXTURE_MAG_FILTER, h(a.magFilter)),
                              t.texParameteri(i, t.TEXTURE_MIN_FILTER, h(a.minFilter)),
                              a.minFilter !== Co && a.minFilter !== Oo && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.", a)),
                        (l = e.get("EXT_texture_filter_anisotropic")))
                    ) {
                        if (a.type === zo && null === e.get("OES_texture_float_linear")) return;
                        if (a.type === Vo && null === e.get("OES_texture_half_float_linear")) return;
                        (a.anisotropy > 1 || n.get(a).__currentAnisotropy) && (t.texParameterf(i, l.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(a.anisotropy, r.getMaxAnisotropy())), (n.get(a).__currentAnisotropy = a.anisotropy));
                    }
                }
                function b(e, n, a) {
                    void 0 === e.__webglInit && ((e.__webglInit = !0), n.addEventListener("dispose", d), (e.__webglTexture = t.createTexture()), A.textures++),
                        i.activeTexture(t.TEXTURE0 + a),
                        i.bindTexture(t.TEXTURE_2D, e.__webglTexture),
                        t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, n.flipY),
                        t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, n.premultiplyAlpha),
                        t.pixelStorei(t.UNPACK_ALIGNMENT, n.unpackAlignment);
                    var h = s(n.image, r.maxTextureSize);
                    u(n) && !1 === l(h) && (h = c(h));
                    var p = l(h),
                        f = o(n.format),
                        m = o(n.type);
                    _(t.TEXTURE_2D, n, p);
                    var v,
                        g = n.mipmaps;
                    if (n && n.isDepthTexture) {
                        var y = t.DEPTH_COMPONENT;
                        if (n.type === zo) {
                            if (!R) throw new Error("Float Depth Texture only supported in WebGL2.0");
                            y = t.DEPTH_COMPONENT32F;
                        } else R && (y = t.DEPTH_COMPONENT16);
                        n.format === ea && (y = t.DEPTH_STENCIL), i.texImage2D(t.TEXTURE_2D, 0, y, h.width, h.height, 0, f, m, null);
                    } else if (n && n.isDataTexture)
                        if (g.length > 0 && p) {
                            for (var b = 0, x = g.length; b < x; b++) (v = g[b]), i.texImage2D(t.TEXTURE_2D, b, f, v.width, v.height, 0, f, m, v.data);
                            n.generateMipmaps = !1;
                        } else i.texImage2D(t.TEXTURE_2D, 0, f, h.width, h.height, 0, f, m, h.data);
                    else if (n && n.isCompressedTexture)
                        for (var b = 0, x = g.length; b < x; b++)
                            (v = g[b]),
                                n.format !== Jo && n.format !== Zo
                                    ? i.getCompressedTextureFormats().indexOf(f) > -1
                                        ? i.compressedTexImage2D(t.TEXTURE_2D, b, f, v.width, v.height, 0, v.data)
                                        : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()")
                                    : i.texImage2D(t.TEXTURE_2D, b, f, v.width, v.height, 0, f, m, v.data);
                    else if (g.length > 0 && p) {
                        for (var b = 0, x = g.length; b < x; b++) (v = g[b]), i.texImage2D(t.TEXTURE_2D, b, f, f, m, v);
                        n.generateMipmaps = !1;
                    } else i.texImage2D(t.TEXTURE_2D, 0, f, f, m, h);
                    n.generateMipmaps && p && t.generateMipmap(t.TEXTURE_2D), (e.__version = n.version), n.onUpdate && n.onUpdate(n);
                }
                function x(e, r, a, s) {
                    var l = o(r.texture.format),
                        c = o(r.texture.type);
                    i.texImage2D(s, 0, l, r.width, r.height, 0, l, c, null), t.bindFramebuffer(t.FRAMEBUFFER, e), t.framebufferTexture2D(t.FRAMEBUFFER, a, s, n.get(r.texture).__webglTexture, 0), t.bindFramebuffer(t.FRAMEBUFFER, null);
                }
                function w(e, i) {
                    t.bindRenderbuffer(t.RENDERBUFFER, e),
                        i.depthBuffer && !i.stencilBuffer
                            ? (t.renderbufferStorage(t.RENDERBUFFER, t.DEPTH_COMPONENT16, i.width, i.height), t.framebufferRenderbuffer(t.FRAMEBUFFER, t.DEPTH_ATTACHMENT, t.RENDERBUFFER, e))
                            : i.depthBuffer && i.stencilBuffer
                            ? (t.renderbufferStorage(t.RENDERBUFFER, t.DEPTH_STENCIL, i.width, i.height), t.framebufferRenderbuffer(t.FRAMEBUFFER, t.DEPTH_STENCIL_ATTACHMENT, t.RENDERBUFFER, e))
                            : t.renderbufferStorage(t.RENDERBUFFER, t.RGBA4, i.width, i.height),
                        t.bindRenderbuffer(t.RENDERBUFFER, null);
                }
                function T(e, i) {
                    if (i && i.isWebGLRenderTargetCube) throw new Error("Depth Texture with cube render targets is not supported!");
                    if ((t.bindFramebuffer(t.FRAMEBUFFER, e), !i.depthTexture || !i.depthTexture.isDepthTexture)) throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
                    (n.get(i.depthTexture).__webglTexture && i.depthTexture.image.width === i.width && i.depthTexture.image.height === i.height) ||
                        ((i.depthTexture.image.width = i.width), (i.depthTexture.image.height = i.height), (i.depthTexture.needsUpdate = !0)),
                        v(i.depthTexture, 0);
                    var r = n.get(i.depthTexture).__webglTexture;
                    if (i.depthTexture.format === ta) t.framebufferTexture2D(t.FRAMEBUFFER, t.DEPTH_ATTACHMENT, t.TEXTURE_2D, r, 0);
                    else {
                        if (i.depthTexture.format !== ea) throw new Error("Unknown depthTexture format");
                        t.framebufferTexture2D(t.FRAMEBUFFER, t.DEPTH_STENCIL_ATTACHMENT, t.TEXTURE_2D, r, 0);
                    }
                }
                function E(e) {
                    var i = n.get(e),
                        r = e && e.isWebGLRenderTargetCube;
                    if (e.depthTexture) {
                        if (r) throw new Error("target.depthTexture not supported in Cube render targets");
                        T(i.__webglFramebuffer, e);
                    } else if (r) {
                        i.__webglDepthbuffer = [];
                        for (var o = 0; o < 6; o++) t.bindFramebuffer(t.FRAMEBUFFER, i.__webglFramebuffer[o]), (i.__webglDepthbuffer[o] = t.createRenderbuffer()), w(i.__webglDepthbuffer[o], e);
                    } else t.bindFramebuffer(t.FRAMEBUFFER, i.__webglFramebuffer), (i.__webglDepthbuffer = t.createRenderbuffer()), w(i.__webglDepthbuffer, e);
                    t.bindFramebuffer(t.FRAMEBUFFER, null);
                }
                function M(e) {
                    var r = n.get(e),
                        o = n.get(e.texture);
                    e.addEventListener("dispose", p), (o.__webglTexture = t.createTexture()), A.textures++;
                    var a = e && e.isWebGLRenderTargetCube,
                        s = l(e);
                    if (a) {
                        r.__webglFramebuffer = [];
                        for (var c = 0; c < 6; c++) r.__webglFramebuffer[c] = t.createFramebuffer();
                    } else r.__webglFramebuffer = t.createFramebuffer();
                    if (a) {
                        i.bindTexture(t.TEXTURE_CUBE_MAP, o.__webglTexture), _(t.TEXTURE_CUBE_MAP, e.texture, s);
                        for (var c = 0; c < 6; c++) x(r.__webglFramebuffer[c], e, t.COLOR_ATTACHMENT0, t.TEXTURE_CUBE_MAP_POSITIVE_X + c);
                        e.texture.generateMipmaps && s && t.generateMipmap(t.TEXTURE_CUBE_MAP), i.bindTexture(t.TEXTURE_CUBE_MAP, null);
                    } else i.bindTexture(t.TEXTURE_2D, o.__webglTexture), _(t.TEXTURE_2D, e.texture, s), x(r.__webglFramebuffer, e, t.COLOR_ATTACHMENT0, t.TEXTURE_2D), e.texture.generateMipmaps && s && t.generateMipmap(t.TEXTURE_2D), i.bindTexture(t.TEXTURE_2D, null);
                    e.depthBuffer && E(e);
                }
                function S(e) {
                    var r = e.texture;
                    if (r.generateMipmaps && l(e) && r.minFilter !== Co && r.minFilter !== Oo) {
                        var o = e && e.isWebGLRenderTargetCube ? t.TEXTURE_CUBE_MAP : t.TEXTURE_2D,
                            a = n.get(r).__webglTexture;
                        i.bindTexture(o, a), t.generateMipmap(o), i.bindTexture(o, null);
                    }
                }
                var A = a.memory,
                    R = "undefined" != typeof WebGL2RenderingContext && t instanceof WebGL2RenderingContext;
                (this.setTexture2D = v), (this.setTextureCube = g), (this.setTextureCubeDynamic = y), (this.setupRenderTarget = M), (this.updateRenderTargetMipmap = S);
            }
            function ne() {
                var t = {};
                return {
                    get: function (e) {
                        var i = e.uuid,
                            n = t[i];
                        return void 0 === n && ((n = {}), (t[i] = n)), n;
                    },
                    delete: function (e) {
                        delete t[e.uuid];
                    },
                    clear: function () {
                        t = {};
                    },
                };
            }
            function re(t, e, i) {
                function n() {
                    var e = !1,
                        i = new o(),
                        n = null,
                        r = new o();
                    return {
                        setMask: function (i) {
                            n === i || e || (t.colorMask(i, i, i, i), (n = i));
                        },
                        setLocked: function (t) {
                            e = t;
                        },
                        setClear: function (e, n, o, a) {
                            i.set(e, n, o, a), !1 === r.equals(i) && (t.clearColor(e, n, o, a), r.copy(i));
                        },
                        reset: function () {
                            (e = !1), (n = null), r.set(0, 0, 0, 1);
                        },
                    };
                }
                function r() {
                    var e = !1,
                        i = null,
                        n = null,
                        r = null;
                    return {
                        setTest: function (e) {
                            e ? p(t.DEPTH_TEST) : f(t.DEPTH_TEST);
                        },
                        setMask: function (n) {
                            i === n || e || (t.depthMask(n), (i = n));
                        },
                        setFunc: function (e) {
                            if (n !== e) {
                                if (e)
                                    switch (e) {
                                        case to:
                                            t.depthFunc(t.NEVER);
                                            break;
                                        case eo:
                                            t.depthFunc(t.ALWAYS);
                                            break;
                                        case io:
                                            t.depthFunc(t.LESS);
                                            break;
                                        case no:
                                            t.depthFunc(t.LEQUAL);
                                            break;
                                        case ro:
                                            t.depthFunc(t.EQUAL);
                                            break;
                                        case oo:
                                            t.depthFunc(t.GEQUAL);
                                            break;
                                        case ao:
                                            t.depthFunc(t.GREATER);
                                            break;
                                        case so:
                                            t.depthFunc(t.NOTEQUAL);
                                            break;
                                        default:
                                            t.depthFunc(t.LEQUAL);
                                    }
                                else t.depthFunc(t.LEQUAL);
                                n = e;
                            }
                        },
                        setLocked: function (t) {
                            e = t;
                        },
                        setClear: function (e) {
                            r !== e && (t.clearDepth(e), (r = e));
                        },
                        reset: function () {
                            (e = !1), (i = null), (n = null), (r = null);
                        },
                    };
                }
                function a() {
                    var e = !1,
                        i = null,
                        n = null,
                        r = null,
                        o = null,
                        a = null,
                        s = null,
                        l = null,
                        c = null;
                    return {
                        setTest: function (e) {
                            e ? p(t.STENCIL_TEST) : f(t.STENCIL_TEST);
                        },
                        setMask: function (n) {
                            i === n || e || (t.stencilMask(n), (i = n));
                        },
                        setFunc: function (e, i, a) {
                            (n === e && r === i && o === a) || (t.stencilFunc(e, i, a), (n = e), (r = i), (o = a));
                        },
                        setOp: function (e, i, n) {
                            (a === e && s === i && l === n) || (t.stencilOp(e, i, n), (a = e), (s = i), (l = n));
                        },
                        setLocked: function (t) {
                            e = t;
                        },
                        setClear: function (e) {
                            c !== e && (t.clearStencil(e), (c = e));
                        },
                        reset: function () {
                            (e = !1), (i = null), (n = null), (r = null), (o = null), (a = null), (s = null), (l = null), (c = null);
                        },
                    };
                }
                function s(e, i, n) {
                    var r = new Uint8Array(4),
                        o = t.createTexture();
                    t.bindTexture(e, o), t.texParameteri(e, t.TEXTURE_MIN_FILTER, t.NEAREST), t.texParameteri(e, t.TEXTURE_MAG_FILTER, t.NEAREST);
                    for (var a = 0; a < n; a++) t.texImage2D(i + a, 0, t.RGBA, 1, 1, 0, t.RGBA, t.UNSIGNED_BYTE, r);
                    return o;
                }
                function l() {
                    k(0, 0, 0, 1), I(1), N(0), p(t.DEPTH_TEST), b(no), M(!1), S(yr), p(t.CULL_FACE), p(t.BLEND), v(Or);
                }
                function c() {
                    for (var t = 0, e = W.length; t < e; t++) W[t] = 0;
                }
                function u(i) {
                    if (((W[i] = 1), 0 === X[i] && (t.enableVertexAttribArray(i), (X[i] = 1)), 0 !== q[i])) {
                        e.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(i, 0), (q[i] = 0);
                    }
                }
                function h(e, i, n) {
                    (W[e] = 1), 0 === X[e] && (t.enableVertexAttribArray(e), (X[e] = 1)), q[e] !== i && (n.vertexAttribDivisorANGLE(e, i), (q[e] = i));
                }
                function d() {
                    for (var e = 0, i = X.length; e !== i; ++e) X[e] !== W[e] && (t.disableVertexAttribArray(e), (X[e] = 0));
                }
                function p(e) {
                    !0 !== Y[e] && (t.enable(e), (Y[e] = !0));
                }
                function f(e) {
                    !1 !== Y[e] && (t.disable(e), (Y[e] = !1));
                }
                function m() {
                    if (null === Z && ((Z = []), e.get("WEBGL_compressed_texture_pvrtc") || e.get("WEBGL_compressed_texture_s3tc") || e.get("WEBGL_compressed_texture_etc1")))
                        for (var i = t.getParameter(t.COMPRESSED_TEXTURE_FORMATS), n = 0; n < i.length; n++) Z.push(i[n]);
                    return Z;
                }
                function v(e, n, r, o, a, s, l, c) {
                    e !== Dr ? p(t.BLEND) : f(t.BLEND),
                        (e === J && c === nt) ||
                            (e === Lr
                                ? c
                                    ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD), t.blendFuncSeparate(t.ONE, t.ONE, t.ONE, t.ONE))
                                    : (t.blendEquation(t.FUNC_ADD), t.blendFunc(t.SRC_ALPHA, t.ONE))
                                : e === jr
                                ? c
                                    ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD), t.blendFuncSeparate(t.ZERO, t.ZERO, t.ONE_MINUS_SRC_COLOR, t.ONE_MINUS_SRC_ALPHA))
                                    : (t.blendEquation(t.FUNC_ADD), t.blendFunc(t.ZERO, t.ONE_MINUS_SRC_COLOR))
                                : e === kr
                                ? c
                                    ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD), t.blendFuncSeparate(t.ZERO, t.SRC_COLOR, t.ZERO, t.SRC_ALPHA))
                                    : (t.blendEquation(t.FUNC_ADD), t.blendFunc(t.ZERO, t.SRC_COLOR))
                                : c
                                ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD), t.blendFuncSeparate(t.ONE, t.ONE_MINUS_SRC_ALPHA, t.ONE, t.ONE_MINUS_SRC_ALPHA))
                                : (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD), t.blendFuncSeparate(t.SRC_ALPHA, t.ONE_MINUS_SRC_ALPHA, t.ONE, t.ONE_MINUS_SRC_ALPHA)),
                            (J = e),
                            (nt = c)),
                        e === Ir
                            ? ((a = a || n),
                              (s = s || r),
                              (l = l || o),
                              (n === Q && a === tt) || (t.blendEquationSeparate(i(n), i(a)), (Q = n), (tt = a)),
                              (r === $ && o === K && s === et && l === it) || (t.blendFuncSeparate(i(r), i(o), i(s), i(l)), ($ = r), (K = o), (et = s), (it = l)))
                            : ((Q = null), ($ = null), (K = null), (tt = null), (et = null), (it = null));
                }
                function g(t) {
                    G.setMask(t);
                }
                function y(t) {
                    z.setTest(t);
                }
                function _(t) {
                    z.setMask(t);
                }
                function b(t) {
                    z.setFunc(t);
                }
                function x(t) {
                    V.setTest(t);
                }
                function w(t) {
                    V.setMask(t);
                }
                function T(t, e, i) {
                    V.setFunc(t, e, i);
                }
                function E(t, e, i) {
                    V.setOp(t, e, i);
                }
                function M(e) {
                    rt !== e && (e ? t.frontFace(t.CW) : t.frontFace(t.CCW), (rt = e));
                }
                function S(e) {
                    e !== gr ? (p(t.CULL_FACE), e !== ot && (e === yr ? t.cullFace(t.BACK) : e === _r ? t.cullFace(t.FRONT) : t.cullFace(t.FRONT_AND_BACK))) : f(t.CULL_FACE), (ot = e);
                }
                function A(e) {
                    e !== at && (t.lineWidth(e), (at = e));
                }
                function R(e, i, n) {
                    e ? (p(t.POLYGON_OFFSET_FILL), (st === i && lt === n) || (t.polygonOffset(i, n), (st = i), (lt = n))) : f(t.POLYGON_OFFSET_FILL);
                }
                function C() {
                    return ct;
                }
                function P(e) {
                    (ct = e), e ? p(t.SCISSOR_TEST) : f(t.SCISSOR_TEST);
                }
                function D(e) {
                    void 0 === e && (e = t.TEXTURE0 + ut - 1), ht !== e && (t.activeTexture(e), (ht = e));
                }
                function O(e, i) {
                    null === ht && D();
                    var n = dt[ht];
                    void 0 === n && ((n = { type: void 0, texture: void 0 }), (dt[ht] = n)), (n.type === e && n.texture === i) || (t.bindTexture(e, i || mt[e]), (n.type = e), (n.texture = i));
                }
                function L() {
                    try {
                        t.compressedTexImage2D.apply(t, arguments);
                    } catch (t) {
                        console.error(t);
                    }
                }
                function j() {
                    try {
                        t.texImage2D.apply(t, arguments);
                    } catch (t) {
                        console.error(t);
                    }
                }
                function k(t, e, i, n) {
                    G.setClear(t, e, i, n);
                }
                function I(t) {
                    z.setClear(t);
                }
                function N(t) {
                    V.setClear(t);
                }
                function F(e) {
                    !1 === pt.equals(e) && (t.scissor(e.x, e.y, e.z, e.w), pt.copy(e));
                }
                function U(e) {
                    !1 === ft.equals(e) && (t.viewport(e.x, e.y, e.z, e.w), ft.copy(e));
                }
                function B() {
                    for (var e = 0; e < X.length; e++) 1 === X[e] && (t.disableVertexAttribArray(e), (X[e] = 0));
                    (Y = {}), (Z = null), (ht = null), (dt = {}), (J = null), (rt = null), (ot = null), G.reset(), z.reset(), V.reset();
                }
                var G = new n(),
                    z = new r(),
                    V = new a(),
                    H = t.getParameter(t.MAX_VERTEX_ATTRIBS),
                    W = new Uint8Array(H),
                    X = new Uint8Array(H),
                    q = new Uint8Array(H),
                    Y = {},
                    Z = null,
                    J = null,
                    Q = null,
                    $ = null,
                    K = null,
                    tt = null,
                    et = null,
                    it = null,
                    nt = !1,
                    rt = null,
                    ot = null,
                    at = null,
                    st = null,
                    lt = null,
                    ct = null,
                    ut = t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),
                    ht = null,
                    dt = {},
                    pt = new o(),
                    ft = new o(),
                    mt = {};
                return (
                    (mt[t.TEXTURE_2D] = s(t.TEXTURE_2D, t.TEXTURE_2D, 1)),
                    (mt[t.TEXTURE_CUBE_MAP] = s(t.TEXTURE_CUBE_MAP, t.TEXTURE_CUBE_MAP_POSITIVE_X, 6)),
                    {
                        buffers: { color: G, depth: z, stencil: V },
                        init: l,
                        initAttributes: c,
                        enableAttribute: u,
                        enableAttributeAndDivisor: h,
                        disableUnusedAttributes: d,
                        enable: p,
                        disable: f,
                        getCompressedTextureFormats: m,
                        setBlending: v,
                        setColorWrite: g,
                        setDepthTest: y,
                        setDepthWrite: _,
                        setDepthFunc: b,
                        setStencilTest: x,
                        setStencilWrite: w,
                        setStencilFunc: T,
                        setStencilOp: E,
                        setFlipSided: M,
                        setCullFace: S,
                        setLineWidth: A,
                        setPolygonOffset: R,
                        getScissorTest: C,
                        setScissorTest: P,
                        activeTexture: D,
                        bindTexture: O,
                        compressedTexImage2D: L,
                        texImage2D: j,
                        clearColor: k,
                        clearDepth: I,
                        clearStencil: N,
                        scissor: F,
                        viewport: U,
                        reset: B,
                    }
                );
            }
            function oe(t, e, i) {
                function n() {
                    if (void 0 !== o) return o;
                    var i = e.get("EXT_texture_filter_anisotropic");
                    return (o = null !== i ? t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0);
                }
                function r(e) {
                    if ("highp" === e) {
                        if (t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.HIGH_FLOAT).precision > 0 && t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.HIGH_FLOAT).precision > 0) return "highp";
                        e = "mediump";
                    }
                    return "mediump" === e && t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.MEDIUM_FLOAT).precision > 0 && t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.MEDIUM_FLOAT).precision > 0 ? "mediump" : "lowp";
                }
                var o,
                    a = void 0 !== i.precision ? i.precision : "highp",
                    s = r(a);
                s !== a && (console.warn("THREE.WebGLRenderer:", a, "not supported, using", s, "instead."), (a = s));
                var l = !0 === i.logarithmicDepthBuffer && !!e.get("EXT_frag_depth"),
                    c = t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),
                    u = t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),
                    h = t.getParameter(t.MAX_TEXTURE_SIZE),
                    d = t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),
                    p = t.getParameter(t.MAX_VERTEX_ATTRIBS),
                    f = t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),
                    m = t.getParameter(t.MAX_VARYING_VECTORS),
                    v = t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),
                    g = u > 0,
                    y = !!e.get("OES_texture_float");
                return {
                    getMaxAnisotropy: n,
                    getMaxPrecision: r,
                    precision: a,
                    logarithmicDepthBuffer: l,
                    maxTextures: c,
                    maxVertexTextures: u,
                    maxTextureSize: h,
                    maxCubemapSize: d,
                    maxAttributes: p,
                    maxVertexUniforms: f,
                    maxVaryings: m,
                    maxFragmentUniforms: v,
                    vertexTextures: g,
                    floatFragmentTextures: y,
                    floatVertexTextures: g && y,
                };
            }
            function ae(t) {
                var e = {};
                return {
                    get: function (i) {
                        if (void 0 !== e[i]) return e[i];
                        var n;
                        switch (i) {
                            case "WEBGL_depth_texture":
                                n = t.getExtension("WEBGL_depth_texture") || t.getExtension("MOZ_WEBGL_depth_texture") || t.getExtension("WEBKIT_WEBGL_depth_texture");
                                break;
                            case "EXT_texture_filter_anisotropic":
                                n = t.getExtension("EXT_texture_filter_anisotropic") || t.getExtension("MOZ_EXT_texture_filter_anisotropic") || t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                                break;
                            case "WEBGL_compressed_texture_s3tc":
                                n = t.getExtension("WEBGL_compressed_texture_s3tc") || t.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                                break;
                            case "WEBGL_compressed_texture_pvrtc":
                                n = t.getExtension("WEBGL_compressed_texture_pvrtc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                                break;
                            case "WEBGL_compressed_texture_etc1":
                                n = t.getExtension("WEBGL_compressed_texture_etc1");
                                break;
                            default:
                                n = t.getExtension(i);
                        }
                        return null === n && console.warn("THREE.WebGLRenderer: " + i + " extension not supported."), (e[i] = n), n;
                    },
                };
            }
            function se() {
                function t() {
                    c.value !== n && ((c.value = n), (c.needsUpdate = r > 0)), (i.numPlanes = r), (i.numIntersection = 0);
                }
                function e(t, e, n, r) {
                    var o = null !== t ? t.length : 0,
                        a = null;
                    if (0 !== o) {
                        if (((a = c.value), !0 !== r || null === a)) {
                            var u = n + 4 * o,
                                h = e.matrixWorldInverse;
                            l.getNormalMatrix(h), (null === a || a.length < u) && (a = new Float32Array(u));
                            for (var d = 0, p = n; d !== o; ++d, p += 4) s.copy(t[d]).applyMatrix4(h, l), s.normal.toArray(a, p), (a[p + 3] = s.constant);
                        }
                        (c.value = a), (c.needsUpdate = !0);
                    }
                    return (i.numPlanes = o), a;
                }
                var i = this,
                    n = null,
                    r = 0,
                    o = !1,
                    a = !1,
                    s = new nt(),
                    l = new it(),
                    c = { value: null, needsUpdate: !1 };
                (this.uniform = c),
                    (this.numPlanes = 0),
                    (this.numIntersection = 0),
                    (this.init = function (t, i, a) {
                        var s = 0 !== t.length || i || 0 !== r || o;
                        return (o = i), (n = e(t, a, 0)), (r = t.length), s;
                    }),
                    (this.beginShadows = function () {
                        (a = !0), e(null);
                    }),
                    (this.endShadows = function () {
                        (a = !1), t();
                    }),
                    (this.setState = function (i, s, l, u, h, d) {
                        if (!o || null === i || 0 === i.length || (a && !l)) a ? e(null) : t();
                        else {
                            var p = a ? 0 : r,
                                f = 4 * p,
                                m = h.clippingState || null;
                            (c.value = m), (m = e(i, u, f, d));
                            for (var v = 0; v !== f; ++v) m[v] = n[v];
                            (h.clippingState = m), (this.numIntersection = s ? this.numPlanes : 0), (this.numPlanes += p);
                        }
                    });
            }
            function le(t) {
                function e() {
                    return null === ht ? Mt : 1;
                }
                function i(t, e, i, n) {
                    !0 === q && ((t *= n), (e *= n), (i *= n)), Qt.clearColor(t, e, i, n);
                }
                function n() {
                    Qt.init(), Qt.scissor(gt.copy(St).multiplyScalar(Mt)), Qt.viewport(_t.copy(Rt).multiplyScalar(Mt)), i(xt.r, xt.g, xt.b, wt);
                }
                function r() {
                    (ut = null), (vt = null), (mt = ""), (pt = -1), Qt.reset();
                }
                function a(t) {
                    t.preventDefault(), r(), n(), $t.clear();
                }
                function s(t) {
                    var e = t.target;
                    e.removeEventListener("dispose", s), l(e);
                }
                function l(t) {
                    h(t), $t.delete(t);
                }
                function h(t) {
                    var e = $t.get(t).program;
                    (t.program = void 0), void 0 !== e && ce.releaseProgram(e);
                }
                function d(t, e, i, n) {
                    var r;
                    if (i && i.isInstancedBufferGeometry && null === (r = Zt.get("ANGLE_instanced_arrays")))
                        return void console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
                    void 0 === n && (n = 0), Qt.initAttributes();
                    var o = i.attributes,
                        a = e.getAttributes(),
                        s = t.defaultAttributeValues;
                    for (var l in a) {
                        var c = a[l];
                        if (c >= 0) {
                            var u = o[l];
                            if (void 0 !== u) {
                                var h = qt.FLOAT,
                                    d = u.array,
                                    p = u.normalized;
                                d instanceof Float32Array
                                    ? (h = qt.FLOAT)
                                    : d instanceof Float64Array
                                    ? console.warn("Unsupported data buffer format: Float64Array")
                                    : d instanceof Uint16Array
                                    ? (h = qt.UNSIGNED_SHORT)
                                    : d instanceof Int16Array
                                    ? (h = qt.SHORT)
                                    : d instanceof Uint32Array
                                    ? (h = qt.UNSIGNED_INT)
                                    : d instanceof Int32Array
                                    ? (h = qt.INT)
                                    : d instanceof Int8Array
                                    ? (h = qt.BYTE)
                                    : d instanceof Uint8Array && (h = qt.UNSIGNED_BYTE);
                                var f = u.itemSize,
                                    m = le.getAttributeBuffer(u);
                                if (u.isInterleavedBufferAttribute) {
                                    var v = u.data,
                                        g = v.stride,
                                        y = u.offset;
                                    v && v.isInstancedInterleavedBuffer
                                        ? (Qt.enableAttributeAndDivisor(c, v.meshPerAttribute, r), void 0 === i.maxInstancedCount && (i.maxInstancedCount = v.meshPerAttribute * v.count))
                                        : Qt.enableAttribute(c),
                                        qt.bindBuffer(qt.ARRAY_BUFFER, m),
                                        qt.vertexAttribPointer(c, f, h, p, g * v.array.BYTES_PER_ELEMENT, (n * g + y) * v.array.BYTES_PER_ELEMENT);
                                } else
                                    u.isInstancedBufferAttribute ? (Qt.enableAttributeAndDivisor(c, u.meshPerAttribute, r), void 0 === i.maxInstancedCount && (i.maxInstancedCount = u.meshPerAttribute * u.count)) : Qt.enableAttribute(c),
                                        qt.bindBuffer(qt.ARRAY_BUFFER, m),
                                        qt.vertexAttribPointer(c, f, h, p, 0, n * f * u.array.BYTES_PER_ELEMENT);
                            } else if (void 0 !== s) {
                                var _ = s[l];
                                if (void 0 !== _)
                                    switch (_.length) {
                                        case 2:
                                            qt.vertexAttrib2fv(c, _);
                                            break;
                                        case 3:
                                            qt.vertexAttrib3fv(c, _);
                                            break;
                                        case 4:
                                            qt.vertexAttrib4fv(c, _);
                                            break;
                                        default:
                                            qt.vertexAttrib1fv(c, _);
                                    }
                            }
                        }
                    }
                    Qt.disableUnusedAttributes();
                }
                function p(t, e) {
                    return Math.abs(e[0]) - Math.abs(t[0]);
                }
                function f(t, e) {
                    return t.object.renderOrder !== e.object.renderOrder
                        ? t.object.renderOrder - e.object.renderOrder
                        : t.material.program && e.material.program && t.material.program !== e.material.program
                        ? t.material.program.id - e.material.program.id
                        : t.material.id !== e.material.id
                        ? t.material.id - e.material.id
                        : t.z !== e.z
                        ? t.z - e.z
                        : t.id - e.id;
                }
                function m(t, e) {
                    return t.object.renderOrder !== e.object.renderOrder ? t.object.renderOrder - e.object.renderOrder : t.z !== e.z ? e.z - t.z : t.id - e.id;
                }
                function v(t, e, i, n, r) {
                    var o, a;
                    i.transparent ? ((o = it), (a = ++nt)) : ((o = K), (a = ++tt));
                    var s = o[a];
                    void 0 !== s ? ((s.id = t.id), (s.object = t), (s.geometry = e), (s.material = i), (s.z = Ht.z), (s.group = r)) : ((s = { id: t.id, object: t, geometry: e, material: i, z: Ht.z, group: r }), o.push(s));
                }
                function g(t) {
                    var e = t.geometry;
                    return null === e.boundingSphere && e.computeBoundingSphere(), zt.copy(e.boundingSphere).applyMatrix4(t.matrixWorld), _(zt);
                }
                function y(t) {
                    return zt.center.set(0, 0, 0), (zt.radius = 0.7071067811865476), zt.applyMatrix4(t.matrixWorld), _(zt);
                }
                function _(t) {
                    if (!Lt.intersectsSphere(t)) return !1;
                    var e = Ut.numPlanes;
                    if (0 === e) return !0;
                    var i = ct.clippingPlanes,
                        n = t.center,
                        r = -t.radius,
                        o = 0;
                    do {
                        if (i[o].distanceToPoint(n) < r) return !1;
                    } while (++o !== e);
                    return !0;
                }
                function b(t, e) {
                    if (!1 !== t.visible) {
                        if (0 != (t.layers.mask & e.layers.mask))
                            if (t.isLight) Q.push(t);
                            else if (t.isSprite) (!1 !== t.frustumCulled && !0 !== y(t)) || st.push(t);
                            else if (t.isLensFlare) lt.push(t);
                            else if (t.isImmediateRenderObject) !0 === ct.sortObjects && (Ht.setFromMatrixPosition(t.matrixWorld), Ht.applyProjection(Vt)), v(t, null, t.material, Ht.z, null);
                            else if ((t.isMesh || t.isLine || t.isPoints) && (t.isSkinnedMesh && t.skeleton.update(), !1 === t.frustumCulled || !0 === g(t))) {
                                var i = t.material;
                                if (!0 === i.visible) {
                                    !0 === ct.sortObjects && (Ht.setFromMatrixPosition(t.matrixWorld), Ht.applyProjection(Vt));
                                    var n = le.update(t);
                                    if (i.isMultiMaterial)
                                        for (var r = n.groups, o = i.materials, a = 0, s = r.length; a < s; a++) {
                                            var l = r[a],
                                                c = o[l.materialIndex];
                                            !0 === c.visible && v(t, n, c, Ht.z, l);
                                        }
                                    else v(t, n, i, Ht.z, null);
                                }
                            }
                        for (var u = t.children, a = 0, s = u.length; a < s; a++) b(u[a], e);
                    }
                }
                function x(t, e, i, n) {
                    for (var r = 0, o = t.length; r < o; r++) {
                        var a = t[r],
                            s = a.object,
                            l = a.geometry,
                            c = void 0 === n ? a.material : n,
                            u = a.group;
                        if ((s.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse, s.matrixWorld), s.normalMatrix.getNormalMatrix(s.modelViewMatrix), s.onBeforeRender(ct, e, i, l, c, u), s.isImmediateRenderObject)) {
                            T(c);
                            var h = E(i, e.fog, c, s);
                            (mt = ""),
                                s.render(function (t) {
                                    ct.renderBufferImmediate(t, h, c);
                                });
                        } else ct.renderBufferDirect(i, e.fog, l, c, s, u);
                        s.onAfterRender(ct, e, i, l, c, u);
                    }
                }
                function w(t, e, i) {
                    var n = $t.get(t),
                        r = ce.getParameters(t, Wt, e, Ut.numPlanes, Ut.numIntersection, i),
                        o = ce.getProgramCode(t, r),
                        a = n.program,
                        l = !0;
                    if (void 0 === a) t.addEventListener("dispose", s);
                    else if (a.code !== o) h(t);
                    else {
                        if (void 0 !== r.shaderID) return;
                        l = !1;
                    }
                    if (l) {
                        if (r.shaderID) {
                            var c = Ia[r.shaderID];
                            n.__webglShader = { name: t.type, uniforms: Oa.clone(c.uniforms), vertexShader: c.vertexShader, fragmentShader: c.fragmentShader };
                        } else n.__webglShader = { name: t.type, uniforms: t.uniforms, vertexShader: t.vertexShader, fragmentShader: t.fragmentShader };
                        (t.__webglShader = n.__webglShader), (a = ce.acquireProgram(t, r, o)), (n.program = a), (t.program = a);
                    }
                    var u = a.getAttributes();
                    if (t.morphTargets) {
                        t.numSupportedMorphTargets = 0;
                        for (var d = 0; d < ct.maxMorphTargets; d++) u["morphTarget" + d] >= 0 && t.numSupportedMorphTargets++;
                    }
                    if (t.morphNormals) {
                        t.numSupportedMorphNormals = 0;
                        for (var d = 0; d < ct.maxMorphNormals; d++) u["morphNormal" + d] >= 0 && t.numSupportedMorphNormals++;
                    }
                    var p = n.__webglShader.uniforms;
                    ((t.isShaderMaterial || t.isRawShaderMaterial) && !0 !== t.clipping) || ((n.numClippingPlanes = Ut.numPlanes), (n.numIntersection = Ut.numIntersection), (p.clippingPlanes = Ut.uniform)),
                        (n.fog = e),
                        (n.lightsHash = Wt.hash),
                        t.lights &&
                            ((p.ambientLightColor.value = Wt.ambient),
                            (p.directionalLights.value = Wt.directional),
                            (p.spotLights.value = Wt.spot),
                            (p.pointLights.value = Wt.point),
                            (p.hemisphereLights.value = Wt.hemi),
                            (p.directionalShadowMap.value = Wt.directionalShadowMap),
                            (p.directionalShadowMatrix.value = Wt.directionalShadowMatrix),
                            (p.spotShadowMap.value = Wt.spotShadowMap),
                            (p.spotShadowMatrix.value = Wt.spotShadowMatrix),
                            (p.pointShadowMap.value = Wt.pointShadowMap),
                            (p.pointShadowMatrix.value = Wt.pointShadowMatrix));
                    var f = n.program.getUniforms(),
                        m = W.seqWithValue(f.seq, p);
                    n.uniformsList = m;
                }
                function T(t) {
                    t.side === Mr ? Qt.disable(qt.CULL_FACE) : Qt.enable(qt.CULL_FACE),
                        Qt.setFlipSided(t.side === Er),
                        !0 === t.transparent ? Qt.setBlending(t.blending, t.blendEquation, t.blendSrc, t.blendDst, t.blendEquationAlpha, t.blendSrcAlpha, t.blendDstAlpha, t.premultipliedAlpha) : Qt.setBlending(Dr),
                        Qt.setDepthFunc(t.depthFunc),
                        Qt.setDepthTest(t.depthTest),
                        Qt.setDepthWrite(t.depthWrite),
                        Qt.setColorWrite(t.colorWrite),
                        Qt.setPolygonOffset(t.polygonOffset, t.polygonOffsetFactor, t.polygonOffsetUnits);
                }
                function E(t, e, i, n) {
                    bt = 0;
                    var r = $t.get(i);
                    if (Bt && (Gt || t !== vt)) {
                        var o = t === vt && i.id === pt;
                        Ut.setState(i.clippingPlanes, i.clipIntersection, i.clipShadows, t, r, o);
                    }
                    !1 === i.needsUpdate &&
                        (void 0 === r.program
                            ? (i.needsUpdate = !0)
                            : i.fog && r.fog !== e
                            ? (i.needsUpdate = !0)
                            : i.lights && r.lightsHash !== Wt.hash
                            ? (i.needsUpdate = !0)
                            : void 0 === r.numClippingPlanes || (r.numClippingPlanes === Ut.numPlanes && r.numIntersection === Ut.numIntersection) || (i.needsUpdate = !0)),
                        i.needsUpdate && (w(i, e, n), (i.needsUpdate = !1));
                    var a = !1,
                        s = !1,
                        l = !1,
                        c = r.program,
                        u = c.getUniforms(),
                        h = r.__webglShader.uniforms;
                    if ((c.id !== ut && (qt.useProgram(c.program), (ut = c.id), (a = !0), (s = !0), (l = !0)), i.id !== pt && ((pt = i.id), (s = !0)), a || t !== vt)) {
                        if (
                            (u.set(qt, t, "projectionMatrix"),
                            Jt.logarithmicDepthBuffer && u.setValue(qt, "logDepthBufFC", 2 / (Math.log(t.far + 1) / Math.LN2)),
                            t !== vt && ((vt = t), (s = !0), (l = !0)),
                            i.isShaderMaterial || i.isMeshPhongMaterial || i.isMeshStandardMaterial || i.envMap)
                        ) {
                            var d = u.map.cameraPosition;
                            void 0 !== d && d.setValue(qt, Ht.setFromMatrixPosition(t.matrixWorld));
                        }
                        (i.isMeshPhongMaterial || i.isMeshLambertMaterial || i.isMeshBasicMaterial || i.isMeshStandardMaterial || i.isShaderMaterial || i.skinning) && u.setValue(qt, "viewMatrix", t.matrixWorldInverse),
                            u.set(qt, ct, "toneMappingExposure"),
                            u.set(qt, ct, "toneMappingWhitePoint");
                    }
                    if (i.skinning) {
                        u.setOptional(qt, n, "bindMatrix"), u.setOptional(qt, n, "bindMatrixInverse");
                        var p = n.skeleton;
                        p && (Jt.floatVertexTextures && p.useVertexTexture ? (u.set(qt, p, "boneTexture"), u.set(qt, p, "boneTextureWidth"), u.set(qt, p, "boneTextureHeight")) : u.setOptional(qt, p, "boneMatrices"));
                    }
                    return (
                        s &&
                            (i.lights && j(h, l),
                            e && i.fog && C(h, e),
                            (i.isMeshBasicMaterial || i.isMeshLambertMaterial || i.isMeshPhongMaterial || i.isMeshStandardMaterial || i.isMeshDepthMaterial) && M(h, i),
                            i.isLineBasicMaterial
                                ? S(h, i)
                                : i.isLineDashedMaterial
                                ? (S(h, i), A(h, i))
                                : i.isPointsMaterial
                                ? R(h, i)
                                : i.isMeshLambertMaterial
                                ? P(h, i)
                                : i.isMeshPhongMaterial
                                ? D(h, i)
                                : i.isMeshPhysicalMaterial
                                ? L(h, i)
                                : i.isMeshStandardMaterial
                                ? O(h, i)
                                : i.isMeshDepthMaterial
                                ? i.displacementMap && ((h.displacementMap.value = i.displacementMap), (h.displacementScale.value = i.displacementScale), (h.displacementBias.value = i.displacementBias))
                                : i.isMeshNormalMaterial && (h.opacity.value = i.opacity),
                            W.upload(qt, r.uniformsList, h, ct)),
                        u.set(qt, n, "modelViewMatrix"),
                        u.set(qt, n, "normalMatrix"),
                        u.setValue(qt, "modelMatrix", n.matrixWorld),
                        c
                    );
                }
                function M(t, e) {
                    (t.opacity.value = e.opacity),
                        (t.diffuse.value = e.color),
                        e.emissive && t.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity),
                        (t.map.value = e.map),
                        (t.specularMap.value = e.specularMap),
                        (t.alphaMap.value = e.alphaMap),
                        e.aoMap && ((t.aoMap.value = e.aoMap), (t.aoMapIntensity.value = e.aoMapIntensity));
                    var i;
                    if (
                        (e.map
                            ? (i = e.map)
                            : e.specularMap
                            ? (i = e.specularMap)
                            : e.displacementMap
                            ? (i = e.displacementMap)
                            : e.normalMap
                            ? (i = e.normalMap)
                            : e.bumpMap
                            ? (i = e.bumpMap)
                            : e.roughnessMap
                            ? (i = e.roughnessMap)
                            : e.metalnessMap
                            ? (i = e.metalnessMap)
                            : e.alphaMap
                            ? (i = e.alphaMap)
                            : e.emissiveMap && (i = e.emissiveMap),
                        void 0 !== i)
                    ) {
                        i.isWebGLRenderTarget && (i = i.texture);
                        var n = i.offset,
                            r = i.repeat;
                        t.offsetRepeat.value.set(n.x, n.y, r.x, r.y);
                    }
                    (t.envMap.value = e.envMap), (t.flipEnvMap.value = e.envMap && e.envMap.isCubeTexture ? -1 : 1), (t.reflectivity.value = e.reflectivity), (t.refractionRatio.value = e.refractionRatio);
                }
                function S(t, e) {
                    (t.diffuse.value = e.color), (t.opacity.value = e.opacity);
                }
                function A(t, e) {
                    (t.dashSize.value = e.dashSize), (t.totalSize.value = e.dashSize + e.gapSize), (t.scale.value = e.scale);
                }
                function R(t, e) {
                    if (((t.diffuse.value = e.color), (t.opacity.value = e.opacity), (t.size.value = e.size * Mt), (t.scale.value = 0.5 * Et), (t.map.value = e.map), null !== e.map)) {
                        var i = e.map.offset,
                            n = e.map.repeat;
                        t.offsetRepeat.value.set(i.x, i.y, n.x, n.y);
                    }
                }
                function C(t, e) {
                    (t.fogColor.value = e.color), e.isFog ? ((t.fogNear.value = e.near), (t.fogFar.value = e.far)) : e.isFogExp2 && (t.fogDensity.value = e.density);
                }
                function P(t, e) {
                    e.lightMap && ((t.lightMap.value = e.lightMap), (t.lightMapIntensity.value = e.lightMapIntensity)), e.emissiveMap && (t.emissiveMap.value = e.emissiveMap);
                }
                function D(t, e) {
                    (t.specular.value = e.specular),
                        (t.shininess.value = Math.max(e.shininess, 1e-4)),
                        e.lightMap && ((t.lightMap.value = e.lightMap), (t.lightMapIntensity.value = e.lightMapIntensity)),
                        e.emissiveMap && (t.emissiveMap.value = e.emissiveMap),
                        e.bumpMap && ((t.bumpMap.value = e.bumpMap), (t.bumpScale.value = e.bumpScale)),
                        e.normalMap && ((t.normalMap.value = e.normalMap), t.normalScale.value.copy(e.normalScale)),
                        e.displacementMap && ((t.displacementMap.value = e.displacementMap), (t.displacementScale.value = e.displacementScale), (t.displacementBias.value = e.displacementBias));
                }
                function O(t, e) {
                    (t.roughness.value = e.roughness),
                        (t.metalness.value = e.metalness),
                        e.roughnessMap && (t.roughnessMap.value = e.roughnessMap),
                        e.metalnessMap && (t.metalnessMap.value = e.metalnessMap),
                        e.lightMap && ((t.lightMap.value = e.lightMap), (t.lightMapIntensity.value = e.lightMapIntensity)),
                        e.emissiveMap && (t.emissiveMap.value = e.emissiveMap),
                        e.bumpMap && ((t.bumpMap.value = e.bumpMap), (t.bumpScale.value = e.bumpScale)),
                        e.normalMap && ((t.normalMap.value = e.normalMap), t.normalScale.value.copy(e.normalScale)),
                        e.displacementMap && ((t.displacementMap.value = e.displacementMap), (t.displacementScale.value = e.displacementScale), (t.displacementBias.value = e.displacementBias)),
                        e.envMap && (t.envMapIntensity.value = e.envMapIntensity);
                }
                function L(t, e) {
                    (t.clearCoat.value = e.clearCoat), (t.clearCoatRoughness.value = e.clearCoatRoughness), O(t, e);
                }
                function j(t, e) {
                    (t.ambientLightColor.needsUpdate = e), (t.directionalLights.needsUpdate = e), (t.pointLights.needsUpdate = e), (t.spotLights.needsUpdate = e), (t.hemisphereLights.needsUpdate = e);
                }
                function k(t) {
                    for (var e = 0, i = 0, n = t.length; i < n; i++) {
                        var r = t[i];
                        r.castShadow && (Wt.shadows[e++] = r);
                    }
                    Wt.shadows.length = e;
                }
                function I(t, e) {
                    var i,
                        n,
                        r,
                        o,
                        a,
                        s,
                        l,
                        c = 0,
                        h = 0,
                        d = 0,
                        p = e.matrixWorldInverse,
                        f = 0,
                        m = 0,
                        v = 0,
                        g = 0;
                    for (i = 0, n = t.length; i < n; i++)
                        if (((r = t[i]), (o = r.color), (a = r.intensity), (s = r.distance), (l = r.shadow && r.shadow.map ? r.shadow.map.texture : null), r.isAmbientLight)) (c += o.r * a), (h += o.g * a), (d += o.b * a);
                        else if (r.isDirectionalLight) {
                            var y = ue.get(r);
                            y.color.copy(r.color).multiplyScalar(r.intensity),
                                y.direction.setFromMatrixPosition(r.matrixWorld),
                                Ht.setFromMatrixPosition(r.target.matrixWorld),
                                y.direction.sub(Ht),
                                y.direction.transformDirection(p),
                                (y.shadow = r.castShadow),
                                r.castShadow && ((y.shadowBias = r.shadow.bias), (y.shadowRadius = r.shadow.radius), (y.shadowMapSize = r.shadow.mapSize)),
                                (Wt.directionalShadowMap[f] = l),
                                (Wt.directionalShadowMatrix[f] = r.shadow.matrix),
                                (Wt.directional[f++] = y);
                        } else if (r.isSpotLight) {
                            var y = ue.get(r);
                            y.position.setFromMatrixPosition(r.matrixWorld),
                                y.position.applyMatrix4(p),
                                y.color.copy(o).multiplyScalar(a),
                                (y.distance = s),
                                y.direction.setFromMatrixPosition(r.matrixWorld),
                                Ht.setFromMatrixPosition(r.target.matrixWorld),
                                y.direction.sub(Ht),
                                y.direction.transformDirection(p),
                                (y.coneCos = Math.cos(r.angle)),
                                (y.penumbraCos = Math.cos(r.angle * (1 - r.penumbra))),
                                (y.decay = 0 === r.distance ? 0 : r.decay),
                                (y.shadow = r.castShadow),
                                r.castShadow && ((y.shadowBias = r.shadow.bias), (y.shadowRadius = r.shadow.radius), (y.shadowMapSize = r.shadow.mapSize)),
                                (Wt.spotShadowMap[v] = l),
                                (Wt.spotShadowMatrix[v] = r.shadow.matrix),
                                (Wt.spot[v++] = y);
                        } else if (r.isPointLight) {
                            var y = ue.get(r);
                            y.position.setFromMatrixPosition(r.matrixWorld),
                                y.position.applyMatrix4(p),
                                y.color.copy(r.color).multiplyScalar(r.intensity),
                                (y.distance = r.distance),
                                (y.decay = 0 === r.distance ? 0 : r.decay),
                                (y.shadow = r.castShadow),
                                r.castShadow && ((y.shadowBias = r.shadow.bias), (y.shadowRadius = r.shadow.radius), (y.shadowMapSize = r.shadow.mapSize)),
                                (Wt.pointShadowMap[m] = l),
                                void 0 === Wt.pointShadowMatrix[m] && (Wt.pointShadowMatrix[m] = new u()),
                                Ht.setFromMatrixPosition(r.matrixWorld).negate(),
                                Wt.pointShadowMatrix[m].identity().setPosition(Ht),
                                (Wt.point[m++] = y);
                        } else if (r.isHemisphereLight) {
                            var y = ue.get(r);
                            y.direction.setFromMatrixPosition(r.matrixWorld),
                                y.direction.transformDirection(p),
                                y.direction.normalize(),
                                y.skyColor.copy(r.color).multiplyScalar(a),
                                y.groundColor.copy(r.groundColor).multiplyScalar(a),
                                (Wt.hemi[g++] = y);
                        }
                    (Wt.ambient[0] = c),
                        (Wt.ambient[1] = h),
                        (Wt.ambient[2] = d),
                        (Wt.directional.length = f),
                        (Wt.spot.length = v),
                        (Wt.point.length = m),
                        (Wt.hemi.length = g),
                        (Wt.hash = f + "," + m + "," + v + "," + g + "," + Wt.shadows.length);
                }
                function N() {
                    var t = bt;
                    return t >= Jt.maxTextures && console.warn("WebGLRenderer: trying to use " + t + " texture units while this GPU supports only " + Jt.maxTextures), (bt += 1), t;
                }
                function F(t) {
                    var e;
                    if (t === Mo) return qt.REPEAT;
                    if (t === So) return qt.CLAMP_TO_EDGE;
                    if (t === Ao) return qt.MIRRORED_REPEAT;
                    if (t === Co) return qt.NEAREST;
                    if (t === Po) return qt.NEAREST_MIPMAP_NEAREST;
                    if (t === Do) return qt.NEAREST_MIPMAP_LINEAR;
                    if (t === Oo) return qt.LINEAR;
                    if (t === Lo) return qt.LINEAR_MIPMAP_NEAREST;
                    if (t === jo) return qt.LINEAR_MIPMAP_LINEAR;
                    if (t === Io) return qt.UNSIGNED_BYTE;
                    if (t === Ho) return qt.UNSIGNED_SHORT_4_4_4_4;
                    if (t === Wo) return qt.UNSIGNED_SHORT_5_5_5_1;
                    if (t === Xo) return qt.UNSIGNED_SHORT_5_6_5;
                    if (t === No) return qt.BYTE;
                    if (t === Fo) return qt.SHORT;
                    if (t === Uo) return qt.UNSIGNED_SHORT;
                    if (t === Bo) return qt.INT;
                    if (t === Go) return qt.UNSIGNED_INT;
                    if (t === zo) return qt.FLOAT;
                    if (t === Vo && null !== (e = Zt.get("OES_texture_half_float"))) return e.HALF_FLOAT_OES;
                    if (t === Yo) return qt.ALPHA;
                    if (t === Zo) return qt.RGB;
                    if (t === Jo) return qt.RGBA;
                    if (t === Qo) return qt.LUMINANCE;
                    if (t === $o) return qt.LUMINANCE_ALPHA;
                    if (t === ta) return qt.DEPTH_COMPONENT;
                    if (t === ea) return qt.DEPTH_STENCIL;
                    if (t === Fr) return qt.FUNC_ADD;
                    if (t === Ur) return qt.FUNC_SUBTRACT;
                    if (t === Br) return qt.FUNC_REVERSE_SUBTRACT;
                    if (t === Vr) return qt.ZERO;
                    if (t === Hr) return qt.ONE;
                    if (t === Wr) return qt.SRC_COLOR;
                    if (t === Xr) return qt.ONE_MINUS_SRC_COLOR;
                    if (t === qr) return qt.SRC_ALPHA;
                    if (t === Yr) return qt.ONE_MINUS_SRC_ALPHA;
                    if (t === Zr) return qt.DST_ALPHA;
                    if (t === Jr) return qt.ONE_MINUS_DST_ALPHA;
                    if (t === Qr) return qt.DST_COLOR;
                    if (t === $r) return qt.ONE_MINUS_DST_COLOR;
                    if (t === Kr) return qt.SRC_ALPHA_SATURATE;
                    if ((t === ia || t === na || t === ra || t === oa) && null !== (e = Zt.get("WEBGL_compressed_texture_s3tc"))) {
                        if (t === ia) return e.COMPRESSED_RGB_S3TC_DXT1_EXT;
                        if (t === na) return e.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                        if (t === ra) return e.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                        if (t === oa) return e.COMPRESSED_RGBA_S3TC_DXT5_EXT;
                    }
                    if ((t === aa || t === sa || t === la || t === ca) && null !== (e = Zt.get("WEBGL_compressed_texture_pvrtc"))) {
                        if (t === aa) return e.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
                        if (t === sa) return e.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
                        if (t === la) return e.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
                        if (t === ca) return e.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
                    }
                    if (t === ua && null !== (e = Zt.get("WEBGL_compressed_texture_etc1"))) return e.COMPRESSED_RGB_ETC1_WEBGL;
                    if ((t === Gr || t === zr) && null !== (e = Zt.get("EXT_blend_minmax"))) {
                        if (t === Gr) return e.MIN_EXT;
                        if (t === zr) return e.MAX_EXT;
                    }
                    return t === qo && null !== (e = Zt.get("WEBGL_depth_texture")) ? e.UNSIGNED_INT_24_8_WEBGL : 0;
                }
                console.log("THREE.WebGLRenderer", mr), (t = t || {});
                var U = void 0 !== t.canvas ? t.canvas : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"),
                    B = void 0 !== t.context ? t.context : null,
                    G = void 0 !== t.alpha && t.alpha,
                    z = void 0 === t.depth || t.depth,
                    V = void 0 === t.stencil || t.stencil,
                    H = void 0 !== t.antialias && t.antialias,
                    q = void 0 === t.premultipliedAlpha || t.premultipliedAlpha,
                    J = void 0 !== t.preserveDrawingBuffer && t.preserveDrawingBuffer,
                    Q = [],
                    K = [],
                    tt = -1,
                    it = [],
                    nt = -1,
                    at = new Float32Array(8),
                    st = [],
                    lt = [];
                (this.domElement = U),
                    (this.context = null),
                    (this.autoClear = !0),
                    (this.autoClearColor = !0),
                    (this.autoClearDepth = !0),
                    (this.autoClearStencil = !0),
                    (this.sortObjects = !0),
                    (this.clippingPlanes = []),
                    (this.localClippingEnabled = !1),
                    (this.gammaFactor = 2),
                    (this.gammaInput = !1),
                    (this.gammaOutput = !1),
                    (this.physicallyCorrectLights = !1),
                    (this.toneMapping = po),
                    (this.toneMappingExposure = 1),
                    (this.toneMappingWhitePoint = 1),
                    (this.maxMorphTargets = 8),
                    (this.maxMorphNormals = 4);
                var ct = this,
                    ut = null,
                    ht = null,
                    dt = null,
                    pt = -1,
                    mt = "",
                    vt = null,
                    gt = new o(),
                    yt = null,
                    _t = new o(),
                    bt = 0,
                    xt = new X(0),
                    wt = 0,
                    Tt = U.width,
                    Et = U.height,
                    Mt = 1,
                    St = new o(0, 0, Tt, Et),
                    At = !1,
                    Rt = new o(0, 0, Tt, Et),
                    Lt = new rt(),
                    Ut = new se(),
                    Bt = !1,
                    Gt = !1,
                    zt = new et(),
                    Vt = new u(),
                    Ht = new c(),
                    Wt = {
                        hash: "",
                        ambient: [0, 0, 0],
                        directional: [],
                        directionalShadowMap: [],
                        directionalShadowMatrix: [],
                        spot: [],
                        spotShadowMap: [],
                        spotShadowMatrix: [],
                        point: [],
                        pointShadowMap: [],
                        pointShadowMatrix: [],
                        hemi: [],
                        shadows: [],
                    },
                    Xt = { calls: 0, vertices: 0, faces: 0, points: 0 };
                this.info = { render: Xt, memory: { geometries: 0, textures: 0 }, programs: null };
                var qt;
                try {
                    var Yt = { alpha: G, depth: z, stencil: V, antialias: H, premultipliedAlpha: q, preserveDrawingBuffer: J };
                    if (null === (qt = B || U.getContext("webgl", Yt) || U.getContext("experimental-webgl", Yt)))
                        throw null !== U.getContext("webgl") ? "Error creating WebGL context with your selected attributes." : "Error creating WebGL context.";
                    void 0 === qt.getShaderPrecisionFormat &&
                        (qt.getShaderPrecisionFormat = function () {
                            return { rangeMin: 1, rangeMax: 1, precision: 1 };
                        }),
                        U.addEventListener("webglcontextlost", a, !1);
                } catch (t) {
                    console.error("THREE.WebGLRenderer: " + t);
                }
                var Zt = new ae(qt);
                Zt.get("WEBGL_depth_texture"),
                    Zt.get("OES_texture_float"),
                    Zt.get("OES_texture_float_linear"),
                    Zt.get("OES_texture_half_float"),
                    Zt.get("OES_texture_half_float_linear"),
                    Zt.get("OES_standard_derivatives"),
                    Zt.get("ANGLE_instanced_arrays"),
                    Zt.get("OES_element_index_uint") && (Ct.MaxIndex = 4294967296);
                var Jt = new oe(qt, Zt, t),
                    Qt = new re(qt, Zt, F),
                    $t = new ne(),
                    te = new ie(qt, Zt, Qt, $t, Jt, F, this.info),
                    le = new ee(qt, $t, this.info),
                    ce = new Kt(this, Jt),
                    ue = new Ft();
                this.info.programs = ce.programs;
                var he = new Nt(qt, Zt, Xt),
                    de = new It(qt, Zt, Xt),
                    pe = new kt(-1, 1, 1, -1, 0, 1),
                    fe = new jt(),
                    me = new Pt(new Ot(2, 2), new ft({ depthTest: !1, depthWrite: !1, fog: !1 })),
                    ve = Ia.cube,
                    ge = new Pt(new Dt(5, 5, 5), new $({ uniforms: ve.uniforms, vertexShader: ve.vertexShader, fragmentShader: ve.fragmentShader, side: Er, depthTest: !1, depthWrite: !1, fog: !1 }));
                n(), (this.context = qt), (this.capabilities = Jt), (this.extensions = Zt), (this.properties = $t), (this.state = Qt);
                var ye = new ot(this, Wt, le, Jt);
                this.shadowMap = ye;
                var _e = new Z(this, st),
                    be = new Y(this, lt);
                (this.getContext = function () {
                    return qt;
                }),
                    (this.getContextAttributes = function () {
                        return qt.getContextAttributes();
                    }),
                    (this.forceContextLoss = function () {
                        Zt.get("WEBGL_lose_context").loseContext();
                    }),
                    (this.getMaxAnisotropy = function () {
                        return Jt.getMaxAnisotropy();
                    }),
                    (this.getPrecision = function () {
                        return Jt.precision;
                    }),
                    (this.getPixelRatio = function () {
                        return Mt;
                    }),
                    (this.setPixelRatio = function (t) {
                        void 0 !== t && ((Mt = t), this.setSize(Rt.z, Rt.w, !1));
                    }),
                    (this.getSize = function () {
                        return { width: Tt, height: Et };
                    }),
                    (this.setSize = function (t, e, i) {
                        (Tt = t), (Et = e), (U.width = t * Mt), (U.height = e * Mt), !1 !== i && ((U.style.width = t + "px"), (U.style.height = e + "px")), this.setViewport(0, 0, t, e);
                    }),
                    (this.setViewport = function (t, e, i, n) {
                        Qt.viewport(Rt.set(t, e, i, n));
                    }),
                    (this.setScissor = function (t, e, i, n) {
                        Qt.scissor(St.set(t, e, i, n));
                    }),
                    (this.setScissorTest = function (t) {
                        Qt.setScissorTest((At = t));
                    }),
                    (this.getClearColor = function () {
                        return xt;
                    }),
                    (this.setClearColor = function (t, e) {
                        xt.set(t), (wt = void 0 !== e ? e : 1), i(xt.r, xt.g, xt.b, wt);
                    }),
                    (this.getClearAlpha = function () {
                        return wt;
                    }),
                    (this.setClearAlpha = function (t) {
                        (wt = t), i(xt.r, xt.g, xt.b, wt);
                    }),
                    (this.clear = function (t, e, i) {
                        var n = 0;
                        (void 0 === t || t) && (n |= qt.COLOR_BUFFER_BIT), (void 0 === e || e) && (n |= qt.DEPTH_BUFFER_BIT), (void 0 === i || i) && (n |= qt.STENCIL_BUFFER_BIT), qt.clear(n);
                    }),
                    (this.clearColor = function () {
                        this.clear(!0, !1, !1);
                    }),
                    (this.clearDepth = function () {
                        this.clear(!1, !0, !1);
                    }),
                    (this.clearStencil = function () {
                        this.clear(!1, !1, !0);
                    }),
                    (this.clearTarget = function (t, e, i, n) {
                        this.setRenderTarget(t), this.clear(e, i, n);
                    }),
                    (this.resetGLState = r),
                    (this.dispose = function () {
                        (it = []), (nt = -1), (K = []), (tt = -1), U.removeEventListener("webglcontextlost", a, !1);
                    }),
                    (this.renderBufferImmediate = function (t, e, i) {
                        Qt.initAttributes();
                        var n = $t.get(t);
                        t.hasPositions && !n.position && (n.position = qt.createBuffer()),
                            t.hasNormals && !n.normal && (n.normal = qt.createBuffer()),
                            t.hasUvs && !n.uv && (n.uv = qt.createBuffer()),
                            t.hasColors && !n.color && (n.color = qt.createBuffer());
                        var r = e.getAttributes();
                        if (
                            (t.hasPositions &&
                                (qt.bindBuffer(qt.ARRAY_BUFFER, n.position), qt.bufferData(qt.ARRAY_BUFFER, t.positionArray, qt.DYNAMIC_DRAW), Qt.enableAttribute(r.position), qt.vertexAttribPointer(r.position, 3, qt.FLOAT, !1, 0, 0)),
                            t.hasNormals)
                        ) {
                            if ((qt.bindBuffer(qt.ARRAY_BUFFER, n.normal), !i.isMeshPhongMaterial && !i.isMeshStandardMaterial && i.shading === Sr))
                                for (var o = 0, a = 3 * t.count; o < a; o += 9) {
                                    var s = t.normalArray,
                                        l = (s[o + 0] + s[o + 3] + s[o + 6]) / 3,
                                        c = (s[o + 1] + s[o + 4] + s[o + 7]) / 3,
                                        u = (s[o + 2] + s[o + 5] + s[o + 8]) / 3;
                                    (s[o + 0] = l), (s[o + 1] = c), (s[o + 2] = u), (s[o + 3] = l), (s[o + 4] = c), (s[o + 5] = u), (s[o + 6] = l), (s[o + 7] = c), (s[o + 8] = u);
                                }
                            qt.bufferData(qt.ARRAY_BUFFER, t.normalArray, qt.DYNAMIC_DRAW), Qt.enableAttribute(r.normal), qt.vertexAttribPointer(r.normal, 3, qt.FLOAT, !1, 0, 0);
                        }
                        t.hasUvs && i.map && (qt.bindBuffer(qt.ARRAY_BUFFER, n.uv), qt.bufferData(qt.ARRAY_BUFFER, t.uvArray, qt.DYNAMIC_DRAW), Qt.enableAttribute(r.uv), qt.vertexAttribPointer(r.uv, 2, qt.FLOAT, !1, 0, 0)),
                            t.hasColors &&
                                i.vertexColors !== Rr &&
                                (qt.bindBuffer(qt.ARRAY_BUFFER, n.color), qt.bufferData(qt.ARRAY_BUFFER, t.colorArray, qt.DYNAMIC_DRAW), Qt.enableAttribute(r.color), qt.vertexAttribPointer(r.color, 3, qt.FLOAT, !1, 0, 0)),
                            Qt.disableUnusedAttributes(),
                            qt.drawArrays(qt.TRIANGLES, 0, t.count),
                            (t.count = 0);
                    }),
                    (this.renderBufferDirect = function (t, i, n, r, o, a) {
                        T(r);
                        var s = E(t, i, r, o),
                            l = !1,
                            c = n.id + "_" + s.id + "_" + r.wireframe;
                        c !== mt && ((mt = c), (l = !0));
                        var u = o.morphTargetInfluences;
                        if (void 0 !== u) {
                            for (var h = [], f = 0, m = u.length; f < m; f++) {
                                var v = u[f];
                                h.push([v, f]);
                            }
                            h.sort(p), h.length > 8 && (h.length = 8);
                            for (var g = n.morphAttributes, f = 0, m = h.length; f < m; f++) {
                                var v = h[f];
                                if (((at[f] = v[0]), 0 !== v[0])) {
                                    var y = v[1];
                                    !0 === r.morphTargets && g.position && n.addAttribute("morphTarget" + f, g.position[y]), !0 === r.morphNormals && g.normal && n.addAttribute("morphNormal" + f, g.normal[y]);
                                } else !0 === r.morphTargets && n.removeAttribute("morphTarget" + f), !0 === r.morphNormals && n.removeAttribute("morphNormal" + f);
                            }
                            for (var f = h.length, _ = at.length; f < _; f++) at[f] = 0;
                            s.getUniforms().setValue(qt, "morphTargetInfluences", at), (l = !0);
                        }
                        var y = n.index,
                            b = n.attributes.position,
                            x = 1;
                        !0 === r.wireframe && ((y = le.getWireframeAttribute(n)), (x = 2));
                        var w;
                        null !== y ? ((w = de), w.setIndex(y)) : (w = he), l && (d(r, s, n), null !== y && qt.bindBuffer(qt.ELEMENT_ARRAY_BUFFER, le.getAttributeBuffer(y)));
                        var M = 0;
                        null !== y ? (M = y.count) : void 0 !== b && (M = b.count);
                        var S = n.drawRange.start * x,
                            A = n.drawRange.count * x,
                            R = null !== a ? a.start * x : 0,
                            C = null !== a ? a.count * x : 1 / 0,
                            P = Math.max(S, R),
                            D = Math.min(M, S + A, R + C) - 1,
                            O = Math.max(0, D - P + 1);
                        if (0 !== O) {
                            if (o.isMesh)
                                if (!0 === r.wireframe) Qt.setLineWidth(r.wireframeLinewidth * e()), w.setMode(qt.LINES);
                                else
                                    switch (o.drawMode) {
                                        case pa:
                                            w.setMode(qt.TRIANGLES);
                                            break;
                                        case fa:
                                            w.setMode(qt.TRIANGLE_STRIP);
                                            break;
                                        case ma:
                                            w.setMode(qt.TRIANGLE_FAN);
                                    }
                            else if (o.isLine) {
                                var L = r.linewidth;
                                void 0 === L && (L = 1), Qt.setLineWidth(L * e()), o.isLineSegments ? w.setMode(qt.LINES) : w.setMode(qt.LINE_STRIP);
                            } else o.isPoints && w.setMode(qt.POINTS);
                            n && n.isInstancedBufferGeometry ? n.maxInstancedCount > 0 && w.renderInstances(n, P, O) : w.render(P, O);
                        }
                    }),
                    (this.render = function (t, e, n, r) {
                        if (void 0 !== e && !0 !== e.isCamera) return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
                        (mt = ""),
                            (pt = -1),
                            (vt = null),
                            !0 === t.autoUpdate && t.updateMatrixWorld(),
                            null === e.parent && e.updateMatrixWorld(),
                            e.matrixWorldInverse.getInverse(e.matrixWorld),
                            Vt.multiplyMatrices(e.projectionMatrix, e.matrixWorldInverse),
                            Lt.setFromMatrix(Vt),
                            (Q.length = 0),
                            (tt = -1),
                            (nt = -1),
                            (st.length = 0),
                            (lt.length = 0),
                            (Gt = this.localClippingEnabled),
                            (Bt = Ut.init(this.clippingPlanes, Gt, e)),
                            b(t, e),
                            (K.length = tt + 1),
                            (it.length = nt + 1),
                            !0 === ct.sortObjects && (K.sort(f), it.sort(m)),
                            Bt && Ut.beginShadows(),
                            k(Q),
                            ye.render(t, e),
                            I(Q, e),
                            Bt && Ut.endShadows(),
                            (Xt.calls = 0),
                            (Xt.vertices = 0),
                            (Xt.faces = 0),
                            (Xt.points = 0),
                            void 0 === n && (n = null),
                            this.setRenderTarget(n);
                        var o = t.background;
                        if (
                            (null === o ? i(xt.r, xt.g, xt.b, wt) : o && o.isColor && (i(o.r, o.g, o.b, 1), (r = !0)),
                            (this.autoClear || r) && this.clear(this.autoClearColor, this.autoClearDepth, this.autoClearStencil),
                            o && o.isCubeTexture
                                ? (fe.projectionMatrix.copy(e.projectionMatrix),
                                  fe.matrixWorld.extractRotation(e.matrixWorld),
                                  fe.matrixWorldInverse.getInverse(fe.matrixWorld),
                                  (ge.material.uniforms.tCube.value = o),
                                  ge.modelViewMatrix.multiplyMatrices(fe.matrixWorldInverse, ge.matrixWorld),
                                  le.update(ge),
                                  ct.renderBufferDirect(fe, null, ge.geometry, ge.material, ge, null))
                                : o && o.isTexture && ((me.material.map = o), le.update(me), ct.renderBufferDirect(pe, null, me.geometry, me.material, me, null)),
                            t.overrideMaterial)
                        ) {
                            var a = t.overrideMaterial;
                            x(K, t, e, a), x(it, t, e, a);
                        } else Qt.setBlending(Dr), x(K, t, e), x(it, t, e);
                        _e.render(t, e), be.render(t, e, _t), n && te.updateRenderTargetMipmap(n), Qt.setDepthTest(!0), Qt.setDepthWrite(!0), Qt.setColorWrite(!0);
                    }),
                    (this.setFaceCulling = function (t, e) {
                        Qt.setCullFace(t), Qt.setFlipSided(e === br);
                    }),
                    (this.allocTextureUnit = N),
                    (this.setTexture2D = (function () {
                        var t = !1;
                        return function (e, i) {
                            e && e.isWebGLRenderTarget && (t || (console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."), (t = !0)), (e = e.texture)),
                                te.setTexture2D(e, i);
                        };
                    })()),
                    (this.setTexture = (function () {
                        var t = !1;
                        return function (e, i) {
                            t || (console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."), (t = !0)), te.setTexture2D(e, i);
                        };
                    })()),
                    (this.setTextureCube = (function () {
                        var t = !1;
                        return function (e, i) {
                            e && e.isWebGLRenderTargetCube && (t || (console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."), (t = !0)), (e = e.texture)),
                                (e && e.isCubeTexture) || (Array.isArray(e.image) && 6 === e.image.length) ? te.setTextureCube(e, i) : te.setTextureCubeDynamic(e, i);
                        };
                    })()),
                    (this.getCurrentRenderTarget = function () {
                        return ht;
                    }),
                    (this.setRenderTarget = function (t) {
                        (ht = t), t && void 0 === $t.get(t).__webglFramebuffer && te.setupRenderTarget(t);
                        var e,
                            i = t && t.isWebGLRenderTargetCube;
                        if (t) {
                            var n = $t.get(t);
                            (e = i ? n.__webglFramebuffer[t.activeCubeFace] : n.__webglFramebuffer), gt.copy(t.scissor), (yt = t.scissorTest), _t.copy(t.viewport);
                        } else (e = null), gt.copy(St).multiplyScalar(Mt), (yt = At), _t.copy(Rt).multiplyScalar(Mt);
                        if ((dt !== e && (qt.bindFramebuffer(qt.FRAMEBUFFER, e), (dt = e)), Qt.scissor(gt), Qt.setScissorTest(yt), Qt.viewport(_t), i)) {
                            var r = $t.get(t.texture);
                            qt.framebufferTexture2D(qt.FRAMEBUFFER, qt.COLOR_ATTACHMENT0, qt.TEXTURE_CUBE_MAP_POSITIVE_X + t.activeCubeFace, r.__webglTexture, t.activeMipMapLevel);
                        }
                    }),
                    (this.readRenderTargetPixels = function (t, e, i, n, r, o) {
                        if (!1 === (t && t.isWebGLRenderTarget)) return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
                        var a = $t.get(t).__webglFramebuffer;
                        if (a) {
                            var s = !1;
                            a !== dt && (qt.bindFramebuffer(qt.FRAMEBUFFER, a), (s = !0));
                            try {
                                var l = t.texture,
                                    c = l.format,
                                    u = l.type;
                                if (c !== Jo && F(c) !== qt.getParameter(qt.IMPLEMENTATION_COLOR_READ_FORMAT))
                                    return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                                if (
                                    !(
                                        u === Io ||
                                        F(u) === qt.getParameter(qt.IMPLEMENTATION_COLOR_READ_TYPE) ||
                                        (u === zo && (Zt.get("OES_texture_float") || Zt.get("WEBGL_color_buffer_float"))) ||
                                        (u === Vo && Zt.get("EXT_color_buffer_half_float"))
                                    )
                                )
                                    return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                                qt.checkFramebufferStatus(qt.FRAMEBUFFER) === qt.FRAMEBUFFER_COMPLETE
                                    ? e >= 0 && e <= t.width - n && i >= 0 && i <= t.height - r && qt.readPixels(e, i, n, r, F(c), F(u), o)
                                    : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.");
                            } finally {
                                s && qt.bindFramebuffer(qt.FRAMEBUFFER, dt);
                            }
                        }
                    });
            }
            function ce(t, e) {
                (this.name = ""), (this.color = new X(t)), (this.density = void 0 !== e ? e : 25e-5);
            }
            function ue(t, e, i) {
                (this.name = ""), (this.color = new X(t)), (this.near = void 0 !== e ? e : 1), (this.far = void 0 !== i ? i : 1e3);
            }
            function he() {
                ct.call(this), (this.type = "Scene"), (this.background = null), (this.fog = null), (this.overrideMaterial = null), (this.autoUpdate = !0);
            }
            function de(t, e, i, n, r) {
                ct.call(this), (this.lensFlares = []), (this.positionScreen = new c()), (this.customUpdateCallback = void 0), void 0 !== t && this.add(t, e, i, n, r);
            }
            function pe(t) {
                J.call(this), (this.type = "SpriteMaterial"), (this.color = new X(16777215)), (this.map = null), (this.rotation = 0), (this.fog = !1), (this.lights = !1), this.setValues(t);
            }
            function fe(t) {
                ct.call(this), (this.type = "Sprite"), (this.material = void 0 !== t ? t : new pe());
            }
            function me() {
                ct.call(this), (this.type = "LOD"), Object.defineProperties(this, { levels: { enumerable: !0, value: [] } });
            }
            function ve(t, e, i, r, o, a, s, l, c, u, h, d) {
                n.call(this, null, a, s, l, c, u, r, o, h, d),
                    (this.image = { data: t, width: e, height: i }),
                    (this.magFilter = void 0 !== c ? c : Co),
                    (this.minFilter = void 0 !== u ? u : Co),
                    (this.generateMipmaps = !1),
                    (this.flipY = !1),
                    (this.unpackAlignment = 1);
            }
            function ge(t, e, i) {
                if (((this.useVertexTexture = void 0 === i || i), (this.identityMatrix = new u()), (t = t || []), (this.bones = t.slice(0)), this.useVertexTexture)) {
                    var n = Math.sqrt(4 * this.bones.length);
                    (n = Ma.nextPowerOfTwo(Math.ceil(n))),
                        (n = Math.max(n, 4)),
                        (this.boneTextureWidth = n),
                        (this.boneTextureHeight = n),
                        (this.boneMatrices = new Float32Array(this.boneTextureWidth * this.boneTextureHeight * 4)),
                        (this.boneTexture = new ve(this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, Jo, zo));
                } else this.boneMatrices = new Float32Array(16 * this.bones.length);
                if (void 0 === e) this.calculateInverses();
                else if (this.bones.length === e.length) this.boneInverses = e.slice(0);
                else {
                    console.warn("THREE.Skeleton bonInverses is the wrong length."), (this.boneInverses = []);
                    for (var r = 0, o = this.bones.length; r < o; r++) this.boneInverses.push(new u());
                }
            }
            function ye(t) {
                ct.call(this), (this.type = "Bone"), (this.skin = t);
            }
            function _e(t, e, i) {
                Pt.call(this, t, e), (this.type = "SkinnedMesh"), (this.bindMode = "attached"), (this.bindMatrix = new u()), (this.bindMatrixInverse = new u());
                var n = [];
                if (this.geometry && void 0 !== this.geometry.bones) {
                    for (var r, o, a = 0, s = this.geometry.bones.length; a < s; ++a)
                        (o = this.geometry.bones[a]), (r = new ye(this)), n.push(r), (r.name = o.name), r.position.fromArray(o.pos), r.quaternion.fromArray(o.rotq), void 0 !== o.scl && r.scale.fromArray(o.scl);
                    for (var a = 0, s = this.geometry.bones.length; a < s; ++a) (o = this.geometry.bones[a]), -1 !== o.parent && null !== o.parent && void 0 !== n[o.parent] ? n[o.parent].add(n[a]) : this.add(n[a]);
                }
                this.normalizeSkinWeights(), this.updateMatrixWorld(!0), this.bind(new ge(n, void 0, i), this.matrixWorld);
            }
            function be(t) {
                J.call(this), (this.type = "LineBasicMaterial"), (this.color = new X(16777215)), (this.linewidth = 1), (this.linecap = "round"), (this.linejoin = "round"), (this.lights = !1), this.setValues(t);
            }
            function xe(t, e, i) {
                if (1 === i) return console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."), new we(t, e);
                ct.call(this), (this.type = "Line"), (this.geometry = void 0 !== t ? t : new Ct()), (this.material = void 0 !== e ? e : new be({ color: 16777215 * Math.random() }));
            }
            function we(t, e) {
                xe.call(this, t, e), (this.type = "LineSegments");
            }
            function Te(t) {
                J.call(this), (this.type = "PointsMaterial"), (this.color = new X(16777215)), (this.map = null), (this.size = 1), (this.sizeAttenuation = !0), (this.lights = !1), this.setValues(t);
            }
            function Ee(t, e) {
                ct.call(this), (this.type = "Points"), (this.geometry = void 0 !== t ? t : new Ct()), (this.material = void 0 !== e ? e : new Te({ color: 16777215 * Math.random() }));
            }
            function Me() {
                ct.call(this), (this.type = "Group");
            }
            function Se(t, e, i, r, o, a, s, l, c) {
                function u() {
                    requestAnimationFrame(u), t.readyState >= t.HAVE_CURRENT_DATA && (h.needsUpdate = !0);
                }
                n.call(this, t, e, i, r, o, a, s, l, c), (this.generateMipmaps = !1);
                var h = this;
                u();
            }
            function Ae(t, e, i, r, o, a, s, l, c, u, h, d) {
                n.call(this, null, a, s, l, c, u, r, o, h, d), (this.image = { width: e, height: i }), (this.mipmaps = t), (this.flipY = !1), (this.generateMipmaps = !1);
            }
            function Re(t, e, i, r, o, a, s, l, c) {
                n.call(this, t, e, i, r, o, a, s, l, c), (this.needsUpdate = !0);
            }
            function Ce(t, e, i, r, o, a, s, l, c, u) {
                if ((u = void 0 !== u ? u : ta) !== ta && u !== ea) throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
                n.call(this, null, r, o, a, s, l, u, i, c),
                    (this.image = { width: t, height: e }),
                    (this.type = void 0 !== i ? i : Uo),
                    (this.magFilter = void 0 !== s ? s : Co),
                    (this.minFilter = void 0 !== l ? l : Co),
                    (this.flipY = !1),
                    (this.generateMipmaps = !1);
            }
            function Pe(t) {
                function e(t, e) {
                    return t - e;
                }
                Ct.call(this);
                var i = [0, 0],
                    n = {},
                    r = ["a", "b", "c"];
                if (t && t.isGeometry) {
                    for (var o = t.vertices, a = t.faces, s = 0, l = new Uint32Array(6 * a.length), c = 0, u = a.length; c < u; c++)
                        for (var h = a[c], d = 0; d < 3; d++) {
                            (i[0] = h[r[d]]), (i[1] = h[r[(d + 1) % 3]]), i.sort(e);
                            var p = i.toString();
                            void 0 === n[p] && ((l[2 * s] = i[0]), (l[2 * s + 1] = i[1]), (n[p] = !0), s++);
                        }
                    for (var f = new Float32Array(2 * s * 3), c = 0, u = s; c < u; c++)
                        for (var d = 0; d < 2; d++) {
                            var m = o[l[2 * c + d]],
                                v = 6 * c + 3 * d;
                            (f[v + 0] = m.x), (f[v + 1] = m.y), (f[v + 2] = m.z);
                        }
                    this.addAttribute("position", new mt(f, 3));
                } else if (t && t.isBufferGeometry)
                    if (null !== t.index) {
                        var g = t.index.array,
                            o = t.attributes.position,
                            y = t.groups,
                            s = 0;
                        0 === y.length && t.addGroup(0, g.length);
                        for (var l = new Uint32Array(2 * g.length), _ = 0, b = y.length; _ < b; ++_)
                            for (var x = y[_], w = x.start, T = x.count, c = w, E = w + T; c < E; c += 3)
                                for (var d = 0; d < 3; d++) {
                                    (i[0] = g[c + d]), (i[1] = g[c + ((d + 1) % 3)]), i.sort(e);
                                    var p = i.toString();
                                    void 0 === n[p] && ((l[2 * s] = i[0]), (l[2 * s + 1] = i[1]), (n[p] = !0), s++);
                                }
                        for (var f = new Float32Array(2 * s * 3), c = 0, u = s; c < u; c++)
                            for (var d = 0; d < 2; d++) {
                                var v = 6 * c + 3 * d,
                                    M = l[2 * c + d];
                                (f[v + 0] = o.getX(M)), (f[v + 1] = o.getY(M)), (f[v + 2] = o.getZ(M));
                            }
                        this.addAttribute("position", new mt(f, 3));
                    } else {
                        for (var o = t.attributes.position.array, s = o.length / 3, S = s / 3, f = new Float32Array(2 * s * 3), c = 0, u = S; c < u; c++)
                            for (var d = 0; d < 3; d++) {
                                var v = 18 * c + 6 * d,
                                    A = 9 * c + 3 * d;
                                (f[v + 0] = o[A]), (f[v + 1] = o[A + 1]), (f[v + 2] = o[A + 2]);
                                var M = 9 * c + ((d + 1) % 3) * 3;
                                (f[v + 3] = o[M]), (f[v + 4] = o[M + 1]), (f[v + 5] = o[M + 2]);
                            }
                        this.addAttribute("position", new mt(f, 3));
                    }
            }
            function De(t, e, i) {
                Ct.call(this), (this.type = "ParametricBufferGeometry"), (this.parameters = { func: t, slices: e, stacks: i });
                var n,
                    r,
                    o,
                    a,
                    s,
                    l = [],
                    c = [],
                    u = e + 1;
                for (n = 0; n <= i; n++) for (s = n / i, r = 0; r <= e; r++) (a = r / e), (o = t(a, s)), l.push(o.x, o.y, o.z), c.push(a, s);
                var h,
                    d,
                    p,
                    f,
                    m = [];
                for (n = 0; n < i; n++) for (r = 0; r < e; r++) (h = n * u + r), (d = n * u + r + 1), (p = (n + 1) * u + r + 1), (f = (n + 1) * u + r), m.push(h, d, f), m.push(d, p, f);
                this.setIndex((m.length > 65535 ? wt : bt)(m, 1)), this.addAttribute("position", Tt(l, 3)), this.addAttribute("uv", Tt(c, 2)), this.computeVertexNormals();
            }
            function Oe(t, e, i) {
                St.call(this), (this.type = "ParametricGeometry"), (this.parameters = { func: t, slices: e, stacks: i }), this.fromBufferGeometry(new De(t, e, i)), this.mergeVertices();
            }
            function Le(t, e, n, r) {
                function o(t, e, i, n) {
                    var r,
                        o,
                        a = Math.pow(2, n),
                        l = [];
                    for (r = 0; r <= a; r++) {
                        l[r] = [];
                        var c = t.clone().lerp(i, r / a),
                            u = e.clone().lerp(i, r / a),
                            h = a - r;
                        for (o = 0; o <= h; o++) l[r][o] = 0 === o && r === a ? c : c.clone().lerp(u, o / h);
                    }
                    for (r = 0; r < a; r++)
                        for (o = 0; o < 2 * (a - r) - 1; o++) {
                            var d = Math.floor(o / 2);
                            o % 2 == 0 ? (s(l[r][d + 1]), s(l[r + 1][d]), s(l[r][d])) : (s(l[r][d + 1]), s(l[r + 1][d + 1]), s(l[r + 1][d]));
                        }
                }
                function a() {
                    for (var t = 0; t < m.length; t += 6) {
                        var e = m[t + 0],
                            i = m[t + 2],
                            n = m[t + 4],
                            r = Math.max(e, i, n),
                            o = Math.min(e, i, n);
                        r > 0.9 && o < 0.1 && (e < 0.2 && (m[t + 0] += 1), i < 0.2 && (m[t + 2] += 1), n < 0.2 && (m[t + 4] += 1));
                    }
                }
                function s(t) {
                    f.push(t.x, t.y, t.z);
                }
                function l(e, i) {
                    var n = 3 * e;
                    (i.x = t[n + 0]), (i.y = t[n + 1]), (i.z = t[n + 2]);
                }
                function u() {
                    for (var t = new c(), e = new c(), n = new c(), r = new c(), o = new i(), a = new i(), s = new i(), l = 0, u = 0; l < f.length; l += 9, u += 6) {
                        t.set(f[l + 0], f[l + 1], f[l + 2]),
                            e.set(f[l + 3], f[l + 4], f[l + 5]),
                            n.set(f[l + 6], f[l + 7], f[l + 8]),
                            o.set(m[u + 0], m[u + 1]),
                            a.set(m[u + 2], m[u + 3]),
                            s.set(m[u + 4], m[u + 5]),
                            r.copy(t).add(e).add(n).divideScalar(3);
                        var p = d(r);
                        h(o, u + 0, t, p), h(a, u + 2, e, p), h(s, u + 4, n, p);
                    }
                }
                function h(t, e, i, n) {
                    n < 0 && 1 === t.x && (m[e] = t.x - 1), 0 === i.x && 0 === i.z && (m[e] = n / 2 / Math.PI + 0.5);
                }
                function d(t) {
                    return Math.atan2(t.z, -t.x);
                }
                function p(t) {
                    return Math.atan2(-t.y, Math.sqrt(t.x * t.x + t.z * t.z));
                }
                Ct.call(this), (this.type = "PolyhedronBufferGeometry"), (this.parameters = { vertices: t, indices: e, radius: n, detail: r }), (n = n || 1), (r = r || 0);
                var f = [],
                    m = [];
                !(function (t) {
                    for (var i = new c(), n = new c(), r = new c(), a = 0; a < e.length; a += 3) l(e[a + 0], i), l(e[a + 1], n), l(e[a + 2], r), o(i, n, r, t);
                })(r),
                    (function (t) {
                        for (var e = new c(), i = 0; i < f.length; i += 3) (e.x = f[i + 0]), (e.y = f[i + 1]), (e.z = f[i + 2]), e.normalize().multiplyScalar(t), (f[i + 0] = e.x), (f[i + 1] = e.y), (f[i + 2] = e.z);
                    })(n),
                    (function () {
                        for (var t = new c(), e = 0; e < f.length; e += 3) {
                            (t.x = f[e + 0]), (t.y = f[e + 1]), (t.z = f[e + 2]);
                            var i = d(t) / 2 / Math.PI + 0.5,
                                n = p(t) / Math.PI + 0.5;
                            m.push(i, 1 - n);
                        }
                        u(), a();
                    })(),
                    this.addAttribute("position", Tt(f, 3)),
                    this.addAttribute("normal", Tt(f.slice(), 3)),
                    this.addAttribute("uv", Tt(m, 2)),
                    this.normalizeNormals(),
                    (this.boundingSphere = new et(new c(), n));
            }
            function je(t, e) {
                var i = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1],
                    n = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];
                Le.call(this, i, n, t, e), (this.type = "TetrahedronBufferGeometry"), (this.parameters = { radius: t, detail: e });
            }
            function ke(t, e) {
                St.call(this), (this.type = "TetrahedronGeometry"), (this.parameters = { radius: t, detail: e }), this.fromBufferGeometry(new je(t, e)), this.mergeVertices();
            }
            function Ie(t, e) {
                var i = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1],
                    n = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];
                Le.call(this, i, n, t, e), (this.type = "OctahedronBufferGeometry"), (this.parameters = { radius: t, detail: e });
            }
            function Ne(t, e) {
                St.call(this), (this.type = "OctahedronGeometry"), (this.parameters = { radius: t, detail: e }), this.fromBufferGeometry(new Ie(t, e)), this.mergeVertices();
            }
            function Fe(t, e) {
                var i = (1 + Math.sqrt(5)) / 2,
                    n = [-1, i, 0, 1, i, 0, -1, -i, 0, 1, -i, 0, 0, -1, i, 0, 1, i, 0, -1, -i, 0, 1, -i, i, 0, -1, i, 0, 1, -i, 0, -1, -i, 0, 1],
                    r = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];
                Le.call(this, n, r, t, e), (this.type = "IcosahedronBufferGeometry"), (this.parameters = { radius: t, detail: e });
            }
            function Ue(t, e) {
                St.call(this), (this.type = "IcosahedronGeometry"), (this.parameters = { radius: t, detail: e }), this.fromBufferGeometry(new Fe(t, e)), this.mergeVertices();
            }
            function Be(t, e) {
                var i = (1 + Math.sqrt(5)) / 2,
                    n = 1 / i,
                    r = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -n, -i, 0, -n, i, 0, n, -i, 0, n, i, -n, -i, 0, -n, i, 0, n, -i, 0, n, i, 0, -i, 0, -n, i, 0, -n, -i, 0, n, i, 0, n],
                    o = [
                        3,
                        11,
                        7,
                        3,
                        7,
                        15,
                        3,
                        15,
                        13,
                        7,
                        19,
                        17,
                        7,
                        17,
                        6,
                        7,
                        6,
                        15,
                        17,
                        4,
                        8,
                        17,
                        8,
                        10,
                        17,
                        10,
                        6,
                        8,
                        0,
                        16,
                        8,
                        16,
                        2,
                        8,
                        2,
                        10,
                        0,
                        12,
                        1,
                        0,
                        1,
                        18,
                        0,
                        18,
                        16,
                        6,
                        10,
                        2,
                        6,
                        2,
                        13,
                        6,
                        13,
                        15,
                        2,
                        16,
                        18,
                        2,
                        18,
                        3,
                        2,
                        3,
                        13,
                        18,
                        1,
                        9,
                        18,
                        9,
                        11,
                        18,
                        11,
                        3,
                        4,
                        14,
                        12,
                        4,
                        12,
                        0,
                        4,
                        0,
                        8,
                        11,
                        9,
                        5,
                        11,
                        5,
                        19,
                        11,
                        19,
                        7,
                        19,
                        5,
                        14,
                        19,
                        14,
                        4,
                        19,
                        4,
                        17,
                        1,
                        12,
                        14,
                        1,
                        14,
                        5,
                        1,
                        5,
                        9,
                    ];
                Le.call(this, r, o, t, e), (this.type = "DodecahedronBufferGeometry"), (this.parameters = { radius: t, detail: e });
            }
            function Ge(t, e) {
                St.call(this), (this.type = "DodecahedronGeometry"), (this.parameters = { radius: t, detail: e }), this.fromBufferGeometry(new Be(t, e)), this.mergeVertices();
            }
            function ze(t, e, i, n) {
                St.call(this), (this.type = "PolyhedronGeometry"), (this.parameters = { vertices: t, indices: e, radius: i, detail: n }), this.fromBufferGeometry(new Le(t, e, i, n)), this.mergeVertices();
            }
            function Ve(t, e, n, r, o) {
                function a(i) {
                    var o = t.getPointAt(i / e),
                        a = u.normals[i],
                        s = u.binormals[i];
                    for (d = 0; d <= r; d++) {
                        var l = (d / r) * Math.PI * 2,
                            c = Math.sin(l),
                            h = -Math.cos(l);
                        (f.x = h * a.x + c * s.x), (f.y = h * a.y + c * s.y), (f.z = h * a.z + c * s.z), f.normalize(), g.push(f.x, f.y, f.z), (p.x = o.x + n * f.x), (p.y = o.y + n * f.y), (p.z = o.z + n * f.z), v.push(p.x, p.y, p.z);
                    }
                }
                function s() {
                    for (d = 1; d <= e; d++)
                        for (h = 1; h <= r; h++) {
                            var t = (r + 1) * (d - 1) + (h - 1),
                                i = (r + 1) * d + (h - 1),
                                n = (r + 1) * d + h,
                                o = (r + 1) * (d - 1) + h;
                            _.push(t, i, o), _.push(i, n, o);
                        }
                }
                function l() {
                    for (h = 0; h <= e; h++) for (d = 0; d <= r; d++) (m.x = h / e), (m.y = d / r), y.push(m.x, m.y);
                }
                Ct.call(this), (this.type = "TubeBufferGeometry"), (this.parameters = { path: t, tubularSegments: e, radius: n, radialSegments: r, closed: o }), (e = e || 64), (n = n || 1), (r = r || 8), (o = o || !1);
                var u = t.computeFrenetFrames(e, o);
                (this.tangents = u.tangents), (this.normals = u.normals), (this.binormals = u.binormals);
                var h,
                    d,
                    p = new c(),
                    f = new c(),
                    m = new i(),
                    v = [],
                    g = [],
                    y = [],
                    _ = [];
                !(function () {
                    for (h = 0; h < e; h++) a(h);
                    a(!1 === o ? e : 0), l(), s();
                })(),
                    this.setIndex((_.length > 65535 ? wt : bt)(_, 1)),
                    this.addAttribute("position", Tt(v, 3)),
                    this.addAttribute("normal", Tt(g, 3)),
                    this.addAttribute("uv", Tt(y, 2));
            }
            function He(t, e, i, n, r, o) {
                St.call(this), (this.type = "TubeGeometry"), (this.parameters = { path: t, tubularSegments: e, radius: i, radialSegments: n, closed: r }), void 0 !== o && console.warn("THREE.TubeGeometry: taper has been removed.");
                var a = new Ve(t, e, i, n, r);
                (this.tangents = a.tangents), (this.normals = a.normals), (this.binormals = a.binormals), this.fromBufferGeometry(a), this.mergeVertices();
            }
            function We(t, e, n, r, o, a) {
                function s(t, e, i, n, r) {
                    var o = Math.cos(t),
                        a = Math.sin(t),
                        s = (i / e) * t,
                        l = Math.cos(s);
                    (r.x = n * (2 + l) * 0.5 * o), (r.y = n * (2 + l) * a * 0.5), (r.z = n * Math.sin(s) * 0.5);
                }
                Ct.call(this),
                    (this.type = "TorusKnotBufferGeometry"),
                    (this.parameters = { radius: t, tube: e, tubularSegments: n, radialSegments: r, p: o, q: a }),
                    (t = t || 100),
                    (e = e || 40),
                    (n = Math.floor(n) || 64),
                    (r = Math.floor(r) || 8),
                    (o = o || 2),
                    (a = a || 3);
                var l,
                    u,
                    h = (r + 1) * (n + 1),
                    d = r * n * 2 * 3,
                    p = new mt(new (d > 65535 ? Uint32Array : Uint16Array)(d), 1),
                    f = new mt(new Float32Array(3 * h), 3),
                    m = new mt(new Float32Array(3 * h), 3),
                    v = new mt(new Float32Array(2 * h), 2),
                    g = 0,
                    y = 0,
                    _ = new c(),
                    b = new c(),
                    x = new i(),
                    w = new c(),
                    T = new c(),
                    E = new c(),
                    M = new c(),
                    S = new c();
                for (l = 0; l <= n; ++l) {
                    var A = (l / n) * o * Math.PI * 2;
                    for (s(A, o, a, t, w), s(A + 0.01, o, a, t, T), M.subVectors(T, w), S.addVectors(T, w), E.crossVectors(M, S), S.crossVectors(E, M), E.normalize(), S.normalize(), u = 0; u <= r; ++u) {
                        var R = (u / r) * Math.PI * 2,
                            C = -e * Math.cos(R),
                            P = e * Math.sin(R);
                        (_.x = w.x + (C * S.x + P * E.x)),
                            (_.y = w.y + (C * S.y + P * E.y)),
                            (_.z = w.z + (C * S.z + P * E.z)),
                            f.setXYZ(g, _.x, _.y, _.z),
                            b.subVectors(_, w).normalize(),
                            m.setXYZ(g, b.x, b.y, b.z),
                            (x.x = l / n),
                            (x.y = u / r),
                            v.setXY(g, x.x, x.y),
                            g++;
                    }
                }
                for (u = 1; u <= n; u++)
                    for (l = 1; l <= r; l++) {
                        var D = (r + 1) * (u - 1) + (l - 1),
                            O = (r + 1) * u + (l - 1),
                            L = (r + 1) * u + l,
                            j = (r + 1) * (u - 1) + l;
                        p.setX(y, D), y++, p.setX(y, O), y++, p.setX(y, j), y++, p.setX(y, O), y++, p.setX(y, L), y++, p.setX(y, j), y++;
                    }
                this.setIndex(p), this.addAttribute("position", f), this.addAttribute("normal", m), this.addAttribute("uv", v);
            }
            function Xe(t, e, i, n, r, o, a) {
                St.call(this),
                    (this.type = "TorusKnotGeometry"),
                    (this.parameters = { radius: t, tube: e, tubularSegments: i, radialSegments: n, p: r, q: o }),
                    void 0 !== a && console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),
                    this.fromBufferGeometry(new We(t, e, i, n, r, o)),
                    this.mergeVertices();
            }
            function qe(t, e, i, n, r) {
                Ct.call(this),
                    (this.type = "TorusBufferGeometry"),
                    (this.parameters = { radius: t, tube: e, radialSegments: i, tubularSegments: n, arc: r }),
                    (t = t || 100),
                    (e = e || 40),
                    (i = Math.floor(i) || 8),
                    (n = Math.floor(n) || 6),
                    (r = r || 2 * Math.PI);
                var o,
                    a,
                    s = (i + 1) * (n + 1),
                    l = i * n * 2 * 3,
                    u = new (l > 65535 ? Uint32Array : Uint16Array)(l),
                    h = new Float32Array(3 * s),
                    d = new Float32Array(3 * s),
                    p = new Float32Array(2 * s),
                    f = 0,
                    m = 0,
                    v = 0,
                    g = new c(),
                    y = new c(),
                    _ = new c();
                for (o = 0; o <= i; o++)
                    for (a = 0; a <= n; a++) {
                        var b = (a / n) * r,
                            x = (o / i) * Math.PI * 2;
                        (y.x = (t + e * Math.cos(x)) * Math.cos(b)),
                            (y.y = (t + e * Math.cos(x)) * Math.sin(b)),
                            (y.z = e * Math.sin(x)),
                            (h[f] = y.x),
                            (h[f + 1] = y.y),
                            (h[f + 2] = y.z),
                            (g.x = t * Math.cos(b)),
                            (g.y = t * Math.sin(b)),
                            _.subVectors(y, g).normalize(),
                            (d[f] = _.x),
                            (d[f + 1] = _.y),
                            (d[f + 2] = _.z),
                            (p[m] = a / n),
                            (p[m + 1] = o / i),
                            (f += 3),
                            (m += 2);
                    }
                for (o = 1; o <= i; o++)
                    for (a = 1; a <= n; a++) {
                        var w = (n + 1) * o + a - 1,
                            T = (n + 1) * (o - 1) + a - 1,
                            E = (n + 1) * (o - 1) + a,
                            M = (n + 1) * o + a;
                        (u[v] = w), (u[v + 1] = T), (u[v + 2] = M), (u[v + 3] = T), (u[v + 4] = E), (u[v + 5] = M), (v += 6);
                    }
                this.setIndex(new mt(u, 1)), this.addAttribute("position", new mt(h, 3)), this.addAttribute("normal", new mt(d, 3)), this.addAttribute("uv", new mt(p, 2));
            }
            function Ye(t, e, i, n, r) {
                St.call(this), (this.type = "TorusGeometry"), (this.parameters = { radius: t, tube: e, radialSegments: i, tubularSegments: n, arc: r }), this.fromBufferGeometry(new qe(t, e, i, n, r));
            }
            function Ze(t, e) {
                if (void 0 === t) return void (t = []);
                St.call(this), (this.type = "ExtrudeGeometry"), (t = Array.isArray(t) ? t : [t]), this.addShapeList(t, e), this.computeFaceNormals();
            }
            function Je(t, e) {
                e = e || {};
                var i = e.font;
                if (!1 === (i && i.isFont)) return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."), new St();
                var n = i.generateShapes(t, e.size, e.curveSegments);
                (e.amount = void 0 !== e.height ? e.height : 50),
                    void 0 === e.bevelThickness && (e.bevelThickness = 10),
                    void 0 === e.bevelSize && (e.bevelSize = 8),
                    void 0 === e.bevelEnabled && (e.bevelEnabled = !1),
                    Ze.call(this, n, e),
                    (this.type = "TextGeometry");
            }
            function Qe(t, e, i, n, r, o, a) {
                Ct.call(this),
                    (this.type = "SphereBufferGeometry"),
                    (this.parameters = { radius: t, widthSegments: e, heightSegments: i, phiStart: n, phiLength: r, thetaStart: o, thetaLength: a }),
                    (t = t || 50),
                    (e = Math.max(3, Math.floor(e) || 8)),
                    (i = Math.max(2, Math.floor(i) || 6)),
                    (n = void 0 !== n ? n : 0),
                    (r = void 0 !== r ? r : 2 * Math.PI),
                    (o = void 0 !== o ? o : 0),
                    (a = void 0 !== a ? a : Math.PI);
                for (var s = o + a, l = (e + 1) * (i + 1), u = new mt(new Float32Array(3 * l), 3), h = new mt(new Float32Array(3 * l), 3), d = new mt(new Float32Array(2 * l), 2), p = 0, f = [], m = new c(), v = 0; v <= i; v++) {
                    for (var g = [], y = v / i, _ = 0; _ <= e; _++) {
                        var b = _ / e,
                            x = -t * Math.cos(n + b * r) * Math.sin(o + y * a),
                            w = t * Math.cos(o + y * a),
                            T = t * Math.sin(n + b * r) * Math.sin(o + y * a);
                        m.set(x, w, T).normalize(), u.setXYZ(p, x, w, T), h.setXYZ(p, m.x, m.y, m.z), d.setXY(p, b, 1 - y), g.push(p), p++;
                    }
                    f.push(g);
                }
                for (var E = [], v = 0; v < i; v++)
                    for (var _ = 0; _ < e; _++) {
                        var M = f[v][_ + 1],
                            S = f[v][_],
                            A = f[v + 1][_],
                            R = f[v + 1][_ + 1];
                        (0 !== v || o > 0) && E.push(M, S, R), (v !== i - 1 || s < Math.PI) && E.push(S, A, R);
                    }
                this.setIndex(new (u.count > 65535 ? wt : bt)(E, 1)), this.addAttribute("position", u), this.addAttribute("normal", h), this.addAttribute("uv", d), (this.boundingSphere = new et(new c(), t));
            }
            function $e(t, e, i, n, r, o, a) {
                St.call(this),
                    (this.type = "SphereGeometry"),
                    (this.parameters = { radius: t, widthSegments: e, heightSegments: i, phiStart: n, phiLength: r, thetaStart: o, thetaLength: a }),
                    this.fromBufferGeometry(new Qe(t, e, i, n, r, o, a));
            }
            function Ke(t, e, n, r, o, a) {
                Ct.call(this),
                    (this.type = "RingBufferGeometry"),
                    (this.parameters = { innerRadius: t, outerRadius: e, thetaSegments: n, phiSegments: r, thetaStart: o, thetaLength: a }),
                    (t = t || 20),
                    (e = e || 50),
                    (o = void 0 !== o ? o : 0),
                    (a = void 0 !== a ? a : 2 * Math.PI),
                    (n = void 0 !== n ? Math.max(3, n) : 8),
                    (r = void 0 !== r ? Math.max(1, r) : 1);
                var s,
                    l,
                    u,
                    h = (n + 1) * (r + 1),
                    d = n * r * 2 * 3,
                    p = new mt(new (d > 65535 ? Uint32Array : Uint16Array)(d), 1),
                    f = new mt(new Float32Array(3 * h), 3),
                    m = new mt(new Float32Array(3 * h), 3),
                    v = new mt(new Float32Array(2 * h), 2),
                    g = 0,
                    y = 0,
                    _ = t,
                    b = (e - t) / r,
                    x = new c(),
                    w = new i();
                for (l = 0; l <= r; l++) {
                    for (u = 0; u <= n; u++)
                        (s = o + (u / n) * a), (x.x = _ * Math.cos(s)), (x.y = _ * Math.sin(s)), f.setXYZ(g, x.x, x.y, x.z), m.setXYZ(g, 0, 0, 1), (w.x = (x.x / e + 1) / 2), (w.y = (x.y / e + 1) / 2), v.setXY(g, w.x, w.y), g++;
                    _ += b;
                }
                for (l = 0; l < r; l++) {
                    var T = l * (n + 1);
                    for (u = 0; u < n; u++) {
                        s = u + T;
                        var E = s,
                            M = s + n + 1,
                            S = s + n + 2,
                            A = s + 1;
                        p.setX(y, E), y++, p.setX(y, M), y++, p.setX(y, S), y++, p.setX(y, E), y++, p.setX(y, S), y++, p.setX(y, A), y++;
                    }
                }
                this.setIndex(p), this.addAttribute("position", f), this.addAttribute("normal", m), this.addAttribute("uv", v);
            }
            function ti(t, e, i, n, r, o) {
                St.call(this), (this.type = "RingGeometry"), (this.parameters = { innerRadius: t, outerRadius: e, thetaSegments: i, phiSegments: n, thetaStart: r, thetaLength: o }), this.fromBufferGeometry(new Ke(t, e, i, n, r, o));
            }
            function ei(t, e, i, n) {
                St.call(this), (this.type = "PlaneGeometry"), (this.parameters = { width: t, height: e, widthSegments: i, heightSegments: n }), this.fromBufferGeometry(new Ot(t, e, i, n));
            }
            function ii(t, e, n, r) {
                Ct.call(this),
                    (this.type = "LatheBufferGeometry"),
                    (this.parameters = { points: t, segments: e, phiStart: n, phiLength: r }),
                    (e = Math.floor(e) || 12),
                    (n = n || 0),
                    (r = r || 2 * Math.PI),
                    (r = Ma.clamp(r, 0, 2 * Math.PI));
                var o,
                    a,
                    s,
                    l = (e + 1) * t.length,
                    u = e * t.length * 2 * 3,
                    h = new mt(new (u > 65535 ? Uint32Array : Uint16Array)(u), 1),
                    d = new mt(new Float32Array(3 * l), 3),
                    p = new mt(new Float32Array(2 * l), 2),
                    f = 0,
                    m = 0,
                    v = 1 / e,
                    g = new c(),
                    y = new i();
                for (a = 0; a <= e; a++) {
                    var _ = n + a * v * r,
                        b = Math.sin(_),
                        x = Math.cos(_);
                    for (s = 0; s <= t.length - 1; s++) (g.x = t[s].x * b), (g.y = t[s].y), (g.z = t[s].x * x), d.setXYZ(f, g.x, g.y, g.z), (y.x = a / e), (y.y = s / (t.length - 1)), p.setXY(f, y.x, y.y), f++;
                }
                for (a = 0; a < e; a++)
                    for (s = 0; s < t.length - 1; s++) {
                        o = s + a * t.length;
                        var w = o,
                            T = o + t.length,
                            E = o + t.length + 1,
                            M = o + 1;
                        h.setX(m, w), m++, h.setX(m, T), m++, h.setX(m, M), m++, h.setX(m, T), m++, h.setX(m, E), m++, h.setX(m, M), m++;
                    }
                if ((this.setIndex(h), this.addAttribute("position", d), this.addAttribute("uv", p), this.computeVertexNormals(), r === 2 * Math.PI)) {
                    var S = this.attributes.normal.array,
                        A = new c(),
                        R = new c(),
                        C = new c();
                    for (o = e * t.length * 3, a = 0, s = 0; a < t.length; a++, s += 3)
                        (A.x = S[s + 0]),
                            (A.y = S[s + 1]),
                            (A.z = S[s + 2]),
                            (R.x = S[o + s + 0]),
                            (R.y = S[o + s + 1]),
                            (R.z = S[o + s + 2]),
                            C.addVectors(A, R).normalize(),
                            (S[s + 0] = S[o + s + 0] = C.x),
                            (S[s + 1] = S[o + s + 1] = C.y),
                            (S[s + 2] = S[o + s + 2] = C.z);
                }
            }
            function ni(t, e, i, n) {
                St.call(this), (this.type = "LatheGeometry"), (this.parameters = { points: t, segments: e, phiStart: i, phiLength: n }), this.fromBufferGeometry(new ii(t, e, i, n)), this.mergeVertices();
            }
            function ri(t, e) {
                St.call(this), (this.type = "ShapeGeometry"), !1 === Array.isArray(t) && (t = [t]), this.addShapeList(t, e), this.computeFaceNormals();
            }
            function oi(t, e) {
                function i(t, e) {
                    return t - e;
                }
                Ct.call(this), (e = void 0 !== e ? e : 1);
                var n,
                    r = Math.cos(Ma.DEG2RAD * e),
                    o = [0, 0],
                    a = {},
                    s = ["a", "b", "c"];
                t && t.isBufferGeometry ? ((n = new St()), n.fromBufferGeometry(t)) : (n = t.clone()), n.mergeVertices(), n.computeFaceNormals();
                for (var l = n.vertices, c = n.faces, u = 0, h = c.length; u < h; u++)
                    for (var d = c[u], p = 0; p < 3; p++) {
                        (o[0] = d[s[p]]), (o[1] = d[s[(p + 1) % 3]]), o.sort(i);
                        var f = o.toString();
                        void 0 === a[f] ? (a[f] = { vert1: o[0], vert2: o[1], face1: u, face2: void 0 }) : (a[f].face2 = u);
                    }
                var m = [];
                for (var f in a) {
                    var v = a[f];
                    if (void 0 === v.face2 || c[v.face1].normal.dot(c[v.face2].normal) <= r) {
                        var g = l[v.vert1];
                        m.push(g.x), m.push(g.y), m.push(g.z), (g = l[v.vert2]), m.push(g.x), m.push(g.y), m.push(g.z);
                    }
                }
                this.addAttribute("position", new mt(new Float32Array(m), 3));
            }
            function ai(t, e, n, r, o, a, s, l) {
                function u(n) {
                    var o,
                        a,
                        u,
                        d = new i(),
                        p = new c(),
                        f = 0,
                        x = !0 === n ? t : e,
                        E = !0 === n ? 1 : -1;
                    for (a = _, o = 1; o <= r; o++) v.setXYZ(_, 0, w * E, 0), g.setXYZ(_, 0, E, 0), (d.x = 0.5), (d.y = 0.5), y.setXY(_, d.x, d.y), _++;
                    for (u = _, o = 0; o <= r; o++) {
                        var M = o / r,
                            S = M * l + s,
                            A = Math.cos(S),
                            R = Math.sin(S);
                        (p.x = x * R), (p.y = w * E), (p.z = x * A), v.setXYZ(_, p.x, p.y, p.z), g.setXYZ(_, 0, E, 0), (d.x = 0.5 * A + 0.5), (d.y = 0.5 * R * E + 0.5), y.setXY(_, d.x, d.y), _++;
                    }
                    for (o = 0; o < r; o++) {
                        var C = a + o,
                            P = u + o;
                        !0 === n ? (m.setX(b, P), b++, m.setX(b, P + 1), b++, m.setX(b, C), b++) : (m.setX(b, P + 1), b++, m.setX(b, P), b++, m.setX(b, C), b++), (f += 3);
                    }
                    h.addGroup(T, f, !0 === n ? 1 : 2), (T += f);
                }
                Ct.call(this), (this.type = "CylinderBufferGeometry"), (this.parameters = { radiusTop: t, radiusBottom: e, height: n, radialSegments: r, heightSegments: o, openEnded: a, thetaStart: s, thetaLength: l });
                var h = this;
                (t = void 0 !== t ? t : 20),
                    (e = void 0 !== e ? e : 20),
                    (n = void 0 !== n ? n : 100),
                    (r = Math.floor(r) || 8),
                    (o = Math.floor(o) || 1),
                    (a = void 0 !== a && a),
                    (s = void 0 !== s ? s : 0),
                    (l = void 0 !== l ? l : 2 * Math.PI);
                var d = 0;
                !1 === a && (t > 0 && d++, e > 0 && d++);
                var p = (function () {
                        var t = (r + 1) * (o + 1);
                        return !1 === a && (t += (r + 1) * d + r * d), t;
                    })(),
                    f = (function () {
                        var t = r * o * 2 * 3;
                        return !1 === a && (t += r * d * 3), t;
                    })(),
                    m = new mt(new (f > 65535 ? Uint32Array : Uint16Array)(f), 1),
                    v = new mt(new Float32Array(3 * p), 3),
                    g = new mt(new Float32Array(3 * p), 3),
                    y = new mt(new Float32Array(2 * p), 2),
                    _ = 0,
                    b = 0,
                    x = [],
                    w = n / 2,
                    T = 0;
                !(function () {
                    var i,
                        a,
                        u = new c(),
                        d = new c(),
                        p = 0,
                        f = (e - t) / n;
                    for (a = 0; a <= o; a++) {
                        var E = [],
                            M = a / o,
                            S = M * (e - t) + t;
                        for (i = 0; i <= r; i++) {
                            var A = i / r,
                                R = A * l + s,
                                C = Math.sin(R),
                                P = Math.cos(R);
                            (d.x = S * C), (d.y = -M * n + w), (d.z = S * P), v.setXYZ(_, d.x, d.y, d.z), u.set(C, f, P).normalize(), g.setXYZ(_, u.x, u.y, u.z), y.setXY(_, A, 1 - M), E.push(_), _++;
                        }
                        x.push(E);
                    }
                    for (i = 0; i < r; i++)
                        for (a = 0; a < o; a++) {
                            var D = x[a][i],
                                O = x[a + 1][i],
                                L = x[a + 1][i + 1],
                                j = x[a][i + 1];
                            m.setX(b, D), b++, m.setX(b, O), b++, m.setX(b, j), b++, m.setX(b, O), b++, m.setX(b, L), b++, m.setX(b, j), b++, (p += 6);
                        }
                    h.addGroup(T, p, 0), (T += p);
                })(),
                    !1 === a && (t > 0 && u(!0), e > 0 && u(!1)),
                    this.setIndex(m),
                    this.addAttribute("position", v),
                    this.addAttribute("normal", g),
                    this.addAttribute("uv", y);
            }
            function si(t, e, i, n, r, o, a, s) {
                St.call(this),
                    (this.type = "CylinderGeometry"),
                    (this.parameters = { radiusTop: t, radiusBottom: e, height: i, radialSegments: n, heightSegments: r, openEnded: o, thetaStart: a, thetaLength: s }),
                    this.fromBufferGeometry(new ai(t, e, i, n, r, o, a, s)),
                    this.mergeVertices();
            }
            function li(t, e, i, n, r, o, a) {
                si.call(this, 0, t, e, i, n, r, o, a), (this.type = "ConeGeometry"), (this.parameters = { radius: t, height: e, radialSegments: i, heightSegments: n, openEnded: r, thetaStart: o, thetaLength: a });
            }
            function ci(t, e, i, n, r, o, a) {
                ai.call(this, 0, t, e, i, n, r, o, a), (this.type = "ConeBufferGeometry"), (this.parameters = { radius: t, height: e, radialSegments: i, heightSegments: n, openEnded: r, thetaStart: o, thetaLength: a });
            }
            function ui(t, e, i, n) {
                Ct.call(this),
                    (this.type = "CircleBufferGeometry"),
                    (this.parameters = { radius: t, segments: e, thetaStart: i, thetaLength: n }),
                    (t = t || 50),
                    (e = void 0 !== e ? Math.max(3, e) : 8),
                    (i = void 0 !== i ? i : 0),
                    (n = void 0 !== n ? n : 2 * Math.PI);
                var r = e + 2,
                    o = new Float32Array(3 * r),
                    a = new Float32Array(3 * r),
                    s = new Float32Array(2 * r);
                (a[2] = 1), (s[0] = 0.5), (s[1] = 0.5);
                for (var l = 0, u = 3, h = 2; l <= e; l++, u += 3, h += 2) {
                    var d = i + (l / e) * n;
                    (o[u] = t * Math.cos(d)), (o[u + 1] = t * Math.sin(d)), (a[u + 2] = 1), (s[h] = (o[u] / t + 1) / 2), (s[h + 1] = (o[u + 1] / t + 1) / 2);
                }
                for (var p = [], u = 1; u <= e; u++) p.push(u, u + 1, 0);
                this.setIndex(new mt(new Uint16Array(p), 1)), this.addAttribute("position", new mt(o, 3)), this.addAttribute("normal", new mt(a, 3)), this.addAttribute("uv", new mt(s, 2)), (this.boundingSphere = new et(new c(), t));
            }
            function hi(t, e, i, n) {
                St.call(this), (this.type = "CircleGeometry"), (this.parameters = { radius: t, segments: e, thetaStart: i, thetaLength: n }), this.fromBufferGeometry(new ui(t, e, i, n));
            }
            function di(t, e, i, n, r, o) {
                St.call(this),
                    (this.type = "BoxGeometry"),
                    (this.parameters = { width: t, height: e, depth: i, widthSegments: n, heightSegments: r, depthSegments: o }),
                    this.fromBufferGeometry(new Dt(t, e, i, n, r, o)),
                    this.mergeVertices();
            }
            function pi() {
                $.call(this, { uniforms: Oa.merge([ka.lights, { opacity: { value: 1 } }]), vertexShader: La.shadow_vert, fragmentShader: La.shadow_frag }),
                    (this.lights = !0),
                    (this.transparent = !0),
                    Object.defineProperties(this, {
                        opacity: {
                            enumerable: !0,
                            get: function () {
                                return this.uniforms.opacity.value;
                            },
                            set: function (t) {
                                this.uniforms.opacity.value = t;
                            },
                        },
                    });
            }
            function fi(t) {
                $.call(this, t), (this.type = "RawShaderMaterial");
            }
            function mi(t) {
                (this.uuid = Ma.generateUUID()), (this.type = "MultiMaterial"), (this.materials = t instanceof Array ? t : []), (this.visible = !0);
            }
            function vi(t) {
                J.call(this),
                    (this.defines = { STANDARD: "" }),
                    (this.type = "MeshStandardMaterial"),
                    (this.color = new X(16777215)),
                    (this.roughness = 0.5),
                    (this.metalness = 0.5),
                    (this.map = null),
                    (this.lightMap = null),
                    (this.lightMapIntensity = 1),
                    (this.aoMap = null),
                    (this.aoMapIntensity = 1),
                    (this.emissive = new X(0)),
                    (this.emissiveIntensity = 1),
                    (this.emissiveMap = null),
                    (this.bumpMap = null),
                    (this.bumpScale = 1),
                    (this.normalMap = null),
                    (this.normalScale = new i(1, 1)),
                    (this.displacementMap = null),
                    (this.displacementScale = 1),
                    (this.displacementBias = 0),
                    (this.roughnessMap = null),
                    (this.metalnessMap = null),
                    (this.alphaMap = null),
                    (this.envMap = null),
                    (this.envMapIntensity = 1),
                    (this.refractionRatio = 0.98),
                    (this.wireframe = !1),
                    (this.wireframeLinewidth = 1),
                    (this.wireframeLinecap = "round"),
                    (this.wireframeLinejoin = "round"),
                    (this.skinning = !1),
                    (this.morphTargets = !1),
                    (this.morphNormals = !1),
                    this.setValues(t);
            }
            function gi(t) {
                vi.call(this), (this.defines = { PHYSICAL: "" }), (this.type = "MeshPhysicalMaterial"), (this.reflectivity = 0.5), (this.clearCoat = 0), (this.clearCoatRoughness = 0), this.setValues(t);
            }
            function yi(t) {
                J.call(this),
                    (this.type = "MeshPhongMaterial"),
                    (this.color = new X(16777215)),
                    (this.specular = new X(1118481)),
                    (this.shininess = 30),
                    (this.map = null),
                    (this.lightMap = null),
                    (this.lightMapIntensity = 1),
                    (this.aoMap = null),
                    (this.aoMapIntensity = 1),
                    (this.emissive = new X(0)),
                    (this.emissiveIntensity = 1),
                    (this.emissiveMap = null),
                    (this.bumpMap = null),
                    (this.bumpScale = 1),
                    (this.normalMap = null),
                    (this.normalScale = new i(1, 1)),
                    (this.displacementMap = null),
                    (this.displacementScale = 1),
                    (this.displacementBias = 0),
                    (this.specularMap = null),
                    (this.alphaMap = null),
                    (this.envMap = null),
                    (this.combine = lo),
                    (this.reflectivity = 1),
                    (this.refractionRatio = 0.98),
                    (this.wireframe = !1),
                    (this.wireframeLinewidth = 1),
                    (this.wireframeLinecap = "round"),
                    (this.wireframeLinejoin = "round"),
                    (this.skinning = !1),
                    (this.morphTargets = !1),
                    (this.morphNormals = !1),
                    this.setValues(t);
            }
            function _i(t) {
                J.call(this, t), (this.type = "MeshNormalMaterial"), (this.wireframe = !1), (this.wireframeLinewidth = 1), (this.fog = !1), (this.lights = !1), (this.morphTargets = !1), this.setValues(t);
            }
            function bi(t) {
                J.call(this),
                    (this.type = "MeshLambertMaterial"),
                    (this.color = new X(16777215)),
                    (this.map = null),
                    (this.lightMap = null),
                    (this.lightMapIntensity = 1),
                    (this.aoMap = null),
                    (this.aoMapIntensity = 1),
                    (this.emissive = new X(0)),
                    (this.emissiveIntensity = 1),
                    (this.emissiveMap = null),
                    (this.specularMap = null),
                    (this.alphaMap = null),
                    (this.envMap = null),
                    (this.combine = lo),
                    (this.reflectivity = 1),
                    (this.refractionRatio = 0.98),
                    (this.wireframe = !1),
                    (this.wireframeLinewidth = 1),
                    (this.wireframeLinecap = "round"),
                    (this.wireframeLinejoin = "round"),
                    (this.skinning = !1),
                    (this.morphTargets = !1),
                    (this.morphNormals = !1),
                    this.setValues(t);
            }
            function xi(t) {
                J.call(this), (this.type = "LineDashedMaterial"), (this.color = new X(16777215)), (this.linewidth = 1), (this.scale = 1), (this.dashSize = 3), (this.gapSize = 1), (this.lights = !1), this.setValues(t);
            }
            function wi(t, e, i) {
                var n = this,
                    r = !1,
                    o = 0,
                    a = 0;
                (this.onStart = void 0),
                    (this.onLoad = t),
                    (this.onProgress = e),
                    (this.onError = i),
                    (this.itemStart = function (t) {
                        a++, !1 === r && void 0 !== n.onStart && n.onStart(t, o, a), (r = !0);
                    }),
                    (this.itemEnd = function (t) {
                        o++, void 0 !== n.onProgress && n.onProgress(t, o, a), o === a && ((r = !1), void 0 !== n.onLoad && n.onLoad());
                    }),
                    (this.itemError = function (t) {
                        void 0 !== n.onError && n.onError(t);
                    });
            }
            function Ti(t) {
                this.manager = void 0 !== t ? t : Wa;
            }
            function Ei(t) {
                (this.manager = void 0 !== t ? t : Wa), (this._parser = null);
            }
            function Mi(t) {
                (this.manager = void 0 !== t ? t : Wa), (this._parser = null);
            }
            function Si(t) {
                this.manager = void 0 !== t ? t : Wa;
            }
            function Ai(t) {
                this.manager = void 0 !== t ? t : Wa;
            }
            function Ri(t) {
                this.manager = void 0 !== t ? t : Wa;
            }
            function Ci(t, e) {
                ct.call(this), (this.type = "Light"), (this.color = new X(t)), (this.intensity = void 0 !== e ? e : 1), (this.receiveShadow = void 0);
            }
            function Pi(t, e, i) {
                Ci.call(this, t, i), (this.type = "HemisphereLight"), (this.castShadow = void 0), this.position.copy(ct.DefaultUp), this.updateMatrix(), (this.groundColor = new X(e));
            }
            function Di(t) {
                (this.camera = t), (this.bias = 0), (this.radius = 1), (this.mapSize = new i(512, 512)), (this.map = null), (this.matrix = new u());
            }
            function Oi() {
                Di.call(this, new jt(50, 1, 0.5, 500));
            }
            function Li(t, e, i, n, r, o) {
                Ci.call(this, t, e),
                    (this.type = "SpotLight"),
                    this.position.copy(ct.DefaultUp),
                    this.updateMatrix(),
                    (this.target = new ct()),
                    Object.defineProperty(this, "power", {
                        get: function () {
                            return this.intensity * Math.PI;
                        },
                        set: function (t) {
                            this.intensity = t / Math.PI;
                        },
                    }),
                    (this.distance = void 0 !== i ? i : 0),
                    (this.angle = void 0 !== n ? n : Math.PI / 3),
                    (this.penumbra = void 0 !== r ? r : 0),
                    (this.decay = void 0 !== o ? o : 1),
                    (this.shadow = new Oi());
            }
            function ji(t, e, i, n) {
                Ci.call(this, t, e),
                    (this.type = "PointLight"),
                    Object.defineProperty(this, "power", {
                        get: function () {
                            return 4 * this.intensity * Math.PI;
                        },
                        set: function (t) {
                            this.intensity = t / (4 * Math.PI);
                        },
                    }),
                    (this.distance = void 0 !== i ? i : 0),
                    (this.decay = void 0 !== n ? n : 1),
                    (this.shadow = new Di(new jt(90, 1, 0.5, 500)));
            }
            function ki(t) {
                Di.call(this, new kt(-5, 5, 5, -5, 0.5, 500));
            }
            function Ii(t, e) {
                Ci.call(this, t, e), (this.type = "DirectionalLight"), this.position.copy(ct.DefaultUp), this.updateMatrix(), (this.target = new ct()), (this.shadow = new ki());
            }
            function Ni(t, e) {
                Ci.call(this, t, e), (this.type = "AmbientLight"), (this.castShadow = void 0);
            }
            function Fi(t, e, i, n) {
                (this.parameterPositions = t), (this._cachedIndex = 0), (this.resultBuffer = void 0 !== n ? n : new e.constructor(i)), (this.sampleValues = e), (this.valueSize = i);
            }
            function Ui(t, e, i, n) {
                Fi.call(this, t, e, i, n), (this._weightPrev = -0), (this._offsetPrev = -0), (this._weightNext = -0), (this._offsetNext = -0);
            }
            function Bi(t, e, i, n) {
                Fi.call(this, t, e, i, n);
            }
            function Gi(t, e, i, n) {
                Fi.call(this, t, e, i, n);
            }
            function zi(t, e, i, n) {
                if (void 0 === t) throw new Error("track name is undefined");
                if (void 0 === e || 0 === e.length) throw new Error("no keyframes in track named " + t);
                (this.name = t), (this.times = qa.convertArray(e, this.TimeBufferType)), (this.values = qa.convertArray(i, this.ValueBufferType)), this.setInterpolation(n || this.DefaultInterpolation), this.validate(), this.optimize();
            }
            function Vi(t, e, i, n) {
                zi.call(this, t, e, i, n);
            }
            function Hi(t, e, i, n) {
                Fi.call(this, t, e, i, n);
            }
            function Wi(t, e, i, n) {
                zi.call(this, t, e, i, n);
            }
            function Xi(t, e, i, n) {
                zi.call(this, t, e, i, n);
            }
            function qi(t, e, i, n) {
                zi.call(this, t, e, i, n);
            }
            function Yi(t, e, i) {
                zi.call(this, t, e, i);
            }
            function Zi(t, e, i, n) {
                zi.call(this, t, e, i, n);
            }
            function Ji(t, e, i, n) {
                zi.apply(this, arguments);
            }
            function Qi(t, e, i) {
                (this.name = t), (this.tracks = i), (this.duration = void 0 !== e ? e : -1), (this.uuid = Ma.generateUUID()), this.duration < 0 && this.resetDuration(), this.optimize();
            }
            function $i(t) {
                (this.manager = void 0 !== t ? t : Wa), (this.textures = {});
            }
            function Ki(t) {
                this.manager = void 0 !== t ? t : Wa;
            }
            function tn() {
                (this.onLoadStart = function () {}), (this.onLoadProgress = function () {}), (this.onLoadComplete = function () {});
            }
            function en(t) {
                "boolean" == typeof t && (console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."), (t = void 0)), (this.manager = void 0 !== t ? t : Wa), (this.withCredentials = !1);
            }
            function nn(t) {
                (this.manager = void 0 !== t ? t : Wa), (this.texturePath = "");
            }
            function rn() {}
            function on(t, e) {
                (this.v1 = t), (this.v2 = e);
            }
            function an() {
                (this.curves = []), (this.autoClose = !1);
            }
            function sn(t, e, i, n, r, o, a, s) {
                (this.aX = t), (this.aY = e), (this.xRadius = i), (this.yRadius = n), (this.aStartAngle = r), (this.aEndAngle = o), (this.aClockwise = a), (this.aRotation = s || 0);
            }
            function ln(t) {
                this.points = void 0 === t ? [] : t;
            }
            function cn(t, e, i, n) {
                (this.v0 = t), (this.v1 = e), (this.v2 = i), (this.v3 = n);
            }
            function un(t, e, i) {
                (this.v0 = t), (this.v1 = e), (this.v2 = i);
            }
            function hn() {
                dn.apply(this, arguments), (this.holes = []);
            }
            function dn(t) {
                an.call(this), (this.currentPoint = new i()), t && this.fromPoints(t);
            }
            function pn() {
                (this.subPaths = []), (this.currentPath = null);
            }
            function fn(t) {
                this.data = t;
            }
            function mn(t) {
                this.manager = void 0 !== t ? t : Wa;
            }
            function vn() {
                return void 0 === Qa && (Qa = new (window.AudioContext || window.webkitAudioContext)()), Qa;
            }
            function gn(t) {
                this.manager = void 0 !== t ? t : Wa;
            }
            function yn() {
                (this.type = "StereoCamera"),
                    (this.aspect = 1),
                    (this.eyeSep = 0.064),
                    (this.cameraL = new jt()),
                    this.cameraL.layers.enable(1),
                    (this.cameraL.matrixAutoUpdate = !1),
                    (this.cameraR = new jt()),
                    this.cameraR.layers.enable(2),
                    (this.cameraR.matrixAutoUpdate = !1);
            }
            function _n(t, e, i) {
                ct.call(this), (this.type = "CubeCamera");
                var n = new jt(90, 1, t, e);
                n.up.set(0, -1, 0), n.lookAt(new c(1, 0, 0)), this.add(n);
                var r = new jt(90, 1, t, e);
                r.up.set(0, -1, 0), r.lookAt(new c(-1, 0, 0)), this.add(r);
                var o = new jt(90, 1, t, e);
                o.up.set(0, 0, 1), o.lookAt(new c(0, 1, 0)), this.add(o);
                var a = new jt(90, 1, t, e);
                a.up.set(0, 0, -1), a.lookAt(new c(0, -1, 0)), this.add(a);
                var l = new jt(90, 1, t, e);
                l.up.set(0, -1, 0), l.lookAt(new c(0, 0, 1)), this.add(l);
                var u = new jt(90, 1, t, e);
                u.up.set(0, -1, 0), u.lookAt(new c(0, 0, -1)), this.add(u);
                var h = { format: Zo, magFilter: Oo, minFilter: Oo };
                (this.renderTarget = new s(i, i, h)),
                    (this.updateCubeMap = function (t, e) {
                        null === this.parent && this.updateMatrixWorld();
                        var i = this.renderTarget,
                            s = i.texture.generateMipmaps;
                        (i.texture.generateMipmaps = !1),
                            (i.activeCubeFace = 0),
                            t.render(e, n, i),
                            (i.activeCubeFace = 1),
                            t.render(e, r, i),
                            (i.activeCubeFace = 2),
                            t.render(e, o, i),
                            (i.activeCubeFace = 3),
                            t.render(e, a, i),
                            (i.activeCubeFace = 4),
                            t.render(e, l, i),
                            (i.texture.generateMipmaps = s),
                            (i.activeCubeFace = 5),
                            t.render(e, u, i),
                            t.setRenderTarget(null);
                    });
            }
            function bn() {
                ct.call(this), (this.type = "AudioListener"), (this.context = vn()), (this.gain = this.context.createGain()), this.gain.connect(this.context.destination), (this.filter = null);
            }
            function xn(t) {
                ct.call(this),
                    (this.type = "Audio"),
                    (this.context = t.context),
                    (this.source = this.context.createBufferSource()),
                    (this.source.onended = this.onEnded.bind(this)),
                    (this.gain = this.context.createGain()),
                    this.gain.connect(t.getInput()),
                    (this.autoplay = !1),
                    (this.startTime = 0),
                    (this.playbackRate = 1),
                    (this.isPlaying = !1),
                    (this.hasPlaybackControl = !0),
                    (this.sourceType = "empty"),
                    (this.filters = []);
            }
            function wn(t) {
                xn.call(this, t), (this.panner = this.context.createPanner()), this.panner.connect(this.gain);
            }
            function Tn(t, e) {
                (this.analyser = t.context.createAnalyser()), (this.analyser.fftSize = void 0 !== e ? e : 2048), (this.data = new Uint8Array(this.analyser.frequencyBinCount)), t.getOutput().connect(this.analyser);
            }
            function En(t, e, i) {
                (this.binding = t), (this.valueSize = i);
                var n,
                    r = Float64Array;
                switch (e) {
                    case "quaternion":
                        n = this._slerp;
                        break;
                    case "string":
                    case "bool":
                        (r = Array), (n = this._select);
                        break;
                    default:
                        n = this._lerp;
                }
                (this.buffer = new r(4 * i)), (this._mixBufferRegion = n), (this.cumulativeWeight = 0), (this.useCount = 0), (this.referenceCount = 0);
            }
            function Mn(t, e, i) {
                (this.path = e), (this.parsedPath = i || Mn.parseTrackName(e)), (this.node = Mn.findNode(t, this.parsedPath.nodeName) || t), (this.rootNode = t);
            }
            function Sn(t) {
                (this.uuid = Ma.generateUUID()), (this._objects = Array.prototype.slice.call(arguments)), (this.nCachedObjects_ = 0);
                var e = {};
                this._indicesByUUID = e;
                for (var i = 0, n = arguments.length; i !== n; ++i) e[arguments[i].uuid] = i;
                (this._paths = []), (this._parsedPaths = []), (this._bindings = []), (this._bindingsIndicesByPath = {});
                var r = this;
                this.stats = {
                    objects: {
                        get total() {
                            return r._objects.length;
                        },
                        get inUse() {
                            return this.total - r.nCachedObjects_;
                        },
                    },
                    get bindingsPerObject() {
                        return r._bindings.length;
                    },
                };
            }
            function An(t, e, i) {
                (this._mixer = t), (this._clip = e), (this._localRoot = i || null);
                for (var n = e.tracks, r = n.length, o = new Array(r), a = { endingStart: da, endingEnd: da }, s = 0; s !== r; ++s) {
                    var l = n[s].createInterpolant(null);
                    (o[s] = l), (l.settings = a);
                }
                (this._interpolantSettings = a),
                    (this._interpolants = o),
                    (this._propertyBindings = new Array(r)),
                    (this._cacheIndex = null),
                    (this._byClipCacheIndex = null),
                    (this._timeScaleInterpolant = null),
                    (this._weightInterpolant = null),
                    (this.loop = ha),
                    (this._loopCount = -1),
                    (this._startTime = null),
                    (this.time = 0),
                    (this.timeScale = 1),
                    (this._effectiveTimeScale = 1),
                    (this.weight = 1),
                    (this._effectiveWeight = 1),
                    (this.repetitions = 1 / 0),
                    (this.paused = !1),
                    (this.enabled = !0),
                    (this.clampWhenFinished = !1),
                    (this.zeroSlopeAtStart = !0),
                    (this.zeroSlopeAtEnd = !0);
            }
            function Rn(t) {
                (this._root = t), this._initMemoryManager(), (this._accuIndex = 0), (this.time = 0), (this.timeScale = 1);
            }
            function Cn(t) {
                "string" == typeof t && (console.warn("THREE.Uniform: Type parameter is no longer needed."), (t = arguments[1])), (this.value = t);
            }
            function Pn() {
                Ct.call(this), (this.type = "InstancedBufferGeometry"), (this.maxInstancedCount = void 0);
            }
            function Dn(t, e, i, n) {
                (this.uuid = Ma.generateUUID()), (this.data = t), (this.itemSize = e), (this.offset = i), (this.normalized = !0 === n);
            }
            function On(t, e) {
                (this.uuid = Ma.generateUUID()), (this.array = t), (this.stride = e), (this.count = void 0 !== t ? t.length / e : 0), (this.dynamic = !1), (this.updateRange = { offset: 0, count: -1 }), (this.version = 0);
            }
            function Ln(t, e, i) {
                On.call(this, t, e), (this.meshPerAttribute = i || 1);
            }
            function jn(t, e, i) {
                mt.call(this, t, e), (this.meshPerAttribute = i || 1);
            }
            function kn(t, e, i, n) {
                (this.ray = new at(t, e)),
                    (this.near = i || 0),
                    (this.far = n || 1 / 0),
                    (this.params = { Mesh: {}, Line: {}, LOD: {}, Points: { threshold: 1 }, Sprite: {} }),
                    Object.defineProperties(this.params, {
                        PointCloud: {
                            get: function () {
                                return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."), this.Points;
                            },
                        },
                    });
            }
            function In(t, e) {
                return t.distance - e.distance;
            }
            function Nn(t, e, i, n) {
                if (!1 !== t.visible && (t.raycast(e, i), !0 === n)) for (var r = t.children, o = 0, a = r.length; o < a; o++) Nn(r[o], e, i, !0);
            }
            function Fn(t) {
                (this.autoStart = void 0 === t || t), (this.startTime = 0), (this.oldTime = 0), (this.elapsedTime = 0), (this.running = !1);
            }
            function Un(t) {
                function e(t, e, i, n, r, o, a) {
                    var s = 0.5 * (i - t),
                        l = 0.5 * (n - e);
                    return (2 * (e - i) + s + l) * a + (-3 * (e - i) - 2 * s - l) * o + s * r + e;
                }
                this.points = t;
                var i,
                    n,
                    r,
                    o,
                    a,
                    s,
                    l,
                    u,
                    h,
                    d = [],
                    p = { x: 0, y: 0, z: 0 };
                (this.initFromArray = function (t) {
                    this.points = [];
                    for (var e = 0; e < t.length; e++) this.points[e] = { x: t[e][0], y: t[e][1], z: t[e][2] };
                }),
                    (this.getPoint = function (t) {
                        return (
                            (i = (this.points.length - 1) * t),
                            (n = Math.floor(i)),
                            (r = i - n),
                            (d[0] = 0 === n ? n : n - 1),
                            (d[1] = n),
                            (d[2] = n > this.points.length - 2 ? this.points.length - 1 : n + 1),
                            (d[3] = n > this.points.length - 3 ? this.points.length - 1 : n + 2),
                            (s = this.points[d[0]]),
                            (l = this.points[d[1]]),
                            (u = this.points[d[2]]),
                            (h = this.points[d[3]]),
                            (o = r * r),
                            (a = r * o),
                            (p.x = e(s.x, l.x, u.x, h.x, r, o, a)),
                            (p.y = e(s.y, l.y, u.y, h.y, r, o, a)),
                            (p.z = e(s.z, l.z, u.z, h.z, r, o, a)),
                            p
                        );
                    }),
                    (this.getControlPointsArray = function () {
                        var t,
                            e,
                            i = this.points.length,
                            n = [];
                        for (t = 0; t < i; t++) (e = this.points[t]), (n[t] = [e.x, e.y, e.z]);
                        return n;
                    }),
                    (this.getLength = function (t) {
                        var e,
                            i,
                            n,
                            r,
                            o = 0,
                            a = 0,
                            s = 0,
                            l = new c(),
                            u = new c(),
                            h = [],
                            d = 0;
                        for (h[0] = 0, t || (t = 100), n = this.points.length * t, l.copy(this.points[0]), e = 1; e < n; e++)
                            (i = e / n), (r = this.getPoint(i)), u.copy(r), (d += u.distanceTo(l)), l.copy(r), (o = (this.points.length - 1) * i), (a = Math.floor(o)) !== s && ((h[a] = d), (s = a));
                        return (h[h.length] = d), { chunks: h, total: d };
                    }),
                    (this.reparametrizeByArcLength = function (t) {
                        var e,
                            i,
                            n,
                            r,
                            o,
                            a,
                            s,
                            l,
                            u = [],
                            h = new c(),
                            d = this.getLength();
                        for (u.push(h.copy(this.points[0]).clone()), e = 1; e < this.points.length; e++) {
                            for (a = d.chunks[e] - d.chunks[e - 1], s = Math.ceil((t * a) / d.total), r = (e - 1) / (this.points.length - 1), o = e / (this.points.length - 1), i = 1; i < s - 1; i++)
                                (n = r + i * (1 / s) * (o - r)), (l = this.getPoint(n)), u.push(h.copy(l).clone());
                            u.push(h.copy(this.points[e]).clone());
                        }
                        this.points = u;
                    });
            }
            function Bn(t, e, i) {
                return (this.radius = void 0 !== t ? t : 1), (this.phi = void 0 !== e ? e : 0), (this.theta = void 0 !== i ? i : 0), this;
            }
            function Gn(t, e) {
                Pt.call(this, t, e), (this.animationsMap = {}), (this.animationsList = []);
                var i = this.geometry.morphTargets.length,
                    n = i - 1,
                    r = i / 1;
                this.createAnimation("__default", 0, n, r), this.setAnimationWeight("__default", 1);
            }
            function zn(t) {
                ct.call(this), (this.material = t), (this.render = function (t) {});
            }
            function Vn(t, e, i, n) {
                (this.object = t), (this.size = void 0 !== e ? e : 1);
                var r = void 0 !== i ? i : 16711680,
                    o = void 0 !== n ? n : 1,
                    a = 0,
                    s = this.object.geometry;
                s && s.isGeometry ? (a = 3 * s.faces.length) : s && s.isBufferGeometry && (a = s.attributes.normal.count);
                var l = new Ct(),
                    c = new Tt(2 * a * 3, 3);
                l.addAttribute("position", c), we.call(this, l, new be({ color: r, linewidth: o })), (this.matrixAutoUpdate = !1), this.update();
            }
            function Hn(t) {
                ct.call(this), (this.light = t), this.light.updateMatrixWorld(), (this.matrix = t.matrixWorld), (this.matrixAutoUpdate = !1);
                for (var e = new Ct(), i = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1], n = 0, r = 1; n < 32; n++, r++) {
                    var o = (n / 32) * Math.PI * 2,
                        a = (r / 32) * Math.PI * 2;
                    i.push(Math.cos(o), Math.sin(o), 1, Math.cos(a), Math.sin(a), 1);
                }
                e.addAttribute("position", new Tt(i, 3));
                var s = new be({ fog: !1 });
                (this.cone = new we(e, s)), this.add(this.cone), this.update();
            }
            function Wn(t) {
                this.bones = this.getBoneList(t);
                for (var e = new St(), i = 0; i < this.bones.length; i++) {
                    var n = this.bones[i];
                    n.parent && n.parent.isBone && (e.vertices.push(new c()), e.vertices.push(new c()), e.colors.push(new X(0, 0, 1)), e.colors.push(new X(0, 1, 0)));
                }
                e.dynamic = !0;
                var r = new be({ vertexColors: Pr, depthTest: !1, depthWrite: !1, transparent: !0 });
                we.call(this, e, r), (this.root = t), (this.matrix = t.matrixWorld), (this.matrixAutoUpdate = !1), this.update();
            }
            function Xn(t, e) {
                (this.light = t), this.light.updateMatrixWorld();
                var i = new Qe(e, 4, 2),
                    n = new ft({ wireframe: !0, fog: !1 });
                n.color.copy(this.light.color).multiplyScalar(this.light.intensity), Pt.call(this, i, n), (this.matrix = this.light.matrixWorld), (this.matrixAutoUpdate = !1);
            }
            function qn(t, e) {
                ct.call(this), (this.light = t), this.light.updateMatrixWorld(), (this.matrix = t.matrixWorld), (this.matrixAutoUpdate = !1), (this.colors = [new X(), new X()]);
                var i = new $e(e, 4, 2);
                i.rotateX(-Math.PI / 2);
                for (var n = 0; n < 8; n++) i.faces[n].color = this.colors[n < 4 ? 0 : 1];
                var r = new ft({ vertexColors: Cr, wireframe: !0 });
                (this.lightSphere = new Pt(i, r)), this.add(this.lightSphere), this.update();
            }
            function Yn(t, e, i, n) {
                (e = e || 1), (i = new X(void 0 !== i ? i : 4473924)), (n = new X(void 0 !== n ? n : 8947848));
                for (var r = e / 2, o = (2 * t) / e, a = [], s = [], l = 0, c = 0, u = -t; l <= e; l++, u += o) {
                    a.push(-t, 0, u, t, 0, u), a.push(u, 0, -t, u, 0, t);
                    var h = l === r ? i : n;
                    h.toArray(s, c), (c += 3), h.toArray(s, c), (c += 3), h.toArray(s, c), (c += 3), h.toArray(s, c), (c += 3);
                }
                var d = new Ct();
                d.addAttribute("position", new Tt(a, 3)), d.addAttribute("color", new Tt(s, 3));
                var p = new be({ vertexColors: Pr });
                we.call(this, d, p);
            }
            function Zn(t, e, i, n) {
                (this.object = t), (this.size = void 0 !== e ? e : 1);
                var r = void 0 !== i ? i : 16776960,
                    o = void 0 !== n ? n : 1,
                    a = 0,
                    s = this.object.geometry;
                s && s.isGeometry ? (a = s.faces.length) : console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");
                var l = new Ct(),
                    c = new Tt(2 * a * 3, 3);
                l.addAttribute("position", c), we.call(this, l, new be({ color: r, linewidth: o })), (this.matrixAutoUpdate = !1), this.update();
            }
            function Jn(t, e) {
                ct.call(this), (this.light = t), this.light.updateMatrixWorld(), (this.matrix = t.matrixWorld), (this.matrixAutoUpdate = !1), void 0 === e && (e = 1);
                var i = new Ct();
                i.addAttribute("position", new Tt([-e, e, 0, e, e, 0, e, -e, 0, -e, -e, 0, -e, e, 0], 3));
                var n = new be({ fog: !1 });
                this.add(new xe(i, n)), (i = new Ct()), i.addAttribute("position", new Tt([0, 0, 0, 0, 0, 1], 3)), this.add(new xe(i, n)), this.update();
            }
            function Qn(t) {
                function e(t, e, n) {
                    i(t, n), i(e, n);
                }
                function i(t, e) {
                    n.vertices.push(new c()), n.colors.push(new X(e)), void 0 === o[t] && (o[t] = []), o[t].push(n.vertices.length - 1);
                }
                var n = new St(),
                    r = new be({ color: 16777215, vertexColors: Cr }),
                    o = {};
                e("n1", "n2", 16755200),
                    e("n2", "n4", 16755200),
                    e("n4", "n3", 16755200),
                    e("n3", "n1", 16755200),
                    e("f1", "f2", 16755200),
                    e("f2", "f4", 16755200),
                    e("f4", "f3", 16755200),
                    e("f3", "f1", 16755200),
                    e("n1", "f1", 16755200),
                    e("n2", "f2", 16755200),
                    e("n3", "f3", 16755200),
                    e("n4", "f4", 16755200),
                    e("p", "n1", 16711680),
                    e("p", "n2", 16711680),
                    e("p", "n3", 16711680),
                    e("p", "n4", 16711680),
                    e("u1", "u2", 43775),
                    e("u2", "u3", 43775),
                    e("u3", "u1", 43775),
                    e("c", "t", 16777215),
                    e("p", "c", 3355443),
                    e("cn1", "cn2", 3355443),
                    e("cn3", "cn4", 3355443),
                    e("cf1", "cf2", 3355443),
                    e("cf3", "cf4", 3355443),
                    we.call(this, n, r),
                    (this.camera = t),
                    this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(),
                    (this.matrix = t.matrixWorld),
                    (this.matrixAutoUpdate = !1),
                    (this.pointMap = o),
                    this.update();
            }
            function $n(t, e) {
                var i = void 0 !== e ? e : 8947848;
                (this.object = t), (this.box = new tt()), Pt.call(this, new di(1, 1, 1), new ft({ color: i, wireframe: !0 }));
            }
            function Kn(t, e) {
                void 0 === e && (e = 16776960);
                var i = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]),
                    n = new Float32Array(24),
                    r = new Ct();
                r.setIndex(new mt(i, 1)), r.addAttribute("position", new mt(n, 3)), we.call(this, r, new be({ color: e })), void 0 !== t && this.update(t);
            }
            function tr(t, e, i, n, r, o) {
                ct.call(this),
                    void 0 === n && (n = 16776960),
                    void 0 === i && (i = 1),
                    void 0 === r && (r = 0.2 * i),
                    void 0 === o && (o = 0.2 * r),
                    this.position.copy(e),
                    (this.line = new xe($a, new be({ color: n }))),
                    (this.line.matrixAutoUpdate = !1),
                    this.add(this.line),
                    (this.cone = new Pt(Ka, new ft({ color: n }))),
                    (this.cone.matrixAutoUpdate = !1),
                    this.add(this.cone),
                    this.setDirection(t),
                    this.setLength(i, r, o);
            }
            function er(t) {
                t = t || 1;
                var e = new Float32Array([0, 0, 0, t, 0, 0, 0, 0, 0, 0, t, 0, 0, 0, 0, 0, 0, t]),
                    i = new Float32Array([1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1]),
                    n = new Ct();
                n.addAttribute("position", new mt(e, 3)), n.addAttribute("color", new mt(i, 3));
                var r = new be({ vertexColors: Pr });
                we.call(this, n, r);
            }
            function ir(t) {
                console.warn("THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3."), ts.call(this, t), (this.type = "catmullrom"), (this.closed = !0);
            }
            function nr(t, e, i, n, r, o) {
                sn.call(this, t, e, i, i, n, r, o);
            }
            function rr(t, e, i, n, r, o, a) {
                return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."), new pt(t, e, i, r, o, a);
            }
            function or(t, e) {
                return console.warn("THREE.PointCloud has been renamed to THREE.Points."), new Ee(t, e);
            }
            function ar(t, e) {
                return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."), new Ee(t, e);
            }
            function sr(t) {
                return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."), new Te(t);
            }
            function lr(t) {
                return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."), new Te(t);
            }
            function cr(t) {
                return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."), new Te(t);
            }
            function ur(t, e, i) {
                return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."), new c(t, e, i);
            }
            function hr(t, e) {
                return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."), new we(new oi(t.geometry), new be({ color: void 0 !== e ? e : 16777215 }));
            }
            function dr(t, e) {
                return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."), new we(new Pe(t.geometry), new be({ color: void 0 !== e ? e : 16777215 }));
            }
            function pr() {
                console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."),
                    (this.projectVector = function (t, e) {
                        console.warn("THREE.Projector: .projectVector() is now vector.project()."), t.project(e);
                    }),
                    (this.unprojectVector = function (t, e) {
                        console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."), t.unproject(e);
                    }),
                    (this.pickingRay = function (t, e) {
                        console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().");
                    });
            }
            function fr() {
                console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"),
                    (this.domElement = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")),
                    (this.clear = function () {}),
                    (this.render = function () {}),
                    (this.setClearColor = function () {}),
                    (this.setSize = function () {});
            }
            void 0 === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)),
                void 0 === Math.sign &&
                    (Math.sign = function (t) {
                        return t < 0 ? -1 : t > 0 ? 1 : +t;
                    }),
                void 0 === Function.prototype.name &&
                    Object.defineProperty(Function.prototype, "name", {
                        get: function () {
                            return this.toString().match(/^\s*function\s*(\S*)\s*\(/)[1];
                        },
                    }),
                void 0 === Object.assign &&
                    (function () {
                        Object.assign = function (t) {
                            if (void 0 === t || null === t) throw new TypeError("Cannot convert undefined or null to object");
                            for (var e = Object(t), i = 1; i < arguments.length; i++) {
                                var n = arguments[i];
                                if (void 0 !== n && null !== n) for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
                            }
                            return e;
                        };
                    })(),
                Object.assign(e.prototype, {
                    addEventListener: function (t, e) {
                        void 0 === this._listeners && (this._listeners = {});
                        var i = this._listeners;
                        void 0 === i[t] && (i[t] = []), -1 === i[t].indexOf(e) && i[t].push(e);
                    },
                    hasEventListener: function (t, e) {
                        if (void 0 === this._listeners) return !1;
                        var i = this._listeners;
                        return void 0 !== i[t] && -1 !== i[t].indexOf(e);
                    },
                    removeEventListener: function (t, e) {
                        if (void 0 !== this._listeners) {
                            var i = this._listeners,
                                n = i[t];
                            if (void 0 !== n) {
                                var r = n.indexOf(e);
                                -1 !== r && n.splice(r, 1);
                            }
                        }
                    },
                    dispatchEvent: function (t) {
                        if (void 0 !== this._listeners) {
                            var e = this._listeners,
                                i = e[t.type];
                            if (void 0 !== i) {
                                t.target = this;
                                var n = [],
                                    r = 0,
                                    o = i.length;
                                for (r = 0; r < o; r++) n[r] = i[r];
                                for (r = 0; r < o; r++) n[r].call(this, t);
                            }
                        }
                    },
                });
            var mr = "82",
                vr = { LEFT: 0, MIDDLE: 1, RIGHT: 2 },
                gr = 0,
                yr = 1,
                _r = 2,
                br = 0,
                xr = 1,
                wr = 2,
                Tr = 0,
                Er = 1,
                Mr = 2,
                Sr = 1,
                Ar = 2,
                Rr = 0,
                Cr = 1,
                Pr = 2,
                Dr = 0,
                Or = 1,
                Lr = 2,
                jr = 3,
                kr = 4,
                Ir = 5,
                Nr = { NoBlending: Dr, NormalBlending: Or, AdditiveBlending: Lr, SubtractiveBlending: jr, MultiplyBlending: kr, CustomBlending: Ir },
                Fr = 100,
                Ur = 101,
                Br = 102,
                Gr = 103,
                zr = 104,
                Vr = 200,
                Hr = 201,
                Wr = 202,
                Xr = 203,
                qr = 204,
                Yr = 205,
                Zr = 206,
                Jr = 207,
                Qr = 208,
                $r = 209,
                Kr = 210,
                to = 0,
                eo = 1,
                io = 2,
                no = 3,
                ro = 4,
                oo = 5,
                ao = 6,
                so = 7,
                lo = 0,
                co = 1,
                uo = 2,
                ho = 0,
                po = 1,
                fo = 2,
                mo = 3,
                vo = 4,
                go = 301,
                yo = 302,
                _o = 303,
                bo = 304,
                xo = 305,
                wo = 306,
                To = 307,
                Eo = {
                    UVMapping: 300,
                    CubeReflectionMapping: go,
                    CubeRefractionMapping: yo,
                    EquirectangularReflectionMapping: _o,
                    EquirectangularRefractionMapping: bo,
                    SphericalReflectionMapping: xo,
                    CubeUVReflectionMapping: wo,
                    CubeUVRefractionMapping: To,
                },
                Mo = 1e3,
                So = 1001,
                Ao = 1002,
                Ro = { RepeatWrapping: Mo, ClampToEdgeWrapping: So, MirroredRepeatWrapping: Ao },
                Co = 1003,
                Po = 1004,
                Do = 1005,
                Oo = 1006,
                Lo = 1007,
                jo = 1008,
                ko = { NearestFilter: Co, NearestMipMapNearestFilter: Po, NearestMipMapLinearFilter: Do, LinearFilter: Oo, LinearMipMapNearestFilter: Lo, LinearMipMapLinearFilter: jo },
                Io = 1009,
                No = 1010,
                Fo = 1011,
                Uo = 1012,
                Bo = 1013,
                Go = 1014,
                zo = 1015,
                Vo = 1016,
                Ho = 1017,
                Wo = 1018,
                Xo = 1019,
                qo = 1020,
                Yo = 1021,
                Zo = 1022,
                Jo = 1023,
                Qo = 1024,
                $o = 1025,
                Ko = Jo,
                ta = 1026,
                ea = 1027,
                ia = 2001,
                na = 2002,
                ra = 2003,
                oa = 2004,
                aa = 2100,
                sa = 2101,
                la = 2102,
                ca = 2103,
                ua = 2151,
                ha = 2201,
                da = 2400,
                pa = 0,
                fa = 1,
                ma = 2,
                va = 3e3,
                ga = 3001,
                ya = 3007,
                _a = 3002,
                ba = 3004,
                xa = 3005,
                wa = 3006,
                Ta = 3200,
                Ea = 3201,
                Ma = {
                    DEG2RAD: Math.PI / 180,
                    RAD2DEG: 180 / Math.PI,
                    generateUUID: (function () {
                        var t,
                            e = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),
                            i = new Array(36),
                            n = 0;
                        return function () {
                            for (var r = 0; r < 36; r++)
                                8 === r || 13 === r || 18 === r || 23 === r
                                    ? (i[r] = "-")
                                    : 14 === r
                                    ? (i[r] = "4")
                                    : (n <= 2 && (n = (33554432 + 16777216 * Math.random()) | 0), (t = 15 & n), (n >>= 4), (i[r] = e[19 === r ? (3 & t) | 8 : t]));
                            return i.join("");
                        };
                    })(),
                    clamp: function (t, e, i) {
                        return Math.max(e, Math.min(i, t));
                    },
                    euclideanModulo: function (t, e) {
                        return ((t % e) + e) % e;
                    },
                    mapLinear: function (t, e, i, n, r) {
                        return n + ((t - e) * (r - n)) / (i - e);
                    },
                    lerp: function (t, e, i) {
                        return (1 - i) * t + i * e;
                    },
                    smoothstep: function (t, e, i) {
                        return t <= e ? 0 : t >= i ? 1 : (t = (t - e) / (i - e)) * t * (3 - 2 * t);
                    },
                    smootherstep: function (t, e, i) {
                        return t <= e ? 0 : t >= i ? 1 : (t = (t - e) / (i - e)) * t * t * (t * (6 * t - 15) + 10);
                    },
                    random16: function () {
                        return console.warn("THREE.Math.random16() has been deprecated. Use Math.random() instead."), Math.random();
                    },
                    randInt: function (t, e) {
                        return t + Math.floor(Math.random() * (e - t + 1));
                    },
                    randFloat: function (t, e) {
                        return t + Math.random() * (e - t);
                    },
                    randFloatSpread: function (t) {
                        return t * (0.5 - Math.random());
                    },
                    degToRad: function (t) {
                        return t * Ma.DEG2RAD;
                    },
                    radToDeg: function (t) {
                        return t * Ma.RAD2DEG;
                    },
                    isPowerOfTwo: function (t) {
                        return 0 == (t & (t - 1)) && 0 !== t;
                    },
                    nearestPowerOfTwo: function (t) {
                        return Math.pow(2, Math.round(Math.log(t) / Math.LN2));
                    },
                    nextPowerOfTwo: function (t) {
                        return t--, (t |= t >> 1), (t |= t >> 2), (t |= t >> 4), (t |= t >> 8), (t |= t >> 16), ++t;
                    },
                };
            (i.prototype = {
                constructor: i,
                isVector2: !0,
                get width() {
                    return this.x;
                },
                set width(t) {
                    this.x = t;
                },
                get height() {
                    return this.y;
                },
                set height(t) {
                    this.y = t;
                },
                set: function (t, e) {
                    return (this.x = t), (this.y = e), this;
                },
                setScalar: function (t) {
                    return (this.x = t), (this.y = t), this;
                },
                setX: function (t) {
                    return (this.x = t), this;
                },
                setY: function (t) {
                    return (this.y = t), this;
                },
                setComponent: function (t, e) {
                    switch (t) {
                        case 0:
                            this.x = e;
                            break;
                        case 1:
                            this.y = e;
                            break;
                        default:
                            throw new Error("index is out of range: " + t);
                    }
                    return this;
                },
                getComponent: function (t) {
                    switch (t) {
                        case 0:
                            return this.x;
                        case 1:
                            return this.y;
                        default:
                            throw new Error("index is out of range: " + t);
                    }
                },
                clone: function () {
                    return new this.constructor(this.x, this.y);
                },
                copy: function (t) {
                    return (this.x = t.x), (this.y = t.y), this;
                },
                add: function (t, e) {
                    return void 0 !== e ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(t, e)) : ((this.x += t.x), (this.y += t.y), this);
                },
                addScalar: function (t) {
                    return (this.x += t), (this.y += t), this;
                },
                addVectors: function (t, e) {
                    return (this.x = t.x + e.x), (this.y = t.y + e.y), this;
                },
                addScaledVector: function (t, e) {
                    return (this.x += t.x * e), (this.y += t.y * e), this;
                },
                sub: function (t, e) {
                    return void 0 !== e ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(t, e)) : ((this.x -= t.x), (this.y -= t.y), this);
                },
                subScalar: function (t) {
                    return (this.x -= t), (this.y -= t), this;
                },
                subVectors: function (t, e) {
                    return (this.x = t.x - e.x), (this.y = t.y - e.y), this;
                },
                multiply: function (t) {
                    return (this.x *= t.x), (this.y *= t.y), this;
                },
                multiplyScalar: function (t) {
                    return isFinite(t) ? ((this.x *= t), (this.y *= t)) : ((this.x = 0), (this.y = 0)), this;
                },
                divide: function (t) {
                    return (this.x /= t.x), (this.y /= t.y), this;
                },
                divideScalar: function (t) {
                    return this.multiplyScalar(1 / t);
                },
                min: function (t) {
                    return (this.x = Math.min(this.x, t.x)), (this.y = Math.min(this.y, t.y)), this;
                },
                max: function (t) {
                    return (this.x = Math.max(this.x, t.x)), (this.y = Math.max(this.y, t.y)), this;
                },
                clamp: function (t, e) {
                    return (this.x = Math.max(t.x, Math.min(e.x, this.x))), (this.y = Math.max(t.y, Math.min(e.y, this.y))), this;
                },
                clampScalar: (function () {
                    var t, e;
                    return function (n, r) {
                        return void 0 === t && ((t = new i()), (e = new i())), t.set(n, n), e.set(r, r), this.clamp(t, e);
                    };
                })(),
                clampLength: function (t, e) {
                    var i = this.length();
                    return this.multiplyScalar(Math.max(t, Math.min(e, i)) / i);
                },
                floor: function () {
                    return (this.x = Math.floor(this.x)), (this.y = Math.floor(this.y)), this;
                },
                ceil: function () {
                    return (this.x = Math.ceil(this.x)), (this.y = Math.ceil(this.y)), this;
                },
                round: function () {
                    return (this.x = Math.round(this.x)), (this.y = Math.round(this.y)), this;
                },
                roundToZero: function () {
                    return (this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)), (this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)), this;
                },
                negate: function () {
                    return (this.x = -this.x), (this.y = -this.y), this;
                },
                dot: function (t) {
                    return this.x * t.x + this.y * t.y;
                },
                lengthSq: function () {
                    return this.x * this.x + this.y * this.y;
                },
                length: function () {
                    return Math.sqrt(this.x * this.x + this.y * this.y);
                },
                lengthManhattan: function () {
                    return Math.abs(this.x) + Math.abs(this.y);
                },
                normalize: function () {
                    return this.divideScalar(this.length());
                },
                angle: function () {
                    var t = Math.atan2(this.y, this.x);
                    return t < 0 && (t += 2 * Math.PI), t;
                },
                distanceTo: function (t) {
                    return Math.sqrt(this.distanceToSquared(t));
                },
                distanceToSquared: function (t) {
                    var e = this.x - t.x,
                        i = this.y - t.y;
                    return e * e + i * i;
                },
                distanceToManhattan: function (t) {
                    return Math.abs(this.x - t.x) + Math.abs(this.y - t.y);
                },
                setLength: function (t) {
                    return this.multiplyScalar(t / this.length());
                },
                lerp: function (t, e) {
                    return (this.x += (t.x - this.x) * e), (this.y += (t.y - this.y) * e), this;
                },
                lerpVectors: function (t, e, i) {
                    return this.subVectors(e, t).multiplyScalar(i).add(t);
                },
                equals: function (t) {
                    return t.x === this.x && t.y === this.y;
                },
                fromArray: function (t, e) {
                    return void 0 === e && (e = 0), (this.x = t[e]), (this.y = t[e + 1]), this;
                },
                toArray: function (t, e) {
                    return void 0 === t && (t = []), void 0 === e && (e = 0), (t[e] = this.x), (t[e + 1] = this.y), t;
                },
                fromAttribute: function (t, e, i) {
                    return void 0 === i && (i = 0), (e = e * t.itemSize + i), (this.x = t.array[e]), (this.y = t.array[e + 1]), this;
                },
                rotateAround: function (t, e) {
                    var i = Math.cos(e),
                        n = Math.sin(e),
                        r = this.x - t.x,
                        o = this.y - t.y;
                    return (this.x = r * i - o * n + t.x), (this.y = r * n + o * i + t.y), this;
                },
            }),
                (n.DEFAULT_IMAGE = void 0),
                (n.DEFAULT_MAPPING = 300),
                (n.prototype = {
                    constructor: n,
                    isTexture: !0,
                    set needsUpdate(t) {
                        !0 === t && this.version++;
                    },
                    clone: function () {
                        return new this.constructor().copy(this);
                    },
                    copy: function (t) {
                        return (
                            (this.image = t.image),
                            (this.mipmaps = t.mipmaps.slice(0)),
                            (this.mapping = t.mapping),
                            (this.wrapS = t.wrapS),
                            (this.wrapT = t.wrapT),
                            (this.magFilter = t.magFilter),
                            (this.minFilter = t.minFilter),
                            (this.anisotropy = t.anisotropy),
                            (this.format = t.format),
                            (this.type = t.type),
                            this.offset.copy(t.offset),
                            this.repeat.copy(t.repeat),
                            (this.generateMipmaps = t.generateMipmaps),
                            (this.premultiplyAlpha = t.premultiplyAlpha),
                            (this.flipY = t.flipY),
                            (this.unpackAlignment = t.unpackAlignment),
                            (this.encoding = t.encoding),
                            this
                        );
                    },
                    toJSON: function (t) {
                        if (void 0 !== t.textures[this.uuid]) return t.textures[this.uuid];
                        var e = {
                            metadata: { version: 4.4, type: "Texture", generator: "Texture.toJSON" },
                            uuid: this.uuid,
                            name: this.name,
                            mapping: this.mapping,
                            repeat: [this.repeat.x, this.repeat.y],
                            offset: [this.offset.x, this.offset.y],
                            wrap: [this.wrapS, this.wrapT],
                            minFilter: this.minFilter,
                            magFilter: this.magFilter,
                            anisotropy: this.anisotropy,
                            flipY: this.flipY,
                        };
                        if (void 0 !== this.image) {
                            var i = this.image;
                            void 0 === i.uuid && (i.uuid = Ma.generateUUID()),
                                void 0 === t.images[i.uuid] &&
                                    (t.images[i.uuid] = {
                                        uuid: i.uuid,
                                        url: (function (t) {
                                            var e;
                                            return (
                                                void 0 !== t.toDataURL
                                                    ? (e = t)
                                                    : ((e = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")), (e.width = t.width), (e.height = t.height), e.getContext("2d").drawImage(t, 0, 0, t.width, t.height)),
                                                e.width > 2048 || e.height > 2048 ? e.toDataURL("image/jpeg", 0.6) : e.toDataURL("image/png")
                                            );
                                        })(i),
                                    }),
                                (e.image = i.uuid);
                        }
                        return (t.textures[this.uuid] = e), e;
                    },
                    dispose: function () {
                        this.dispatchEvent({ type: "dispose" });
                    },
                    transformUv: function (t) {
                        if (300 === this.mapping) {
                            if ((t.multiply(this.repeat), t.add(this.offset), t.x < 0 || t.x > 1))
                                switch (this.wrapS) {
                                    case Mo:
                                        t.x = t.x - Math.floor(t.x);
                                        break;
                                    case So:
                                        t.x = t.x < 0 ? 0 : 1;
                                        break;
                                    case Ao:
                                        1 === Math.abs(Math.floor(t.x) % 2) ? (t.x = Math.ceil(t.x) - t.x) : (t.x = t.x - Math.floor(t.x));
                                }
                            if (t.y < 0 || t.y > 1)
                                switch (this.wrapT) {
                                    case Mo:
                                        t.y = t.y - Math.floor(t.y);
                                        break;
                                    case So:
                                        t.y = t.y < 0 ? 0 : 1;
                                        break;
                                    case Ao:
                                        1 === Math.abs(Math.floor(t.y) % 2) ? (t.y = Math.ceil(t.y) - t.y) : (t.y = t.y - Math.floor(t.y));
                                }
                            this.flipY && (t.y = 1 - t.y);
                        }
                    },
                }),
                Object.assign(n.prototype, e.prototype);
            var Sa = 0;
            (o.prototype = {
                constructor: o,
                isVector4: !0,
                set: function (t, e, i, n) {
                    return (this.x = t), (this.y = e), (this.z = i), (this.w = n), this;
                },
                setScalar: function (t) {
                    return (this.x = t), (this.y = t), (this.z = t), (this.w = t), this;
                },
                setX: function (t) {
                    return (this.x = t), this;
                },
                setY: function (t) {
                    return (this.y = t), this;
                },
                setZ: function (t) {
                    return (this.z = t), this;
                },
                setW: function (t) {
                    return (this.w = t), this;
                },
                setComponent: function (t, e) {
                    switch (t) {
                        case 0:
                            this.x = e;
                            break;
                        case 1:
                            this.y = e;
                            break;
                        case 2:
                            this.z = e;
                            break;
                        case 3:
                            this.w = e;
                            break;
                        default:
                            throw new Error("index is out of range: " + t);
                    }
                    return this;
                },
                getComponent: function (t) {
                    switch (t) {
                        case 0:
                            return this.x;
                        case 1:
                            return this.y;
                        case 2:
                            return this.z;
                        case 3:
                            return this.w;
                        default:
                            throw new Error("index is out of range: " + t);
                    }
                },
                clone: function () {
                    return new this.constructor(this.x, this.y, this.z, this.w);
                },
                copy: function (t) {
                    return (this.x = t.x), (this.y = t.y), (this.z = t.z), (this.w = void 0 !== t.w ? t.w : 1), this;
                },
                add: function (t, e) {
                    return void 0 !== e
                        ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(t, e))
                        : ((this.x += t.x), (this.y += t.y), (this.z += t.z), (this.w += t.w), this);
                },
                addScalar: function (t) {
                    return (this.x += t), (this.y += t), (this.z += t), (this.w += t), this;
                },
                addVectors: function (t, e) {
                    return (this.x = t.x + e.x), (this.y = t.y + e.y), (this.z = t.z + e.z), (this.w = t.w + e.w), this;
                },
                addScaledVector: function (t, e) {
                    return (this.x += t.x * e), (this.y += t.y * e), (this.z += t.z * e), (this.w += t.w * e), this;
                },
                sub: function (t, e) {
                    return void 0 !== e
                        ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(t, e))
                        : ((this.x -= t.x), (this.y -= t.y), (this.z -= t.z), (this.w -= t.w), this);
                },
                subScalar: function (t) {
                    return (this.x -= t), (this.y -= t), (this.z -= t), (this.w -= t), this;
                },
                subVectors: function (t, e) {
                    return (this.x = t.x - e.x), (this.y = t.y - e.y), (this.z = t.z - e.z), (this.w = t.w - e.w), this;
                },
                multiplyScalar: function (t) {
                    return isFinite(t) ? ((this.x *= t), (this.y *= t), (this.z *= t), (this.w *= t)) : ((this.x = 0), (this.y = 0), (this.z = 0), (this.w = 0)), this;
                },
                applyMatrix4: function (t) {
                    var e = this.x,
                        i = this.y,
                        n = this.z,
                        r = this.w,
                        o = t.elements;
                    return (
                        (this.x = o[0] * e + o[4] * i + o[8] * n + o[12] * r),
                        (this.y = o[1] * e + o[5] * i + o[9] * n + o[13] * r),
                        (this.z = o[2] * e + o[6] * i + o[10] * n + o[14] * r),
                        (this.w = o[3] * e + o[7] * i + o[11] * n + o[15] * r),
                        this
                    );
                },
                divideScalar: function (t) {
                    return this.multiplyScalar(1 / t);
                },
                setAxisAngleFromQuaternion: function (t) {
                    this.w = 2 * Math.acos(t.w);
                    var e = Math.sqrt(1 - t.w * t.w);
                    return e < 1e-4 ? ((this.x = 1), (this.y = 0), (this.z = 0)) : ((this.x = t.x / e), (this.y = t.y / e), (this.z = t.z / e)), this;
                },
                setAxisAngleFromRotationMatrix: function (t) {
                    var e,
                        i,
                        n,
                        r,
                        o = t.elements,
                        a = o[0],
                        s = o[4],
                        l = o[8],
                        c = o[1],
                        u = o[5],
                        h = o[9],
                        d = o[2],
                        p = o[6],
                        f = o[10];
                    if (Math.abs(s - c) < 0.01 && Math.abs(l - d) < 0.01 && Math.abs(h - p) < 0.01) {
                        if (Math.abs(s + c) < 0.1 && Math.abs(l + d) < 0.1 && Math.abs(h + p) < 0.1 && Math.abs(a + u + f - 3) < 0.1) return this.set(1, 0, 0, 0), this;
                        e = Math.PI;
                        var m = (a + 1) / 2,
                            v = (u + 1) / 2,
                            g = (f + 1) / 2,
                            y = (s + c) / 4,
                            _ = (l + d) / 4,
                            b = (h + p) / 4;
                        return (
                            m > v && m > g
                                ? m < 0.01
                                    ? ((i = 0), (n = 0.707106781), (r = 0.707106781))
                                    : ((i = Math.sqrt(m)), (n = y / i), (r = _ / i))
                                : v > g
                                ? v < 0.01
                                    ? ((i = 0.707106781), (n = 0), (r = 0.707106781))
                                    : ((n = Math.sqrt(v)), (i = y / n), (r = b / n))
                                : g < 0.01
                                ? ((i = 0.707106781), (n = 0.707106781), (r = 0))
                                : ((r = Math.sqrt(g)), (i = _ / r), (n = b / r)),
                            this.set(i, n, r, e),
                            this
                        );
                    }
                    var x = Math.sqrt((p - h) * (p - h) + (l - d) * (l - d) + (c - s) * (c - s));
                    return Math.abs(x) < 0.001 && (x = 1), (this.x = (p - h) / x), (this.y = (l - d) / x), (this.z = (c - s) / x), (this.w = Math.acos((a + u + f - 1) / 2)), this;
                },
                min: function (t) {
                    return (this.x = Math.min(this.x, t.x)), (this.y = Math.min(this.y, t.y)), (this.z = Math.min(this.z, t.z)), (this.w = Math.min(this.w, t.w)), this;
                },
                max: function (t) {
                    return (this.x = Math.max(this.x, t.x)), (this.y = Math.max(this.y, t.y)), (this.z = Math.max(this.z, t.z)), (this.w = Math.max(this.w, t.w)), this;
                },
                clamp: function (t, e) {
                    return (this.x = Math.max(t.x, Math.min(e.x, this.x))), (this.y = Math.max(t.y, Math.min(e.y, this.y))), (this.z = Math.max(t.z, Math.min(e.z, this.z))), (this.w = Math.max(t.w, Math.min(e.w, this.w))), this;
                },
                clampScalar: (function () {
                    var t, e;
                    return function (i, n) {
                        return void 0 === t && ((t = new o()), (e = new o())), t.set(i, i, i, i), e.set(n, n, n, n), this.clamp(t, e);
                    };
                })(),
                floor: function () {
                    return (this.x = Math.floor(this.x)), (this.y = Math.floor(this.y)), (this.z = Math.floor(this.z)), (this.w = Math.floor(this.w)), this;
                },
                ceil: function () {
                    return (this.x = Math.ceil(this.x)), (this.y = Math.ceil(this.y)), (this.z = Math.ceil(this.z)), (this.w = Math.ceil(this.w)), this;
                },
                round: function () {
                    return (this.x = Math.round(this.x)), (this.y = Math.round(this.y)), (this.z = Math.round(this.z)), (this.w = Math.round(this.w)), this;
                },
                roundToZero: function () {
                    return (
                        (this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
                        (this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
                        (this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z)),
                        (this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w)),
                        this
                    );
                },
                negate: function () {
                    return (this.x = -this.x), (this.y = -this.y), (this.z = -this.z), (this.w = -this.w), this;
                },
                dot: function (t) {
                    return this.x * t.x + this.y * t.y + this.z * t.z + this.w * t.w;
                },
                lengthSq: function () {
                    return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
                },
                length: function () {
                    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
                },
                lengthManhattan: function () {
                    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);
                },
                normalize: function () {
                    return this.divideScalar(this.length());
                },
                setLength: function (t) {
                    return this.multiplyScalar(t / this.length());
                },
                lerp: function (t, e) {
                    return (this.x += (t.x - this.x) * e), (this.y += (t.y - this.y) * e), (this.z += (t.z - this.z) * e), (this.w += (t.w - this.w) * e), this;
                },
                lerpVectors: function (t, e, i) {
                    return this.subVectors(e, t).multiplyScalar(i).add(t);
                },
                equals: function (t) {
                    return t.x === this.x && t.y === this.y && t.z === this.z && t.w === this.w;
                },
                fromArray: function (t, e) {
                    return void 0 === e && (e = 0), (this.x = t[e]), (this.y = t[e + 1]), (this.z = t[e + 2]), (this.w = t[e + 3]), this;
                },
                toArray: function (t, e) {
                    return void 0 === t && (t = []), void 0 === e && (e = 0), (t[e] = this.x), (t[e + 1] = this.y), (t[e + 2] = this.z), (t[e + 3] = this.w), t;
                },
                fromAttribute: function (t, e, i) {
                    return void 0 === i && (i = 0), (e = e * t.itemSize + i), (this.x = t.array[e]), (this.y = t.array[e + 1]), (this.z = t.array[e + 2]), (this.w = t.array[e + 3]), this;
                },
            }),
                Object.assign(a.prototype, e.prototype, {
                    isWebGLRenderTarget: !0,
                    setSize: function (t, e) {
                        (this.width === t && this.height === e) || ((this.width = t), (this.height = e), this.dispose()), this.viewport.set(0, 0, t, e), this.scissor.set(0, 0, t, e);
                    },
                    clone: function () {
                        return new this.constructor().copy(this);
                    },
                    copy: function (t) {
                        return (
                            (this.width = t.width),
                            (this.height = t.height),
                            this.viewport.copy(t.viewport),
                            (this.texture = t.texture.clone()),
                            (this.depthBuffer = t.depthBuffer),
                            (this.stencilBuffer = t.stencilBuffer),
                            (this.depthTexture = t.depthTexture),
                            this
                        );
                    },
                    dispose: function () {
                        this.dispatchEvent({ type: "dispose" });
                    },
                }),
                (s.prototype = Object.create(a.prototype)),
                (s.prototype.constructor = s),
                (s.prototype.isWebGLRenderTargetCube = !0),
                (l.prototype = {
                    constructor: l,
                    get x() {
                        return this._x;
                    },
                    set x(t) {
                        (this._x = t), this.onChangeCallback();
                    },
                    get y() {
                        return this._y;
                    },
                    set y(t) {
                        (this._y = t), this.onChangeCallback();
                    },
                    get z() {
                        return this._z;
                    },
                    set z(t) {
                        (this._z = t), this.onChangeCallback();
                    },
                    get w() {
                        return this._w;
                    },
                    set w(t) {
                        (this._w = t), this.onChangeCallback();
                    },
                    set: function (t, e, i, n) {
                        return (this._x = t), (this._y = e), (this._z = i), (this._w = n), this.onChangeCallback(), this;
                    },
                    clone: function () {
                        return new this.constructor(this._x, this._y, this._z, this._w);
                    },
                    copy: function (t) {
                        return (this._x = t.x), (this._y = t.y), (this._z = t.z), (this._w = t.w), this.onChangeCallback(), this;
                    },
                    setFromEuler: function (t, e) {
                        if (!1 === (t && t.isEuler)) throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
                        var i = Math.cos(t._x / 2),
                            n = Math.cos(t._y / 2),
                            r = Math.cos(t._z / 2),
                            o = Math.sin(t._x / 2),
                            a = Math.sin(t._y / 2),
                            s = Math.sin(t._z / 2),
                            l = t.order;
                        return (
                            "XYZ" === l
                                ? ((this._x = o * n * r + i * a * s), (this._y = i * a * r - o * n * s), (this._z = i * n * s + o * a * r), (this._w = i * n * r - o * a * s))
                                : "YXZ" === l
                                ? ((this._x = o * n * r + i * a * s), (this._y = i * a * r - o * n * s), (this._z = i * n * s - o * a * r), (this._w = i * n * r + o * a * s))
                                : "ZXY" === l
                                ? ((this._x = o * n * r - i * a * s), (this._y = i * a * r + o * n * s), (this._z = i * n * s + o * a * r), (this._w = i * n * r - o * a * s))
                                : "ZYX" === l
                                ? ((this._x = o * n * r - i * a * s), (this._y = i * a * r + o * n * s), (this._z = i * n * s - o * a * r), (this._w = i * n * r + o * a * s))
                                : "YZX" === l
                                ? ((this._x = o * n * r + i * a * s), (this._y = i * a * r + o * n * s), (this._z = i * n * s - o * a * r), (this._w = i * n * r - o * a * s))
                                : "XZY" === l && ((this._x = o * n * r - i * a * s), (this._y = i * a * r - o * n * s), (this._z = i * n * s + o * a * r), (this._w = i * n * r + o * a * s)),
                            !1 !== e && this.onChangeCallback(),
                            this
                        );
                    },
                    setFromAxisAngle: function (t, e) {
                        var i = e / 2,
                            n = Math.sin(i);
                        return (this._x = t.x * n), (this._y = t.y * n), (this._z = t.z * n), (this._w = Math.cos(i)), this.onChangeCallback(), this;
                    },
                    setFromRotationMatrix: function (t) {
                        var e,
                            i = t.elements,
                            n = i[0],
                            r = i[4],
                            o = i[8],
                            a = i[1],
                            s = i[5],
                            l = i[9],
                            c = i[2],
                            u = i[6],
                            h = i[10],
                            d = n + s + h;
                        return (
                            d > 0
                                ? ((e = 0.5 / Math.sqrt(d + 1)), (this._w = 0.25 / e), (this._x = (u - l) * e), (this._y = (o - c) * e), (this._z = (a - r) * e))
                                : n > s && n > h
                                ? ((e = 2 * Math.sqrt(1 + n - s - h)), (this._w = (u - l) / e), (this._x = 0.25 * e), (this._y = (r + a) / e), (this._z = (o + c) / e))
                                : s > h
                                ? ((e = 2 * Math.sqrt(1 + s - n - h)), (this._w = (o - c) / e), (this._x = (r + a) / e), (this._y = 0.25 * e), (this._z = (l + u) / e))
                                : ((e = 2 * Math.sqrt(1 + h - n - s)), (this._w = (a - r) / e), (this._x = (o + c) / e), (this._y = (l + u) / e), (this._z = 0.25 * e)),
                            this.onChangeCallback(),
                            this
                        );
                    },
                    setFromUnitVectors: (function () {
                        var t, e;
                        return function (i, n) {
                            return (
                                void 0 === t && (t = new c()),
                                (e = i.dot(n) + 1),
                                e < 1e-6 ? ((e = 0), Math.abs(i.x) > Math.abs(i.z) ? t.set(-i.y, i.x, 0) : t.set(0, -i.z, i.y)) : t.crossVectors(i, n),
                                (this._x = t.x),
                                (this._y = t.y),
                                (this._z = t.z),
                                (this._w = e),
                                this.normalize()
                            );
                        };
                    })(),
                    inverse: function () {
                        return this.conjugate().normalize();
                    },
                    conjugate: function () {
                        return (this._x *= -1), (this._y *= -1), (this._z *= -1), this.onChangeCallback(), this;
                    },
                    dot: function (t) {
                        return this._x * t._x + this._y * t._y + this._z * t._z + this._w * t._w;
                    },
                    lengthSq: function () {
                        return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;
                    },
                    length: function () {
                        return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);
                    },
                    normalize: function () {
                        var t = this.length();
                        return (
                            0 === t ? ((this._x = 0), (this._y = 0), (this._z = 0), (this._w = 1)) : ((t = 1 / t), (this._x = this._x * t), (this._y = this._y * t), (this._z = this._z * t), (this._w = this._w * t)),
                            this.onChangeCallback(),
                            this
                        );
                    },
                    multiply: function (t, e) {
                        return void 0 !== e ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."), this.multiplyQuaternions(t, e)) : this.multiplyQuaternions(this, t);
                    },
                    premultiply: function (t) {
                        return this.multiplyQuaternions(t, this);
                    },
                    multiplyQuaternions: function (t, e) {
                        var i = t._x,
                            n = t._y,
                            r = t._z,
                            o = t._w,
                            a = e._x,
                            s = e._y,
                            l = e._z,
                            c = e._w;
                        return (this._x = i * c + o * a + n * l - r * s), (this._y = n * c + o * s + r * a - i * l), (this._z = r * c + o * l + i * s - n * a), (this._w = o * c - i * a - n * s - r * l), this.onChangeCallback(), this;
                    },
                    slerp: function (t, e) {
                        if (0 === e) return this;
                        if (1 === e) return this.copy(t);
                        var i = this._x,
                            n = this._y,
                            r = this._z,
                            o = this._w,
                            a = o * t._w + i * t._x + n * t._y + r * t._z;
                        if ((a < 0 ? ((this._w = -t._w), (this._x = -t._x), (this._y = -t._y), (this._z = -t._z), (a = -a)) : this.copy(t), a >= 1)) return (this._w = o), (this._x = i), (this._y = n), (this._z = r), this;
                        var s = Math.sqrt(1 - a * a);
                        if (Math.abs(s) < 0.001) return (this._w = 0.5 * (o + this._w)), (this._x = 0.5 * (i + this._x)), (this._y = 0.5 * (n + this._y)), (this._z = 0.5 * (r + this._z)), this;
                        var l = Math.atan2(s, a),
                            c = Math.sin((1 - e) * l) / s,
                            u = Math.sin(e * l) / s;
                        return (this._w = o * c + this._w * u), (this._x = i * c + this._x * u), (this._y = n * c + this._y * u), (this._z = r * c + this._z * u), this.onChangeCallback(), this;
                    },
                    equals: function (t) {
                        return t._x === this._x && t._y === this._y && t._z === this._z && t._w === this._w;
                    },
                    fromArray: function (t, e) {
                        return void 0 === e && (e = 0), (this._x = t[e]), (this._y = t[e + 1]), (this._z = t[e + 2]), (this._w = t[e + 3]), this.onChangeCallback(), this;
                    },
                    toArray: function (t, e) {
                        return void 0 === t && (t = []), void 0 === e && (e = 0), (t[e] = this._x), (t[e + 1] = this._y), (t[e + 2] = this._z), (t[e + 3] = this._w), t;
                    },
                    onChange: function (t) {
                        return (this.onChangeCallback = t), this;
                    },
                    onChangeCallback: function () {},
                }),
                Object.assign(l, {
                    slerp: function (t, e, i, n) {
                        return i.copy(t).slerp(e, n);
                    },
                    slerpFlat: function (t, e, i, n, r, o, a) {
                        var s = i[n + 0],
                            l = i[n + 1],
                            c = i[n + 2],
                            u = i[n + 3],
                            h = r[o + 0],
                            d = r[o + 1],
                            p = r[o + 2],
                            f = r[o + 3];
                        if (u !== f || s !== h || l !== d || c !== p) {
                            var m = 1 - a,
                                v = s * h + l * d + c * p + u * f,
                                g = v >= 0 ? 1 : -1,
                                y = 1 - v * v;
                            if (y > Number.EPSILON) {
                                var _ = Math.sqrt(y),
                                    b = Math.atan2(_, v * g);
                                (m = Math.sin(m * b) / _), (a = Math.sin(a * b) / _);
                            }
                            var x = a * g;
                            if (((s = s * m + h * x), (l = l * m + d * x), (c = c * m + p * x), (u = u * m + f * x), m === 1 - a)) {
                                var w = 1 / Math.sqrt(s * s + l * l + c * c + u * u);
                                (s *= w), (l *= w), (c *= w), (u *= w);
                            }
                        }
                        (t[e] = s), (t[e + 1] = l), (t[e + 2] = c), (t[e + 3] = u);
                    },
                }),
                (c.prototype = {
                    constructor: c,
                    isVector3: !0,
                    set: function (t, e, i) {
                        return (this.x = t), (this.y = e), (this.z = i), this;
                    },
                    setScalar: function (t) {
                        return (this.x = t), (this.y = t), (this.z = t), this;
                    },
                    setX: function (t) {
                        return (this.x = t), this;
                    },
                    setY: function (t) {
                        return (this.y = t), this;
                    },
                    setZ: function (t) {
                        return (this.z = t), this;
                    },
                    setComponent: function (t, e) {
                        switch (t) {
                            case 0:
                                this.x = e;
                                break;
                            case 1:
                                this.y = e;
                                break;
                            case 2:
                                this.z = e;
                                break;
                            default:
                                throw new Error("index is out of range: " + t);
                        }
                        return this;
                    },
                    getComponent: function (t) {
                        switch (t) {
                            case 0:
                                return this.x;
                            case 1:
                                return this.y;
                            case 2:
                                return this.z;
                            default:
                                throw new Error("index is out of range: " + t);
                        }
                    },
                    clone: function () {
                        return new this.constructor(this.x, this.y, this.z);
                    },
                    copy: function (t) {
                        return (this.x = t.x), (this.y = t.y), (this.z = t.z), this;
                    },
                    add: function (t, e) {
                        return void 0 !== e ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(t, e)) : ((this.x += t.x), (this.y += t.y), (this.z += t.z), this);
                    },
                    addScalar: function (t) {
                        return (this.x += t), (this.y += t), (this.z += t), this;
                    },
                    addVectors: function (t, e) {
                        return (this.x = t.x + e.x), (this.y = t.y + e.y), (this.z = t.z + e.z), this;
                    },
                    addScaledVector: function (t, e) {
                        return (this.x += t.x * e), (this.y += t.y * e), (this.z += t.z * e), this;
                    },
                    sub: function (t, e) {
                        return void 0 !== e ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(t, e)) : ((this.x -= t.x), (this.y -= t.y), (this.z -= t.z), this);
                    },
                    subScalar: function (t) {
                        return (this.x -= t), (this.y -= t), (this.z -= t), this;
                    },
                    subVectors: function (t, e) {
                        return (this.x = t.x - e.x), (this.y = t.y - e.y), (this.z = t.z - e.z), this;
                    },
                    multiply: function (t, e) {
                        return void 0 !== e
                            ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."), this.multiplyVectors(t, e))
                            : ((this.x *= t.x), (this.y *= t.y), (this.z *= t.z), this);
                    },
                    multiplyScalar: function (t) {
                        return isFinite(t) ? ((this.x *= t), (this.y *= t), (this.z *= t)) : ((this.x = 0), (this.y = 0), (this.z = 0)), this;
                    },
                    multiplyVectors: function (t, e) {
                        return (this.x = t.x * e.x), (this.y = t.y * e.y), (this.z = t.z * e.z), this;
                    },
                    applyEuler: (function () {
                        var t;
                        return function (e) {
                            return (
                                !1 === (e && e.isEuler) && console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."), void 0 === t && (t = new l()), this.applyQuaternion(t.setFromEuler(e))
                            );
                        };
                    })(),
                    applyAxisAngle: (function () {
                        var t;
                        return function (e, i) {
                            return void 0 === t && (t = new l()), this.applyQuaternion(t.setFromAxisAngle(e, i));
                        };
                    })(),
                    applyMatrix3: function (t) {
                        var e = this.x,
                            i = this.y,
                            n = this.z,
                            r = t.elements;
                        return (this.x = r[0] * e + r[3] * i + r[6] * n), (this.y = r[1] * e + r[4] * i + r[7] * n), (this.z = r[2] * e + r[5] * i + r[8] * n), this;
                    },
                    applyMatrix4: function (t) {
                        var e = this.x,
                            i = this.y,
                            n = this.z,
                            r = t.elements;
                        return (this.x = r[0] * e + r[4] * i + r[8] * n + r[12]), (this.y = r[1] * e + r[5] * i + r[9] * n + r[13]), (this.z = r[2] * e + r[6] * i + r[10] * n + r[14]), this;
                    },
                    applyProjection: function (t) {
                        var e = this.x,
                            i = this.y,
                            n = this.z,
                            r = t.elements,
                            o = 1 / (r[3] * e + r[7] * i + r[11] * n + r[15]);
                        return (this.x = (r[0] * e + r[4] * i + r[8] * n + r[12]) * o), (this.y = (r[1] * e + r[5] * i + r[9] * n + r[13]) * o), (this.z = (r[2] * e + r[6] * i + r[10] * n + r[14]) * o), this;
                    },
                    applyQuaternion: function (t) {
                        var e = this.x,
                            i = this.y,
                            n = this.z,
                            r = t.x,
                            o = t.y,
                            a = t.z,
                            s = t.w,
                            l = s * e + o * n - a * i,
                            c = s * i + a * e - r * n,
                            u = s * n + r * i - o * e,
                            h = -r * e - o * i - a * n;
                        return (this.x = l * s + h * -r + c * -a - u * -o), (this.y = c * s + h * -o + u * -r - l * -a), (this.z = u * s + h * -a + l * -o - c * -r), this;
                    },
                    project: (function () {
                        var t;
                        return function (e) {
                            return void 0 === t && (t = new u()), t.multiplyMatrices(e.projectionMatrix, t.getInverse(e.matrixWorld)), this.applyProjection(t);
                        };
                    })(),
                    unproject: (function () {
                        var t;
                        return function (e) {
                            return void 0 === t && (t = new u()), t.multiplyMatrices(e.matrixWorld, t.getInverse(e.projectionMatrix)), this.applyProjection(t);
                        };
                    })(),
                    transformDirection: function (t) {
                        var e = this.x,
                            i = this.y,
                            n = this.z,
                            r = t.elements;
                        return (this.x = r[0] * e + r[4] * i + r[8] * n), (this.y = r[1] * e + r[5] * i + r[9] * n), (this.z = r[2] * e + r[6] * i + r[10] * n), this.normalize();
                    },
                    divide: function (t) {
                        return (this.x /= t.x), (this.y /= t.y), (this.z /= t.z), this;
                    },
                    divideScalar: function (t) {
                        return this.multiplyScalar(1 / t);
                    },
                    min: function (t) {
                        return (this.x = Math.min(this.x, t.x)), (this.y = Math.min(this.y, t.y)), (this.z = Math.min(this.z, t.z)), this;
                    },
                    max: function (t) {
                        return (this.x = Math.max(this.x, t.x)), (this.y = Math.max(this.y, t.y)), (this.z = Math.max(this.z, t.z)), this;
                    },
                    clamp: function (t, e) {
                        return (this.x = Math.max(t.x, Math.min(e.x, this.x))), (this.y = Math.max(t.y, Math.min(e.y, this.y))), (this.z = Math.max(t.z, Math.min(e.z, this.z))), this;
                    },
                    clampScalar: (function () {
                        var t, e;
                        return function (i, n) {
                            return void 0 === t && ((t = new c()), (e = new c())), t.set(i, i, i), e.set(n, n, n), this.clamp(t, e);
                        };
                    })(),
                    clampLength: function (t, e) {
                        var i = this.length();
                        return this.multiplyScalar(Math.max(t, Math.min(e, i)) / i);
                    },
                    floor: function () {
                        return (this.x = Math.floor(this.x)), (this.y = Math.floor(this.y)), (this.z = Math.floor(this.z)), this;
                    },
                    ceil: function () {
                        return (this.x = Math.ceil(this.x)), (this.y = Math.ceil(this.y)), (this.z = Math.ceil(this.z)), this;
                    },
                    round: function () {
                        return (this.x = Math.round(this.x)), (this.y = Math.round(this.y)), (this.z = Math.round(this.z)), this;
                    },
                    roundToZero: function () {
                        return (this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)), (this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)), (this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z)), this;
                    },
                    negate: function () {
                        return (this.x = -this.x), (this.y = -this.y), (this.z = -this.z), this;
                    },
                    dot: function (t) {
                        return this.x * t.x + this.y * t.y + this.z * t.z;
                    },
                    lengthSq: function () {
                        return this.x * this.x + this.y * this.y + this.z * this.z;
                    },
                    length: function () {
                        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
                    },
                    lengthManhattan: function () {
                        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
                    },
                    normalize: function () {
                        return this.divideScalar(this.length());
                    },
                    setLength: function (t) {
                        return this.multiplyScalar(t / this.length());
                    },
                    lerp: function (t, e) {
                        return (this.x += (t.x - this.x) * e), (this.y += (t.y - this.y) * e), (this.z += (t.z - this.z) * e), this;
                    },
                    lerpVectors: function (t, e, i) {
                        return this.subVectors(e, t).multiplyScalar(i).add(t);
                    },
                    cross: function (t, e) {
                        if (void 0 !== e) return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."), this.crossVectors(t, e);
                        var i = this.x,
                            n = this.y,
                            r = this.z;
                        return (this.x = n * t.z - r * t.y), (this.y = r * t.x - i * t.z), (this.z = i * t.y - n * t.x), this;
                    },
                    crossVectors: function (t, e) {
                        var i = t.x,
                            n = t.y,
                            r = t.z,
                            o = e.x,
                            a = e.y,
                            s = e.z;
                        return (this.x = n * s - r * a), (this.y = r * o - i * s), (this.z = i * a - n * o), this;
                    },
                    projectOnVector: function (t) {
                        var e = t.dot(this) / t.lengthSq();
                        return this.copy(t).multiplyScalar(e);
                    },
                    projectOnPlane: (function () {
                        var t;
                        return function (e) {
                            return void 0 === t && (t = new c()), t.copy(this).projectOnVector(e), this.sub(t);
                        };
                    })(),
                    reflect: (function () {
                        var t;
                        return function (e) {
                            return void 0 === t && (t = new c()), this.sub(t.copy(e).multiplyScalar(2 * this.dot(e)));
                        };
                    })(),
                    angleTo: function (t) {
                        var e = this.dot(t) / Math.sqrt(this.lengthSq() * t.lengthSq());
                        return Math.acos(Ma.clamp(e, -1, 1));
                    },
                    distanceTo: function (t) {
                        return Math.sqrt(this.distanceToSquared(t));
                    },
                    distanceToSquared: function (t) {
                        var e = this.x - t.x,
                            i = this.y - t.y,
                            n = this.z - t.z;
                        return e * e + i * i + n * n;
                    },
                    distanceToManhattan: function (t) {
                        return Math.abs(this.x - t.x) + Math.abs(this.y - t.y) + Math.abs(this.z - t.z);
                    },
                    setFromSpherical: function (t) {
                        var e = Math.sin(t.phi) * t.radius;
                        return (this.x = e * Math.sin(t.theta)), (this.y = Math.cos(t.phi) * t.radius), (this.z = e * Math.cos(t.theta)), this;
                    },
                    setFromMatrixPosition: function (t) {
                        return this.setFromMatrixColumn(t, 3);
                    },
                    setFromMatrixScale: function (t) {
                        var e = this.setFromMatrixColumn(t, 0).length(),
                            i = this.setFromMatrixColumn(t, 1).length(),
                            n = this.setFromMatrixColumn(t, 2).length();
                        return (this.x = e), (this.y = i), (this.z = n), this;
                    },
                    setFromMatrixColumn: function (t, e) {
                        if ("number" == typeof t) {
                            console.warn("THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).");
                            var i = t;
                            (t = e), (e = i);
                        }
                        return this.fromArray(t.elements, 4 * e);
                    },
                    equals: function (t) {
                        return t.x === this.x && t.y === this.y && t.z === this.z;
                    },
                    fromArray: function (t, e) {
                        return void 0 === e && (e = 0), (this.x = t[e]), (this.y = t[e + 1]), (this.z = t[e + 2]), this;
                    },
                    toArray: function (t, e) {
                        return void 0 === t && (t = []), void 0 === e && (e = 0), (t[e] = this.x), (t[e + 1] = this.y), (t[e + 2] = this.z), t;
                    },
                    fromAttribute: function (t, e, i) {
                        return void 0 === i && (i = 0), (e = e * t.itemSize + i), (this.x = t.array[e]), (this.y = t.array[e + 1]), (this.z = t.array[e + 2]), this;
                    },
                }),
                (u.prototype = {
                    constructor: u,
                    isMatrix4: !0,
                    set: function (t, e, i, n, r, o, a, s, l, c, u, h, d, p, f, m) {
                        var v = this.elements;
                        return (v[0] = t), (v[4] = e), (v[8] = i), (v[12] = n), (v[1] = r), (v[5] = o), (v[9] = a), (v[13] = s), (v[2] = l), (v[6] = c), (v[10] = u), (v[14] = h), (v[3] = d), (v[7] = p), (v[11] = f), (v[15] = m), this;
                    },
                    identity: function () {
                        return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
                    },
                    clone: function () {
                        return new u().fromArray(this.elements);
                    },
                    copy: function (t) {
                        return this.elements.set(t.elements), this;
                    },
                    copyPosition: function (t) {
                        var e = this.elements,
                            i = t.elements;
                        return (e[12] = i[12]), (e[13] = i[13]), (e[14] = i[14]), this;
                    },
                    extractBasis: function (t, e, i) {
                        return t.setFromMatrixColumn(this, 0), e.setFromMatrixColumn(this, 1), i.setFromMatrixColumn(this, 2), this;
                    },
                    makeBasis: function (t, e, i) {
                        return this.set(t.x, e.x, i.x, 0, t.y, e.y, i.y, 0, t.z, e.z, i.z, 0, 0, 0, 0, 1), this;
                    },
                    extractRotation: (function () {
                        var t;
                        return function (e) {
                            void 0 === t && (t = new c());
                            var i = this.elements,
                                n = e.elements,
                                r = 1 / t.setFromMatrixColumn(e, 0).length(),
                                o = 1 / t.setFromMatrixColumn(e, 1).length(),
                                a = 1 / t.setFromMatrixColumn(e, 2).length();
                            return (i[0] = n[0] * r), (i[1] = n[1] * r), (i[2] = n[2] * r), (i[4] = n[4] * o), (i[5] = n[5] * o), (i[6] = n[6] * o), (i[8] = n[8] * a), (i[9] = n[9] * a), (i[10] = n[10] * a), this;
                        };
                    })(),
                    makeRotationFromEuler: function (t) {
                        !1 === (t && t.isEuler) && console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
                        var e = this.elements,
                            i = t.x,
                            n = t.y,
                            r = t.z,
                            o = Math.cos(i),
                            a = Math.sin(i),
                            s = Math.cos(n),
                            l = Math.sin(n),
                            c = Math.cos(r),
                            u = Math.sin(r);
                        if ("XYZ" === t.order) {
                            var h = o * c,
                                d = o * u,
                                p = a * c,
                                f = a * u;
                            (e[0] = s * c), (e[4] = -s * u), (e[8] = l), (e[1] = d + p * l), (e[5] = h - f * l), (e[9] = -a * s), (e[2] = f - h * l), (e[6] = p + d * l), (e[10] = o * s);
                        } else if ("YXZ" === t.order) {
                            var m = s * c,
                                v = s * u,
                                g = l * c,
                                y = l * u;
                            (e[0] = m + y * a), (e[4] = g * a - v), (e[8] = o * l), (e[1] = o * u), (e[5] = o * c), (e[9] = -a), (e[2] = v * a - g), (e[6] = y + m * a), (e[10] = o * s);
                        } else if ("ZXY" === t.order) {
                            var m = s * c,
                                v = s * u,
                                g = l * c,
                                y = l * u;
                            (e[0] = m - y * a), (e[4] = -o * u), (e[8] = g + v * a), (e[1] = v + g * a), (e[5] = o * c), (e[9] = y - m * a), (e[2] = -o * l), (e[6] = a), (e[10] = o * s);
                        } else if ("ZYX" === t.order) {
                            var h = o * c,
                                d = o * u,
                                p = a * c,
                                f = a * u;
                            (e[0] = s * c), (e[4] = p * l - d), (e[8] = h * l + f), (e[1] = s * u), (e[5] = f * l + h), (e[9] = d * l - p), (e[2] = -l), (e[6] = a * s), (e[10] = o * s);
                        } else if ("YZX" === t.order) {
                            var _ = o * s,
                                b = o * l,
                                x = a * s,
                                w = a * l;
                            (e[0] = s * c), (e[4] = w - _ * u), (e[8] = x * u + b), (e[1] = u), (e[5] = o * c), (e[9] = -a * c), (e[2] = -l * c), (e[6] = b * u + x), (e[10] = _ - w * u);
                        } else if ("XZY" === t.order) {
                            var _ = o * s,
                                b = o * l,
                                x = a * s,
                                w = a * l;
                            (e[0] = s * c), (e[4] = -u), (e[8] = l * c), (e[1] = _ * u + w), (e[5] = o * c), (e[9] = b * u - x), (e[2] = x * u - b), (e[6] = a * c), (e[10] = w * u + _);
                        }
                        return (e[3] = 0), (e[7] = 0), (e[11] = 0), (e[12] = 0), (e[13] = 0), (e[14] = 0), (e[15] = 1), this;
                    },
                    makeRotationFromQuaternion: function (t) {
                        var e = this.elements,
                            i = t.x,
                            n = t.y,
                            r = t.z,
                            o = t.w,
                            a = i + i,
                            s = n + n,
                            l = r + r,
                            c = i * a,
                            u = i * s,
                            h = i * l,
                            d = n * s,
                            p = n * l,
                            f = r * l,
                            m = o * a,
                            v = o * s,
                            g = o * l;
                        return (
                            (e[0] = 1 - (d + f)),
                            (e[4] = u - g),
                            (e[8] = h + v),
                            (e[1] = u + g),
                            (e[5] = 1 - (c + f)),
                            (e[9] = p - m),
                            (e[2] = h - v),
                            (e[6] = p + m),
                            (e[10] = 1 - (c + d)),
                            (e[3] = 0),
                            (e[7] = 0),
                            (e[11] = 0),
                            (e[12] = 0),
                            (e[13] = 0),
                            (e[14] = 0),
                            (e[15] = 1),
                            this
                        );
                    },
                    lookAt: (function () {
                        var t, e, i;
                        return function (n, r, o) {
                            void 0 === t && ((t = new c()), (e = new c()), (i = new c()));
                            var a = this.elements;
                            return (
                                i.subVectors(n, r).normalize(),
                                0 === i.lengthSq() && (i.z = 1),
                                t.crossVectors(o, i).normalize(),
                                0 === t.lengthSq() && ((i.z += 1e-4), t.crossVectors(o, i).normalize()),
                                e.crossVectors(i, t),
                                (a[0] = t.x),
                                (a[4] = e.x),
                                (a[8] = i.x),
                                (a[1] = t.y),
                                (a[5] = e.y),
                                (a[9] = i.y),
                                (a[2] = t.z),
                                (a[6] = e.z),
                                (a[10] = i.z),
                                this
                            );
                        };
                    })(),
                    multiply: function (t, e) {
                        return void 0 !== e ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."), this.multiplyMatrices(t, e)) : this.multiplyMatrices(this, t);
                    },
                    premultiply: function (t) {
                        return this.multiplyMatrices(t, this);
                    },
                    multiplyMatrices: function (t, e) {
                        var i = t.elements,
                            n = e.elements,
                            r = this.elements,
                            o = i[0],
                            a = i[4],
                            s = i[8],
                            l = i[12],
                            c = i[1],
                            u = i[5],
                            h = i[9],
                            d = i[13],
                            p = i[2],
                            f = i[6],
                            m = i[10],
                            v = i[14],
                            g = i[3],
                            y = i[7],
                            _ = i[11],
                            b = i[15],
                            x = n[0],
                            w = n[4],
                            T = n[8],
                            E = n[12],
                            M = n[1],
                            S = n[5],
                            A = n[9],
                            R = n[13],
                            C = n[2],
                            P = n[6],
                            D = n[10],
                            O = n[14],
                            L = n[3],
                            j = n[7],
                            k = n[11],
                            I = n[15];
                        return (
                            (r[0] = o * x + a * M + s * C + l * L),
                            (r[4] = o * w + a * S + s * P + l * j),
                            (r[8] = o * T + a * A + s * D + l * k),
                            (r[12] = o * E + a * R + s * O + l * I),
                            (r[1] = c * x + u * M + h * C + d * L),
                            (r[5] = c * w + u * S + h * P + d * j),
                            (r[9] = c * T + u * A + h * D + d * k),
                            (r[13] = c * E + u * R + h * O + d * I),
                            (r[2] = p * x + f * M + m * C + v * L),
                            (r[6] = p * w + f * S + m * P + v * j),
                            (r[10] = p * T + f * A + m * D + v * k),
                            (r[14] = p * E + f * R + m * O + v * I),
                            (r[3] = g * x + y * M + _ * C + b * L),
                            (r[7] = g * w + y * S + _ * P + b * j),
                            (r[11] = g * T + y * A + _ * D + b * k),
                            (r[15] = g * E + y * R + _ * O + b * I),
                            this
                        );
                    },
                    multiplyToArray: function (t, e, i) {
                        var n = this.elements;
                        return (
                            this.multiplyMatrices(t, e),
                            (i[0] = n[0]),
                            (i[1] = n[1]),
                            (i[2] = n[2]),
                            (i[3] = n[3]),
                            (i[4] = n[4]),
                            (i[5] = n[5]),
                            (i[6] = n[6]),
                            (i[7] = n[7]),
                            (i[8] = n[8]),
                            (i[9] = n[9]),
                            (i[10] = n[10]),
                            (i[11] = n[11]),
                            (i[12] = n[12]),
                            (i[13] = n[13]),
                            (i[14] = n[14]),
                            (i[15] = n[15]),
                            this
                        );
                    },
                    multiplyScalar: function (t) {
                        var e = this.elements;
                        return (
                            (e[0] *= t),
                            (e[4] *= t),
                            (e[8] *= t),
                            (e[12] *= t),
                            (e[1] *= t),
                            (e[5] *= t),
                            (e[9] *= t),
                            (e[13] *= t),
                            (e[2] *= t),
                            (e[6] *= t),
                            (e[10] *= t),
                            (e[14] *= t),
                            (e[3] *= t),
                            (e[7] *= t),
                            (e[11] *= t),
                            (e[15] *= t),
                            this
                        );
                    },
                    applyToVector3Array: (function () {
                        var t;
                        return function (e, i, n) {
                            void 0 === t && (t = new c()), void 0 === i && (i = 0), void 0 === n && (n = e.length);
                            for (var r = 0, o = i; r < n; r += 3, o += 3) t.fromArray(e, o), t.applyMatrix4(this), t.toArray(e, o);
                            return e;
                        };
                    })(),
                    applyToBuffer: (function () {
                        var t;
                        return function (e, i, n) {
                            void 0 === t && (t = new c()), void 0 === i && (i = 0), void 0 === n && (n = e.length / e.itemSize);
                            for (var r = 0, o = i; r < n; r++, o++) (t.x = e.getX(o)), (t.y = e.getY(o)), (t.z = e.getZ(o)), t.applyMatrix4(this), e.setXYZ(o, t.x, t.y, t.z);
                            return e;
                        };
                    })(),
                    determinant: function () {
                        var t = this.elements,
                            e = t[0],
                            i = t[4],
                            n = t[8],
                            r = t[12],
                            o = t[1],
                            a = t[5],
                            s = t[9],
                            l = t[13],
                            c = t[2],
                            u = t[6],
                            h = t[10],
                            d = t[14];
                        return (
                            t[3] * (+r * s * u - n * l * u - r * a * h + i * l * h + n * a * d - i * s * d) +
                            t[7] * (+e * s * d - e * l * h + r * o * h - n * o * d + n * l * c - r * s * c) +
                            t[11] * (+e * l * u - e * a * d - r * o * u + i * o * d + r * a * c - i * l * c) +
                            t[15] * (-n * a * c - e * s * u + e * a * h + n * o * u - i * o * h + i * s * c)
                        );
                    },
                    transpose: function () {
                        var t,
                            e = this.elements;
                        return (
                            (t = e[1]),
                            (e[1] = e[4]),
                            (e[4] = t),
                            (t = e[2]),
                            (e[2] = e[8]),
                            (e[8] = t),
                            (t = e[6]),
                            (e[6] = e[9]),
                            (e[9] = t),
                            (t = e[3]),
                            (e[3] = e[12]),
                            (e[12] = t),
                            (t = e[7]),
                            (e[7] = e[13]),
                            (e[13] = t),
                            (t = e[11]),
                            (e[11] = e[14]),
                            (e[14] = t),
                            this
                        );
                    },
                    flattenToArrayOffset: function (t, e) {
                        return console.warn("THREE.Matrix3: .flattenToArrayOffset is deprecated - just use .toArray instead."), this.toArray(t, e);
                    },
                    getPosition: (function () {
                        var t;
                        return function () {
                            return void 0 === t && (t = new c()), console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."), t.setFromMatrixColumn(this, 3);
                        };
                    })(),
                    setPosition: function (t) {
                        var e = this.elements;
                        return (e[12] = t.x), (e[13] = t.y), (e[14] = t.z), this;
                    },
                    getInverse: function (t, e) {
                        var i = this.elements,
                            n = t.elements,
                            r = n[0],
                            o = n[1],
                            a = n[2],
                            s = n[3],
                            l = n[4],
                            c = n[5],
                            u = n[6],
                            h = n[7],
                            d = n[8],
                            p = n[9],
                            f = n[10],
                            m = n[11],
                            v = n[12],
                            g = n[13],
                            y = n[14],
                            _ = n[15],
                            b = p * y * h - g * f * h + g * u * m - c * y * m - p * u * _ + c * f * _,
                            x = v * f * h - d * y * h - v * u * m + l * y * m + d * u * _ - l * f * _,
                            w = d * g * h - v * p * h + v * c * m - l * g * m - d * c * _ + l * p * _,
                            T = v * p * u - d * g * u - v * c * f + l * g * f + d * c * y - l * p * y,
                            E = r * b + o * x + a * w + s * T;
                        if (0 === E) {
                            var M = "THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0";
                            if (!0 === e) throw new Error(M);
                            return console.warn(M), this.identity();
                        }
                        var S = 1 / E;
                        return (
                            (i[0] = b * S),
                            (i[1] = (g * f * s - p * y * s - g * a * m + o * y * m + p * a * _ - o * f * _) * S),
                            (i[2] = (c * y * s - g * u * s + g * a * h - o * y * h - c * a * _ + o * u * _) * S),
                            (i[3] = (p * u * s - c * f * s - p * a * h + o * f * h + c * a * m - o * u * m) * S),
                            (i[4] = x * S),
                            (i[5] = (d * y * s - v * f * s + v * a * m - r * y * m - d * a * _ + r * f * _) * S),
                            (i[6] = (v * u * s - l * y * s - v * a * h + r * y * h + l * a * _ - r * u * _) * S),
                            (i[7] = (l * f * s - d * u * s + d * a * h - r * f * h - l * a * m + r * u * m) * S),
                            (i[8] = w * S),
                            (i[9] = (v * p * s - d * g * s - v * o * m + r * g * m + d * o * _ - r * p * _) * S),
                            (i[10] = (l * g * s - v * c * s + v * o * h - r * g * h - l * o * _ + r * c * _) * S),
                            (i[11] = (d * c * s - l * p * s - d * o * h + r * p * h + l * o * m - r * c * m) * S),
                            (i[12] = T * S),
                            (i[13] = (d * g * a - v * p * a + v * o * f - r * g * f - d * o * y + r * p * y) * S),
                            (i[14] = (v * c * a - l * g * a - v * o * u + r * g * u + l * o * y - r * c * y) * S),
                            (i[15] = (l * p * a - d * c * a + d * o * u - r * p * u - l * o * f + r * c * f) * S),
                            this
                        );
                    },
                    scale: function (t) {
                        var e = this.elements,
                            i = t.x,
                            n = t.y,
                            r = t.z;
                        return (e[0] *= i), (e[4] *= n), (e[8] *= r), (e[1] *= i), (e[5] *= n), (e[9] *= r), (e[2] *= i), (e[6] *= n), (e[10] *= r), (e[3] *= i), (e[7] *= n), (e[11] *= r), this;
                    },
                    getMaxScaleOnAxis: function () {
                        var t = this.elements,
                            e = t[0] * t[0] + t[1] * t[1] + t[2] * t[2],
                            i = t[4] * t[4] + t[5] * t[5] + t[6] * t[6],
                            n = t[8] * t[8] + t[9] * t[9] + t[10] * t[10];
                        return Math.sqrt(Math.max(e, i, n));
                    },
                    makeTranslation: function (t, e, i) {
                        return this.set(1, 0, 0, t, 0, 1, 0, e, 0, 0, 1, i, 0, 0, 0, 1), this;
                    },
                    makeRotationX: function (t) {
                        var e = Math.cos(t),
                            i = Math.sin(t);
                        return this.set(1, 0, 0, 0, 0, e, -i, 0, 0, i, e, 0, 0, 0, 0, 1), this;
                    },
                    makeRotationY: function (t) {
                        var e = Math.cos(t),
                            i = Math.sin(t);
                        return this.set(e, 0, i, 0, 0, 1, 0, 0, -i, 0, e, 0, 0, 0, 0, 1), this;
                    },
                    makeRotationZ: function (t) {
                        var e = Math.cos(t),
                            i = Math.sin(t);
                        return this.set(e, -i, 0, 0, i, e, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
                    },
                    makeRotationAxis: function (t, e) {
                        var i = Math.cos(e),
                            n = Math.sin(e),
                            r = 1 - i,
                            o = t.x,
                            a = t.y,
                            s = t.z,
                            l = r * o,
                            c = r * a;
                        return this.set(l * o + i, l * a - n * s, l * s + n * a, 0, l * a + n * s, c * a + i, c * s - n * o, 0, l * s - n * a, c * s + n * o, r * s * s + i, 0, 0, 0, 0, 1), this;
                    },
                    makeScale: function (t, e, i) {
                        return this.set(t, 0, 0, 0, 0, e, 0, 0, 0, 0, i, 0, 0, 0, 0, 1), this;
                    },
                    compose: function (t, e, i) {
                        return this.makeRotationFromQuaternion(e), this.scale(i), this.setPosition(t), this;
                    },
                    decompose: (function () {
                        var t, e;
                        return function (i, n, r) {
                            void 0 === t && ((t = new c()), (e = new u()));
                            var o = this.elements,
                                a = t.set(o[0], o[1], o[2]).length(),
                                s = t.set(o[4], o[5], o[6]).length(),
                                l = t.set(o[8], o[9], o[10]).length();
                            this.determinant() < 0 && (a = -a), (i.x = o[12]), (i.y = o[13]), (i.z = o[14]), e.elements.set(this.elements);
                            var h = 1 / a,
                                d = 1 / s,
                                p = 1 / l;
                            return (
                                (e.elements[0] *= h),
                                (e.elements[1] *= h),
                                (e.elements[2] *= h),
                                (e.elements[4] *= d),
                                (e.elements[5] *= d),
                                (e.elements[6] *= d),
                                (e.elements[8] *= p),
                                (e.elements[9] *= p),
                                (e.elements[10] *= p),
                                n.setFromRotationMatrix(e),
                                (r.x = a),
                                (r.y = s),
                                (r.z = l),
                                this
                            );
                        };
                    })(),
                    makeFrustum: function (t, e, i, n, r, o) {
                        var a = this.elements,
                            s = (2 * r) / (e - t),
                            l = (2 * r) / (n - i),
                            c = (e + t) / (e - t),
                            u = (n + i) / (n - i),
                            h = -(o + r) / (o - r),
                            d = (-2 * o * r) / (o - r);
                        return (a[0] = s), (a[4] = 0), (a[8] = c), (a[12] = 0), (a[1] = 0), (a[5] = l), (a[9] = u), (a[13] = 0), (a[2] = 0), (a[6] = 0), (a[10] = h), (a[14] = d), (a[3] = 0), (a[7] = 0), (a[11] = -1), (a[15] = 0), this;
                    },
                    makePerspective: function (t, e, i, n) {
                        var r = i * Math.tan(Ma.DEG2RAD * t * 0.5),
                            o = -r,
                            a = o * e,
                            s = r * e;
                        return this.makeFrustum(a, s, o, r, i, n);
                    },
                    makeOrthographic: function (t, e, i, n, r, o) {
                        var a = this.elements,
                            s = 1 / (e - t),
                            l = 1 / (i - n),
                            c = 1 / (o - r),
                            u = (e + t) * s,
                            h = (i + n) * l,
                            d = (o + r) * c;
                        return (
                            (a[0] = 2 * s),
                            (a[4] = 0),
                            (a[8] = 0),
                            (a[12] = -u),
                            (a[1] = 0),
                            (a[5] = 2 * l),
                            (a[9] = 0),
                            (a[13] = -h),
                            (a[2] = 0),
                            (a[6] = 0),
                            (a[10] = -2 * c),
                            (a[14] = -d),
                            (a[3] = 0),
                            (a[7] = 0),
                            (a[11] = 0),
                            (a[15] = 1),
                            this
                        );
                    },
                    equals: function (t) {
                        for (var e = this.elements, i = t.elements, n = 0; n < 16; n++) if (e[n] !== i[n]) return !1;
                        return !0;
                    },
                    fromArray: function (t, e) {
                        void 0 === e && (e = 0);
                        for (var i = 0; i < 16; i++) this.elements[i] = t[i + e];
                        return this;
                    },
                    toArray: function (t, e) {
                        void 0 === t && (t = []), void 0 === e && (e = 0);
                        var i = this.elements;
                        return (
                            (t[e] = i[0]),
                            (t[e + 1] = i[1]),
                            (t[e + 2] = i[2]),
                            (t[e + 3] = i[3]),
                            (t[e + 4] = i[4]),
                            (t[e + 5] = i[5]),
                            (t[e + 6] = i[6]),
                            (t[e + 7] = i[7]),
                            (t[e + 8] = i[8]),
                            (t[e + 9] = i[9]),
                            (t[e + 10] = i[10]),
                            (t[e + 11] = i[11]),
                            (t[e + 12] = i[12]),
                            (t[e + 13] = i[13]),
                            (t[e + 14] = i[14]),
                            (t[e + 15] = i[15]),
                            t
                        );
                    },
                }),
                (h.prototype = Object.create(n.prototype)),
                (h.prototype.constructor = h),
                (h.prototype.isCubeTexture = !0),
                Object.defineProperty(h.prototype, "images", {
                    get: function () {
                        return this.image;
                    },
                    set: function (t) {
                        this.image = t;
                    },
                });
            var Aa = new n(),
                Ra = new h(),
                Ca = [],
                Pa = [];
            z.prototype.setValue = function (t, e) {
                for (var i = this.seq, n = 0, r = i.length; n !== r; ++n) {
                    var o = i[n];
                    o.setValue(t, e[o.id]);
                }
            };
            var Da = /([\w\d_]+)(\])?(\[|\.)?/g;
            (W.prototype.setValue = function (t, e, i) {
                var n = this.map[e];
                void 0 !== n && n.setValue(t, i, this.renderer);
            }),
                (W.prototype.set = function (t, e, i) {
                    var n = this.map[i];
                    void 0 !== n && n.setValue(t, e[i], this.renderer);
                }),
                (W.prototype.setOptional = function (t, e, i) {
                    var n = e[i];
                    void 0 !== n && this.setValue(t, i, n);
                }),
                (W.upload = function (t, e, i, n) {
                    for (var r = 0, o = e.length; r !== o; ++r) {
                        var a = e[r],
                            s = i[a.id];
                        !1 !== s.needsUpdate && a.setValue(t, s.value, n);
                    }
                }),
                (W.seqWithValue = function (t, e) {
                    for (var i = [], n = 0, r = t.length; n !== r; ++n) {
                        var o = t[n];
                        o.id in e && i.push(o);
                    }
                    return i;
                });
            var Oa = {
                    merge: function (t) {
                        for (var e = {}, i = 0; i < t.length; i++) {
                            var n = this.clone(t[i]);
                            for (var r in n) e[r] = n[r];
                        }
                        return e;
                    },
                    clone: function (t) {
                        var e = {};
                        for (var i in t) {
                            e[i] = {};
                            for (var n in t[i]) {
                                var r = t[i][n];
                                r && (r.isColor || r.isMatrix3 || r.isMatrix4 || r.isVector2 || r.isVector3 || r.isVector4 || r.isTexture) ? (e[i][n] = r.clone()) : Array.isArray(r) ? (e[i][n] = r.slice()) : (e[i][n] = r);
                            }
                        }
                        return e;
                    },
                },
                La = {
                    alphamap_fragment: "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n",
                    alphamap_pars_fragment: "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n",
                    alphatest_fragment: "#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n",
                    aomap_fragment:
                        "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n",
                    aomap_pars_fragment: "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",
                    begin_vertex: "\nvec3 transformed = vec3( position );\n",
                    beginnormal_vertex: "\nvec3 objectNormal = vec3( normal );\n",
                    bsdfs:
                        "bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\n\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t\t}\n\t\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n",
                    bumpmap_pars_fragment:
                        "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n",
                    clipping_planes_fragment:
                        "#if NUM_CLIPPING_PLANES > 0\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\n\t\tvec4 plane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t\t\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\n\t\t\tvec4 plane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t\n\t#endif\n#endif\n",
                    clipping_planes_pars_fragment: "#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n",
                    clipping_planes_pars_vertex: "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvarying vec3 vViewPosition;\n#endif\n",
                    clipping_planes_vertex: "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n",
                    color_fragment: "#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",
                    color_pars_fragment: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n",
                    color_pars_vertex: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",
                    color_vertex: "#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",
                    common:
                        "#define PI 3.14159265359\n#define PI2 6.28318530718\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\n",
                    cube_uv_reflection_fragment:
                        "#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif\n",
                    defaultnormal_vertex: "#ifdef FLIP_SIDED\n\tobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;\n",
                    displacementmap_pars_vertex: "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n",
                    displacementmap_vertex: "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n",
                    emissivemap_fragment:
                        "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n",
                    emissivemap_pars_fragment: "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n",
                    encodings_fragment: "  gl_FragColor = linearToOutputTexel( gl_FragColor );\n",
                    encodings_pars_fragment:
                        "\nvec4 LinearToLinear( in vec4 value ) {\n  return value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n  float maxComponent = max( max( value.r, value.g ), value.b );\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n  float maxRGB = max( value.x, max( value.g, value.b ) );\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n  M            = ceil( M * 255.0 ) / 255.0;\n  return vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n    float maxRGB = max( value.x, max( value.g, value.b ) );\n    float D      = max( maxRange / maxRGB, 1.0 );\n    D            = min( floor( D ) / 255.0, 1.0 );\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n  vec4 vResult;\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n  vResult.w = fract(Le);\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n  return vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n  float Le = value.z * 255.0 + value.w;\n  vec3 Xp_Y_XYZp;\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n  return vec4( max(vRGB, 0.0), 1.0 );\n}\n",
                    envmap_fragment:
                        "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n",
                    envmap_pars_fragment:
                        "#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntenstiy;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n",
                    envmap_pars_vertex:
                        "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif\n",
                    envmap_vertex:
                        "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif\n",
                    fog_fragment:
                        "#ifdef USE_FOG\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\t#else\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\t#endif\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n",
                    fog_pars_fragment: "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",
                    lightmap_fragment: "#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n",
                    lightmap_pars_fragment: "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",
                    lights_lambert_vertex:
                        "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n",
                    lights_pars:
                        "uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\n\t\t\tdirectLight.color = pointLight.color;\n\t\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\t#include <normal_flip>\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\t#include <normal_flip>\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n",
                    lights_phong_fragment:
                        "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",
                    lights_phong_pars_fragment:
                        "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n",
                    lights_physical_fragment:
                        "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n",
                    lights_physical_pars_fragment:
                        "struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n",
                    lights_template:
                        "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t \tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n\t#endif\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n\t#ifndef STANDARD\n\t\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\n\t#else\n\t\tvec3 clearCoatRadiance = vec3( 0.0 );\n\t#endif\n\t\t\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n",
                    logdepthbuf_fragment: "#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif",
                    logdepthbuf_pars_fragment: "#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n",
                    logdepthbuf_pars_vertex: "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif",
                    logdepthbuf_vertex:
                        "#ifdef USE_LOGDEPTHBUF\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\t#endif\n#endif\n",
                    map_fragment: "#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n",
                    map_pars_fragment: "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n",
                    map_particle_fragment: "#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n",
                    map_particle_pars_fragment: "#ifdef USE_MAP\n\tuniform vec4 offsetRepeat;\n\tuniform sampler2D map;\n#endif\n",
                    metalnessmap_fragment: "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.r;\n#endif\n",
                    metalnessmap_pars_fragment: "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",
                    morphnormal_vertex:
                        "#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n",
                    morphtarget_pars_vertex: "#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",
                    morphtarget_vertex:
                        "#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n",
                    normal_flip: "#ifdef DOUBLE_SIDED\n\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n#else\n\tfloat flipNormal = 1.0;\n#endif\n",
                    normal_fragment:
                        "#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal ) * flipNormal;\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n",
                    normalmap_pars_fragment:
                        "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif\n",
                    packing:
                        "vec3 packNormalToRGB( const in vec3 normal ) {\n  return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n  return 1.0 - 2.0 * rgb.xyz;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n  return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n  return linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",
                    premultiplied_alpha_fragment: "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n",
                    project_vertex: "#ifdef USE_SKINNING\n\tvec4 mvPosition = modelViewMatrix * skinned;\n#else\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;\n",
                    roughnessmap_fragment: "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.r;\n#endif\n",
                    roughnessmap_pars_fragment: "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",
                    shadowmap_pars_fragment:
                        "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\treturn (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn 1.0;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n",
                    shadowmap_pars_vertex:
                        "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif\n",
                    shadowmap_vertex:
                        "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif\n",
                    shadowmask_pars_fragment:
                        "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n",
                    skinbase_vertex:
                        "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",
                    skinning_pars_vertex:
                        "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n",
                    skinning_vertex:
                        "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n#endif\n",
                    skinnormal_vertex:
                        "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n",
                    specularmap_fragment: "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",
                    specularmap_pars_fragment: "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",
                    tonemapping_fragment: "#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n",
                    tonemapping_pars_fragment:
                        "#define saturate(a) clamp( a, 0.0, 1.0 )\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n  return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  return saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  color = max( vec3( 0.0 ), color - 0.004 );\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n",
                    uv_pars_fragment:
                        "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif",
                    uv_pars_vertex:
                        "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n#endif\n",
                    uv_vertex:
                        "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",
                    uv2_pars_fragment: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",
                    uv2_pars_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",
                    uv2_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif",
                    worldpos_vertex:
                        "#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\t#ifdef USE_SKINNING\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\t#else\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\t#endif\n#endif\n",
                    cube_frag:
                        "uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\tgl_FragColor.a *= opacity;\n}\n",
                    cube_vert: "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n",
                    depth_frag:
                        "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}\n",
                    depth_vert:
                        "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n",
                    distanceRGBA_frag:
                        "uniform vec3 lightPos;\nvarying vec4 vWorldPosition;\n#include <common>\n#include <packing>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\n}\n",
                    distanceRGBA_vert:
                        "varying vec4 vWorldPosition;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <skinbase_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition;\n}\n",
                    equirect_frag:
                        "uniform sampler2D tEquirect;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}\n",
                    equirect_vert: "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n",
                    linedashed_frag:
                        "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
                    linedashed_vert:
                        "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n",
                    meshbasic_frag:
                        "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight;\n\treflectedLight.directDiffuse = vec3( 0.0 );\n\treflectedLight.directSpecular = vec3( 0.0 );\n\treflectedLight.indirectDiffuse = diffuseColor.rgb;\n\treflectedLight.indirectSpecular = vec3( 0.0 );\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <normal_flip>\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
                    meshbasic_vert:
                        "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n}\n",
                    meshlambert_frag:
                        "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <normal_flip>\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
                    meshlambert_vert:
                        "#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n}\n",
                    meshphong_frag:
                        "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
                    meshphong_vert:
                        "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n}\n",
                    meshphysical_frag:
                        "#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nuniform float envMapIntensity;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
                    meshphysical_vert:
                        "#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n}\n",
                    normal_frag:
                        "uniform float opacity;\nvarying vec3 vNormal;\n#include <common>\n#include <packing>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tgl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\n\t#include <logdepthbuf_fragment>\n}\n",
                    normal_vert:
                        "varying vec3 vNormal;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvNormal = normalize( normalMatrix * normal );\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n",
                    points_frag:
                        "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
                    points_vert:
                        "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n}\n",
                    shadow_frag:
                        "uniform float opacity;\n#include <common>\n#include <packing>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\n}\n",
                    shadow_vert: "#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n}\n",
                };
            X.prototype = {
                constructor: X,
                isColor: !0,
                r: 1,
                g: 1,
                b: 1,
                set: function (t) {
                    return t && t.isColor ? this.copy(t) : "number" == typeof t ? this.setHex(t) : "string" == typeof t && this.setStyle(t), this;
                },
                setScalar: function (t) {
                    return (this.r = t), (this.g = t), (this.b = t), this;
                },
                setHex: function (t) {
                    return (t = Math.floor(t)), (this.r = ((t >> 16) & 255) / 255), (this.g = ((t >> 8) & 255) / 255), (this.b = (255 & t) / 255), this;
                },
                setRGB: function (t, e, i) {
                    return (this.r = t), (this.g = e), (this.b = i), this;
                },
                setHSL: (function () {
                    function t(t, e, i) {
                        return i < 0 && (i += 1), i > 1 && (i -= 1), i < 1 / 6 ? t + 6 * (e - t) * i : i < 0.5 ? e : i < 2 / 3 ? t + 6 * (e - t) * (2 / 3 - i) : t;
                    }
                    return function (e, i, n) {
                        if (((e = Ma.euclideanModulo(e, 1)), (i = Ma.clamp(i, 0, 1)), (n = Ma.clamp(n, 0, 1)), 0 === i)) this.r = this.g = this.b = n;
                        else {
                            var r = n <= 0.5 ? n * (1 + i) : n + i - n * i,
                                o = 2 * n - r;
                            (this.r = t(o, r, e + 1 / 3)), (this.g = t(o, r, e)), (this.b = t(o, r, e - 1 / 3));
                        }
                        return this;
                    };
                })(),
                setStyle: function (t) {
                    function e(e) {
                        void 0 !== e && parseFloat(e) < 1 && console.warn("THREE.Color: Alpha component of " + t + " will be ignored.");
                    }
                    var i;
                    if ((i = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t))) {
                        var n,
                            r = i[1],
                            o = i[2];
                        switch (r) {
                            case "rgb":
                            case "rgba":
                                if ((n = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)))
                                    return (this.r = Math.min(255, parseInt(n[1], 10)) / 255), (this.g = Math.min(255, parseInt(n[2], 10)) / 255), (this.b = Math.min(255, parseInt(n[3], 10)) / 255), e(n[5]), this;
                                if ((n = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)))
                                    return (this.r = Math.min(100, parseInt(n[1], 10)) / 100), (this.g = Math.min(100, parseInt(n[2], 10)) / 100), (this.b = Math.min(100, parseInt(n[3], 10)) / 100), e(n[5]), this;
                                break;
                            case "hsl":
                            case "hsla":
                                if ((n = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))) {
                                    var a = parseFloat(n[1]) / 360,
                                        s = parseInt(n[2], 10) / 100,
                                        l = parseInt(n[3], 10) / 100;
                                    return e(n[5]), this.setHSL(a, s, l);
                                }
                        }
                    } else if ((i = /^\#([A-Fa-f0-9]+)$/.exec(t))) {
                        var c = i[1],
                            u = c.length;
                        if (3 === u) return (this.r = parseInt(c.charAt(0) + c.charAt(0), 16) / 255), (this.g = parseInt(c.charAt(1) + c.charAt(1), 16) / 255), (this.b = parseInt(c.charAt(2) + c.charAt(2), 16) / 255), this;
                        if (6 === u) return (this.r = parseInt(c.charAt(0) + c.charAt(1), 16) / 255), (this.g = parseInt(c.charAt(2) + c.charAt(3), 16) / 255), (this.b = parseInt(c.charAt(4) + c.charAt(5), 16) / 255), this;
                    }
                    if (t && t.length > 0) {
                        var c = ja[t];
                        void 0 !== c ? this.setHex(c) : console.warn("THREE.Color: Unknown color " + t);
                    }
                    return this;
                },
                clone: function () {
                    return new this.constructor(this.r, this.g, this.b);
                },
                copy: function (t) {
                    return (this.r = t.r), (this.g = t.g), (this.b = t.b), this;
                },
                copyGammaToLinear: function (t, e) {
                    return void 0 === e && (e = 2), (this.r = Math.pow(t.r, e)), (this.g = Math.pow(t.g, e)), (this.b = Math.pow(t.b, e)), this;
                },
                copyLinearToGamma: function (t, e) {
                    void 0 === e && (e = 2);
                    var i = e > 0 ? 1 / e : 1;
                    return (this.r = Math.pow(t.r, i)), (this.g = Math.pow(t.g, i)), (this.b = Math.pow(t.b, i)), this;
                },
                convertGammaToLinear: function () {
                    var t = this.r,
                        e = this.g,
                        i = this.b;
                    return (this.r = t * t), (this.g = e * e), (this.b = i * i), this;
                },
                convertLinearToGamma: function () {
                    return (this.r = Math.sqrt(this.r)), (this.g = Math.sqrt(this.g)), (this.b = Math.sqrt(this.b)), this;
                },
                getHex: function () {
                    return ((255 * this.r) << 16) ^ ((255 * this.g) << 8) ^ ((255 * this.b) << 0);
                },
                getHexString: function () {
                    return ("000000" + this.getHex().toString(16)).slice(-6);
                },
                getHSL: function (t) {
                    var e,
                        i,
                        n = t || { h: 0, s: 0, l: 0 },
                        r = this.r,
                        o = this.g,
                        a = this.b,
                        s = Math.max(r, o, a),
                        l = Math.min(r, o, a),
                        c = (l + s) / 2;
                    if (l === s) (e = 0), (i = 0);
                    else {
                        var u = s - l;
                        switch (((i = c <= 0.5 ? u / (s + l) : u / (2 - s - l)), s)) {
                            case r:
                                e = (o - a) / u + (o < a ? 6 : 0);
                                break;
                            case o:
                                e = (a - r) / u + 2;
                                break;
                            case a:
                                e = (r - o) / u + 4;
                        }
                        e /= 6;
                    }
                    return (n.h = e), (n.s = i), (n.l = c), n;
                },
                getStyle: function () {
                    return "rgb(" + ((255 * this.r) | 0) + "," + ((255 * this.g) | 0) + "," + ((255 * this.b) | 0) + ")";
                },
                offsetHSL: function (t, e, i) {
                    var n = this.getHSL();
                    return (n.h += t), (n.s += e), (n.l += i), this.setHSL(n.h, n.s, n.l), this;
                },
                add: function (t) {
                    return (this.r += t.r), (this.g += t.g), (this.b += t.b), this;
                },
                addColors: function (t, e) {
                    return (this.r = t.r + e.r), (this.g = t.g + e.g), (this.b = t.b + e.b), this;
                },
                addScalar: function (t) {
                    return (this.r += t), (this.g += t), (this.b += t), this;
                },
                sub: function (t) {
                    return (this.r = Math.max(0, this.r - t.r)), (this.g = Math.max(0, this.g - t.g)), (this.b = Math.max(0, this.b - t.b)), this;
                },
                multiply: function (t) {
                    return (this.r *= t.r), (this.g *= t.g), (this.b *= t.b), this;
                },
                multiplyScalar: function (t) {
                    return (this.r *= t), (this.g *= t), (this.b *= t), this;
                },
                lerp: function (t, e) {
                    return (this.r += (t.r - this.r) * e), (this.g += (t.g - this.g) * e), (this.b += (t.b - this.b) * e), this;
                },
                equals: function (t) {
                    return t.r === this.r && t.g === this.g && t.b === this.b;
                },
                fromArray: function (t, e) {
                    return void 0 === e && (e = 0), (this.r = t[e]), (this.g = t[e + 1]), (this.b = t[e + 2]), this;
                },
                toArray: function (t, e) {
                    return void 0 === t && (t = []), void 0 === e && (e = 0), (t[e] = this.r), (t[e + 1] = this.g), (t[e + 2] = this.b), t;
                },
                toJSON: function () {
                    return this.getHex();
                },
            };
            var ja = {
                    aliceblue: 15792383,
                    antiquewhite: 16444375,
                    aqua: 65535,
                    aquamarine: 8388564,
                    azure: 15794175,
                    beige: 16119260,
                    bisque: 16770244,
                    black: 0,
                    blanchedalmond: 16772045,
                    blue: 255,
                    blueviolet: 9055202,
                    brown: 10824234,
                    burlywood: 14596231,
                    cadetblue: 6266528,
                    chartreuse: 8388352,
                    chocolate: 13789470,
                    coral: 16744272,
                    cornflowerblue: 6591981,
                    cornsilk: 16775388,
                    crimson: 14423100,
                    cyan: 65535,
                    darkblue: 139,
                    darkcyan: 35723,
                    darkgoldenrod: 12092939,
                    darkgray: 11119017,
                    darkgreen: 25600,
                    darkgrey: 11119017,
                    darkkhaki: 12433259,
                    darkmagenta: 9109643,
                    darkolivegreen: 5597999,
                    darkorange: 16747520,
                    darkorchid: 10040012,
                    darkred: 9109504,
                    darksalmon: 15308410,
                    darkseagreen: 9419919,
                    darkslateblue: 4734347,
                    darkslategray: 3100495,
                    darkslategrey: 3100495,
                    darkturquoise: 52945,
                    darkviolet: 9699539,
                    deeppink: 16716947,
                    deepskyblue: 49151,
                    dimgray: 6908265,
                    dimgrey: 6908265,
                    dodgerblue: 2003199,
                    firebrick: 11674146,
                    floralwhite: 16775920,
                    forestgreen: 2263842,
                    fuchsia: 16711935,
                    gainsboro: 14474460,
                    ghostwhite: 16316671,
                    gold: 16766720,
                    goldenrod: 14329120,
                    gray: 8421504,
                    green: 32768,
                    greenyellow: 11403055,
                    grey: 8421504,
                    honeydew: 15794160,
                    hotpink: 16738740,
                    indianred: 13458524,
                    indigo: 4915330,
                    ivory: 16777200,
                    khaki: 15787660,
                    lavender: 15132410,
                    lavenderblush: 16773365,
                    lawngreen: 8190976,
                    lemonchiffon: 16775885,
                    lightblue: 11393254,
                    lightcoral: 15761536,
                    lightcyan: 14745599,
                    lightgoldenrodyellow: 16448210,
                    lightgray: 13882323,
                    lightgreen: 9498256,
                    lightgrey: 13882323,
                    lightpink: 16758465,
                    lightsalmon: 16752762,
                    lightseagreen: 2142890,
                    lightskyblue: 8900346,
                    lightslategray: 7833753,
                    lightslategrey: 7833753,
                    lightsteelblue: 11584734,
                    lightyellow: 16777184,
                    lime: 65280,
                    limegreen: 3329330,
                    linen: 16445670,
                    magenta: 16711935,
                    maroon: 8388608,
                    mediumaquamarine: 6737322,
                    mediumblue: 205,
                    mediumorchid: 12211667,
                    mediumpurple: 9662683,
                    mediumseagreen: 3978097,
                    mediumslateblue: 8087790,
                    mediumspringgreen: 64154,
                    mediumturquoise: 4772300,
                    mediumvioletred: 13047173,
                    midnightblue: 1644912,
                    mintcream: 16121850,
                    mistyrose: 16770273,
                    moccasin: 16770229,
                    navajowhite: 16768685,
                    navy: 128,
                    oldlace: 16643558,
                    olive: 8421376,
                    olivedrab: 7048739,
                    orange: 16753920,
                    orangered: 16729344,
                    orchid: 14315734,
                    palegoldenrod: 15657130,
                    palegreen: 10025880,
                    paleturquoise: 11529966,
                    palevioletred: 14381203,
                    papayawhip: 16773077,
                    peachpuff: 16767673,
                    peru: 13468991,
                    pink: 16761035,
                    plum: 14524637,
                    powderblue: 11591910,
                    purple: 8388736,
                    red: 16711680,
                    rosybrown: 12357519,
                    royalblue: 4286945,
                    saddlebrown: 9127187,
                    salmon: 16416882,
                    sandybrown: 16032864,
                    seagreen: 3050327,
                    seashell: 16774638,
                    sienna: 10506797,
                    silver: 12632256,
                    skyblue: 8900331,
                    slateblue: 6970061,
                    slategray: 7372944,
                    slategrey: 7372944,
                    snow: 16775930,
                    springgreen: 65407,
                    steelblue: 4620980,
                    tan: 13808780,
                    teal: 32896,
                    thistle: 14204888,
                    tomato: 16737095,
                    turquoise: 4251856,
                    violet: 15631086,
                    wheat: 16113331,
                    white: 16777215,
                    whitesmoke: 16119285,
                    yellow: 16776960,
                    yellowgreen: 10145074,
                },
                ka = {
                    common: {
                        diffuse: { value: new X(15658734) },
                        opacity: { value: 1 },
                        map: { value: null },
                        offsetRepeat: { value: new o(0, 0, 1, 1) },
                        specularMap: { value: null },
                        alphaMap: { value: null },
                        envMap: { value: null },
                        flipEnvMap: { value: -1 },
                        reflectivity: { value: 1 },
                        refractionRatio: { value: 0.98 },
                    },
                    aomap: { aoMap: { value: null }, aoMapIntensity: { value: 1 } },
                    lightmap: { lightMap: { value: null }, lightMapIntensity: { value: 1 } },
                    emissivemap: { emissiveMap: { value: null } },
                    bumpmap: { bumpMap: { value: null }, bumpScale: { value: 1 } },
                    normalmap: { normalMap: { value: null }, normalScale: { value: new i(1, 1) } },
                    displacementmap: { displacementMap: { value: null }, displacementScale: { value: 1 }, displacementBias: { value: 0 } },
                    roughnessmap: { roughnessMap: { value: null } },
                    metalnessmap: { metalnessMap: { value: null } },
                    fog: { fogDensity: { value: 25e-5 }, fogNear: { value: 1 }, fogFar: { value: 2e3 }, fogColor: { value: new X(16777215) } },
                    lights: {
                        ambientLightColor: { value: [] },
                        directionalLights: { value: [], properties: { direction: {}, color: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {} } },
                        directionalShadowMap: { value: [] },
                        directionalShadowMatrix: { value: [] },
                        spotLights: { value: [], properties: { color: {}, position: {}, direction: {}, distance: {}, coneCos: {}, penumbraCos: {}, decay: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {} } },
                        spotShadowMap: { value: [] },
                        spotShadowMatrix: { value: [] },
                        pointLights: { value: [], properties: { color: {}, position: {}, decay: {}, distance: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {} } },
                        pointShadowMap: { value: [] },
                        pointShadowMatrix: { value: [] },
                        hemisphereLights: { value: [], properties: { direction: {}, skyColor: {}, groundColor: {} } },
                    },
                    points: { diffuse: { value: new X(15658734) }, opacity: { value: 1 }, size: { value: 1 }, scale: { value: 1 }, map: { value: null }, offsetRepeat: { value: new o(0, 0, 1, 1) } },
                },
                Ia = {
                    basic: { uniforms: Oa.merge([ka.common, ka.aomap, ka.fog]), vertexShader: La.meshbasic_vert, fragmentShader: La.meshbasic_frag },
                    lambert: { uniforms: Oa.merge([ka.common, ka.aomap, ka.lightmap, ka.emissivemap, ka.fog, ka.lights, { emissive: { value: new X(0) } }]), vertexShader: La.meshlambert_vert, fragmentShader: La.meshlambert_frag },
                    phong: {
                        uniforms: Oa.merge([
                            ka.common,
                            ka.aomap,
                            ka.lightmap,
                            ka.emissivemap,
                            ka.bumpmap,
                            ka.normalmap,
                            ka.displacementmap,
                            ka.fog,
                            ka.lights,
                            { emissive: { value: new X(0) }, specular: { value: new X(1118481) }, shininess: { value: 30 } },
                        ]),
                        vertexShader: La.meshphong_vert,
                        fragmentShader: La.meshphong_frag,
                    },
                    standard: {
                        uniforms: Oa.merge([
                            ka.common,
                            ka.aomap,
                            ka.lightmap,
                            ka.emissivemap,
                            ka.bumpmap,
                            ka.normalmap,
                            ka.displacementmap,
                            ka.roughnessmap,
                            ka.metalnessmap,
                            ka.fog,
                            ka.lights,
                            { emissive: { value: new X(0) }, roughness: { value: 0.5 }, metalness: { value: 0 }, envMapIntensity: { value: 1 } },
                        ]),
                        vertexShader: La.meshphysical_vert,
                        fragmentShader: La.meshphysical_frag,
                    },
                    points: { uniforms: Oa.merge([ka.points, ka.fog]), vertexShader: La.points_vert, fragmentShader: La.points_frag },
                    dashed: { uniforms: Oa.merge([ka.common, ka.fog, { scale: { value: 1 }, dashSize: { value: 1 }, totalSize: { value: 2 } }]), vertexShader: La.linedashed_vert, fragmentShader: La.linedashed_frag },
                    depth: { uniforms: Oa.merge([ka.common, ka.displacementmap]), vertexShader: La.depth_vert, fragmentShader: La.depth_frag },
                    normal: { uniforms: { opacity: { value: 1 } }, vertexShader: La.normal_vert, fragmentShader: La.normal_frag },
                    cube: { uniforms: { tCube: { value: null }, tFlip: { value: -1 }, opacity: { value: 1 } }, vertexShader: La.cube_vert, fragmentShader: La.cube_frag },
                    equirect: { uniforms: { tEquirect: { value: null }, tFlip: { value: -1 } }, vertexShader: La.equirect_vert, fragmentShader: La.equirect_frag },
                    distanceRGBA: { uniforms: { lightPos: { value: new c() } }, vertexShader: La.distanceRGBA_vert, fragmentShader: La.distanceRGBA_frag },
                };
            (Ia.physical = { uniforms: Oa.merge([Ia.standard.uniforms, { clearCoat: { value: 0 }, clearCoatRoughness: { value: 0 } }]), vertexShader: La.meshphysical_vert, fragmentShader: La.meshphysical_frag }),
                (q.prototype = {
                    constructor: q,
                    set: function (t, e) {
                        return this.min.copy(t), this.max.copy(e), this;
                    },
                    setFromPoints: function (t) {
                        this.makeEmpty();
                        for (var e = 0, i = t.length; e < i; e++) this.expandByPoint(t[e]);
                        return this;
                    },
                    setFromCenterAndSize: (function () {
                        var t = new i();
                        return function (e, i) {
                            var n = t.copy(i).multiplyScalar(0.5);
                            return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
                        };
                    })(),
                    clone: function () {
                        return new this.constructor().copy(this);
                    },
                    copy: function (t) {
                        return this.min.copy(t.min), this.max.copy(t.max), this;
                    },
                    makeEmpty: function () {
                        return (this.min.x = this.min.y = 1 / 0), (this.max.x = this.max.y = -1 / 0), this;
                    },
                    isEmpty: function () {
                        return this.max.x < this.min.x || this.max.y < this.min.y;
                    },
                    getCenter: function (t) {
                        var e = t || new i();
                        return this.isEmpty() ? e.set(0, 0) : e.addVectors(this.min, this.max).multiplyScalar(0.5);
                    },
                    getSize: function (t) {
                        var e = t || new i();
                        return this.isEmpty() ? e.set(0, 0) : e.subVectors(this.max, this.min);
                    },
                    expandByPoint: function (t) {
                        return this.min.min(t), this.max.max(t), this;
                    },
                    expandByVector: function (t) {
                        return this.min.sub(t), this.max.add(t), this;
                    },
                    expandByScalar: function (t) {
                        return this.min.addScalar(-t), this.max.addScalar(t), this;
                    },
                    containsPoint: function (t) {
                        return !(t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y);
                    },
                    containsBox: function (t) {
                        return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y;
                    },
                    getParameter: function (t, e) {
                        return (e || new i()).set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y));
                    },
                    intersectsBox: function (t) {
                        return !(t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y);
                    },
                    clampPoint: function (t, e) {
                        return (e || new i()).copy(t).clamp(this.min, this.max);
                    },
                    distanceToPoint: (function () {
                        var t = new i();
                        return function (e) {
                            return t.copy(e).clamp(this.min, this.max).sub(e).length();
                        };
                    })(),
                    intersect: function (t) {
                        return this.min.max(t.min), this.max.min(t.max), this;
                    },
                    union: function (t) {
                        return this.min.min(t.min), this.max.max(t.max), this;
                    },
                    translate: function (t) {
                        return this.min.add(t), this.max.add(t), this;
                    },
                    equals: function (t) {
                        return t.min.equals(this.min) && t.max.equals(this.max);
                    },
                }),
                (J.prototype = {
                    constructor: J,
                    isMaterial: !0,
                    get needsUpdate() {
                        return this._needsUpdate;
                    },
                    set needsUpdate(t) {
                        !0 === t && this.update(), (this._needsUpdate = t);
                    },
                    setValues: function (t) {
                        if (void 0 !== t)
                            for (var e in t) {
                                var i = t[e];
                                if (void 0 !== i) {
                                    var n = this[e];
                                    void 0 !== n
                                        ? n && n.isColor
                                            ? n.set(i)
                                            : n && n.isVector3 && i && i.isVector3
                                            ? n.copy(i)
                                            : (this[e] = "overdraw" === e ? Number(i) : i)
                                        : console.warn("THREE." + this.type + ": '" + e + "' is not a property of this material.");
                                } else console.warn("THREE.Material: '" + e + "' parameter is undefined.");
                            }
                    },
                    toJSON: function (t) {
                        function e(t) {
                            var e = [];
                            for (var i in t) {
                                var n = t[i];
                                delete n.metadata, e.push(n);
                            }
                            return e;
                        }
                        var i = void 0 === t;
                        i && (t = { textures: {}, images: {} });
                        var n = { metadata: { version: 4.4, type: "Material", generator: "Material.toJSON" } };
                        if (
                            ((n.uuid = this.uuid),
                            (n.type = this.type),
                            "" !== this.name && (n.name = this.name),
                            this.color && this.color.isColor && (n.color = this.color.getHex()),
                            void 0 !== this.roughness && (n.roughness = this.roughness),
                            void 0 !== this.metalness && (n.metalness = this.metalness),
                            this.emissive && this.emissive.isColor && (n.emissive = this.emissive.getHex()),
                            this.specular && this.specular.isColor && (n.specular = this.specular.getHex()),
                            void 0 !== this.shininess && (n.shininess = this.shininess),
                            this.map && this.map.isTexture && (n.map = this.map.toJSON(t).uuid),
                            this.alphaMap && this.alphaMap.isTexture && (n.alphaMap = this.alphaMap.toJSON(t).uuid),
                            this.lightMap && this.lightMap.isTexture && (n.lightMap = this.lightMap.toJSON(t).uuid),
                            this.bumpMap && this.bumpMap.isTexture && ((n.bumpMap = this.bumpMap.toJSON(t).uuid), (n.bumpScale = this.bumpScale)),
                            this.normalMap && this.normalMap.isTexture && ((n.normalMap = this.normalMap.toJSON(t).uuid), (n.normalScale = this.normalScale.toArray())),
                            this.displacementMap && this.displacementMap.isTexture && ((n.displacementMap = this.displacementMap.toJSON(t).uuid), (n.displacementScale = this.displacementScale), (n.displacementBias = this.displacementBias)),
                            this.roughnessMap && this.roughnessMap.isTexture && (n.roughnessMap = this.roughnessMap.toJSON(t).uuid),
                            this.metalnessMap && this.metalnessMap.isTexture && (n.metalnessMap = this.metalnessMap.toJSON(t).uuid),
                            this.emissiveMap && this.emissiveMap.isTexture && (n.emissiveMap = this.emissiveMap.toJSON(t).uuid),
                            this.specularMap && this.specularMap.isTexture && (n.specularMap = this.specularMap.toJSON(t).uuid),
                            this.envMap && this.envMap.isTexture && ((n.envMap = this.envMap.toJSON(t).uuid), (n.reflectivity = this.reflectivity)),
                            void 0 !== this.size && (n.size = this.size),
                            void 0 !== this.sizeAttenuation && (n.sizeAttenuation = this.sizeAttenuation),
                            this.blending !== Or && (n.blending = this.blending),
                            this.shading !== Ar && (n.shading = this.shading),
                            this.side !== Tr && (n.side = this.side),
                            this.vertexColors !== Rr && (n.vertexColors = this.vertexColors),
                            this.opacity < 1 && (n.opacity = this.opacity),
                            !0 === this.transparent && (n.transparent = this.transparent),
                            (n.depthFunc = this.depthFunc),
                            (n.depthTest = this.depthTest),
                            (n.depthWrite = this.depthWrite),
                            this.alphaTest > 0 && (n.alphaTest = this.alphaTest),
                            !0 === this.premultipliedAlpha && (n.premultipliedAlpha = this.premultipliedAlpha),
                            !0 === this.wireframe && (n.wireframe = this.wireframe),
                            this.wireframeLinewidth > 1 && (n.wireframeLinewidth = this.wireframeLinewidth),
                            "round" !== this.wireframeLinecap && (n.wireframeLinecap = this.wireframeLinecap),
                            "round" !== this.wireframeLinejoin && (n.wireframeLinejoin = this.wireframeLinejoin),
                            (n.skinning = this.skinning),
                            (n.morphTargets = this.morphTargets),
                            i)
                        ) {
                            var r = e(t.textures),
                                o = e(t.images);
                            r.length > 0 && (n.textures = r), o.length > 0 && (n.images = o);
                        }
                        return n;
                    },
                    clone: function () {
                        return new this.constructor().copy(this);
                    },
                    copy: function (t) {
                        (this.name = t.name),
                            (this.fog = t.fog),
                            (this.lights = t.lights),
                            (this.blending = t.blending),
                            (this.side = t.side),
                            (this.shading = t.shading),
                            (this.vertexColors = t.vertexColors),
                            (this.opacity = t.opacity),
                            (this.transparent = t.transparent),
                            (this.blendSrc = t.blendSrc),
                            (this.blendDst = t.blendDst),
                            (this.blendEquation = t.blendEquation),
                            (this.blendSrcAlpha = t.blendSrcAlpha),
                            (this.blendDstAlpha = t.blendDstAlpha),
                            (this.blendEquationAlpha = t.blendEquationAlpha),
                            (this.depthFunc = t.depthFunc),
                            (this.depthTest = t.depthTest),
                            (this.depthWrite = t.depthWrite),
                            (this.colorWrite = t.colorWrite),
                            (this.precision = t.precision),
                            (this.polygonOffset = t.polygonOffset),
                            (this.polygonOffsetFactor = t.polygonOffsetFactor),
                            (this.polygonOffsetUnits = t.polygonOffsetUnits),
                            (this.alphaTest = t.alphaTest),
                            (this.premultipliedAlpha = t.premultipliedAlpha),
                            (this.overdraw = t.overdraw),
                            (this.visible = t.visible),
                            (this.clipShadows = t.clipShadows),
                            (this.clipIntersection = t.clipIntersection);
                        var e = t.clippingPlanes,
                            i = null;
                        if (null !== e) {
                            var n = e.length;
                            i = new Array(n);
                            for (var r = 0; r !== n; ++r) i[r] = e[r].clone();
                        }
                        return (this.clippingPlanes = i), this;
                    },
                    update: function () {
                        this.dispatchEvent({ type: "update" });
                    },
                    dispose: function () {
                        this.dispatchEvent({ type: "dispose" });
                    },
                }),
                Object.assign(J.prototype, e.prototype);
            var Na = 0;
            ($.prototype = Object.create(J.prototype)),
                ($.prototype.constructor = $),
                ($.prototype.isShaderMaterial = !0),
                ($.prototype.copy = function (t) {
                    return (
                        J.prototype.copy.call(this, t),
                        (this.fragmentShader = t.fragmentShader),
                        (this.vertexShader = t.vertexShader),
                        (this.uniforms = Oa.clone(t.uniforms)),
                        (this.defines = t.defines),
                        (this.wireframe = t.wireframe),
                        (this.wireframeLinewidth = t.wireframeLinewidth),
                        (this.lights = t.lights),
                        (this.clipping = t.clipping),
                        (this.skinning = t.skinning),
                        (this.morphTargets = t.morphTargets),
                        (this.morphNormals = t.morphNormals),
                        (this.extensions = t.extensions),
                        this
                    );
                }),
                ($.prototype.toJSON = function (t) {
                    var e = J.prototype.toJSON.call(this, t);
                    return (e.uniforms = this.uniforms), (e.vertexShader = this.vertexShader), (e.fragmentShader = this.fragmentShader), e;
                }),
                (K.prototype = Object.create(J.prototype)),
                (K.prototype.constructor = K),
                (K.prototype.isMeshDepthMaterial = !0),
                (K.prototype.copy = function (t) {
                    return (
                        J.prototype.copy.call(this, t),
                        (this.depthPacking = t.depthPacking),
                        (this.skinning = t.skinning),
                        (this.morphTargets = t.morphTargets),
                        (this.map = t.map),
                        (this.alphaMap = t.alphaMap),
                        (this.displacementMap = t.displacementMap),
                        (this.displacementScale = t.displacementScale),
                        (this.displacementBias = t.displacementBias),
                        (this.wireframe = t.wireframe),
                        (this.wireframeLinewidth = t.wireframeLinewidth),
                        this
                    );
                }),
                (tt.prototype = {
                    constructor: tt,
                    isBox3: !0,
                    set: function (t, e) {
                        return this.min.copy(t), this.max.copy(e), this;
                    },
                    setFromArray: function (t) {
                        for (var e = 1 / 0, i = 1 / 0, n = 1 / 0, r = -1 / 0, o = -1 / 0, a = -1 / 0, s = 0, l = t.length; s < l; s += 3) {
                            var c = t[s],
                                u = t[s + 1],
                                h = t[s + 2];
                            c < e && (e = c), u < i && (i = u), h < n && (n = h), c > r && (r = c), u > o && (o = u), h > a && (a = h);
                        }
                        this.min.set(e, i, n), this.max.set(r, o, a);
                    },
                    setFromPoints: function (t) {
                        this.makeEmpty();
                        for (var e = 0, i = t.length; e < i; e++) this.expandByPoint(t[e]);
                        return this;
                    },
                    setFromCenterAndSize: (function () {
                        var t = new c();
                        return function (e, i) {
                            var n = t.copy(i).multiplyScalar(0.5);
                            return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
                        };
                    })(),
                    setFromObject: (function () {
                        var t = new c();
                        return function (e) {
                            var i = this;
                            return (
                                e.updateMatrixWorld(!0),
                                this.makeEmpty(),
                                e.traverse(function (e) {
                                    var n = e.geometry;
                                    if (void 0 !== n)
                                        if (n && n.isGeometry) for (var r = n.vertices, o = 0, a = r.length; o < a; o++) t.copy(r[o]), t.applyMatrix4(e.matrixWorld), i.expandByPoint(t);
                                        else if (n && n.isBufferGeometry) {
                                            var s = n.attributes.position;
                                            if (void 0 !== s) {
                                                var l, c, u;
                                                s && s.isInterleavedBufferAttribute ? ((l = s.data.array), (c = s.offset), (u = s.data.stride)) : ((l = s.array), (c = 0), (u = 3));
                                                for (var o = c, a = l.length; o < a; o += u) t.fromArray(l, o), t.applyMatrix4(e.matrixWorld), i.expandByPoint(t);
                                            }
                                        }
                                }),
                                this
                            );
                        };
                    })(),
                    clone: function () {
                        return new this.constructor().copy(this);
                    },
                    copy: function (t) {
                        return this.min.copy(t.min), this.max.copy(t.max), this;
                    },
                    makeEmpty: function () {
                        return (this.min.x = this.min.y = this.min.z = 1 / 0), (this.max.x = this.max.y = this.max.z = -1 / 0), this;
                    },
                    isEmpty: function () {
                        return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;
                    },
                    getCenter: function (t) {
                        var e = t || new c();
                        return this.isEmpty() ? e.set(0, 0, 0) : e.addVectors(this.min, this.max).multiplyScalar(0.5);
                    },
                    getSize: function (t) {
                        var e = t || new c();
                        return this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min);
                    },
                    expandByPoint: function (t) {
                        return this.min.min(t), this.max.max(t), this;
                    },
                    expandByVector: function (t) {
                        return this.min.sub(t), this.max.add(t), this;
                    },
                    expandByScalar: function (t) {
                        return this.min.addScalar(-t), this.max.addScalar(t), this;
                    },
                    containsPoint: function (t) {
                        return !(t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y || t.z < this.min.z || t.z > this.max.z);
                    },
                    containsBox: function (t) {
                        return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y && this.min.z <= t.min.z && t.max.z <= this.max.z;
                    },
                    getParameter: function (t, e) {
                        return (e || new c()).set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y), (t.z - this.min.z) / (this.max.z - this.min.z));
                    },
                    intersectsBox: function (t) {
                        return !(t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y || t.max.z < this.min.z || t.min.z > this.max.z);
                    },
                    intersectsSphere: (function () {
                        var t;
                        return function (e) {
                            return void 0 === t && (t = new c()), this.clampPoint(e.center, t), t.distanceToSquared(e.center) <= e.radius * e.radius;
                        };
                    })(),
                    intersectsPlane: function (t) {
                        var e, i;
                        return (
                            t.normal.x > 0 ? ((e = t.normal.x * this.min.x), (i = t.normal.x * this.max.x)) : ((e = t.normal.x * this.max.x), (i = t.normal.x * this.min.x)),
                            t.normal.y > 0 ? ((e += t.normal.y * this.min.y), (i += t.normal.y * this.max.y)) : ((e += t.normal.y * this.max.y), (i += t.normal.y * this.min.y)),
                            t.normal.z > 0 ? ((e += t.normal.z * this.min.z), (i += t.normal.z * this.max.z)) : ((e += t.normal.z * this.max.z), (i += t.normal.z * this.min.z)),
                            e <= t.constant && i >= t.constant
                        );
                    },
                    clampPoint: function (t, e) {
                        return (e || new c()).copy(t).clamp(this.min, this.max);
                    },
                    distanceToPoint: (function () {
                        var t = new c();
                        return function (e) {
                            return t.copy(e).clamp(this.min, this.max).sub(e).length();
                        };
                    })(),
                    getBoundingSphere: (function () {
                        var t = new c();
                        return function (e) {
                            var i = e || new et();
                            return this.getCenter(i.center), (i.radius = 0.5 * this.getSize(t).length()), i;
                        };
                    })(),
                    intersect: function (t) {
                        return this.min.max(t.min), this.max.min(t.max), this.isEmpty() && this.makeEmpty(), this;
                    },
                    union: function (t) {
                        return this.min.min(t.min), this.max.max(t.max), this;
                    },
                    applyMatrix4: (function () {
                        var t = [new c(), new c(), new c(), new c(), new c(), new c(), new c(), new c()];
                        return function (e) {
                            return this.isEmpty()
                                ? this
                                : (t[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e),
                                  t[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e),
                                  t[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e),
                                  t[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e),
                                  t[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e),
                                  t[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e),
                                  t[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e),
                                  t[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e),
                                  this.setFromPoints(t),
                                  this);
                        };
                    })(),
                    translate: function (t) {
                        return this.min.add(t), this.max.add(t), this;
                    },
                    equals: function (t) {
                        return t.min.equals(this.min) && t.max.equals(this.max);
                    },
                }),
                (et.prototype = {
                    constructor: et,
                    set: function (t, e) {
                        return this.center.copy(t), (this.radius = e), this;
                    },
                    setFromPoints: (function () {
                        var t = new tt();
                        return function (e, i) {
                            var n = this.center;
                            void 0 !== i ? n.copy(i) : t.setFromPoints(e).getCenter(n);
                            for (var r = 0, o = 0, a = e.length; o < a; o++) r = Math.max(r, n.distanceToSquared(e[o]));
                            return (this.radius = Math.sqrt(r)), this;
                        };
                    })(),
                    clone: function () {
                        return new this.constructor().copy(this);
                    },
                    copy: function (t) {
                        return this.center.copy(t.center), (this.radius = t.radius), this;
                    },
                    empty: function () {
                        return this.radius <= 0;
                    },
                    containsPoint: function (t) {
                        return t.distanceToSquared(this.center) <= this.radius * this.radius;
                    },
                    distanceToPoint: function (t) {
                        return t.distanceTo(this.center) - this.radius;
                    },
                    intersectsSphere: function (t) {
                        var e = this.radius + t.radius;
                        return t.center.distanceToSquared(this.center) <= e * e;
                    },
                    intersectsBox: function (t) {
                        return t.intersectsSphere(this);
                    },
                    intersectsPlane: function (t) {
                        return Math.abs(this.center.dot(t.normal) - t.constant) <= this.radius;
                    },
                    clampPoint: function (t, e) {
                        var i = this.center.distanceToSquared(t),
                            n = e || new c();
                        return n.copy(t), i > this.radius * this.radius && (n.sub(this.center).normalize(), n.multiplyScalar(this.radius).add(this.center)), n;
                    },
                    getBoundingBox: function (t) {
                        var e = t || new tt();
                        return e.set(this.center, this.center), e.expandByScalar(this.radius), e;
                    },
                    applyMatrix4: function (t) {
                        return this.center.applyMatrix4(t), (this.radius = this.radius * t.getMaxScaleOnAxis()), this;
                    },
                    translate: function (t) {
                        return this.center.add(t), this;
                    },
                    equals: function (t) {
                        return t.center.equals(this.center) && t.radius === this.radius;
                    },
                }),
                (it.prototype = {
                    constructor: it,
                    isMatrix3: !0,
                    set: function (t, e, i, n, r, o, a, s, l) {
                        var c = this.elements;
                        return (c[0] = t), (c[1] = n), (c[2] = a), (c[3] = e), (c[4] = r), (c[5] = s), (c[6] = i), (c[7] = o), (c[8] = l), this;
                    },
                    identity: function () {
                        return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
                    },
                    clone: function () {
                        return new this.constructor().fromArray(this.elements);
                    },
                    copy: function (t) {
                        var e = t.elements;
                        return this.set(e[0], e[3], e[6], e[1], e[4], e[7], e[2], e[5], e[8]), this;
                    },
                    setFromMatrix4: function (t) {
                        var e = t.elements;
                        return this.set(e[0], e[4], e[8], e[1], e[5], e[9], e[2], e[6], e[10]), this;
                    },
                    applyToVector3Array: (function () {
                        var t;
                        return function (e, i, n) {
                            void 0 === t && (t = new c()), void 0 === i && (i = 0), void 0 === n && (n = e.length);
                            for (var r = 0, o = i; r < n; r += 3, o += 3) t.fromArray(e, o), t.applyMatrix3(this), t.toArray(e, o);
                            return e;
                        };
                    })(),
                    applyToBuffer: (function () {
                        var t;
                        return function (e, i, n) {
                            void 0 === t && (t = new c()), void 0 === i && (i = 0), void 0 === n && (n = e.length / e.itemSize);
                            for (var r = 0, o = i; r < n; r++, o++) (t.x = e.getX(o)), (t.y = e.getY(o)), (t.z = e.getZ(o)), t.applyMatrix3(this), e.setXYZ(o, t.x, t.y, t.z);
                            return e;
                        };
                    })(),
                    multiplyScalar: function (t) {
                        var e = this.elements;
                        return (e[0] *= t), (e[3] *= t), (e[6] *= t), (e[1] *= t), (e[4] *= t), (e[7] *= t), (e[2] *= t), (e[5] *= t), (e[8] *= t), this;
                    },
                    determinant: function () {
                        var t = this.elements,
                            e = t[0],
                            i = t[1],
                            n = t[2],
                            r = t[3],
                            o = t[4],
                            a = t[5],
                            s = t[6],
                            l = t[7],
                            c = t[8];
                        return e * o * c - e * a * l - i * r * c + i * a * s + n * r * l - n * o * s;
                    },
                    getInverse: function (t, e) {
                        t && t.isMatrix4 && console.error("THREE.Matrix3.getInverse no longer takes a Matrix4 argument.");
                        var i = t.elements,
                            n = this.elements,
                            r = i[0],
                            o = i[1],
                            a = i[2],
                            s = i[3],
                            l = i[4],
                            c = i[5],
                            u = i[6],
                            h = i[7],
                            d = i[8],
                            p = d * l - c * h,
                            f = c * u - d * s,
                            m = h * s - l * u,
                            v = r * p + o * f + a * m;
                        if (0 === v) {
                            var g = "THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0";
                            if (!0 === e) throw new Error(g);
                            return console.warn(g), this.identity();
                        }
                        var y = 1 / v;
                        return (
                            (n[0] = p * y),
                            (n[1] = (a * h - d * o) * y),
                            (n[2] = (c * o - a * l) * y),
                            (n[3] = f * y),
                            (n[4] = (d * r - a * u) * y),
                            (n[5] = (a * s - c * r) * y),
                            (n[6] = m * y),
                            (n[7] = (o * u - h * r) * y),
                            (n[8] = (l * r - o * s) * y),
                            this
                        );
                    },
                    transpose: function () {
                        var t,
                            e = this.elements;
                        return (t = e[1]), (e[1] = e[3]), (e[3] = t), (t = e[2]), (e[2] = e[6]), (e[6] = t), (t = e[5]), (e[5] = e[7]), (e[7] = t), this;
                    },
                    flattenToArrayOffset: function (t, e) {
                        return console.warn("THREE.Matrix3: .flattenToArrayOffset is deprecated - just use .toArray instead."), this.toArray(t, e);
                    },
                    getNormalMatrix: function (t) {
                        return this.setFromMatrix4(t).getInverse(this).transpose();
                    },
                    transposeIntoArray: function (t) {
                        var e = this.elements;
                        return (t[0] = e[0]), (t[1] = e[3]), (t[2] = e[6]), (t[3] = e[1]), (t[4] = e[4]), (t[5] = e[7]), (t[6] = e[2]), (t[7] = e[5]), (t[8] = e[8]), this;
                    },
                    fromArray: function (t, e) {
                        void 0 === e && (e = 0);
                        for (var i = 0; i < 9; i++) this.elements[i] = t[i + e];
                        return this;
                    },
                    toArray: function (t, e) {
                        void 0 === t && (t = []), void 0 === e && (e = 0);
                        var i = this.elements;
                        return (t[e] = i[0]), (t[e + 1] = i[1]), (t[e + 2] = i[2]), (t[e + 3] = i[3]), (t[e + 4] = i[4]), (t[e + 5] = i[5]), (t[e + 6] = i[6]), (t[e + 7] = i[7]), (t[e + 8] = i[8]), t;
                    },
                }),
                (nt.prototype = {
                    constructor: nt,
                    set: function (t, e) {
                        return this.normal.copy(t), (this.constant = e), this;
                    },
                    setComponents: function (t, e, i, n) {
                        return this.normal.set(t, e, i), (this.constant = n), this;
                    },
                    setFromNormalAndCoplanarPoint: function (t, e) {
                        return this.normal.copy(t), (this.constant = -e.dot(this.normal)), this;
                    },
                    setFromCoplanarPoints: (function () {
                        var t = new c(),
                            e = new c();
                        return function (i, n, r) {
                            var o = t.subVectors(r, n).cross(e.subVectors(i, n)).normalize();
                            return this.setFromNormalAndCoplanarPoint(o, i), this;
                        };
                    })(),
                    clone: function () {
                        return new this.constructor().copy(this);
                    },
                    copy: function (t) {
                        return this.normal.copy(t.normal), (this.constant = t.constant), this;
                    },
                    normalize: function () {
                        var t = 1 / this.normal.length();
                        return this.normal.multiplyScalar(t), (this.constant *= t), this;
                    },
                    negate: function () {
                        return (this.constant *= -1), this.normal.negate(), this;
                    },
                    distanceToPoint: function (t) {
                        return this.normal.dot(t) + this.constant;
                    },
                    distanceToSphere: function (t) {
                        return this.distanceToPoint(t.center) - t.radius;
                    },
                    projectPoint: function (t, e) {
                        return this.orthoPoint(t, e).sub(t).negate();
                    },
                    orthoPoint: function (t, e) {
                        var i = this.distanceToPoint(t);
                        return (e || new c()).copy(this.normal).multiplyScalar(i);
                    },
                    intersectLine: (function () {
                        var t = new c();
                        return function (e, i) {
                            var n = i || new c(),
                                r = e.delta(t),
                                o = this.normal.dot(r);
                            if (0 !== o) {
                                var a = -(e.start.dot(this.normal) + this.constant) / o;
                                if (!(a < 0 || a > 1)) return n.copy(r).multiplyScalar(a).add(e.start);
                            } else if (0 === this.distanceToPoint(e.start)) return n.copy(e.start);
                        };
                    })(),
                    intersectsLine: function (t) {
                        var e = this.distanceToPoint(t.start),
                            i = this.distanceToPoint(t.end);
                        return (e < 0 && i > 0) || (i < 0 && e > 0);
                    },
                    intersectsBox: function (t) {
                        return t.intersectsPlane(this);
                    },
                    intersectsSphere: function (t) {
                        return t.intersectsPlane(this);
                    },
                    coplanarPoint: function (t) {
                        return (t || new c()).copy(this.normal).multiplyScalar(-this.constant);
                    },
                    applyMatrix4: (function () {
                        var t = new c(),
                            e = new it();
                        return function (i, n) {
                            var r = this.coplanarPoint(t).applyMatrix4(i),
                                o = n || e.getNormalMatrix(i),
                                a = this.normal.applyMatrix3(o).normalize();
                            return (this.constant = -r.dot(a)), this;
                        };
                    })(),
                    translate: function (t) {
                        return (this.constant = this.constant - t.dot(this.normal)), this;
                    },
                    equals: function (t) {
                        return t.normal.equals(this.normal) && t.constant === this.constant;
                    },
                }),
                (rt.prototype = {
                    constructor: rt,
                    set: function (t, e, i, n, r, o) {
                        var a = this.planes;
                        return a[0].copy(t), a[1].copy(e), a[2].copy(i), a[3].copy(n), a[4].copy(r), a[5].copy(o), this;
                    },
                    clone: function () {
                        return new this.constructor().copy(this);
                    },
                    copy: function (t) {
                        for (var e = this.planes, i = 0; i < 6; i++) e[i].copy(t.planes[i]);
                        return this;
                    },
                    setFromMatrix: function (t) {
                        var e = this.planes,
                            i = t.elements,
                            n = i[0],
                            r = i[1],
                            o = i[2],
                            a = i[3],
                            s = i[4],
                            l = i[5],
                            c = i[6],
                            u = i[7],
                            h = i[8],
                            d = i[9],
                            p = i[10],
                            f = i[11],
                            m = i[12],
                            v = i[13],
                            g = i[14],
                            y = i[15];
                        return (
                            e[0].setComponents(a - n, u - s, f - h, y - m).normalize(),
                            e[1].setComponents(a + n, u + s, f + h, y + m).normalize(),
                            e[2].setComponents(a + r, u + l, f + d, y + v).normalize(),
                            e[3].setComponents(a - r, u - l, f - d, y - v).normalize(),
                            e[4].setComponents(a - o, u - c, f - p, y - g).normalize(),
                            e[5].setComponents(a + o, u + c, f + p, y + g).normalize(),
                            this
                        );
                    },
                    intersectsObject: (function () {
                        var t = new et();
                        return function (e) {
                            var i = e.geometry;
                            return null === i.boundingSphere && i.computeBoundingSphere(), t.copy(i.boundingSphere).applyMatrix4(e.matrixWorld), this.intersectsSphere(t);
                        };
                    })(),
                    intersectsSprite: (function () {
                        var t = new et();
                        return function (e) {
                            return t.center.set(0, 0, 0), (t.radius = 0.7071067811865476), t.applyMatrix4(e.matrixWorld), this.intersectsSphere(t);
                        };
                    })(),
                    intersectsSphere: function (t) {
                        for (var e = this.planes, i = t.center, n = -t.radius, r = 0; r < 6; r++) {
                            if (e[r].distanceToPoint(i) < n) return !1;
                        }
                        return !0;
                    },
                    intersectsBox: (function () {
                        var t = new c(),
                            e = new c();
                        return function (i) {
                            for (var n = this.planes, r = 0; r < 6; r++) {
                                var o = n[r];
                                (t.x = o.normal.x > 0 ? i.min.x : i.max.x),
                                    (e.x = o.normal.x > 0 ? i.max.x : i.min.x),
                                    (t.y = o.normal.y > 0 ? i.min.y : i.max.y),
                                    (e.y = o.normal.y > 0 ? i.max.y : i.min.y),
                                    (t.z = o.normal.z > 0 ? i.min.z : i.max.z),
                                    (e.z = o.normal.z > 0 ? i.max.z : i.min.z);
                                var a = o.distanceToPoint(t),
                                    s = o.distanceToPoint(e);
                                if (a < 0 && s < 0) return !1;
                            }
                            return !0;
                        };
                    })(),
                    containsPoint: function (t) {
                        for (var e = this.planes, i = 0; i < 6; i++) if (e[i].distanceToPoint(t) < 0) return !1;
                        return !0;
                    },
                }),
                (at.prototype = {
                    constructor: at,
                    set: function (t, e) {
                        return this.origin.copy(t), this.direction.copy(e), this;
                    },
                    clone: function () {
                        return new this.constructor().copy(this);
                    },
                    copy: function (t) {
                        return this.origin.copy(t.origin), this.direction.copy(t.direction), this;
                    },
                    at: function (t, e) {
                        return (e || new c()).copy(this.direction).multiplyScalar(t).add(this.origin);
                    },
                    lookAt: function (t) {
                        return this.direction.copy(t).sub(this.origin).normalize(), this;
                    },
                    recast: (function () {
                        var t = new c();
                        return function (e) {
                            return this.origin.copy(this.at(e, t)), this;
                        };
                    })(),
                    closestPointToPoint: function (t, e) {
                        var i = e || new c();
                        i.subVectors(t, this.origin);
                        var n = i.dot(this.direction);
                        return n < 0 ? i.copy(this.origin) : i.copy(this.direction).multiplyScalar(n).add(this.origin);
                    },
                    distanceToPoint: function (t) {
                        return Math.sqrt(this.distanceSqToPoint(t));
                    },
                    distanceSqToPoint: (function () {
                        var t = new c();
                        return function (e) {
                            var i = t.subVectors(e, this.origin).dot(this.direction);
                            return i < 0 ? this.origin.distanceToSquared(e) : (t.copy(this.direction).multiplyScalar(i).add(this.origin), t.distanceToSquared(e));
                        };
                    })(),
                    distanceSqToSegment: (function () {
                        var t = new c(),
                            e = new c(),
                            i = new c();
                        return function (n, r, o, a) {
                            t.copy(n).add(r).multiplyScalar(0.5), e.copy(r).sub(n).normalize(), i.copy(this.origin).sub(t);
                            var s,
                                l,
                                c,
                                u,
                                h = 0.5 * n.distanceTo(r),
                                d = -this.direction.dot(e),
                                p = i.dot(this.direction),
                                f = -i.dot(e),
                                m = i.lengthSq(),
                                v = Math.abs(1 - d * d);
                            if (v > 0)
                                if (((s = d * f - p), (l = d * p - f), (u = h * v), s >= 0))
                                    if (l >= -u)
                                        if (l <= u) {
                                            var g = 1 / v;
                                            (s *= g), (l *= g), (c = s * (s + d * l + 2 * p) + l * (d * s + l + 2 * f) + m);
                                        } else (l = h), (s = Math.max(0, -(d * l + p))), (c = -s * s + l * (l + 2 * f) + m);
                                    else (l = -h), (s = Math.max(0, -(d * l + p))), (c = -s * s + l * (l + 2 * f) + m);
                                else
                                    l <= -u
                                        ? ((s = Math.max(0, -(-d * h + p))), (l = s > 0 ? -h : Math.min(Math.max(-h, -f), h)), (c = -s * s + l * (l + 2 * f) + m))
                                        : l <= u
                                        ? ((s = 0), (l = Math.min(Math.max(-h, -f), h)), (c = l * (l + 2 * f) + m))
                                        : ((s = Math.max(0, -(d * h + p))), (l = s > 0 ? h : Math.min(Math.max(-h, -f), h)), (c = -s * s + l * (l + 2 * f) + m));
                            else (l = d > 0 ? -h : h), (s = Math.max(0, -(d * l + p))), (c = -s * s + l * (l + 2 * f) + m);
                            return o && o.copy(this.direction).multiplyScalar(s).add(this.origin), a && a.copy(e).multiplyScalar(l).add(t), c;
                        };
                    })(),
                    intersectSphere: (function () {
                        var t = new c();
                        return function (e, i) {
                            t.subVectors(e.center, this.origin);
                            var n = t.dot(this.direction),
                                r = t.dot(t) - n * n,
                                o = e.radius * e.radius;
                            if (r > o) return null;
                            var a = Math.sqrt(o - r),
                                s = n - a,
                                l = n + a;
                            return s < 0 && l < 0 ? null : s < 0 ? this.at(l, i) : this.at(s, i);
                        };
                    })(),
                    intersectsSphere: function (t) {
                        return this.distanceToPoint(t.center) <= t.radius;
                    },
                    distanceToPlane: function (t) {
                        var e = t.normal.dot(this.direction);
                        if (0 === e) return 0 === t.distanceToPoint(this.origin) ? 0 : null;
                        var i = -(this.origin.dot(t.normal) + t.constant) / e;
                        return i >= 0 ? i : null;
                    },
                    intersectPlane: function (t, e) {
                        var i = this.distanceToPlane(t);
                        return null === i ? null : this.at(i, e);
                    },
                    intersectsPlane: function (t) {
                        var e = t.distanceToPoint(this.origin);
                        return 0 === e || t.normal.dot(this.direction) * e < 0;
                    },
                    intersectBox: function (t, e) {
                        var i,
                            n,
                            r,
                            o,
                            a,
                            s,
                            l = 1 / this.direction.x,
                            c = 1 / this.direction.y,
                            u = 1 / this.direction.z,
                            h = this.origin;
                        return (
                            l >= 0 ? ((i = (t.min.x - h.x) * l), (n = (t.max.x - h.x) * l)) : ((i = (t.max.x - h.x) * l), (n = (t.min.x - h.x) * l)),
                            c >= 0 ? ((r = (t.min.y - h.y) * c), (o = (t.max.y - h.y) * c)) : ((r = (t.max.y - h.y) * c), (o = (t.min.y - h.y) * c)),
                            i > o || r > n
                                ? null
                                : ((r > i || i !== i) && (i = r),
                                  (o < n || n !== n) && (n = o),
                                  u >= 0 ? ((a = (t.min.z - h.z) * u), (s = (t.max.z - h.z) * u)) : ((a = (t.max.z - h.z) * u), (s = (t.min.z - h.z) * u)),
                                  i > s || a > n ? null : ((a > i || i !== i) && (i = a), (s < n || n !== n) && (n = s), n < 0 ? null : this.at(i >= 0 ? i : n, e)))
                        );
                    },
                    intersectsBox: (function () {
                        var t = new c();
                        return function (e) {
                            return null !== this.intersectBox(e, t);
                        };
                    })(),
                    intersectTriangle: (function () {
                        var t = new c(),
                            e = new c(),
                            i = new c(),
                            n = new c();
                        return function (r, o, a, s, l) {
                            e.subVectors(o, r), i.subVectors(a, r), n.crossVectors(e, i);
                            var c,
                                u = this.direction.dot(n);
                            if (u > 0) {
                                if (s) return null;
                                c = 1;
                            } else {
                                if (!(u < 0)) return null;
                                (c = -1), (u = -u);
                            }
                            t.subVectors(this.origin, r);
                            var h = c * this.direction.dot(i.crossVectors(t, i));
                            if (h < 0) return null;
                            var d = c * this.direction.dot(e.cross(t));
                            if (d < 0) return null;
                            if (h + d > u) return null;
                            var p = -c * t.dot(n);
                            return p < 0 ? null : this.at(p / u, l);
                        };
                    })(),
                    applyMatrix4: function (t) {
                        return this.direction.add(this.origin).applyMatrix4(t), this.origin.applyMatrix4(t), this.direction.sub(this.origin), this.direction.normalize(), this;
                    },
                    equals: function (t) {
                        return t.origin.equals(this.origin) && t.direction.equals(this.direction);
                    },
                }),
                (st.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"]),
                (st.DefaultOrder = "XYZ"),
                (st.prototype = {
                    constructor: st,
                    isEuler: !0,
                    get x() {
                        return this._x;
                    },
                    set x(t) {
                        (this._x = t), this.onChangeCallback();
                    },
                    get y() {
                        return this._y;
                    },
                    set y(t) {
                        (this._y = t), this.onChangeCallback();
                    },
                    get z() {
                        return this._z;
                    },
                    set z(t) {
                        (this._z = t), this.onChangeCallback();
                    },
                    get order() {
                        return this._order;
                    },
                    set order(t) {
                        (this._order = t), this.onChangeCallback();
                    },
                    set: function (t, e, i, n) {
                        return (this._x = t), (this._y = e), (this._z = i), (this._order = n || this._order), this.onChangeCallback(), this;
                    },
                    clone: function () {
                        return new this.constructor(this._x, this._y, this._z, this._order);
                    },
                    copy: function (t) {
                        return (this._x = t._x), (this._y = t._y), (this._z = t._z), (this._order = t._order), this.onChangeCallback(), this;
                    },
                    setFromRotationMatrix: function (t, e, i) {
                        var n = Ma.clamp,
                            r = t.elements,
                            o = r[0],
                            a = r[4],
                            s = r[8],
                            l = r[1],
                            c = r[5],
                            u = r[9],
                            h = r[2],
                            d = r[6],
                            p = r[10];
                        return (
                            (e = e || this._order),
                            "XYZ" === e
                                ? ((this._y = Math.asin(n(s, -1, 1))), Math.abs(s) < 0.99999 ? ((this._x = Math.atan2(-u, p)), (this._z = Math.atan2(-a, o))) : ((this._x = Math.atan2(d, c)), (this._z = 0)))
                                : "YXZ" === e
                                ? ((this._x = Math.asin(-n(u, -1, 1))), Math.abs(u) < 0.99999 ? ((this._y = Math.atan2(s, p)), (this._z = Math.atan2(l, c))) : ((this._y = Math.atan2(-h, o)), (this._z = 0)))
                                : "ZXY" === e
                                ? ((this._x = Math.asin(n(d, -1, 1))), Math.abs(d) < 0.99999 ? ((this._y = Math.atan2(-h, p)), (this._z = Math.atan2(-a, c))) : ((this._y = 0), (this._z = Math.atan2(l, o))))
                                : "ZYX" === e
                                ? ((this._y = Math.asin(-n(h, -1, 1))), Math.abs(h) < 0.99999 ? ((this._x = Math.atan2(d, p)), (this._z = Math.atan2(l, o))) : ((this._x = 0), (this._z = Math.atan2(-a, c))))
                                : "YZX" === e
                                ? ((this._z = Math.asin(n(l, -1, 1))), Math.abs(l) < 0.99999 ? ((this._x = Math.atan2(-u, c)), (this._y = Math.atan2(-h, o))) : ((this._x = 0), (this._y = Math.atan2(s, p))))
                                : "XZY" === e
                                ? ((this._z = Math.asin(-n(a, -1, 1))), Math.abs(a) < 0.99999 ? ((this._x = Math.atan2(d, c)), (this._y = Math.atan2(s, o))) : ((this._x = Math.atan2(-u, p)), (this._y = 0)))
                                : console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: " + e),
                            (this._order = e),
                            !1 !== i && this.onChangeCallback(),
                            this
                        );
                    },
                    setFromQuaternion: (function () {
                        var t;
                        return function (e, i, n) {
                            return void 0 === t && (t = new u()), t.makeRotationFromQuaternion(e), this.setFromRotationMatrix(t, i, n);
                        };
                    })(),
                    setFromVector3: function (t, e) {
                        return this.set(t.x, t.y, t.z, e || this._order);
                    },
                    reorder: (function () {
                        var t = new l();
                        return function (e) {
                            return t.setFromEuler(this), this.setFromQuaternion(t, e);
                        };
                    })(),
                    equals: function (t) {
                        return t._x === this._x && t._y === this._y && t._z === this._z && t._order === this._order;
                    },
                    fromArray: function (t) {
                        return (this._x = t[0]), (this._y = t[1]), (this._z = t[2]), void 0 !== t[3] && (this._order = t[3]), this.onChangeCallback(), this;
                    },
                    toArray: function (t, e) {
                        return void 0 === t && (t = []), void 0 === e && (e = 0), (t[e] = this._x), (t[e + 1] = this._y), (t[e + 2] = this._z), (t[e + 3] = this._order), t;
                    },
                    toVector3: function (t) {
                        return t ? t.set(this._x, this._y, this._z) : new c(this._x, this._y, this._z);
                    },
                    onChange: function (t) {
                        return (this.onChangeCallback = t), this;
                    },
                    onChangeCallback: function () {},
                }),
                (lt.prototype = {
                    constructor: lt,
                    set: function (t) {
                        this.mask = 1 << t;
                    },
                    enable: function (t) {
                        this.mask |= 1 << t;
                    },
                    toggle: function (t) {
                        this.mask ^= 1 << t;
                    },
                    disable: function (t) {
                        this.mask &= ~(1 << t);
                    },
                    test: function (t) {
                        return 0 != (this.mask & t.mask);
                    },
                }),
                (ct.DefaultUp = new c(0, 1, 0)),
                (ct.DefaultMatrixAutoUpdate = !0),
                Object.assign(ct.prototype, e.prototype, {
                    isObject3D: !0,
                    applyMatrix: function (t) {
                        this.matrix.multiplyMatrices(t, this.matrix), this.matrix.decompose(this.position, this.quaternion, this.scale);
                    },
                    setRotationFromAxisAngle: function (t, e) {
                        this.quaternion.setFromAxisAngle(t, e);
                    },
                    setRotationFromEuler: function (t) {
                        this.quaternion.setFromEuler(t, !0);
                    },
                    setRotationFromMatrix: function (t) {
                        this.quaternion.setFromRotationMatrix(t);
                    },
                    setRotationFromQuaternion: function (t) {
                        this.quaternion.copy(t);
                    },
                    rotateOnAxis: (function () {
                        var t = new l();
                        return function (e, i) {
                            return t.setFromAxisAngle(e, i), this.quaternion.multiply(t), this;
                        };
                    })(),
                    rotateX: (function () {
                        var t = new c(1, 0, 0);
                        return function (e) {
                            return this.rotateOnAxis(t, e);
                        };
                    })(),
                    rotateY: (function () {
                        var t = new c(0, 1, 0);
                        return function (e) {
                            return this.rotateOnAxis(t, e);
                        };
                    })(),
                    rotateZ: (function () {
                        var t = new c(0, 0, 1);
                        return function (e) {
                            return this.rotateOnAxis(t, e);
                        };
                    })(),
                    translateOnAxis: (function () {
                        var t = new c();
                        return function (e, i) {
                            return t.copy(e).applyQuaternion(this.quaternion), this.position.add(t.multiplyScalar(i)), this;
                        };
                    })(),
                    translateX: (function () {
                        var t = new c(1, 0, 0);
                        return function (e) {
                            return this.translateOnAxis(t, e);
                        };
                    })(),
                    translateY: (function () {
                        var t = new c(0, 1, 0);
                        return function (e) {
                            return this.translateOnAxis(t, e);
                        };
                    })(),
                    translateZ: (function () {
                        var t = new c(0, 0, 1);
                        return function (e) {
                            return this.translateOnAxis(t, e);
                        };
                    })(),
                    localToWorld: function (t) {
                        return t.applyMatrix4(this.matrixWorld);
                    },
                    worldToLocal: (function () {
                        var t = new u();
                        return function (e) {
                            return e.applyMatrix4(t.getInverse(this.matrixWorld));
                        };
                    })(),
                    lookAt: (function () {
                        var t = new u();
                        return function (e) {
                            t.lookAt(e, this.position, this.up), this.quaternion.setFromRotationMatrix(t);
                        };
                    })(),
                    add: function (t) {
                        if (arguments.length > 1) {
                            for (var e = 0; e < arguments.length; e++) this.add(arguments[e]);
                            return this;
                        }
                        return t === this
                            ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", t), this)
                            : (t && t.isObject3D
                                  ? (null !== t.parent && t.parent.remove(t), (t.parent = this), t.dispatchEvent({ type: "added" }), this.children.push(t))
                                  : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", t),
                              this);
                    },
                    remove: function (t) {
                        if (arguments.length > 1) for (var e = 0; e < arguments.length; e++) this.remove(arguments[e]);
                        var i = this.children.indexOf(t);
                        -1 !== i && ((t.parent = null), t.dispatchEvent({ type: "removed" }), this.children.splice(i, 1));
                    },
                    getObjectById: function (t) {
                        return this.getObjectByProperty("id", t);
                    },
                    getObjectByName: function (t) {
                        return this.getObjectByProperty("name", t);
                    },
                    getObjectByProperty: function (t, e) {
                        if (this[t] === e) return this;
                        for (var i = 0, n = this.children.length; i < n; i++) {
                            var r = this.children[i],
                                o = r.getObjectByProperty(t, e);
                            if (void 0 !== o) return o;
                        }
                    },
                    getWorldPosition: function (t) {
                        var e = t || new c();
                        return this.updateMatrixWorld(!0), e.setFromMatrixPosition(this.matrixWorld);
                    },
                    getWorldQuaternion: (function () {
                        var t = new c(),
                            e = new c();
                        return function (i) {
                            var n = i || new l();
                            return this.updateMatrixWorld(!0), this.matrixWorld.decompose(t, n, e), n;
                        };
                    })(),
                    getWorldRotation: (function () {
                        var t = new l();
                        return function (e) {
                            var i = e || new st();
                            return this.getWorldQuaternion(t), i.setFromQuaternion(t, this.rotation.order, !1);
                        };
                    })(),
                    getWorldScale: (function () {
                        var t = new c(),
                            e = new l();
                        return function (i) {
                            var n = i || new c();
                            return this.updateMatrixWorld(!0), this.matrixWorld.decompose(t, e, n), n;
                        };
                    })(),
                    getWorldDirection: (function () {
                        var t = new l();
                        return function (e) {
                            var i = e || new c();
                            return this.getWorldQuaternion(t), i.set(0, 0, 1).applyQuaternion(t);
                        };
                    })(),
                    raycast: function () {},
                    traverse: function (t) {
                        t(this);
                        for (var e = this.children, i = 0, n = e.length; i < n; i++) e[i].traverse(t);
                    },
                    traverseVisible: function (t) {
                        if (!1 !== this.visible) {
                            t(this);
                            for (var e = this.children, i = 0, n = e.length; i < n; i++) e[i].traverseVisible(t);
                        }
                    },
                    traverseAncestors: function (t) {
                        var e = this.parent;
                        null !== e && (t(e), e.traverseAncestors(t));
                    },
                    updateMatrix: function () {
                        this.matrix.compose(this.position, this.quaternion, this.scale), (this.matrixWorldNeedsUpdate = !0);
                    },
                    updateMatrixWorld: function (t) {
                        !0 === this.matrixAutoUpdate && this.updateMatrix(),
                            (!0 !== this.matrixWorldNeedsUpdate && !0 !== t) ||
                                (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), (this.matrixWorldNeedsUpdate = !1), (t = !0));
                        for (var e = this.children, i = 0, n = e.length; i < n; i++) e[i].updateMatrixWorld(t);
                    },
                    toJSON: function (t) {
                        function e(t) {
                            var e = [];
                            for (var i in t) {
                                var n = t[i];
                                delete n.metadata, e.push(n);
                            }
                            return e;
                        }
                        var i = void 0 === t || "" === t,
                            n = {};
                        i && ((t = { geometries: {}, materials: {}, textures: {}, images: {} }), (n.metadata = { version: 4.4, type: "Object", generator: "Object3D.toJSON" }));
                        var r = {};
                        if (
                            ((r.uuid = this.uuid),
                            (r.type = this.type),
                            "" !== this.name && (r.name = this.name),
                            "{}" !== JSON.stringify(this.userData) && (r.userData = this.userData),
                            !0 === this.castShadow && (r.castShadow = !0),
                            !0 === this.receiveShadow && (r.receiveShadow = !0),
                            !1 === this.visible && (r.visible = !1),
                            (r.matrix = this.matrix.toArray()),
                            void 0 !== this.geometry && (void 0 === t.geometries[this.geometry.uuid] && (t.geometries[this.geometry.uuid] = this.geometry.toJSON(t)), (r.geometry = this.geometry.uuid)),
                            void 0 !== this.material && (void 0 === t.materials[this.material.uuid] && (t.materials[this.material.uuid] = this.material.toJSON(t)), (r.material = this.material.uuid)),
                            this.children.length > 0)
                        ) {
                            r.children = [];
                            for (var o = 0; o < this.children.length; o++) r.children.push(this.children[o].toJSON(t).object);
                        }
                        if (i) {
                            var a = e(t.geometries),
                                s = e(t.materials),
                                l = e(t.textures),
                                c = e(t.images);
                            a.length > 0 && (n.geometries = a), s.length > 0 && (n.materials = s), l.length > 0 && (n.textures = l), c.length > 0 && (n.images = c);
                        }
                        return (n.object = r), n;
                    },
                    clone: function (t) {
                        return new this.constructor().copy(this, t);
                    },
                    copy: function (t, e) {
                        if (
                            (void 0 === e && (e = !0),
                            (this.name = t.name),
                            this.up.copy(t.up),
                            this.position.copy(t.position),
                            this.quaternion.copy(t.quaternion),
                            this.scale.copy(t.scale),
                            this.matrix.copy(t.matrix),
                            this.matrixWorld.copy(t.matrixWorld),
                            (this.matrixAutoUpdate = t.matrixAutoUpdate),
                            (this.matrixWorldNeedsUpdate = t.matrixWorldNeedsUpdate),
                            (this.visible = t.visible),
                            (this.castShadow = t.castShadow),
                            (this.receiveShadow = t.receiveShadow),
                            (this.frustumCulled = t.frustumCulled),
                            (this.renderOrder = t.renderOrder),
                            (this.userData = JSON.parse(JSON.stringify(t.userData))),
                            !0 === e)
                        )
                            for (var i = 0; i < t.children.length; i++) {
                                var n = t.children[i];
                                this.add(n.clone());
                            }
                        return this;
                    },
                });
            var Fa = 0;
            (ht.prototype = {
                constructor: ht,
                set: function (t, e) {
                    return this.start.copy(t), this.end.copy(e), this;
                },
                clone: function () {
                    return new this.constructor().copy(this);
                },
                copy: function (t) {
                    return this.start.copy(t.start), this.end.copy(t.end), this;
                },
                getCenter: function (t) {
                    return (t || new c()).addVectors(this.start, this.end).multiplyScalar(0.5);
                },
                delta: function (t) {
                    return (t || new c()).subVectors(this.end, this.start);
                },
                distanceSq: function () {
                    return this.start.distanceToSquared(this.end);
                },
                distance: function () {
                    return this.start.distanceTo(this.end);
                },
                at: function (t, e) {
                    var i = e || new c();
                    return this.delta(i).multiplyScalar(t).add(this.start);
                },
                closestPointToPointParameter: (function () {
                    var t = new c(),
                        e = new c();
                    return function (i, n) {
                        t.subVectors(i, this.start), e.subVectors(this.end, this.start);
                        var r = e.dot(e),
                            o = e.dot(t),
                            a = o / r;
                        return n && (a = Ma.clamp(a, 0, 1)), a;
                    };
                })(),
                closestPointToPoint: function (t, e, i) {
                    var n = this.closestPointToPointParameter(t, e),
                        r = i || new c();
                    return this.delta(r).multiplyScalar(n).add(this.start);
                },
                applyMatrix4: function (t) {
                    return this.start.applyMatrix4(t), this.end.applyMatrix4(t), this;
                },
                equals: function (t) {
                    return t.start.equals(this.start) && t.end.equals(this.end);
                },
            }),
                (dt.normal = (function () {
                    var t = new c();
                    return function (e, i, n, r) {
                        var o = r || new c();
                        o.subVectors(n, i), t.subVectors(e, i), o.cross(t);
                        var a = o.lengthSq();
                        return a > 0 ? o.multiplyScalar(1 / Math.sqrt(a)) : o.set(0, 0, 0);
                    };
                })()),
                (dt.barycoordFromPoint = (function () {
                    var t = new c(),
                        e = new c(),
                        i = new c();
                    return function (n, r, o, a, s) {
                        t.subVectors(a, r), e.subVectors(o, r), i.subVectors(n, r);
                        var l = t.dot(t),
                            u = t.dot(e),
                            h = t.dot(i),
                            d = e.dot(e),
                            p = e.dot(i),
                            f = l * d - u * u,
                            m = s || new c();
                        if (0 === f) return m.set(-2, -1, -1);
                        var v = 1 / f,
                            g = (d * h - u * p) * v,
                            y = (l * p - u * h) * v;
                        return m.set(1 - g - y, y, g);
                    };
                })()),
                (dt.containsPoint = (function () {
                    var t = new c();
                    return function (e, i, n, r) {
                        var o = dt.barycoordFromPoint(e, i, n, r, t);
                        return o.x >= 0 && o.y >= 0 && o.x + o.y <= 1;
                    };
                })()),
                (dt.prototype = {
                    constructor: dt,
                    set: function (t, e, i) {
                        return this.a.copy(t), this.b.copy(e), this.c.copy(i), this;
                    },
                    setFromPointsAndIndices: function (t, e, i, n) {
                        return this.a.copy(t[e]), this.b.copy(t[i]), this.c.copy(t[n]), this;
                    },
                    clone: function () {
                        return new this.constructor().copy(this);
                    },
                    copy: function (t) {
                        return this.a.copy(t.a), this.b.copy(t.b), this.c.copy(t.c), this;
                    },
                    area: (function () {
                        var t = new c(),
                            e = new c();
                        return function () {
                            return t.subVectors(this.c, this.b), e.subVectors(this.a, this.b), 0.5 * t.cross(e).length();
                        };
                    })(),
                    midpoint: function (t) {
                        return (t || new c())
                            .addVectors(this.a, this.b)
                            .add(this.c)
                            .multiplyScalar(1 / 3);
                    },
                    normal: function (t) {
                        return dt.normal(this.a, this.b, this.c, t);
                    },
                    plane: function (t) {
                        return (t || new nt()).setFromCoplanarPoints(this.a, this.b, this.c);
                    },
                    barycoordFromPoint: function (t, e) {
                        return dt.barycoordFromPoint(t, this.a, this.b, this.c, e);
                    },
                    containsPoint: function (t) {
                        return dt.containsPoint(t, this.a, this.b, this.c);
                    },
                    closestPointToPoint: (function () {
                        var t, e, i, n;
                        return function (r, o) {
                            void 0 === t && ((t = new nt()), (e = [new ht(), new ht(), new ht()]), (i = new c()), (n = new c()));
                            var a = o || new c(),
                                s = 1 / 0;
                            if ((t.setFromCoplanarPoints(this.a, this.b, this.c), t.projectPoint(r, i), !0 === this.containsPoint(i))) a.copy(i);
                            else {
                                e[0].set(this.a, this.b), e[1].set(this.b, this.c), e[2].set(this.c, this.a);
                                for (var l = 0; l < e.length; l++) {
                                    e[l].closestPointToPoint(i, !0, n);
                                    var u = i.distanceToSquared(n);
                                    u < s && ((s = u), a.copy(n));
                                }
                            }
                            return a;
                        };
                    })(),
                    equals: function (t) {
                        return t.a.equals(this.a) && t.b.equals(this.b) && t.c.equals(this.c);
                    },
                }),
                (pt.prototype = {
                    constructor: pt,
                    clone: function () {
                        return new this.constructor().copy(this);
                    },
                    copy: function (t) {
                        (this.a = t.a), (this.b = t.b), (this.c = t.c), this.normal.copy(t.normal), this.color.copy(t.color), (this.materialIndex = t.materialIndex);
                        for (var e = 0, i = t.vertexNormals.length; e < i; e++) this.vertexNormals[e] = t.vertexNormals[e].clone();
                        for (var e = 0, i = t.vertexColors.length; e < i; e++) this.vertexColors[e] = t.vertexColors[e].clone();
                        return this;
                    },
                }),
                (ft.prototype = Object.create(J.prototype)),
                (ft.prototype.constructor = ft),
                (ft.prototype.isMeshBasicMaterial = !0),
                (ft.prototype.copy = function (t) {
                    return (
                        J.prototype.copy.call(this, t),
                        this.color.copy(t.color),
                        (this.map = t.map),
                        (this.aoMap = t.aoMap),
                        (this.aoMapIntensity = t.aoMapIntensity),
                        (this.specularMap = t.specularMap),
                        (this.alphaMap = t.alphaMap),
                        (this.envMap = t.envMap),
                        (this.combine = t.combine),
                        (this.reflectivity = t.reflectivity),
                        (this.refractionRatio = t.refractionRatio),
                        (this.wireframe = t.wireframe),
                        (this.wireframeLinewidth = t.wireframeLinewidth),
                        (this.wireframeLinecap = t.wireframeLinecap),
                        (this.wireframeLinejoin = t.wireframeLinejoin),
                        (this.skinning = t.skinning),
                        (this.morphTargets = t.morphTargets),
                        this
                    );
                }),
                (mt.prototype = {
                    constructor: mt,
                    isBufferAttribute: !0,
                    set needsUpdate(t) {
                        !0 === t && this.version++;
                    },
                    setArray: function (t) {
                        if (Array.isArray(t)) throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
                        (this.count = void 0 !== t ? t.length / this.itemSize : 0), (this.array = t);
                    },
                    setDynamic: function (t) {
                        return (this.dynamic = t), this;
                    },
                    copy: function (t) {
                        return (this.array = new t.array.constructor(t.array)), (this.itemSize = t.itemSize), (this.count = t.count), (this.normalized = t.normalized), (this.dynamic = t.dynamic), this;
                    },
                    copyAt: function (t, e, i) {
                        (t *= this.itemSize), (i *= e.itemSize);
                        for (var n = 0, r = this.itemSize; n < r; n++) this.array[t + n] = e.array[i + n];
                        return this;
                    },
                    copyArray: function (t) {
                        return this.array.set(t), this;
                    },
                    copyColorsArray: function (t) {
                        for (var e = this.array, i = 0, n = 0, r = t.length; n < r; n++) {
                            var o = t[n];
                            void 0 === o && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", n), (o = new X())), (e[i++] = o.r), (e[i++] = o.g), (e[i++] = o.b);
                        }
                        return this;
                    },
                    copyIndicesArray: function (t) {
                        for (var e = this.array, i = 0, n = 0, r = t.length; n < r; n++) {
                            var o = t[n];
                            (e[i++] = o.a), (e[i++] = o.b), (e[i++] = o.c);
                        }
                        return this;
                    },
                    copyVector2sArray: function (t) {
                        for (var e = this.array, n = 0, r = 0, o = t.length; r < o; r++) {
                            var a = t[r];
                            void 0 === a && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", r), (a = new i())), (e[n++] = a.x), (e[n++] = a.y);
                        }
                        return this;
                    },
                    copyVector3sArray: function (t) {
                        for (var e = this.array, i = 0, n = 0, r = t.length; n < r; n++) {
                            var o = t[n];
                            void 0 === o && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", n), (o = new c())), (e[i++] = o.x), (e[i++] = o.y), (e[i++] = o.z);
                        }
                        return this;
                    },
                    copyVector4sArray: function (t) {
                        for (var e = this.array, i = 0, n = 0, r = t.length; n < r; n++) {
                            var a = t[n];
                            void 0 === a && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", n), (a = new o())), (e[i++] = a.x), (e[i++] = a.y), (e[i++] = a.z), (e[i++] = a.w);
                        }
                        return this;
                    },
                    set: function (t, e) {
                        return void 0 === e && (e = 0), this.array.set(t, e), this;
                    },
                    getX: function (t) {
                        return this.array[t * this.itemSize];
                    },
                    setX: function (t, e) {
                        return (this.array[t * this.itemSize] = e), this;
                    },
                    getY: function (t) {
                        return this.array[t * this.itemSize + 1];
                    },
                    setY: function (t, e) {
                        return (this.array[t * this.itemSize + 1] = e), this;
                    },
                    getZ: function (t) {
                        return this.array[t * this.itemSize + 2];
                    },
                    setZ: function (t, e) {
                        return (this.array[t * this.itemSize + 2] = e), this;
                    },
                    getW: function (t) {
                        return this.array[t * this.itemSize + 3];
                    },
                    setW: function (t, e) {
                        return (this.array[t * this.itemSize + 3] = e), this;
                    },
                    setXY: function (t, e, i) {
                        return (t *= this.itemSize), (this.array[t + 0] = e), (this.array[t + 1] = i), this;
                    },
                    setXYZ: function (t, e, i, n) {
                        return (t *= this.itemSize), (this.array[t + 0] = e), (this.array[t + 1] = i), (this.array[t + 2] = n), this;
                    },
                    setXYZW: function (t, e, i, n, r) {
                        return (t *= this.itemSize), (this.array[t + 0] = e), (this.array[t + 1] = i), (this.array[t + 2] = n), (this.array[t + 3] = r), this;
                    },
                    clone: function () {
                        return new this.constructor().copy(this);
                    },
                }),
                Object.assign(St.prototype, e.prototype, {
                    isGeometry: !0,
                    applyMatrix: function (t) {
                        for (var e = new it().getNormalMatrix(t), i = 0, n = this.vertices.length; i < n; i++) {
                            this.vertices[i].applyMatrix4(t);
                        }
                        for (var i = 0, n = this.faces.length; i < n; i++) {
                            var r = this.faces[i];
                            r.normal.applyMatrix3(e).normalize();
                            for (var o = 0, a = r.vertexNormals.length; o < a; o++) r.vertexNormals[o].applyMatrix3(e).normalize();
                        }
                        return null !== this.boundingBox && this.computeBoundingBox(), null !== this.boundingSphere && this.computeBoundingSphere(), (this.verticesNeedUpdate = !0), (this.normalsNeedUpdate = !0), this;
                    },
                    rotateX: (function () {
                        var t;
                        return function (e) {
                            return void 0 === t && (t = new u()), t.makeRotationX(e), this.applyMatrix(t), this;
                        };
                    })(),
                    rotateY: (function () {
                        var t;
                        return function (e) {
                            return void 0 === t && (t = new u()), t.makeRotationY(e), this.applyMatrix(t), this;
                        };
                    })(),
                    rotateZ: (function () {
                        var t;
                        return function (e) {
                            return void 0 === t && (t = new u()), t.makeRotationZ(e), this.applyMatrix(t), this;
                        };
                    })(),
                    translate: (function () {
                        var t;
                        return function (e, i, n) {
                            return void 0 === t && (t = new u()), t.makeTranslation(e, i, n), this.applyMatrix(t), this;
                        };
                    })(),
                    scale: (function () {
                        var t;
                        return function (e, i, n) {
                            return void 0 === t && (t = new u()), t.makeScale(e, i, n), this.applyMatrix(t), this;
                        };
                    })(),
                    lookAt: (function () {
                        var t;
                        return function (e) {
                            void 0 === t && (t = new ct()), t.lookAt(e), t.updateMatrix(), this.applyMatrix(t.matrix);
                        };
                    })(),
                    fromBufferGeometry: function (t) {
                        function e(t, e, i, r) {
                            var o = void 0 !== s ? [d[t].clone(), d[e].clone(), d[i].clone()] : [],
                                a = void 0 !== l ? [n.colors[t].clone(), n.colors[e].clone(), n.colors[i].clone()] : [],
                                c = new pt(t, e, i, o, a, r);
                            n.faces.push(c), void 0 !== u && n.faceVertexUvs[0].push([p[t].clone(), p[e].clone(), p[i].clone()]), void 0 !== h && n.faceVertexUvs[1].push([f[t].clone(), f[e].clone(), f[i].clone()]);
                        }
                        var n = this,
                            r = null !== t.index ? t.index.array : void 0,
                            o = t.attributes,
                            a = o.position.array,
                            s = void 0 !== o.normal ? o.normal.array : void 0,
                            l = void 0 !== o.color ? o.color.array : void 0,
                            u = void 0 !== o.uv ? o.uv.array : void 0,
                            h = void 0 !== o.uv2 ? o.uv2.array : void 0;
                        void 0 !== h && (this.faceVertexUvs[1] = []);
                        for (var d = [], p = [], f = [], m = 0, v = 0; m < a.length; m += 3, v += 2)
                            n.vertices.push(new c(a[m], a[m + 1], a[m + 2])),
                                void 0 !== s && d.push(new c(s[m], s[m + 1], s[m + 2])),
                                void 0 !== l && n.colors.push(new X(l[m], l[m + 1], l[m + 2])),
                                void 0 !== u && p.push(new i(u[v], u[v + 1])),
                                void 0 !== h && f.push(new i(h[v], h[v + 1]));
                        if (void 0 !== r) {
                            var g = t.groups;
                            if (g.length > 0) for (var m = 0; m < g.length; m++) for (var y = g[m], _ = y.start, b = y.count, v = _, x = _ + b; v < x; v += 3) e(r[v], r[v + 1], r[v + 2], y.materialIndex);
                            else for (var m = 0; m < r.length; m += 3) e(r[m], r[m + 1], r[m + 2]);
                        } else for (var m = 0; m < a.length / 3; m += 3) e(m, m + 1, m + 2);
                        return this.computeFaceNormals(), null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()), null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()), this;
                    },
                    center: function () {
                        this.computeBoundingBox();
                        var t = this.boundingBox.getCenter().negate();
                        return this.translate(t.x, t.y, t.z), t;
                    },
                    normalize: function () {
                        this.computeBoundingSphere();
                        var t = this.boundingSphere.center,
                            e = this.boundingSphere.radius,
                            i = 0 === e ? 1 : 1 / e,
                            n = new u();
                        return n.set(i, 0, 0, -i * t.x, 0, i, 0, -i * t.y, 0, 0, i, -i * t.z, 0, 0, 0, 1), this.applyMatrix(n), this;
                    },
                    computeFaceNormals: function () {
                        for (var t = new c(), e = new c(), i = 0, n = this.faces.length; i < n; i++) {
                            var r = this.faces[i],
                                o = this.vertices[r.a],
                                a = this.vertices[r.b],
                                s = this.vertices[r.c];
                            t.subVectors(s, a), e.subVectors(o, a), t.cross(e), t.normalize(), r.normal.copy(t);
                        }
                    },
                    computeVertexNormals: function (t) {
                        void 0 === t && (t = !0);
                        var e, i, n, r, o, a;
                        for (a = new Array(this.vertices.length), e = 0, i = this.vertices.length; e < i; e++) a[e] = new c();
                        if (t) {
                            var s,
                                l,
                                u,
                                h = new c(),
                                d = new c();
                            for (n = 0, r = this.faces.length; n < r; n++)
                                (o = this.faces[n]), (s = this.vertices[o.a]), (l = this.vertices[o.b]), (u = this.vertices[o.c]), h.subVectors(u, l), d.subVectors(s, l), h.cross(d), a[o.a].add(h), a[o.b].add(h), a[o.c].add(h);
                        } else for (this.computeFaceNormals(), n = 0, r = this.faces.length; n < r; n++) (o = this.faces[n]), a[o.a].add(o.normal), a[o.b].add(o.normal), a[o.c].add(o.normal);
                        for (e = 0, i = this.vertices.length; e < i; e++) a[e].normalize();
                        for (n = 0, r = this.faces.length; n < r; n++) {
                            o = this.faces[n];
                            var p = o.vertexNormals;
                            3 === p.length ? (p[0].copy(a[o.a]), p[1].copy(a[o.b]), p[2].copy(a[o.c])) : ((p[0] = a[o.a].clone()), (p[1] = a[o.b].clone()), (p[2] = a[o.c].clone()));
                        }
                        this.faces.length > 0 && (this.normalsNeedUpdate = !0);
                    },
                    computeFlatVertexNormals: function () {
                        var t, e, i;
                        for (this.computeFaceNormals(), t = 0, e = this.faces.length; t < e; t++) {
                            i = this.faces[t];
                            var n = i.vertexNormals;
                            3 === n.length ? (n[0].copy(i.normal), n[1].copy(i.normal), n[2].copy(i.normal)) : ((n[0] = i.normal.clone()), (n[1] = i.normal.clone()), (n[2] = i.normal.clone()));
                        }
                        this.faces.length > 0 && (this.normalsNeedUpdate = !0);
                    },
                    computeMorphNormals: function () {
                        var t, e, i, n, r;
                        for (i = 0, n = this.faces.length; i < n; i++)
                            for (
                                r = this.faces[i],
                                    r.__originalFaceNormal ? r.__originalFaceNormal.copy(r.normal) : (r.__originalFaceNormal = r.normal.clone()),
                                    r.__originalVertexNormals || (r.__originalVertexNormals = []),
                                    t = 0,
                                    e = r.vertexNormals.length;
                                t < e;
                                t++
                            )
                                r.__originalVertexNormals[t] ? r.__originalVertexNormals[t].copy(r.vertexNormals[t]) : (r.__originalVertexNormals[t] = r.vertexNormals[t].clone());
                        var o = new St();
                        for (o.faces = this.faces, t = 0, e = this.morphTargets.length; t < e; t++) {
                            if (!this.morphNormals[t]) {
                                (this.morphNormals[t] = {}), (this.morphNormals[t].faceNormals = []), (this.morphNormals[t].vertexNormals = []);
                                var a,
                                    s,
                                    l = this.morphNormals[t].faceNormals,
                                    u = this.morphNormals[t].vertexNormals;
                                for (i = 0, n = this.faces.length; i < n; i++) (a = new c()), (s = { a: new c(), b: new c(), c: new c() }), l.push(a), u.push(s);
                            }
                            var h = this.morphNormals[t];
                            (o.vertices = this.morphTargets[t].vertices), o.computeFaceNormals(), o.computeVertexNormals();
                            var a, s;
                            for (i = 0, n = this.faces.length; i < n; i++)
                                (r = this.faces[i]), (a = h.faceNormals[i]), (s = h.vertexNormals[i]), a.copy(r.normal), s.a.copy(r.vertexNormals[0]), s.b.copy(r.vertexNormals[1]), s.c.copy(r.vertexNormals[2]);
                        }
                        for (i = 0, n = this.faces.length; i < n; i++) (r = this.faces[i]), (r.normal = r.__originalFaceNormal), (r.vertexNormals = r.__originalVertexNormals);
                    },
                    computeTangents: function () {
                        console.warn("THREE.Geometry: .computeTangents() has been removed.");
                    },
                    computeLineDistances: function () {
                        for (var t = 0, e = this.vertices, i = 0, n = e.length; i < n; i++) i > 0 && (t += e[i].distanceTo(e[i - 1])), (this.lineDistances[i] = t);
                    },
                    computeBoundingBox: function () {
                        null === this.boundingBox && (this.boundingBox = new tt()), this.boundingBox.setFromPoints(this.vertices);
                    },
                    computeBoundingSphere: function () {
                        null === this.boundingSphere && (this.boundingSphere = new et()), this.boundingSphere.setFromPoints(this.vertices);
                    },
                    merge: function (t, e, i) {
                        if (!1 === (t && t.isGeometry)) return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", t);
                        var n,
                            r = this.vertices.length,
                            o = this.vertices,
                            a = t.vertices,
                            s = this.faces,
                            l = t.faces,
                            c = this.faceVertexUvs[0],
                            u = t.faceVertexUvs[0],
                            h = this.colors,
                            d = t.colors;
                        void 0 === i && (i = 0), void 0 !== e && (n = new it().getNormalMatrix(e));
                        for (var p = 0, f = a.length; p < f; p++) {
                            var m = a[p],
                                v = m.clone();
                            void 0 !== e && v.applyMatrix4(e), o.push(v);
                        }
                        for (var p = 0, f = d.length; p < f; p++) h.push(d[p].clone());
                        for (p = 0, f = l.length; p < f; p++) {
                            var g,
                                y,
                                _,
                                b = l[p],
                                x = b.vertexNormals,
                                w = b.vertexColors;
                            (g = new pt(b.a + r, b.b + r, b.c + r)), g.normal.copy(b.normal), void 0 !== n && g.normal.applyMatrix3(n).normalize();
                            for (var T = 0, E = x.length; T < E; T++) (y = x[T].clone()), void 0 !== n && y.applyMatrix3(n).normalize(), g.vertexNormals.push(y);
                            g.color.copy(b.color);
                            for (var T = 0, E = w.length; T < E; T++) (_ = w[T]), g.vertexColors.push(_.clone());
                            (g.materialIndex = b.materialIndex + i), s.push(g);
                        }
                        for (p = 0, f = u.length; p < f; p++) {
                            var M = u[p],
                                S = [];
                            if (void 0 !== M) {
                                for (var T = 0, E = M.length; T < E; T++) S.push(M[T].clone());
                                c.push(S);
                            }
                        }
                    },
                    mergeMesh: function (t) {
                        if (!1 === (t && t.isMesh)) return void console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.", t);
                        t.matrixAutoUpdate && t.updateMatrix(), this.merge(t.geometry, t.matrix);
                    },
                    mergeVertices: function () {
                        var t,
                            e,
                            i,
                            n,
                            r,
                            o,
                            a,
                            s,
                            l = {},
                            c = [],
                            u = [],
                            h = Math.pow(10, 4);
                        for (i = 0, n = this.vertices.length; i < n; i++)
                            (t = this.vertices[i]), (e = Math.round(t.x * h) + "_" + Math.round(t.y * h) + "_" + Math.round(t.z * h)), void 0 === l[e] ? ((l[e] = i), c.push(this.vertices[i]), (u[i] = c.length - 1)) : (u[i] = u[l[e]]);
                        var d = [];
                        for (i = 0, n = this.faces.length; i < n; i++) {
                            (r = this.faces[i]), (r.a = u[r.a]), (r.b = u[r.b]), (r.c = u[r.c]), (o = [r.a, r.b, r.c]);
                            for (var p = 0; p < 3; p++)
                                if (o[p] === o[(p + 1) % 3]) {
                                    p, d.push(i);
                                    break;
                                }
                        }
                        for (i = d.length - 1; i >= 0; i--) {
                            var f = d[i];
                            for (this.faces.splice(f, 1), a = 0, s = this.faceVertexUvs.length; a < s; a++) this.faceVertexUvs[a].splice(f, 1);
                        }
                        var m = this.vertices.length - c.length;
                        return (this.vertices = c), m;
                    },
                    sortFacesByMaterialIndex: function () {
                        function t(t, e) {
                            return t.materialIndex - e.materialIndex;
                        }
                        for (var e = this.faces, i = e.length, n = 0; n < i; n++) e[n]._id = n;
                        e.sort(t);
                        var r,
                            o,
                            a = this.faceVertexUvs[0],
                            s = this.faceVertexUvs[1];
                        a && a.length === i && (r = []), s && s.length === i && (o = []);
                        for (var n = 0; n < i; n++) {
                            var l = e[n]._id;
                            r && r.push(a[l]), o && o.push(s[l]);
                        }
                        r && (this.faceVertexUvs[0] = r), o && (this.faceVertexUvs[1] = o);
                    },
                    toJSON: function () {
                        function t(t, e, i) {
                            return i ? t | (1 << e) : t & ~(1 << e);
                        }
                        function e(t) {
                            var e = t.x.toString() + t.y.toString() + t.z.toString();
                            return void 0 !== d[e] ? d[e] : ((d[e] = h.length / 3), h.push(t.x, t.y, t.z), d[e]);
                        }
                        function i(t) {
                            var e = t.r.toString() + t.g.toString() + t.b.toString();
                            return void 0 !== f[e] ? f[e] : ((f[e] = p.length), p.push(t.getHex()), f[e]);
                        }
                        function n(t) {
                            var e = t.x.toString() + t.y.toString();
                            return void 0 !== v[e] ? v[e] : ((v[e] = m.length / 2), m.push(t.x, t.y), v[e]);
                        }
                        var r = { metadata: { version: 4.4, type: "Geometry", generator: "Geometry.toJSON" } };
                        if (((r.uuid = this.uuid), (r.type = this.type), "" !== this.name && (r.name = this.name), void 0 !== this.parameters)) {
                            var o = this.parameters;
                            for (var a in o) void 0 !== o[a] && (r[a] = o[a]);
                            return r;
                        }
                        for (var s = [], l = 0; l < this.vertices.length; l++) {
                            var c = this.vertices[l];
                            s.push(c.x, c.y, c.z);
                        }
                        for (var u = [], h = [], d = {}, p = [], f = {}, m = [], v = {}, l = 0; l < this.faces.length; l++) {
                            var g = this.faces[l],
                                y = void 0 !== this.faceVertexUvs[0][l],
                                _ = g.normal.length() > 0,
                                b = g.vertexNormals.length > 0,
                                x = 1 !== g.color.r || 1 !== g.color.g || 1 !== g.color.b,
                                w = g.vertexColors.length > 0,
                                T = 0;
                            if (
                                ((T = t(T, 0, 0)), (T = t(T, 1, !0)), (T = t(T, 2, !1)), (T = t(T, 3, y)), (T = t(T, 4, _)), (T = t(T, 5, b)), (T = t(T, 6, x)), (T = t(T, 7, w)), u.push(T), u.push(g.a, g.b, g.c), u.push(g.materialIndex), y)
                            ) {
                                var E = this.faceVertexUvs[0][l];
                                u.push(n(E[0]), n(E[1]), n(E[2]));
                            }
                            if ((_ && u.push(e(g.normal)), b)) {
                                var M = g.vertexNormals;
                                u.push(e(M[0]), e(M[1]), e(M[2]));
                            }
                            if ((x && u.push(i(g.color)), w)) {
                                var S = g.vertexColors;
                                u.push(i(S[0]), i(S[1]), i(S[2]));
                            }
                        }
                        return (r.data = {}), (r.data.vertices = s), (r.data.normals = h), p.length > 0 && (r.data.colors = p), m.length > 0 && (r.data.uvs = [m]), (r.data.faces = u), r;
                    },
                    clone: function () {
                        return new St().copy(this);
                    },
                    copy: function (t) {
                        (this.vertices = []), (this.faces = []), (this.faceVertexUvs = [[]]), (this.colors = []);
                        for (var e = t.vertices, i = 0, n = e.length; i < n; i++) this.vertices.push(e[i].clone());
                        for (var r = t.colors, i = 0, n = r.length; i < n; i++) this.colors.push(r[i].clone());
                        for (var o = t.faces, i = 0, n = o.length; i < n; i++) this.faces.push(o[i].clone());
                        for (var i = 0, n = t.faceVertexUvs.length; i < n; i++) {
                            var a = t.faceVertexUvs[i];
                            void 0 === this.faceVertexUvs[i] && (this.faceVertexUvs[i] = []);
                            for (var s = 0, l = a.length; s < l; s++) {
                                for (var c = a[s], u = [], h = 0, d = c.length; h < d; h++) {
                                    var p = c[h];
                                    u.push(p.clone());
                                }
                                this.faceVertexUvs[i].push(u);
                            }
                        }
                        return this;
                    },
                    dispose: function () {
                        this.dispatchEvent({ type: "dispose" });
                    },
                });
            var Ua = 0;
            Object.assign(Rt.prototype, e.prototype, {
                computeBoundingBox: St.prototype.computeBoundingBox,
                computeBoundingSphere: St.prototype.computeBoundingSphere,
                computeFaceNormals: function () {
                    console.warn("THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.");
                },
                computeVertexNormals: function () {
                    console.warn("THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.");
                },
                computeGroups: function (t) {
                    for (var e, i, n = [], r = t.faces, o = 0; o < r.length; o++) {
                        var a = r[o];
                        a.materialIndex !== i && ((i = a.materialIndex), void 0 !== e && ((e.count = 3 * o - e.start), n.push(e)), (e = { start: 3 * o, materialIndex: i }));
                    }
                    void 0 !== e && ((e.count = 3 * o - e.start), n.push(e)), (this.groups = n);
                },
                fromGeometry: function (t) {
                    var e,
                        n = t.faces,
                        r = t.vertices,
                        o = t.faceVertexUvs,
                        a = o[0] && o[0].length > 0,
                        s = o[1] && o[1].length > 0,
                        l = t.morphTargets,
                        c = l.length;
                    if (c > 0) {
                        e = [];
                        for (var u = 0; u < c; u++) e[u] = [];
                        this.morphTargets.position = e;
                    }
                    var h,
                        d = t.morphNormals,
                        p = d.length;
                    if (p > 0) {
                        h = [];
                        for (var u = 0; u < p; u++) h[u] = [];
                        this.morphTargets.normal = h;
                    }
                    for (var f = t.skinIndices, m = t.skinWeights, v = f.length === r.length, g = m.length === r.length, u = 0; u < n.length; u++) {
                        var y = n[u];
                        this.vertices.push(r[y.a], r[y.b], r[y.c]);
                        var _ = y.vertexNormals;
                        if (3 === _.length) this.normals.push(_[0], _[1], _[2]);
                        else {
                            var b = y.normal;
                            this.normals.push(b, b, b);
                        }
                        var x = y.vertexColors;
                        if (3 === x.length) this.colors.push(x[0], x[1], x[2]);
                        else {
                            var w = y.color;
                            this.colors.push(w, w, w);
                        }
                        if (!0 === a) {
                            var T = o[0][u];
                            void 0 !== T ? this.uvs.push(T[0], T[1], T[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ", u), this.uvs.push(new i(), new i(), new i()));
                        }
                        if (!0 === s) {
                            var T = o[1][u];
                            void 0 !== T ? this.uvs2.push(T[0], T[1], T[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ", u), this.uvs2.push(new i(), new i(), new i()));
                        }
                        for (var E = 0; E < c; E++) {
                            var M = l[E].vertices;
                            e[E].push(M[y.a], M[y.b], M[y.c]);
                        }
                        for (var E = 0; E < p; E++) {
                            var S = d[E].vertexNormals[u];
                            h[E].push(S.a, S.b, S.c);
                        }
                        v && this.skinIndices.push(f[y.a], f[y.b], f[y.c]), g && this.skinWeights.push(m[y.a], m[y.b], m[y.c]);
                    }
                    return (
                        this.computeGroups(t),
                        (this.verticesNeedUpdate = t.verticesNeedUpdate),
                        (this.normalsNeedUpdate = t.normalsNeedUpdate),
                        (this.colorsNeedUpdate = t.colorsNeedUpdate),
                        (this.uvsNeedUpdate = t.uvsNeedUpdate),
                        (this.groupsNeedUpdate = t.groupsNeedUpdate),
                        this
                    );
                },
                dispose: function () {
                    this.dispatchEvent({ type: "dispose" });
                },
            }),
                Object.assign(Ct.prototype, e.prototype, {
                    isBufferGeometry: !0,
                    getIndex: function () {
                        return this.index;
                    },
                    setIndex: function (t) {
                        this.index = t;
                    },
                    addAttribute: function (t, e) {
                        return !1 === (e && e.isBufferAttribute) && !1 === (e && e.isInterleavedBufferAttribute)
                            ? (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."), void this.addAttribute(t, new mt(arguments[1], arguments[2])))
                            : "index" === t
                            ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."), void this.setIndex(e))
                            : ((this.attributes[t] = e), this);
                    },
                    getAttribute: function (t) {
                        return this.attributes[t];
                    },
                    removeAttribute: function (t) {
                        return delete this.attributes[t], this;
                    },
                    addGroup: function (t, e, i) {
                        this.groups.push({ start: t, count: e, materialIndex: void 0 !== i ? i : 0 });
                    },
                    clearGroups: function () {
                        this.groups = [];
                    },
                    setDrawRange: function (t, e) {
                        (this.drawRange.start = t), (this.drawRange.count = e);
                    },
                    applyMatrix: function (t) {
                        var e = this.attributes.position;
                        void 0 !== e && (t.applyToVector3Array(e.array), (e.needsUpdate = !0));
                        var i = this.attributes.normal;
                        if (void 0 !== i) {
                            new it().getNormalMatrix(t).applyToVector3Array(i.array), (i.needsUpdate = !0);
                        }
                        return null !== this.boundingBox && this.computeBoundingBox(), null !== this.boundingSphere && this.computeBoundingSphere(), this;
                    },
                    rotateX: (function () {
                        var t;
                        return function (e) {
                            return void 0 === t && (t = new u()), t.makeRotationX(e), this.applyMatrix(t), this;
                        };
                    })(),
                    rotateY: (function () {
                        var t;
                        return function (e) {
                            return void 0 === t && (t = new u()), t.makeRotationY(e), this.applyMatrix(t), this;
                        };
                    })(),
                    rotateZ: (function () {
                        var t;
                        return function (e) {
                            return void 0 === t && (t = new u()), t.makeRotationZ(e), this.applyMatrix(t), this;
                        };
                    })(),
                    translate: (function () {
                        var t;
                        return function (e, i, n) {
                            return void 0 === t && (t = new u()), t.makeTranslation(e, i, n), this.applyMatrix(t), this;
                        };
                    })(),
                    scale: (function () {
                        var t;
                        return function (e, i, n) {
                            return void 0 === t && (t = new u()), t.makeScale(e, i, n), this.applyMatrix(t), this;
                        };
                    })(),
                    lookAt: (function () {
                        var t;
                        return function (e) {
                            void 0 === t && (t = new ct()), t.lookAt(e), t.updateMatrix(), this.applyMatrix(t.matrix);
                        };
                    })(),
                    center: function () {
                        this.computeBoundingBox();
                        var t = this.boundingBox.getCenter().negate();
                        return this.translate(t.x, t.y, t.z), t;
                    },
                    setFromObject: function (t) {
                        var e = t.geometry;
                        if ((t && t.isPoints) || (t && t.isLine)) {
                            var i = new Tt(3 * e.vertices.length, 3),
                                n = new Tt(3 * e.colors.length, 3);
                            if ((this.addAttribute("position", i.copyVector3sArray(e.vertices)), this.addAttribute("color", n.copyColorsArray(e.colors)), e.lineDistances && e.lineDistances.length === e.vertices.length)) {
                                var r = new Tt(e.lineDistances.length, 1);
                                this.addAttribute("lineDistance", r.copyArray(e.lineDistances));
                            }
                            null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()), null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone());
                        } else t && t.isMesh && e && e.isGeometry && this.fromGeometry(e);
                        return this;
                    },
                    updateFromObject: function (t) {
                        var e = t.geometry;
                        if (t && t.isMesh) {
                            var i = e.__directGeometry;
                            if ((!0 === e.elementsNeedUpdate && ((i = void 0), (e.elementsNeedUpdate = !1)), void 0 === i)) return this.fromGeometry(e);
                            (i.verticesNeedUpdate = e.verticesNeedUpdate),
                                (i.normalsNeedUpdate = e.normalsNeedUpdate),
                                (i.colorsNeedUpdate = e.colorsNeedUpdate),
                                (i.uvsNeedUpdate = e.uvsNeedUpdate),
                                (i.groupsNeedUpdate = e.groupsNeedUpdate),
                                (e.verticesNeedUpdate = !1),
                                (e.normalsNeedUpdate = !1),
                                (e.colorsNeedUpdate = !1),
                                (e.uvsNeedUpdate = !1),
                                (e.groupsNeedUpdate = !1),
                                (e = i);
                        }
                        var n;
                        return (
                            !0 === e.verticesNeedUpdate && ((n = this.attributes.position), void 0 !== n && (n.copyVector3sArray(e.vertices), (n.needsUpdate = !0)), (e.verticesNeedUpdate = !1)),
                            !0 === e.normalsNeedUpdate && ((n = this.attributes.normal), void 0 !== n && (n.copyVector3sArray(e.normals), (n.needsUpdate = !0)), (e.normalsNeedUpdate = !1)),
                            !0 === e.colorsNeedUpdate && ((n = this.attributes.color), void 0 !== n && (n.copyColorsArray(e.colors), (n.needsUpdate = !0)), (e.colorsNeedUpdate = !1)),
                            e.uvsNeedUpdate && ((n = this.attributes.uv), void 0 !== n && (n.copyVector2sArray(e.uvs), (n.needsUpdate = !0)), (e.uvsNeedUpdate = !1)),
                            e.lineDistancesNeedUpdate && ((n = this.attributes.lineDistance), void 0 !== n && (n.copyArray(e.lineDistances), (n.needsUpdate = !0)), (e.lineDistancesNeedUpdate = !1)),
                            e.groupsNeedUpdate && (e.computeGroups(t.geometry), (this.groups = e.groups), (e.groupsNeedUpdate = !1)),
                            this
                        );
                    },
                    fromGeometry: function (t) {
                        return (t.__directGeometry = new Rt().fromGeometry(t)), this.fromDirectGeometry(t.__directGeometry);
                    },
                    fromDirectGeometry: function (t) {
                        var e = new Float32Array(3 * t.vertices.length);
                        if ((this.addAttribute("position", new mt(e, 3).copyVector3sArray(t.vertices)), t.normals.length > 0)) {
                            var i = new Float32Array(3 * t.normals.length);
                            this.addAttribute("normal", new mt(i, 3).copyVector3sArray(t.normals));
                        }
                        if (t.colors.length > 0) {
                            var n = new Float32Array(3 * t.colors.length);
                            this.addAttribute("color", new mt(n, 3).copyColorsArray(t.colors));
                        }
                        if (t.uvs.length > 0) {
                            var r = new Float32Array(2 * t.uvs.length);
                            this.addAttribute("uv", new mt(r, 2).copyVector2sArray(t.uvs));
                        }
                        if (t.uvs2.length > 0) {
                            var o = new Float32Array(2 * t.uvs2.length);
                            this.addAttribute("uv2", new mt(o, 2).copyVector2sArray(t.uvs2));
                        }
                        if (t.indices.length > 0) {
                            var a = t.vertices.length > 65535 ? Uint32Array : Uint16Array,
                                s = new a(3 * t.indices.length);
                            this.setIndex(new mt(s, 1).copyIndicesArray(t.indices));
                        }
                        this.groups = t.groups;
                        for (var l in t.morphTargets) {
                            for (var c = [], u = t.morphTargets[l], h = 0, d = u.length; h < d; h++) {
                                var p = u[h],
                                    f = new Tt(3 * p.length, 3);
                                c.push(f.copyVector3sArray(p));
                            }
                            this.morphAttributes[l] = c;
                        }
                        if (t.skinIndices.length > 0) {
                            var m = new Tt(4 * t.skinIndices.length, 4);
                            this.addAttribute("skinIndex", m.copyVector4sArray(t.skinIndices));
                        }
                        if (t.skinWeights.length > 0) {
                            var v = new Tt(4 * t.skinWeights.length, 4);
                            this.addAttribute("skinWeight", v.copyVector4sArray(t.skinWeights));
                        }
                        return null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()), null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()), this;
                    },
                    computeBoundingBox: function () {
                        null === this.boundingBox && (this.boundingBox = new tt());
                        var t = this.attributes.position.array;
                        void 0 !== t ? this.boundingBox.setFromArray(t) : this.boundingBox.makeEmpty(),
                            (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) &&
                                console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this);
                    },
                    computeBoundingSphere: (function () {
                        var t = new tt(),
                            e = new c();
                        return function () {
                            null === this.boundingSphere && (this.boundingSphere = new et());
                            var i = this.attributes.position;
                            if (i) {
                                var n = i.array,
                                    r = this.boundingSphere.center;
                                t.setFromArray(n), t.getCenter(r);
                                for (var o = 0, a = 0, s = n.length; a < s; a += 3) e.fromArray(n, a), (o = Math.max(o, r.distanceToSquared(e)));
                                (this.boundingSphere.radius = Math.sqrt(o)),
                                    isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this);
                            }
                        };
                    })(),
                    computeFaceNormals: function () {},
                    computeVertexNormals: function () {
                        var t = this.index,
                            e = this.attributes,
                            i = this.groups;
                        if (e.position) {
                            var n = e.position.array;
                            if (void 0 === e.normal) this.addAttribute("normal", new mt(new Float32Array(n.length), 3));
                            else for (var r = e.normal.array, o = 0, a = r.length; o < a; o++) r[o] = 0;
                            var s,
                                l,
                                u,
                                h = e.normal.array,
                                d = new c(),
                                p = new c(),
                                f = new c(),
                                m = new c(),
                                v = new c();
                            if (t) {
                                var g = t.array;
                                0 === i.length && this.addGroup(0, g.length);
                                for (var y = 0, _ = i.length; y < _; ++y)
                                    for (var b = i[y], x = b.start, w = b.count, o = x, a = x + w; o < a; o += 3)
                                        (s = 3 * g[o + 0]),
                                            (l = 3 * g[o + 1]),
                                            (u = 3 * g[o + 2]),
                                            d.fromArray(n, s),
                                            p.fromArray(n, l),
                                            f.fromArray(n, u),
                                            m.subVectors(f, p),
                                            v.subVectors(d, p),
                                            m.cross(v),
                                            (h[s] += m.x),
                                            (h[s + 1] += m.y),
                                            (h[s + 2] += m.z),
                                            (h[l] += m.x),
                                            (h[l + 1] += m.y),
                                            (h[l + 2] += m.z),
                                            (h[u] += m.x),
                                            (h[u + 1] += m.y),
                                            (h[u + 2] += m.z);
                            } else
                                for (var o = 0, a = n.length; o < a; o += 9)
                                    d.fromArray(n, o),
                                        p.fromArray(n, o + 3),
                                        f.fromArray(n, o + 6),
                                        m.subVectors(f, p),
                                        v.subVectors(d, p),
                                        m.cross(v),
                                        (h[o] = m.x),
                                        (h[o + 1] = m.y),
                                        (h[o + 2] = m.z),
                                        (h[o + 3] = m.x),
                                        (h[o + 4] = m.y),
                                        (h[o + 5] = m.z),
                                        (h[o + 6] = m.x),
                                        (h[o + 7] = m.y),
                                        (h[o + 8] = m.z);
                            this.normalizeNormals(), (e.normal.needsUpdate = !0);
                        }
                    },
                    merge: function (t, e) {
                        if (!1 === (t && t.isBufferGeometry)) return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", t);
                        void 0 === e && (e = 0);
                        var i = this.attributes;
                        for (var n in i) if (void 0 !== t.attributes[n]) for (var r = i[n], o = r.array, a = t.attributes[n], s = a.array, l = a.itemSize, c = 0, u = l * e; c < s.length; c++, u++) o[u] = s[c];
                        return this;
                    },
                    normalizeNormals: function () {
                        for (var t, e, i, n, r = this.attributes.normal.array, o = 0, a = r.length; o < a; o += 3)
                            (t = r[o]), (e = r[o + 1]), (i = r[o + 2]), (n = 1 / Math.sqrt(t * t + e * e + i * i)), (r[o] *= n), (r[o + 1] *= n), (r[o + 2] *= n);
                    },
                    toNonIndexed: function () {
                        if (null === this.index) return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."), this;
                        var t = new Ct(),
                            e = this.index.array,
                            i = this.attributes;
                        for (var n in i) {
                            for (var r = i[n], o = r.array, a = r.itemSize, s = new o.constructor(e.length * a), l = 0, c = 0, u = 0, h = e.length; u < h; u++) {
                                l = e[u] * a;
                                for (var d = 0; d < a; d++) s[c++] = o[l++];
                            }
                            t.addAttribute(n, new mt(s, a));
                        }
                        return t;
                    },
                    toJSON: function () {
                        var t = { metadata: { version: 4.4, type: "BufferGeometry", generator: "BufferGeometry.toJSON" } };
                        if (((t.uuid = this.uuid), (t.type = this.type), "" !== this.name && (t.name = this.name), void 0 !== this.parameters)) {
                            var e = this.parameters;
                            for (var i in e) void 0 !== e[i] && (t[i] = e[i]);
                            return t;
                        }
                        t.data = { attributes: {} };
                        var n = this.index;
                        if (null !== n) {
                            var r = Array.prototype.slice.call(n.array);
                            t.data.index = { type: n.array.constructor.name, array: r };
                        }
                        var o = this.attributes;
                        for (var i in o) {
                            var a = o[i],
                                r = Array.prototype.slice.call(a.array);
                            t.data.attributes[i] = { itemSize: a.itemSize, type: a.array.constructor.name, array: r, normalized: a.normalized };
                        }
                        var s = this.groups;
                        s.length > 0 && (t.data.groups = JSON.parse(JSON.stringify(s)));
                        var l = this.boundingSphere;
                        return null !== l && (t.data.boundingSphere = { center: l.center.toArray(), radius: l.radius }), t;
                    },
                    clone: function () {
                        return new Ct().copy(this);
                    },
                    copy: function (t) {
                        var e = t.index;
                        null !== e && this.setIndex(e.clone());
                        var i = t.attributes;
                        for (var n in i) {
                            var r = i[n];
                            this.addAttribute(n, r.clone());
                        }
                        for (var o = t.groups, a = 0, s = o.length; a < s; a++) {
                            var l = o[a];
                            this.addGroup(l.start, l.count, l.materialIndex);
                        }
                        return this;
                    },
                    dispose: function () {
                        this.dispatchEvent({ type: "dispose" });
                    },
                }),
                (Ct.MaxIndex = 65535),
                (Pt.prototype = Object.assign(Object.create(ct.prototype), {
                    constructor: Pt,
                    isMesh: !0,
                    setDrawMode: function (t) {
                        this.drawMode = t;
                    },
                    copy: function (t) {
                        return ct.prototype.copy.call(this, t), (this.drawMode = t.drawMode), this;
                    },
                    updateMorphTargets: function () {
                        var t = this.geometry.morphTargets;
                        if (void 0 !== t && t.length > 0) {
                            (this.morphTargetInfluences = []), (this.morphTargetDictionary = {});
                            for (var e = 0, i = t.length; e < i; e++) this.morphTargetInfluences.push(0), (this.morphTargetDictionary[t[e].name] = e);
                        }
                    },
                    raycast: (function () {
                        function t(t, e, i, n, r, o, a) {
                            return dt.barycoordFromPoint(t, e, i, n, y), r.multiplyScalar(y.x), o.multiplyScalar(y.y), a.multiplyScalar(y.z), r.add(o).add(a), r.clone();
                        }
                        function e(t, e, i, n, r, o, a) {
                            var s = t.material;
                            if (null === (s.side === Er ? i.intersectTriangle(o, r, n, !0, a) : i.intersectTriangle(n, r, o, s.side !== Mr, a))) return null;
                            b.copy(a), b.applyMatrix4(t.matrixWorld);
                            var l = e.ray.origin.distanceTo(b);
                            return l < e.near || l > e.far ? null : { distance: l, point: b.clone(), object: t };
                        }
                        function n(i, n, r, o, a, c, u, d) {
                            s.fromArray(o, 3 * c), l.fromArray(o, 3 * u), h.fromArray(o, 3 * d);
                            var p = e(i, n, r, s, l, h, _);
                            return p && (a && (m.fromArray(a, 2 * c), v.fromArray(a, 2 * u), g.fromArray(a, 2 * d), (p.uv = t(_, s, l, h, m, v, g))), (p.face = new pt(c, u, d, dt.normal(s, l, h))), (p.faceIndex = c)), p;
                        }
                        var r = new u(),
                            o = new at(),
                            a = new et(),
                            s = new c(),
                            l = new c(),
                            h = new c(),
                            d = new c(),
                            p = new c(),
                            f = new c(),
                            m = new i(),
                            v = new i(),
                            g = new i(),
                            y = new c(),
                            _ = new c(),
                            b = new c();
                        return function (i, c) {
                            var u = this.geometry,
                                y = this.material,
                                b = this.matrixWorld;
                            if (
                                void 0 !== y &&
                                (null === u.boundingSphere && u.computeBoundingSphere(),
                                a.copy(u.boundingSphere),
                                a.applyMatrix4(b),
                                !1 !== i.ray.intersectsSphere(a) && (r.getInverse(b), o.copy(i.ray).applyMatrix4(r), null === u.boundingBox || !1 !== o.intersectsBox(u.boundingBox)))
                            ) {
                                var x, w;
                                if (u && u.isBufferGeometry) {
                                    var T,
                                        E,
                                        M,
                                        S = u.index,
                                        A = u.attributes,
                                        R = A.position.array;
                                    if ((void 0 !== A.uv && (x = A.uv.array), null !== S))
                                        for (var C = S.array, P = 0, D = C.length; P < D; P += 3) (T = C[P]), (E = C[P + 1]), (M = C[P + 2]), (w = n(this, i, o, R, x, T, E, M)) && ((w.faceIndex = Math.floor(P / 3)), c.push(w));
                                    else for (var P = 0, D = R.length; P < D; P += 9) (T = P / 3), (E = T + 1), (M = T + 2), (w = n(this, i, o, R, x, T, E, M)) && ((w.index = T), c.push(w));
                                } else if (u && u.isGeometry) {
                                    var O,
                                        L,
                                        j,
                                        k = y && y.isMultiMaterial,
                                        I = !0 === k ? y.materials : null,
                                        N = u.vertices,
                                        F = u.faces,
                                        U = u.faceVertexUvs[0];
                                    U.length > 0 && (x = U);
                                    for (var B = 0, G = F.length; B < G; B++) {
                                        var z = F[B],
                                            V = !0 === k ? I[z.materialIndex] : y;
                                        if (void 0 !== V) {
                                            if (((O = N[z.a]), (L = N[z.b]), (j = N[z.c]), !0 === V.morphTargets)) {
                                                var H = u.morphTargets,
                                                    W = this.morphTargetInfluences;
                                                s.set(0, 0, 0), l.set(0, 0, 0), h.set(0, 0, 0);
                                                for (var X = 0, q = H.length; X < q; X++) {
                                                    var Y = W[X];
                                                    if (0 !== Y) {
                                                        var Z = H[X].vertices;
                                                        s.addScaledVector(d.subVectors(Z[z.a], O), Y), l.addScaledVector(p.subVectors(Z[z.b], L), Y), h.addScaledVector(f.subVectors(Z[z.c], j), Y);
                                                    }
                                                }
                                                s.add(O), l.add(L), h.add(j), (O = s), (L = l), (j = h);
                                            }
                                            if ((w = e(this, i, o, O, L, j, _))) {
                                                if (x) {
                                                    var J = x[B];
                                                    m.copy(J[0]), v.copy(J[1]), g.copy(J[2]), (w.uv = t(_, O, L, j, m, v, g));
                                                }
                                                (w.face = z), (w.faceIndex = B), c.push(w);
                                            }
                                        }
                                    }
                                }
                            }
                        };
                    })(),
                    clone: function () {
                        return new this.constructor(this.geometry, this.material).copy(this);
                    },
                })),
                (Dt.prototype = Object.create(Ct.prototype)),
                (Dt.prototype.constructor = Dt),
                (Ot.prototype = Object.create(Ct.prototype)),
                (Ot.prototype.constructor = Ot),
                (Lt.prototype = Object.create(ct.prototype)),
                (Lt.prototype.constructor = Lt),
                (Lt.prototype.isCamera = !0),
                (Lt.prototype.getWorldDirection = (function () {
                    var t = new l();
                    return function (e) {
                        var i = e || new c();
                        return this.getWorldQuaternion(t), i.set(0, 0, -1).applyQuaternion(t);
                    };
                })()),
                (Lt.prototype.lookAt = (function () {
                    var t = new u();
                    return function (e) {
                        t.lookAt(this.position, e, this.up), this.quaternion.setFromRotationMatrix(t);
                    };
                })()),
                (Lt.prototype.clone = function () {
                    return new this.constructor().copy(this);
                }),
                (Lt.prototype.copy = function (t) {
                    return ct.prototype.copy.call(this, t), this.matrixWorldInverse.copy(t.matrixWorldInverse), this.projectionMatrix.copy(t.projectionMatrix), this;
                }),
                (jt.prototype = Object.assign(Object.create(Lt.prototype), {
                    constructor: jt,
                    isPerspectiveCamera: !0,
                    copy: function (t) {
                        return (
                            Lt.prototype.copy.call(this, t),
                            (this.fov = t.fov),
                            (this.zoom = t.zoom),
                            (this.near = t.near),
                            (this.far = t.far),
                            (this.focus = t.focus),
                            (this.aspect = t.aspect),
                            (this.view = null === t.view ? null : Object.assign({}, t.view)),
                            (this.filmGauge = t.filmGauge),
                            (this.filmOffset = t.filmOffset),
                            this
                        );
                    },
                    setFocalLength: function (t) {
                        var e = (0.5 * this.getFilmHeight()) / t;
                        (this.fov = 2 * Ma.RAD2DEG * Math.atan(e)), this.updateProjectionMatrix();
                    },
                    getFocalLength: function () {
                        var t = Math.tan(0.5 * Ma.DEG2RAD * this.fov);
                        return (0.5 * this.getFilmHeight()) / t;
                    },
                    getEffectiveFOV: function () {
                        return 2 * Ma.RAD2DEG * Math.atan(Math.tan(0.5 * Ma.DEG2RAD * this.fov) / this.zoom);
                    },
                    getFilmWidth: function () {
                        return this.filmGauge * Math.min(this.aspect, 1);
                    },
                    getFilmHeight: function () {
                        return this.filmGauge / Math.max(this.aspect, 1);
                    },
                    setViewOffset: function (t, e, i, n, r, o) {
                        (this.aspect = t / e), (this.view = { fullWidth: t, fullHeight: e, offsetX: i, offsetY: n, width: r, height: o }), this.updateProjectionMatrix();
                    },
                    clearViewOffset: function () {
                        (this.view = null), this.updateProjectionMatrix();
                    },
                    updateProjectionMatrix: function () {
                        var t = this.near,
                            e = (t * Math.tan(0.5 * Ma.DEG2RAD * this.fov)) / this.zoom,
                            i = 2 * e,
                            n = this.aspect * i,
                            r = -0.5 * n,
                            o = this.view;
                        if (null !== o) {
                            var a = o.fullWidth,
                                s = o.fullHeight;
                            (r += (o.offsetX * n) / a), (e -= (o.offsetY * i) / s), (n *= o.width / a), (i *= o.height / s);
                        }
                        var l = this.filmOffset;
                        0 !== l && (r += (t * l) / this.getFilmWidth()), this.projectionMatrix.makeFrustum(r, r + n, e - i, e, t, this.far);
                    },
                    toJSON: function (t) {
                        var e = ct.prototype.toJSON.call(this, t);
                        return (
                            (e.object.fov = this.fov),
                            (e.object.zoom = this.zoom),
                            (e.object.near = this.near),
                            (e.object.far = this.far),
                            (e.object.focus = this.focus),
                            (e.object.aspect = this.aspect),
                            null !== this.view && (e.object.view = Object.assign({}, this.view)),
                            (e.object.filmGauge = this.filmGauge),
                            (e.object.filmOffset = this.filmOffset),
                            e
                        );
                    },
                })),
                (kt.prototype = Object.assign(Object.create(Lt.prototype), {
                    constructor: kt,
                    isOrthographicCamera: !0,
                    copy: function (t) {
                        return (
                            Lt.prototype.copy.call(this, t),
                            (this.left = t.left),
                            (this.right = t.right),
                            (this.top = t.top),
                            (this.bottom = t.bottom),
                            (this.near = t.near),
                            (this.far = t.far),
                            (this.zoom = t.zoom),
                            (this.view = null === t.view ? null : Object.assign({}, t.view)),
                            this
                        );
                    },
                    setViewOffset: function (t, e, i, n, r, o) {
                        (this.view = { fullWidth: t, fullHeight: e, offsetX: i, offsetY: n, width: r, height: o }), this.updateProjectionMatrix();
                    },
                    clearViewOffset: function () {
                        (this.view = null), this.updateProjectionMatrix();
                    },
                    updateProjectionMatrix: function () {
                        var t = (this.right - this.left) / (2 * this.zoom),
                            e = (this.top - this.bottom) / (2 * this.zoom),
                            i = (this.right + this.left) / 2,
                            n = (this.top + this.bottom) / 2,
                            r = i - t,
                            o = i + t,
                            a = n + e,
                            s = n - e;
                        if (null !== this.view) {
                            var l = this.zoom / (this.view.width / this.view.fullWidth),
                                c = this.zoom / (this.view.height / this.view.fullHeight),
                                u = (this.right - this.left) / this.view.width,
                                h = (this.top - this.bottom) / this.view.height;
                            (r += u * (this.view.offsetX / l)), (o = r + u * (this.view.width / l)), (a -= h * (this.view.offsetY / c)), (s = a - h * (this.view.height / c));
                        }
                        this.projectionMatrix.makeOrthographic(r, o, a, s, this.near, this.far);
                    },
                    toJSON: function (t) {
                        var e = ct.prototype.toJSON.call(this, t);
                        return (
                            (e.object.zoom = this.zoom),
                            (e.object.left = this.left),
                            (e.object.right = this.right),
                            (e.object.top = this.top),
                            (e.object.bottom = this.bottom),
                            (e.object.near = this.near),
                            (e.object.far = this.far),
                            null !== this.view && (e.object.view = Object.assign({}, this.view)),
                            e
                        );
                    },
                }));
            var Ba = 0;
            (ce.prototype.isFogExp2 = !0),
                (ce.prototype.clone = function () {
                    return new ce(this.color.getHex(), this.density);
                }),
                (ce.prototype.toJSON = function (t) {
                    return { type: "FogExp2", color: this.color.getHex(), density: this.density };
                }),
                (ue.prototype.isFog = !0),
                (ue.prototype.clone = function () {
                    return new ue(this.color.getHex(), this.near, this.far);
                }),
                (ue.prototype.toJSON = function (t) {
                    return { type: "Fog", color: this.color.getHex(), near: this.near, far: this.far };
                }),
                (he.prototype = Object.create(ct.prototype)),
                (he.prototype.constructor = he),
                (he.prototype.copy = function (t, e) {
                    return (
                        ct.prototype.copy.call(this, t, e),
                        null !== t.background && (this.background = t.background.clone()),
                        null !== t.fog && (this.fog = t.fog.clone()),
                        null !== t.overrideMaterial && (this.overrideMaterial = t.overrideMaterial.clone()),
                        (this.autoUpdate = t.autoUpdate),
                        (this.matrixAutoUpdate = t.matrixAutoUpdate),
                        this
                    );
                }),
                (he.prototype.toJSON = function (t) {
                    var e = ct.prototype.toJSON.call(this, t);
                    return null !== this.background && (e.object.background = this.background.toJSON(t)), null !== this.fog && (e.object.fog = this.fog.toJSON()), e;
                }),
                (de.prototype = Object.assign(Object.create(ct.prototype), {
                    constructor: de,
                    isLensFlare: !0,
                    copy: function (t) {
                        ct.prototype.copy.call(this, t), this.positionScreen.copy(t.positionScreen), (this.customUpdateCallback = t.customUpdateCallback);
                        for (var e = 0, i = t.lensFlares.length; e < i; e++) this.lensFlares.push(t.lensFlares[e]);
                        return this;
                    },
                    add: function (t, e, i, n, r, o) {
                        void 0 === e && (e = -1),
                            void 0 === i && (i = 0),
                            void 0 === o && (o = 1),
                            void 0 === r && (r = new X(16777215)),
                            void 0 === n && (n = Or),
                            (i = Math.min(i, Math.max(0, i))),
                            this.lensFlares.push({ texture: t, size: e, distance: i, x: 0, y: 0, z: 0, scale: 1, rotation: 0, opacity: o, color: r, blending: n });
                    },
                    updateLensFlares: function () {
                        var t,
                            e,
                            i = this.lensFlares.length,
                            n = 2 * -this.positionScreen.x,
                            r = 2 * -this.positionScreen.y;
                        for (t = 0; t < i; t++)
                            (e = this.lensFlares[t]),
                                (e.x = this.positionScreen.x + n * e.distance),
                                (e.y = this.positionScreen.y + r * e.distance),
                                (e.wantedRotation = e.x * Math.PI * 0.25),
                                (e.rotation += 0.25 * (e.wantedRotation - e.rotation));
                    },
                })),
                (pe.prototype = Object.create(J.prototype)),
                (pe.prototype.constructor = pe),
                (pe.prototype.copy = function (t) {
                    return J.prototype.copy.call(this, t), this.color.copy(t.color), (this.map = t.map), (this.rotation = t.rotation), this;
                }),
                (fe.prototype = Object.assign(Object.create(ct.prototype), {
                    constructor: fe,
                    isSprite: !0,
                    raycast: (function () {
                        var t = new c();
                        return function (e, i) {
                            t.setFromMatrixPosition(this.matrixWorld);
                            var n = e.ray.distanceSqToPoint(t);
                            n > (this.scale.x * this.scale.y) / 4 || i.push({ distance: Math.sqrt(n), point: this.position, face: null, object: this });
                        };
                    })(),
                    clone: function () {
                        return new this.constructor(this.material).copy(this);
                    },
                })),
                (me.prototype = Object.assign(Object.create(ct.prototype), {
                    constructor: me,
                    copy: function (t) {
                        ct.prototype.copy.call(this, t, !1);
                        for (var e = t.levels, i = 0, n = e.length; i < n; i++) {
                            var r = e[i];
                            this.addLevel(r.object.clone(), r.distance);
                        }
                        return this;
                    },
                    addLevel: function (t, e) {
                        void 0 === e && (e = 0), (e = Math.abs(e));
                        for (var i = this.levels, n = 0; n < i.length && !(e < i[n].distance); n++);
                        i.splice(n, 0, { distance: e, object: t }), this.add(t);
                    },
                    getObjectForDistance: function (t) {
                        for (var e = this.levels, i = 1, n = e.length; i < n && !(t < e[i].distance); i++);
                        return e[i - 1].object;
                    },
                    raycast: (function () {
                        var t = new c();
                        return function (e, i) {
                            t.setFromMatrixPosition(this.matrixWorld);
                            var n = e.ray.origin.distanceTo(t);
                            this.getObjectForDistance(n).raycast(e, i);
                        };
                    })(),
                    update: (function () {
                        var t = new c(),
                            e = new c();
                        return function (i) {
                            var n = this.levels;
                            if (n.length > 1) {
                                t.setFromMatrixPosition(i.matrixWorld), e.setFromMatrixPosition(this.matrixWorld);
                                var r = t.distanceTo(e);
                                n[0].object.visible = !0;
                                for (var o = 1, a = n.length; o < a && r >= n[o].distance; o++) (n[o - 1].object.visible = !1), (n[o].object.visible = !0);
                                for (; o < a; o++) n[o].object.visible = !1;
                            }
                        };
                    })(),
                    toJSON: function (t) {
                        var e = ct.prototype.toJSON.call(this, t);
                        e.object.levels = [];
                        for (var i = this.levels, n = 0, r = i.length; n < r; n++) {
                            var o = i[n];
                            e.object.levels.push({ object: o.object.uuid, distance: o.distance });
                        }
                        return e;
                    },
                })),
                (ve.prototype = Object.create(n.prototype)),
                (ve.prototype.constructor = ve),
                (ve.prototype.isDataTexture = !0),
                Object.assign(ge.prototype, {
                    calculateInverses: function () {
                        this.boneInverses = [];
                        for (var t = 0, e = this.bones.length; t < e; t++) {
                            var i = new u();
                            this.bones[t] && i.getInverse(this.bones[t].matrixWorld), this.boneInverses.push(i);
                        }
                    },
                    pose: function () {
                        for (var t, e = 0, i = this.bones.length; e < i; e++) (t = this.bones[e]) && t.matrixWorld.getInverse(this.boneInverses[e]);
                        for (var e = 0, i = this.bones.length; e < i; e++)
                            (t = this.bones[e]) &&
                                (t.parent && t.parent.isBone ? (t.matrix.getInverse(t.parent.matrixWorld), t.matrix.multiply(t.matrixWorld)) : t.matrix.copy(t.matrixWorld), t.matrix.decompose(t.position, t.quaternion, t.scale));
                    },
                    update: (function () {
                        var t = new u();
                        return function () {
                            for (var e = 0, i = this.bones.length; e < i; e++) {
                                var n = this.bones[e] ? this.bones[e].matrixWorld : this.identityMatrix;
                                t.multiplyMatrices(n, this.boneInverses[e]), t.toArray(this.boneMatrices, 16 * e);
                            }
                            this.useVertexTexture && (this.boneTexture.needsUpdate = !0);
                        };
                    })(),
                    clone: function () {
                        return new ge(this.bones, this.boneInverses, this.useVertexTexture);
                    },
                }),
                (ye.prototype = Object.assign(Object.create(ct.prototype), {
                    constructor: ye,
                    isBone: !0,
                    copy: function (t) {
                        return ct.prototype.copy.call(this, t), (this.skin = t.skin), this;
                    },
                })),
                (_e.prototype = Object.assign(Object.create(Pt.prototype), {
                    constructor: _e,
                    isSkinnedMesh: !0,
                    bind: function (t, e) {
                        (this.skeleton = t), void 0 === e && (this.updateMatrixWorld(!0), this.skeleton.calculateInverses(), (e = this.matrixWorld)), this.bindMatrix.copy(e), this.bindMatrixInverse.getInverse(e);
                    },
                    pose: function () {
                        this.skeleton.pose();
                    },
                    normalizeSkinWeights: function () {
                        if (this.geometry && this.geometry.isGeometry)
                            for (var t = 0; t < this.geometry.skinWeights.length; t++) {
                                var e = this.geometry.skinWeights[t],
                                    i = 1 / e.lengthManhattan();
                                i !== 1 / 0 ? e.multiplyScalar(i) : e.set(1, 0, 0, 0);
                            }
                        else if (this.geometry && this.geometry.isBufferGeometry)
                            for (var n = new o(), r = this.geometry.attributes.skinWeight, t = 0; t < r.count; t++) {
                                (n.x = r.getX(t)), (n.y = r.getY(t)), (n.z = r.getZ(t)), (n.w = r.getW(t));
                                var i = 1 / n.lengthManhattan();
                                i !== 1 / 0 ? n.multiplyScalar(i) : n.set(1, 0, 0, 0), r.setXYZW(t, n.x, n.y, n.z, n.w);
                            }
                    },
                    updateMatrixWorld: function (t) {
                        Pt.prototype.updateMatrixWorld.call(this, !0),
                            "attached" === this.bindMode
                                ? this.bindMatrixInverse.getInverse(this.matrixWorld)
                                : "detached" === this.bindMode
                                ? this.bindMatrixInverse.getInverse(this.bindMatrix)
                                : console.warn("THREE.SkinnedMesh unrecognized bindMode: " + this.bindMode);
                    },
                    clone: function () {
                        return new this.constructor(this.geometry, this.material, this.skeleton.useVertexTexture).copy(this);
                    },
                })),
                (be.prototype = Object.create(J.prototype)),
                (be.prototype.constructor = be),
                (be.prototype.isLineBasicMaterial = !0),
                (be.prototype.copy = function (t) {
                    return J.prototype.copy.call(this, t), this.color.copy(t.color), (this.linewidth = t.linewidth), (this.linecap = t.linecap), (this.linejoin = t.linejoin), this;
                }),
                (xe.prototype = Object.assign(Object.create(ct.prototype), {
                    constructor: xe,
                    isLine: !0,
                    raycast: (function () {
                        var t = new u(),
                            e = new at(),
                            i = new et();
                        return function (n, r) {
                            var o = n.linePrecision,
                                a = o * o,
                                s = this.geometry,
                                l = this.matrixWorld;
                            if ((null === s.boundingSphere && s.computeBoundingSphere(), i.copy(s.boundingSphere), i.applyMatrix4(l), !1 !== n.ray.intersectsSphere(i))) {
                                t.getInverse(l), e.copy(n.ray).applyMatrix4(t);
                                var u = new c(),
                                    h = new c(),
                                    d = new c(),
                                    p = new c(),
                                    f = this && this.isLineSegments ? 2 : 1;
                                if (s && s.isBufferGeometry) {
                                    var m = s.index,
                                        v = s.attributes,
                                        g = v.position.array;
                                    if (null !== m)
                                        for (var y = m.array, _ = 0, b = y.length - 1; _ < b; _ += f) {
                                            var x = y[_],
                                                w = y[_ + 1];
                                            u.fromArray(g, 3 * x), h.fromArray(g, 3 * w);
                                            var T = e.distanceSqToSegment(u, h, p, d);
                                            if (!(T > a)) {
                                                p.applyMatrix4(this.matrixWorld);
                                                var E = n.ray.origin.distanceTo(p);
                                                E < n.near || E > n.far || r.push({ distance: E, point: d.clone().applyMatrix4(this.matrixWorld), index: _, face: null, faceIndex: null, object: this });
                                            }
                                        }
                                    else
                                        for (var _ = 0, b = g.length / 3 - 1; _ < b; _ += f) {
                                            u.fromArray(g, 3 * _), h.fromArray(g, 3 * _ + 3);
                                            var T = e.distanceSqToSegment(u, h, p, d);
                                            if (!(T > a)) {
                                                p.applyMatrix4(this.matrixWorld);
                                                var E = n.ray.origin.distanceTo(p);
                                                E < n.near || E > n.far || r.push({ distance: E, point: d.clone().applyMatrix4(this.matrixWorld), index: _, face: null, faceIndex: null, object: this });
                                            }
                                        }
                                } else if (s && s.isGeometry)
                                    for (var M = s.vertices, S = M.length, _ = 0; _ < S - 1; _ += f) {
                                        var T = e.distanceSqToSegment(M[_], M[_ + 1], p, d);
                                        if (!(T > a)) {
                                            p.applyMatrix4(this.matrixWorld);
                                            var E = n.ray.origin.distanceTo(p);
                                            E < n.near || E > n.far || r.push({ distance: E, point: d.clone().applyMatrix4(this.matrixWorld), index: _, face: null, faceIndex: null, object: this });
                                        }
                                    }
                            }
                        };
                    })(),
                    clone: function () {
                        return new this.constructor(this.geometry, this.material).copy(this);
                    },
                })),
                (we.prototype = Object.assign(Object.create(xe.prototype), { constructor: we, isLineSegments: !0 })),
                (Te.prototype = Object.create(J.prototype)),
                (Te.prototype.constructor = Te),
                (Te.prototype.isPointsMaterial = !0),
                (Te.prototype.copy = function (t) {
                    return J.prototype.copy.call(this, t), this.color.copy(t.color), (this.map = t.map), (this.size = t.size), (this.sizeAttenuation = t.sizeAttenuation), this;
                }),
                (Ee.prototype = Object.assign(Object.create(ct.prototype), {
                    constructor: Ee,
                    isPoints: !0,
                    raycast: (function () {
                        var t = new u(),
                            e = new at(),
                            i = new et();
                        return function (n, r) {
                            function o(t, i) {
                                var o = e.distanceSqToPoint(t);
                                if (o < d) {
                                    var s = e.closestPointToPoint(t);
                                    s.applyMatrix4(l);
                                    var c = n.ray.origin.distanceTo(s);
                                    if (c < n.near || c > n.far) return;
                                    r.push({ distance: c, distanceToRay: Math.sqrt(o), point: s.clone(), index: i, face: null, object: a });
                                }
                            }
                            var a = this,
                                s = this.geometry,
                                l = this.matrixWorld,
                                u = n.params.Points.threshold;
                            if ((null === s.boundingSphere && s.computeBoundingSphere(), i.copy(s.boundingSphere), i.applyMatrix4(l), !1 !== n.ray.intersectsSphere(i))) {
                                t.getInverse(l), e.copy(n.ray).applyMatrix4(t);
                                var h = u / ((this.scale.x + this.scale.y + this.scale.z) / 3),
                                    d = h * h,
                                    p = new c();
                                if (s && s.isBufferGeometry) {
                                    var f = s.index,
                                        m = s.attributes,
                                        v = m.position.array;
                                    if (null !== f)
                                        for (var g = f.array, y = 0, _ = g.length; y < _; y++) {
                                            var b = g[y];
                                            p.fromArray(v, 3 * b), o(p, b);
                                        }
                                    else for (var y = 0, x = v.length / 3; y < x; y++) p.fromArray(v, 3 * y), o(p, y);
                                } else for (var w = s.vertices, y = 0, x = w.length; y < x; y++) o(w[y], y);
                            }
                        };
                    })(),
                    clone: function () {
                        return new this.constructor(this.geometry, this.material).copy(this);
                    },
                })),
                (Me.prototype = Object.assign(Object.create(ct.prototype), { constructor: Me })),
                (Se.prototype = Object.create(n.prototype)),
                (Se.prototype.constructor = Se),
                (Ae.prototype = Object.create(n.prototype)),
                (Ae.prototype.constructor = Ae),
                (Ae.prototype.isCompressedTexture = !0),
                (Re.prototype = Object.create(n.prototype)),
                (Re.prototype.constructor = Re),
                (Ce.prototype = Object.create(n.prototype)),
                (Ce.prototype.constructor = Ce),
                (Ce.prototype.isDepthTexture = !0),
                (Pe.prototype = Object.create(Ct.prototype)),
                (Pe.prototype.constructor = Pe),
                (De.prototype = Object.create(Ct.prototype)),
                (De.prototype.constructor = De),
                (Oe.prototype = Object.create(St.prototype)),
                (Oe.prototype.constructor = Oe),
                (Le.prototype = Object.create(Ct.prototype)),
                (Le.prototype.constructor = Le),
                (je.prototype = Object.create(Le.prototype)),
                (je.prototype.constructor = je),
                (ke.prototype = Object.create(St.prototype)),
                (ke.prototype.constructor = ke),
                (Ie.prototype = Object.create(Le.prototype)),
                (Ie.prototype.constructor = Ie),
                (Ne.prototype = Object.create(St.prototype)),
                (Ne.prototype.constructor = Ne),
                (Fe.prototype = Object.create(Le.prototype)),
                (Fe.prototype.constructor = Fe),
                (Ue.prototype = Object.create(St.prototype)),
                (Ue.prototype.constructor = Ue),
                (Be.prototype = Object.create(Le.prototype)),
                (Be.prototype.constructor = Be),
                (Ge.prototype = Object.create(St.prototype)),
                (Ge.prototype.constructor = Ge),
                (ze.prototype = Object.create(St.prototype)),
                (ze.prototype.constructor = ze),
                (Ve.prototype = Object.create(Ct.prototype)),
                (Ve.prototype.constructor = Ve),
                (He.prototype = Object.create(St.prototype)),
                (He.prototype.constructor = He),
                (We.prototype = Object.create(Ct.prototype)),
                (We.prototype.constructor = We),
                (Xe.prototype = Object.create(St.prototype)),
                (Xe.prototype.constructor = Xe),
                (qe.prototype = Object.create(Ct.prototype)),
                (qe.prototype.constructor = qe),
                (Ye.prototype = Object.create(St.prototype)),
                (Ye.prototype.constructor = Ye);
            var Ga = {
                area: function (t) {
                    for (var e = t.length, i = 0, n = e - 1, r = 0; r < e; n = r++) i += t[n].x * t[r].y - t[r].x * t[n].y;
                    return 0.5 * i;
                },
                triangulate: (function () {
                    function t(t, e, i, n, r, o) {
                        var a, s, l, c, u, h, d, p, f;
                        if (((s = t[o[e]].x), (l = t[o[e]].y), (c = t[o[i]].x), (u = t[o[i]].y), (h = t[o[n]].x), (d = t[o[n]].y), (c - s) * (d - l) - (u - l) * (h - s) <= 0)) return !1;
                        var m, v, g, y, _, b, x, w, T, E, M, S, A, R, C;
                        for (m = h - c, v = d - u, g = s - h, y = l - d, _ = c - s, b = u - l, a = 0; a < r; a++)
                            if (
                                ((p = t[o[a]].x),
                                (f = t[o[a]].y),
                                !((p === s && f === l) || (p === c && f === u) || (p === h && f === d)) &&
                                    ((x = p - s),
                                    (w = f - l),
                                    (T = p - c),
                                    (E = f - u),
                                    (M = p - h),
                                    (S = f - d),
                                    (C = m * E - v * T),
                                    (A = _ * w - b * x),
                                    (R = g * S - y * M),
                                    C >= -Number.EPSILON && R >= -Number.EPSILON && A >= -Number.EPSILON))
                            )
                                return !1;
                        return !0;
                    }
                    return function (e, i) {
                        var n = e.length;
                        if (n < 3) return null;
                        var r,
                            o,
                            a,
                            s = [],
                            l = [],
                            c = [];
                        if (Ga.area(e) > 0) for (o = 0; o < n; o++) l[o] = o;
                        else for (o = 0; o < n; o++) l[o] = n - 1 - o;
                        var u = n,
                            h = 2 * u;
                        for (o = u - 1; u > 2; ) {
                            if (h-- <= 0) return console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()"), i ? c : s;
                            if (((r = o), u <= r && (r = 0), (o = r + 1), u <= o && (o = 0), (a = o + 1), u <= a && (a = 0), t(e, r, o, a, u, l))) {
                                var d, p, f, m, v;
                                for (d = l[r], p = l[o], f = l[a], s.push([e[d], e[p], e[f]]), c.push([l[r], l[o], l[a]]), m = o, v = o + 1; v < u; m++, v++) l[m] = l[v];
                                u--, (h = 2 * u);
                            }
                        }
                        return i ? c : s;
                    };
                })(),
                triangulateShape: function (t, e) {
                    function i(t) {
                        var e = t.length;
                        e > 2 && t[e - 1].equals(t[0]) && t.pop();
                    }
                    function n(t, e, i) {
                        return t.x !== e.x ? (t.x < e.x ? t.x <= i.x && i.x <= e.x : e.x <= i.x && i.x <= t.x) : t.y < e.y ? t.y <= i.y && i.y <= e.y : e.y <= i.y && i.y <= t.y;
                    }
                    function r(t, e, i, r, o) {
                        var a = e.x - t.x,
                            s = e.y - t.y,
                            l = r.x - i.x,
                            c = r.y - i.y,
                            u = t.x - i.x,
                            h = t.y - i.y,
                            d = s * l - a * c,
                            p = s * u - a * h;
                        if (Math.abs(d) > Number.EPSILON) {
                            var f;
                            if (d > 0) {
                                if (p < 0 || p > d) return [];
                                if ((f = c * u - l * h) < 0 || f > d) return [];
                            } else {
                                if (p > 0 || p < d) return [];
                                if ((f = c * u - l * h) > 0 || f < d) return [];
                            }
                            if (0 === f) return !o || (0 !== p && p !== d) ? [t] : [];
                            if (f === d) return !o || (0 !== p && p !== d) ? [e] : [];
                            if (0 === p) return [i];
                            if (p === d) return [r];
                            var m = f / d;
                            return [{ x: t.x + m * a, y: t.y + m * s }];
                        }
                        if (0 !== p || c * u != l * h) return [];
                        var v = 0 === a && 0 === s,
                            g = 0 === l && 0 === c;
                        if (v && g) return t.x !== i.x || t.y !== i.y ? [] : [t];
                        if (v) return n(i, r, t) ? [t] : [];
                        if (g) return n(t, e, i) ? [i] : [];
                        var y, _, b, x, w, T, E, M;
                        return (
                            0 !== a
                                ? (t.x < e.x ? ((y = t), (b = t.x), (_ = e), (x = e.x)) : ((y = e), (b = e.x), (_ = t), (x = t.x)), i.x < r.x ? ((w = i), (E = i.x), (T = r), (M = r.x)) : ((w = r), (E = r.x), (T = i), (M = i.x)))
                                : (t.y < e.y ? ((y = t), (b = t.y), (_ = e), (x = e.y)) : ((y = e), (b = e.y), (_ = t), (x = t.y)), i.y < r.y ? ((w = i), (E = i.y), (T = r), (M = r.y)) : ((w = r), (E = r.y), (T = i), (M = i.y))),
                            b <= E ? (x < E ? [] : x === E ? (o ? [] : [w]) : x <= M ? [w, _] : [w, T]) : b > M ? [] : b === M ? (o ? [] : [y]) : x <= M ? [y, _] : [y, T]
                        );
                    }
                    function o(t, e, i, n) {
                        var r = e.x - t.x,
                            o = e.y - t.y,
                            a = i.x - t.x,
                            s = i.y - t.y,
                            l = n.x - t.x,
                            c = n.y - t.y,
                            u = r * s - o * a,
                            h = r * c - o * l;
                        if (Math.abs(u) > Number.EPSILON) {
                            var d = l * s - c * a;
                            return u > 0 ? h >= 0 && d >= 0 : h >= 0 || d >= 0;
                        }
                        return h > 0;
                    }
                    i(t), e.forEach(i);
                    for (var a, s, l, c, u, h, d = {}, p = t.concat(), f = 0, m = e.length; f < m; f++) Array.prototype.push.apply(p, e[f]);
                    for (a = 0, s = p.length; a < s; a++) (u = p[a].x + ":" + p[a].y), void 0 !== d[u] && console.warn("THREE.ShapeUtils: Duplicate point", u, a), (d[u] = a);
                    var v = (function (t, e) {
                            for (var i, n, a, s, l, c, u, h, d, p, f, m = t.concat(), v = [], g = [], y = 0, _ = e.length; y < _; y++) v.push(y);
                            for (var b = 0, x = 2 * v.length; v.length > 0; ) {
                                if (--x < 0) {
                                    console.log("Infinite Loop! Holes left:" + v.length + ", Probably Hole outside Shape!");
                                    break;
                                }
                                for (a = b; a < m.length; a++) {
                                    (s = m[a]), (n = -1);
                                    for (var y = 0; y < v.length; y++)
                                        if (((c = v[y]), (u = s.x + ":" + s.y + ":" + c), void 0 === g[u])) {
                                            i = e[c];
                                            for (var w = 0; w < i.length; w++)
                                                if (
                                                    ((l = i[w]),
                                                    (function (t, e) {
                                                        var n = m.length - 1,
                                                            r = t - 1;
                                                        r < 0 && (r = n);
                                                        var a = t + 1;
                                                        a > n && (a = 0);
                                                        var s = o(m[t], m[r], m[a], i[e]);
                                                        if (!s) return !1;
                                                        var l = i.length - 1,
                                                            c = e - 1;
                                                        c < 0 && (c = l);
                                                        var u = e + 1;
                                                        return u > l && (u = 0), !!(s = o(i[e], i[c], i[u], m[t]));
                                                    })(a, w) &&
                                                        !(function (t, e) {
                                                            var i, n, o;
                                                            for (i = 0; i < m.length; i++) if (((n = i + 1), (n %= m.length), (o = r(t, e, m[i], m[n], !0)), o.length > 0)) return !0;
                                                            return !1;
                                                        })(s, l) &&
                                                        !(function (t, i) {
                                                            var n, o, a, s, l;
                                                            for (n = 0; n < v.length; n++) for (o = e[v[n]], a = 0; a < o.length; a++) if (((s = a + 1), (s %= o.length), (l = r(t, i, o[a], o[s], !0)), l.length > 0)) return !0;
                                                            return !1;
                                                        })(s, l))
                                                ) {
                                                    (n = w), v.splice(y, 1), (h = m.slice(0, a + 1)), (d = m.slice(a)), (p = i.slice(n)), (f = i.slice(0, n + 1)), (m = h.concat(p).concat(f).concat(d)), (b = a);
                                                    break;
                                                }
                                            if (n >= 0) break;
                                            g[u] = !0;
                                        }
                                    if (n >= 0) break;
                                }
                            }
                            return m;
                        })(t, e),
                        g = Ga.triangulate(v, !1);
                    for (a = 0, s = g.length; a < s; a++) for (c = g[a], l = 0; l < 3; l++) (u = c[l].x + ":" + c[l].y), void 0 !== (h = d[u]) && (c[l] = h);
                    return g.concat();
                },
                isClockWise: function (t) {
                    return Ga.area(t) < 0;
                },
                b2: (function () {
                    function t(t, e) {
                        var i = 1 - t;
                        return i * i * e;
                    }
                    function e(t, e) {
                        return 2 * (1 - t) * t * e;
                    }
                    function i(t, e) {
                        return t * t * e;
                    }
                    return function (n, r, o, a) {
                        return t(n, r) + e(n, o) + i(n, a);
                    };
                })(),
                b3: (function () {
                    function t(t, e) {
                        var i = 1 - t;
                        return i * i * i * e;
                    }
                    function e(t, e) {
                        var i = 1 - t;
                        return 3 * i * i * t * e;
                    }
                    function i(t, e) {
                        return 3 * (1 - t) * t * t * e;
                    }
                    function n(t, e) {
                        return t * t * t * e;
                    }
                    return function (r, o, a, s, l) {
                        return t(r, o) + e(r, a) + i(r, s) + n(r, l);
                    };
                })(),
            };
            (Ze.prototype = Object.create(St.prototype)),
                (Ze.prototype.constructor = Ze),
                (Ze.prototype.addShapeList = function (t, e) {
                    for (var i = t.length, n = 0; n < i; n++) {
                        var r = t[n];
                        this.addShape(r, e);
                    }
                }),
                (Ze.prototype.addShape = function (t, e) {
                    function n(t, e, i) {
                        return e || console.error("THREE.ExtrudeGeometry: vec does not exist"), e.clone().multiplyScalar(i).add(t);
                    }
                    function r(t, e, n) {
                        var r,
                            o,
                            a = 1,
                            s = t.x - e.x,
                            l = t.y - e.y,
                            c = n.x - t.x,
                            u = n.y - t.y,
                            h = s * s + l * l,
                            d = s * u - l * c;
                        if (Math.abs(d) > Number.EPSILON) {
                            var p = Math.sqrt(h),
                                f = Math.sqrt(c * c + u * u),
                                m = e.x - l / p,
                                v = e.y + s / p,
                                g = n.x - u / f,
                                y = n.y + c / f,
                                _ = ((g - m) * u - (y - v) * c) / (s * u - l * c);
                            (r = m + s * _ - t.x), (o = v + l * _ - t.y);
                            var b = r * r + o * o;
                            if (b <= 2) return new i(r, o);
                            a = Math.sqrt(b / 2);
                        } else {
                            var x = !1;
                            s > Number.EPSILON ? c > Number.EPSILON && (x = !0) : s < -Number.EPSILON ? c < -Number.EPSILON && (x = !0) : Math.sign(l) === Math.sign(u) && (x = !0),
                                x ? ((r = -l), (o = s), (a = Math.sqrt(h))) : ((r = s), (o = l), (a = Math.sqrt(h / 2)));
                        }
                        return new i(r / a, o / a);
                    }
                    function o(t, e) {
                        var i, n;
                        for (W = t.length; --W >= 0; ) {
                            (i = W), (n = W - 1), n < 0 && (n = t.length - 1);
                            var r = 0,
                                o = x + 2 * y;
                            for (r = 0; r < o; r++) {
                                var a = z * r,
                                    s = z * (r + 1);
                                l(e + i + a, e + n + a, e + n + s, e + i + s, t, r, o, i, n);
                            }
                        }
                    }
                    function a(t, e, i) {
                        R.vertices.push(new c(t, e, i));
                    }
                    function s(t, e, i) {
                        (t += C), (e += C), (i += C), R.faces.push(new pt(t, e, i, null, null, 0));
                        var n = E.generateTopUV(R, t, e, i);
                        R.faceVertexUvs[0].push(n);
                    }
                    function l(t, e, i, n, r, o, a, s, l) {
                        (t += C), (e += C), (i += C), (n += C), R.faces.push(new pt(t, e, n, null, null, 1)), R.faces.push(new pt(e, i, n, null, null, 1));
                        var c = E.generateSideWallUV(R, t, e, i, n);
                        R.faceVertexUvs[0].push([c[0], c[1], c[3]]), R.faceVertexUvs[0].push([c[1], c[2], c[3]]);
                    }
                    var u,
                        h,
                        d,
                        p,
                        f,
                        m = void 0 !== e.amount ? e.amount : 100,
                        v = void 0 !== e.bevelThickness ? e.bevelThickness : 6,
                        g = void 0 !== e.bevelSize ? e.bevelSize : v - 2,
                        y = void 0 !== e.bevelSegments ? e.bevelSegments : 3,
                        _ = void 0 === e.bevelEnabled || e.bevelEnabled,
                        b = void 0 !== e.curveSegments ? e.curveSegments : 12,
                        x = void 0 !== e.steps ? e.steps : 1,
                        w = e.extrudePath,
                        T = !1,
                        E = void 0 !== e.UVGenerator ? e.UVGenerator : Ze.WorldUVGenerator;
                    w && ((u = w.getSpacedPoints(x)), (T = !0), (_ = !1), (h = void 0 !== e.frames ? e.frames : w.computeFrenetFrames(x, !1)), (d = new c()), (p = new c()), (f = new c())), _ || ((y = 0), (v = 0), (g = 0));
                    var M,
                        S,
                        A,
                        R = this,
                        C = this.vertices.length,
                        P = t.extractPoints(b),
                        D = P.shape,
                        O = P.holes,
                        L = !Ga.isClockWise(D);
                    if (L) {
                        for (D = D.reverse(), S = 0, A = O.length; S < A; S++) (M = O[S]), Ga.isClockWise(M) && (O[S] = M.reverse());
                        L = !1;
                    }
                    var j = Ga.triangulateShape(D, O),
                        k = D;
                    for (S = 0, A = O.length; S < A; S++) (M = O[S]), (D = D.concat(M));
                    for (var I, N, F, U, B, G, z = D.length, V = j.length, H = [], W = 0, X = k.length, q = X - 1, Y = W + 1; W < X; W++, q++, Y++) q === X && (q = 0), Y === X && (Y = 0), (H[W] = r(k[W], k[q], k[Y]));
                    var Z,
                        J = [],
                        Q = H.concat();
                    for (S = 0, A = O.length; S < A; S++) {
                        for (M = O[S], Z = [], W = 0, X = M.length, q = X - 1, Y = W + 1; W < X; W++, q++, Y++) q === X && (q = 0), Y === X && (Y = 0), (Z[W] = r(M[W], M[q], M[Y]));
                        J.push(Z), (Q = Q.concat(Z));
                    }
                    for (I = 0; I < y; I++) {
                        for (F = I / y, U = v * Math.cos((F * Math.PI) / 2), N = g * Math.sin((F * Math.PI) / 2), W = 0, X = k.length; W < X; W++) (B = n(k[W], H[W], N)), a(B.x, B.y, -U);
                        for (S = 0, A = O.length; S < A; S++) for (M = O[S], Z = J[S], W = 0, X = M.length; W < X; W++) (B = n(M[W], Z[W], N)), a(B.x, B.y, -U);
                    }
                    for (N = g, W = 0; W < z; W++) (B = _ ? n(D[W], Q[W], N) : D[W]), T ? (p.copy(h.normals[0]).multiplyScalar(B.x), d.copy(h.binormals[0]).multiplyScalar(B.y), f.copy(u[0]).add(p).add(d), a(f.x, f.y, f.z)) : a(B.x, B.y, 0);
                    var $;
                    for ($ = 1; $ <= x; $++)
                        for (W = 0; W < z; W++)
                            (B = _ ? n(D[W], Q[W], N) : D[W]), T ? (p.copy(h.normals[$]).multiplyScalar(B.x), d.copy(h.binormals[$]).multiplyScalar(B.y), f.copy(u[$]).add(p).add(d), a(f.x, f.y, f.z)) : a(B.x, B.y, (m / x) * $);
                    for (I = y - 1; I >= 0; I--) {
                        for (F = I / y, U = v * Math.cos((F * Math.PI) / 2), N = g * Math.sin((F * Math.PI) / 2), W = 0, X = k.length; W < X; W++) (B = n(k[W], H[W], N)), a(B.x, B.y, m + U);
                        for (S = 0, A = O.length; S < A; S++) for (M = O[S], Z = J[S], W = 0, X = M.length; W < X; W++) (B = n(M[W], Z[W], N)), T ? a(B.x, B.y + u[x - 1].y, u[x - 1].x + U) : a(B.x, B.y, m + U);
                    }
                    !(function () {
                        if (_) {
                            var t = 0,
                                e = z * t;
                            for (W = 0; W < V; W++) (G = j[W]), s(G[2] + e, G[1] + e, G[0] + e);
                            for (t = x + 2 * y, e = z * t, W = 0; W < V; W++) (G = j[W]), s(G[0] + e, G[1] + e, G[2] + e);
                        } else {
                            for (W = 0; W < V; W++) (G = j[W]), s(G[2], G[1], G[0]);
                            for (W = 0; W < V; W++) (G = j[W]), s(G[0] + z * x, G[1] + z * x, G[2] + z * x);
                        }
                    })(),
                        (function () {
                            var t = 0;
                            for (o(k, t), t += k.length, S = 0, A = O.length; S < A; S++) (M = O[S]), o(M, t), (t += M.length);
                        })();
                }),
                (Ze.WorldUVGenerator = {
                    generateTopUV: function (t, e, n, r) {
                        var o = t.vertices,
                            a = o[e],
                            s = o[n],
                            l = o[r];
                        return [new i(a.x, a.y), new i(s.x, s.y), new i(l.x, l.y)];
                    },
                    generateSideWallUV: function (t, e, n, r, o) {
                        var a = t.vertices,
                            s = a[e],
                            l = a[n],
                            c = a[r],
                            u = a[o];
                        return Math.abs(s.y - l.y) < 0.01 ? [new i(s.x, 1 - s.z), new i(l.x, 1 - l.z), new i(c.x, 1 - c.z), new i(u.x, 1 - u.z)] : [new i(s.y, 1 - s.z), new i(l.y, 1 - l.z), new i(c.y, 1 - c.z), new i(u.y, 1 - u.z)];
                    },
                }),
                (Je.prototype = Object.create(Ze.prototype)),
                (Je.prototype.constructor = Je),
                (Qe.prototype = Object.create(Ct.prototype)),
                (Qe.prototype.constructor = Qe),
                ($e.prototype = Object.create(St.prototype)),
                ($e.prototype.constructor = $e),
                (Ke.prototype = Object.create(Ct.prototype)),
                (Ke.prototype.constructor = Ke),
                (ti.prototype = Object.create(St.prototype)),
                (ti.prototype.constructor = ti),
                (ei.prototype = Object.create(St.prototype)),
                (ei.prototype.constructor = ei),
                (ii.prototype = Object.create(Ct.prototype)),
                (ii.prototype.constructor = ii),
                (ni.prototype = Object.create(St.prototype)),
                (ni.prototype.constructor = ni),
                (ri.prototype = Object.create(St.prototype)),
                (ri.prototype.constructor = ri),
                (ri.prototype.addShapeList = function (t, e) {
                    for (var i = 0, n = t.length; i < n; i++) this.addShape(t[i], e);
                    return this;
                }),
                (ri.prototype.addShape = function (t, e) {
                    void 0 === e && (e = {});
                    var i,
                        n,
                        r,
                        o = void 0 !== e.curveSegments ? e.curveSegments : 12,
                        a = e.material,
                        s = void 0 === e.UVGenerator ? Ze.WorldUVGenerator : e.UVGenerator,
                        l = this.vertices.length,
                        u = t.extractPoints(o),
                        h = u.shape,
                        d = u.holes,
                        p = !Ga.isClockWise(h);
                    if (p) {
                        for (h = h.reverse(), i = 0, n = d.length; i < n; i++) (r = d[i]), Ga.isClockWise(r) && (d[i] = r.reverse());
                        p = !1;
                    }
                    var f = Ga.triangulateShape(h, d);
                    for (i = 0, n = d.length; i < n; i++) (r = d[i]), (h = h.concat(r));
                    var m,
                        v,
                        g = h.length,
                        y = f.length;
                    for (i = 0; i < g; i++) (m = h[i]), this.vertices.push(new c(m.x, m.y, 0));
                    for (i = 0; i < y; i++) {
                        v = f[i];
                        var _ = v[0] + l,
                            b = v[1] + l,
                            x = v[2] + l;
                        this.faces.push(new pt(_, b, x, null, null, a)), this.faceVertexUvs[0].push(s.generateTopUV(this, _, b, x));
                    }
                }),
                (oi.prototype = Object.create(Ct.prototype)),
                (oi.prototype.constructor = oi),
                (ai.prototype = Object.create(Ct.prototype)),
                (ai.prototype.constructor = ai),
                (si.prototype = Object.create(St.prototype)),
                (si.prototype.constructor = si),
                (li.prototype = Object.create(si.prototype)),
                (li.prototype.constructor = li),
                (ci.prototype = Object.create(ai.prototype)),
                (ci.prototype.constructor = ci),
                (ui.prototype = Object.create(Ct.prototype)),
                (ui.prototype.constructor = ui),
                (hi.prototype = Object.create(St.prototype)),
                (hi.prototype.constructor = hi),
                (di.prototype = Object.create(St.prototype)),
                (di.prototype.constructor = di);
            var za = Object.freeze({
                WireframeGeometry: Pe,
                ParametricGeometry: Oe,
                ParametricBufferGeometry: De,
                TetrahedronGeometry: ke,
                TetrahedronBufferGeometry: je,
                OctahedronGeometry: Ne,
                OctahedronBufferGeometry: Ie,
                IcosahedronGeometry: Ue,
                IcosahedronBufferGeometry: Fe,
                DodecahedronGeometry: Ge,
                DodecahedronBufferGeometry: Be,
                PolyhedronGeometry: ze,
                PolyhedronBufferGeometry: Le,
                TubeGeometry: He,
                TubeBufferGeometry: Ve,
                TorusKnotGeometry: Xe,
                TorusKnotBufferGeometry: We,
                TorusGeometry: Ye,
                TorusBufferGeometry: qe,
                TextGeometry: Je,
                SphereBufferGeometry: Qe,
                SphereGeometry: $e,
                RingGeometry: ti,
                RingBufferGeometry: Ke,
                PlaneBufferGeometry: Ot,
                PlaneGeometry: ei,
                LatheGeometry: ni,
                LatheBufferGeometry: ii,
                ShapeGeometry: ri,
                ExtrudeGeometry: Ze,
                EdgesGeometry: oi,
                ConeGeometry: li,
                ConeBufferGeometry: ci,
                CylinderGeometry: si,
                CylinderBufferGeometry: ai,
                CircleBufferGeometry: ui,
                CircleGeometry: hi,
                BoxBufferGeometry: Dt,
                BoxGeometry: di,
            });
            (pi.prototype = Object.create($.prototype)),
                (pi.prototype.constructor = pi),
                (pi.prototype.isShadowMaterial = !0),
                (fi.prototype = Object.create($.prototype)),
                (fi.prototype.constructor = fi),
                (fi.prototype.isRawShaderMaterial = !0),
                (mi.prototype = {
                    constructor: mi,
                    isMultiMaterial: !0,
                    toJSON: function (t) {
                        for (var e = { metadata: { version: 4.2, type: "material", generator: "MaterialExporter" }, uuid: this.uuid, type: this.type, materials: [] }, i = this.materials, n = 0, r = i.length; n < r; n++) {
                            var o = i[n].toJSON(t);
                            delete o.metadata, e.materials.push(o);
                        }
                        return (e.visible = this.visible), e;
                    },
                    clone: function () {
                        for (var t = new this.constructor(), e = 0; e < this.materials.length; e++) t.materials.push(this.materials[e].clone());
                        return (t.visible = this.visible), t;
                    },
                }),
                (vi.prototype = Object.create(J.prototype)),
                (vi.prototype.constructor = vi),
                (vi.prototype.isMeshStandardMaterial = !0),
                (vi.prototype.copy = function (t) {
                    return (
                        J.prototype.copy.call(this, t),
                        (this.defines = { STANDARD: "" }),
                        this.color.copy(t.color),
                        (this.roughness = t.roughness),
                        (this.metalness = t.metalness),
                        (this.map = t.map),
                        (this.lightMap = t.lightMap),
                        (this.lightMapIntensity = t.lightMapIntensity),
                        (this.aoMap = t.aoMap),
                        (this.aoMapIntensity = t.aoMapIntensity),
                        this.emissive.copy(t.emissive),
                        (this.emissiveMap = t.emissiveMap),
                        (this.emissiveIntensity = t.emissiveIntensity),
                        (this.bumpMap = t.bumpMap),
                        (this.bumpScale = t.bumpScale),
                        (this.normalMap = t.normalMap),
                        this.normalScale.copy(t.normalScale),
                        (this.displacementMap = t.displacementMap),
                        (this.displacementScale = t.displacementScale),
                        (this.displacementBias = t.displacementBias),
                        (this.roughnessMap = t.roughnessMap),
                        (this.metalnessMap = t.metalnessMap),
                        (this.alphaMap = t.alphaMap),
                        (this.envMap = t.envMap),
                        (this.envMapIntensity = t.envMapIntensity),
                        (this.refractionRatio = t.refractionRatio),
                        (this.wireframe = t.wireframe),
                        (this.wireframeLinewidth = t.wireframeLinewidth),
                        (this.wireframeLinecap = t.wireframeLinecap),
                        (this.wireframeLinejoin = t.wireframeLinejoin),
                        (this.skinning = t.skinning),
                        (this.morphTargets = t.morphTargets),
                        (this.morphNormals = t.morphNormals),
                        this
                    );
                }),
                (gi.prototype = Object.create(vi.prototype)),
                (gi.prototype.constructor = gi),
                (gi.prototype.isMeshPhysicalMaterial = !0),
                (gi.prototype.copy = function (t) {
                    return vi.prototype.copy.call(this, t), (this.defines = { PHYSICAL: "" }), (this.reflectivity = t.reflectivity), (this.clearCoat = t.clearCoat), (this.clearCoatRoughness = t.clearCoatRoughness), this;
                }),
                (yi.prototype = Object.create(J.prototype)),
                (yi.prototype.constructor = yi),
                (yi.prototype.isMeshPhongMaterial = !0),
                (yi.prototype.copy = function (t) {
                    return (
                        J.prototype.copy.call(this, t),
                        this.color.copy(t.color),
                        this.specular.copy(t.specular),
                        (this.shininess = t.shininess),
                        (this.map = t.map),
                        (this.lightMap = t.lightMap),
                        (this.lightMapIntensity = t.lightMapIntensity),
                        (this.aoMap = t.aoMap),
                        (this.aoMapIntensity = t.aoMapIntensity),
                        this.emissive.copy(t.emissive),
                        (this.emissiveMap = t.emissiveMap),
                        (this.emissiveIntensity = t.emissiveIntensity),
                        (this.bumpMap = t.bumpMap),
                        (this.bumpScale = t.bumpScale),
                        (this.normalMap = t.normalMap),
                        this.normalScale.copy(t.normalScale),
                        (this.displacementMap = t.displacementMap),
                        (this.displacementScale = t.displacementScale),
                        (this.displacementBias = t.displacementBias),
                        (this.specularMap = t.specularMap),
                        (this.alphaMap = t.alphaMap),
                        (this.envMap = t.envMap),
                        (this.combine = t.combine),
                        (this.reflectivity = t.reflectivity),
                        (this.refractionRatio = t.refractionRatio),
                        (this.wireframe = t.wireframe),
                        (this.wireframeLinewidth = t.wireframeLinewidth),
                        (this.wireframeLinecap = t.wireframeLinecap),
                        (this.wireframeLinejoin = t.wireframeLinejoin),
                        (this.skinning = t.skinning),
                        (this.morphTargets = t.morphTargets),
                        (this.morphNormals = t.morphNormals),
                        this
                    );
                }),
                (_i.prototype = Object.create(J.prototype)),
                (_i.prototype.constructor = _i),
                (_i.prototype.isMeshNormalMaterial = !0),
                (_i.prototype.copy = function (t) {
                    return J.prototype.copy.call(this, t), (this.wireframe = t.wireframe), (this.wireframeLinewidth = t.wireframeLinewidth), this;
                }),
                (bi.prototype = Object.create(J.prototype)),
                (bi.prototype.constructor = bi),
                (bi.prototype.isMeshLambertMaterial = !0),
                (bi.prototype.copy = function (t) {
                    return (
                        J.prototype.copy.call(this, t),
                        this.color.copy(t.color),
                        (this.map = t.map),
                        (this.lightMap = t.lightMap),
                        (this.lightMapIntensity = t.lightMapIntensity),
                        (this.aoMap = t.aoMap),
                        (this.aoMapIntensity = t.aoMapIntensity),
                        this.emissive.copy(t.emissive),
                        (this.emissiveMap = t.emissiveMap),
                        (this.emissiveIntensity = t.emissiveIntensity),
                        (this.specularMap = t.specularMap),
                        (this.alphaMap = t.alphaMap),
                        (this.envMap = t.envMap),
                        (this.combine = t.combine),
                        (this.reflectivity = t.reflectivity),
                        (this.refractionRatio = t.refractionRatio),
                        (this.wireframe = t.wireframe),
                        (this.wireframeLinewidth = t.wireframeLinewidth),
                        (this.wireframeLinecap = t.wireframeLinecap),
                        (this.wireframeLinejoin = t.wireframeLinejoin),
                        (this.skinning = t.skinning),
                        (this.morphTargets = t.morphTargets),
                        (this.morphNormals = t.morphNormals),
                        this
                    );
                }),
                (xi.prototype = Object.create(J.prototype)),
                (xi.prototype.constructor = xi),
                (xi.prototype.isLineDashedMaterial = !0),
                (xi.prototype.copy = function (t) {
                    return J.prototype.copy.call(this, t), this.color.copy(t.color), (this.linewidth = t.linewidth), (this.scale = t.scale), (this.dashSize = t.dashSize), (this.gapSize = t.gapSize), this;
                });
            var Va = Object.freeze({
                    ShadowMaterial: pi,
                    SpriteMaterial: pe,
                    RawShaderMaterial: fi,
                    ShaderMaterial: $,
                    PointsMaterial: Te,
                    MultiMaterial: mi,
                    MeshPhysicalMaterial: gi,
                    MeshStandardMaterial: vi,
                    MeshPhongMaterial: yi,
                    MeshNormalMaterial: _i,
                    MeshLambertMaterial: bi,
                    MeshDepthMaterial: K,
                    MeshBasicMaterial: ft,
                    LineDashedMaterial: xi,
                    LineBasicMaterial: be,
                    Material: J,
                }),
                Ha = {
                    enabled: !1,
                    files: {},
                    add: function (t, e) {
                        !1 !== this.enabled && (this.files[t] = e);
                    },
                    get: function (t) {
                        if (!1 !== this.enabled) return this.files[t];
                    },
                    remove: function (t) {
                        delete this.files[t];
                    },
                    clear: function () {
                        this.files = {};
                    },
                },
                Wa = new wi();
            Object.assign(Ti.prototype, {
                load: function (t, e, i, n) {
                    void 0 === t && (t = ""), void 0 !== this.path && (t = this.path + t);
                    var r = this,
                        o = Ha.get(t);
                    if (void 0 !== o)
                        return (
                            r.manager.itemStart(t),
                            setTimeout(function () {
                                e && e(o), r.manager.itemEnd(t);
                            }, 0),
                            o
                        );
                    var a = /^data:(.*?)(;base64)?,(.*)$/,
                        s = t.match(a);
                    if (s) {
                        var l = s[1],
                            c = !!s[2],
                            u = s[3];
                        (u = window.decodeURIComponent(u)), c && (u = window.atob(u));
                        try {
                            var h,
                                d = (this.responseType || "").toLowerCase();
                            switch (d) {
                                case "arraybuffer":
                                case "blob":
                                    h = new ArrayBuffer(u.length);
                                    for (var p = new Uint8Array(h), f = 0; f < u.length; f++) p[f] = u.charCodeAt(f);
                                    "blob" === d && (h = new Blob([h], { type: l }));
                                    break;
                                case "document":
                                    var m = new DOMParser();
                                    h = m.parseFromString(u, l);
                                    break;
                                case "json":
                                    h = JSON.parse(u);
                                    break;
                                default:
                                    h = u;
                            }
                            window.setTimeout(function () {
                                e && e(h), r.manager.itemEnd(t);
                            }, 0);
                        } catch (e) {
                            window.setTimeout(function () {
                                n && n(e), r.manager.itemError(t);
                            }, 0);
                        }
                    } else {
                        var v = new XMLHttpRequest();
                        v.open("GET", t, !0),
                            v.addEventListener(
                                "load",
                                function (i) {
                                    var o = i.target.response;
                                    Ha.add(t, o),
                                        200 === this.status
                                            ? (e && e(o), r.manager.itemEnd(t))
                                            : 0 === this.status
                                            ? (console.warn("THREE.XHRLoader: HTTP Status 0 received."), e && e(o), r.manager.itemEnd(t))
                                            : (n && n(i), r.manager.itemError(t));
                                },
                                !1
                            ),
                            void 0 !== i &&
                                v.addEventListener(
                                    "progress",
                                    function (t) {
                                        i(t);
                                    },
                                    !1
                                ),
                            v.addEventListener(
                                "error",
                                function (e) {
                                    n && n(e), r.manager.itemError(t);
                                },
                                !1
                            ),
                            void 0 !== this.responseType && (v.responseType = this.responseType),
                            void 0 !== this.withCredentials && (v.withCredentials = this.withCredentials),
                            v.overrideMimeType && v.overrideMimeType("text/plain"),
                            v.send(null);
                    }
                    return r.manager.itemStart(t), v;
                },
                setPath: function (t) {
                    return (this.path = t), this;
                },
                setResponseType: function (t) {
                    return (this.responseType = t), this;
                },
                setWithCredentials: function (t) {
                    return (this.withCredentials = t), this;
                },
            }),
                Object.assign(Ei.prototype, {
                    load: function (t, e, i, n) {
                        var r = this,
                            o = [],
                            a = new Ae();
                        a.image = o;
                        var s = new Ti(this.manager);
                        if ((s.setPath(this.path), s.setResponseType("arraybuffer"), Array.isArray(t)))
                            for (var l = 0, c = 0, u = t.length; c < u; ++c)
                                !(function (c) {
                                    s.load(
                                        t[c],
                                        function (t) {
                                            var i = r._parser(t, !0);
                                            (o[c] = { width: i.width, height: i.height, format: i.format, mipmaps: i.mipmaps }),
                                                6 === (l += 1) && (1 === i.mipmapCount && (a.minFilter = Oo), (a.format = i.format), (a.needsUpdate = !0), e && e(a));
                                        },
                                        i,
                                        n
                                    );
                                })(c);
                        else
                            s.load(
                                t,
                                function (t) {
                                    var i = r._parser(t, !0);
                                    if (i.isCubemap)
                                        for (var n = i.mipmaps.length / i.mipmapCount, s = 0; s < n; s++) {
                                            o[s] = { mipmaps: [] };
                                            for (var l = 0; l < i.mipmapCount; l++) o[s].mipmaps.push(i.mipmaps[s * i.mipmapCount + l]), (o[s].format = i.format), (o[s].width = i.width), (o[s].height = i.height);
                                        }
                                    else (a.image.width = i.width), (a.image.height = i.height), (a.mipmaps = i.mipmaps);
                                    1 === i.mipmapCount && (a.minFilter = Oo), (a.format = i.format), (a.needsUpdate = !0), e && e(a);
                                },
                                i,
                                n
                            );
                        return a;
                    },
                    setPath: function (t) {
                        return (this.path = t), this;
                    },
                });
            var Xa = Mi;
            Object.assign(Mi.prototype, {
                load: function (t, e, i, n) {
                    var r = this,
                        o = new ve(),
                        a = new Ti(this.manager);
                    return (
                        a.setResponseType("arraybuffer"),
                        a.load(
                            t,
                            function (t) {
                                var i = r._parser(t);
                                i &&
                                    (void 0 !== i.image ? (o.image = i.image) : void 0 !== i.data && ((o.image.width = i.width), (o.image.height = i.height), (o.image.data = i.data)),
                                    (o.wrapS = void 0 !== i.wrapS ? i.wrapS : So),
                                    (o.wrapT = void 0 !== i.wrapT ? i.wrapT : So),
                                    (o.magFilter = void 0 !== i.magFilter ? i.magFilter : Oo),
                                    (o.minFilter = void 0 !== i.minFilter ? i.minFilter : jo),
                                    (o.anisotropy = void 0 !== i.anisotropy ? i.anisotropy : 1),
                                    void 0 !== i.format && (o.format = i.format),
                                    void 0 !== i.type && (o.type = i.type),
                                    void 0 !== i.mipmaps && (o.mipmaps = i.mipmaps),
                                    1 === i.mipmapCount && (o.minFilter = Oo),
                                    (o.needsUpdate = !0),
                                    e && e(o, i));
                            },
                            i,
                            n
                        ),
                        o
                    );
                },
            }),
                Object.assign(Si.prototype, {
                    load: function (t, e, i, n) {
                        var r = this,
                            o = document.createElementNS("http://www.w3.org/1999/xhtml", "img");
                        if (
                            ((o.onload = function () {
                                (o.onload = null), URL.revokeObjectURL(o.src), e && e(o), r.manager.itemEnd(t);
                            }),
                            (o.onerror = n),
                            0 === t.indexOf("data:"))
                        )
                            o.src = t;
                        else {
                            var a = new Ti();
                            a.setPath(this.path),
                                a.setResponseType("blob"),
                                a.setWithCredentials(this.withCredentials),
                                a.load(
                                    t,
                                    function (t) {
                                        o.src = URL.createObjectURL(t);
                                    },
                                    i,
                                    n
                                );
                        }
                        return r.manager.itemStart(t), o;
                    },
                    setCrossOrigin: function (t) {
                        return (this.crossOrigin = t), this;
                    },
                    setWithCredentials: function (t) {
                        return (this.withCredentials = t), this;
                    },
                    setPath: function (t) {
                        return (this.path = t), this;
                    },
                }),
                Object.assign(Ai.prototype, {
                    load: function (t, e, i, n) {
                        var r = new h(),
                            o = new Si(this.manager);
                        o.setCrossOrigin(this.crossOrigin), o.setPath(this.path);
                        for (var a = 0, s = 0; s < t.length; ++s)
                            !(function (i) {
                                o.load(
                                    t[i],
                                    function (t) {
                                        (r.images[i] = t), 6 == ++a && ((r.needsUpdate = !0), e && e(r));
                                    },
                                    void 0,
                                    n
                                );
                            })(s);
                        return r;
                    },
                    setCrossOrigin: function (t) {
                        return (this.crossOrigin = t), this;
                    },
                    setPath: function (t) {
                        return (this.path = t), this;
                    },
                }),
                Object.assign(Ri.prototype, {
                    load: function (t, e, i, r) {
                        var o = new n(),
                            a = new Si(this.manager);
                        return (
                            a.setCrossOrigin(this.crossOrigin),
                            a.setWithCredentials(this.withCredentials),
                            a.setPath(this.path),
                            a.load(
                                t,
                                function (i) {
                                    var n = t.search(/\.(jpg|jpeg)$/) > 0 || 0 === t.search(/^data\:image\/jpeg/);
                                    (o.format = n ? Zo : Jo), (o.image = i), (o.needsUpdate = !0), void 0 !== e && e(o);
                                },
                                i,
                                r
                            ),
                            o
                        );
                    },
                    setCrossOrigin: function (t) {
                        return (this.crossOrigin = t), this;
                    },
                    setWithCredentials: function (t) {
                        return (this.withCredentials = t), this;
                    },
                    setPath: function (t) {
                        return (this.path = t), this;
                    },
                }),
                (Ci.prototype = Object.assign(Object.create(ct.prototype), {
                    constructor: Ci,
                    isLight: !0,
                    copy: function (t) {
                        return ct.prototype.copy.call(this, t), this.color.copy(t.color), (this.intensity = t.intensity), this;
                    },
                    toJSON: function (t) {
                        var e = ct.prototype.toJSON.call(this, t);
                        return (
                            (e.object.color = this.color.getHex()),
                            (e.object.intensity = this.intensity),
                            void 0 !== this.groundColor && (e.object.groundColor = this.groundColor.getHex()),
                            void 0 !== this.distance && (e.object.distance = this.distance),
                            void 0 !== this.angle && (e.object.angle = this.angle),
                            void 0 !== this.decay && (e.object.decay = this.decay),
                            void 0 !== this.penumbra && (e.object.penumbra = this.penumbra),
                            void 0 !== this.shadow && (e.object.shadow = this.shadow.toJSON()),
                            e
                        );
                    },
                })),
                (Pi.prototype = Object.assign(Object.create(Ci.prototype), {
                    constructor: Pi,
                    isHemisphereLight: !0,
                    copy: function (t) {
                        return Ci.prototype.copy.call(this, t), this.groundColor.copy(t.groundColor), this;
                    },
                })),
                Object.assign(Di.prototype, {
                    copy: function (t) {
                        return (this.camera = t.camera.clone()), (this.bias = t.bias), (this.radius = t.radius), this.mapSize.copy(t.mapSize), this;
                    },
                    clone: function () {
                        return new this.constructor().copy(this);
                    },
                    toJSON: function () {
                        var t = {};
                        return (
                            0 !== this.bias && (t.bias = this.bias),
                            1 !== this.radius && (t.radius = this.radius),
                            (512 === this.mapSize.x && 512 === this.mapSize.y) || (t.mapSize = this.mapSize.toArray()),
                            (t.camera = this.camera.toJSON(!1).object),
                            delete t.camera.matrix,
                            t
                        );
                    },
                }),
                (Oi.prototype = Object.assign(Object.create(Di.prototype), {
                    constructor: Oi,
                    isSpotLightShadow: !0,
                    update: function (t) {
                        var e = 2 * Ma.RAD2DEG * t.angle,
                            i = this.mapSize.width / this.mapSize.height,
                            n = t.distance || 500,
                            r = this.camera;
                        (e === r.fov && i === r.aspect && n === r.far) || ((r.fov = e), (r.aspect = i), (r.far = n), r.updateProjectionMatrix());
                    },
                })),
                (Li.prototype = Object.assign(Object.create(Ci.prototype), {
                    constructor: Li,
                    isSpotLight: !0,
                    copy: function (t) {
                        return (
                            Ci.prototype.copy.call(this, t),
                            (this.distance = t.distance),
                            (this.angle = t.angle),
                            (this.penumbra = t.penumbra),
                            (this.decay = t.decay),
                            (this.target = t.target.clone()),
                            (this.shadow = t.shadow.clone()),
                            this
                        );
                    },
                })),
                (ji.prototype = Object.assign(Object.create(Ci.prototype), {
                    constructor: ji,
                    isPointLight: !0,
                    copy: function (t) {
                        return Ci.prototype.copy.call(this, t), (this.distance = t.distance), (this.decay = t.decay), (this.shadow = t.shadow.clone()), this;
                    },
                })),
                (ki.prototype = Object.assign(Object.create(Di.prototype), { constructor: ki })),
                (Ii.prototype = Object.assign(Object.create(Ci.prototype), {
                    constructor: Ii,
                    isDirectionalLight: !0,
                    copy: function (t) {
                        return Ci.prototype.copy.call(this, t), (this.target = t.target.clone()), (this.shadow = t.shadow.clone()), this;
                    },
                })),
                (Ni.prototype = Object.assign(Object.create(Ci.prototype), { constructor: Ni, isAmbientLight: !0 }));
            var qa = {
                arraySlice: function (t, e, i) {
                    return qa.isTypedArray(t) ? new t.constructor(t.subarray(e, i)) : t.slice(e, i);
                },
                convertArray: function (t, e, i) {
                    return !t || (!i && t.constructor === e) ? t : "number" == typeof e.BYTES_PER_ELEMENT ? new e(t) : Array.prototype.slice.call(t);
                },
                isTypedArray: function (t) {
                    return ArrayBuffer.isView(t) && !(t instanceof DataView);
                },
                getKeyframeOrder: function (t) {
                    function e(e, i) {
                        return t[e] - t[i];
                    }
                    for (var i = t.length, n = new Array(i), r = 0; r !== i; ++r) n[r] = r;
                    return n.sort(e), n;
                },
                sortedArray: function (t, e, i) {
                    for (var n = t.length, r = new t.constructor(n), o = 0, a = 0; a !== n; ++o) for (var s = i[o] * e, l = 0; l !== e; ++l) r[a++] = t[s + l];
                    return r;
                },
                flattenJSON: function (t, e, i, n) {
                    for (var r = 1, o = t[0]; void 0 !== o && void 0 === o[n]; ) o = t[r++];
                    if (void 0 !== o) {
                        var a = o[n];
                        if (void 0 !== a)
                            if (Array.isArray(a))
                                do {
                                    (a = o[n]), void 0 !== a && (e.push(o.time), i.push.apply(i, a)), (o = t[r++]);
                                } while (void 0 !== o);
                            else if (void 0 !== a.toArray)
                                do {
                                    (a = o[n]), void 0 !== a && (e.push(o.time), a.toArray(i, i.length)), (o = t[r++]);
                                } while (void 0 !== o);
                            else
                                do {
                                    (a = o[n]), void 0 !== a && (e.push(o.time), i.push(a)), (o = t[r++]);
                                } while (void 0 !== o);
                    }
                },
            };
            (Fi.prototype = {
                constructor: Fi,
                evaluate: function (t) {
                    var e = this.parameterPositions,
                        i = this._cachedIndex,
                        n = e[i],
                        r = e[i - 1];
                    t: {
                        e: {
                            var o;
                            i: {
                                n: if (!(t < n)) {
                                    for (var a = i + 2; ; ) {
                                        if (void 0 === n) {
                                            if (t < r) break n;
                                            return (i = e.length), (this._cachedIndex = i), this.afterEnd_(i - 1, t, r);
                                        }
                                        if (i === a) break;
                                        if (((r = n), (n = e[++i]), t < n)) break e;
                                    }
                                    o = e.length;
                                    break i;
                                }
                                {
                                    if (t >= r) break t;
                                    var s = e[1];
                                    t < s && ((i = 2), (r = s));
                                    for (var a = i - 2; ; ) {
                                        if (void 0 === r) return (this._cachedIndex = 0), this.beforeStart_(0, t, n);
                                        if (i === a) break;
                                        if (((n = r), (r = e[--i - 1]), t >= r)) break e;
                                    }
                                    (o = i), (i = 0);
                                }
                            }
                            for (; i < o; ) {
                                var l = (i + o) >>> 1;
                                t < e[l] ? (o = l) : (i = l + 1);
                            }
                            if (((n = e[i]), void 0 === (r = e[i - 1]))) return (this._cachedIndex = 0), this.beforeStart_(0, t, n);
                            if (void 0 === n) return (i = e.length), (this._cachedIndex = i), this.afterEnd_(i - 1, r, t);
                        }
                        (this._cachedIndex = i), this.intervalChanged_(i, r, n);
                    }
                    return this.interpolate_(i, r, t, n);
                },
                settings: null,
                DefaultSettings_: {},
                getSettings_: function () {
                    return this.settings || this.DefaultSettings_;
                },
                copySampleValue_: function (t) {
                    for (var e = this.resultBuffer, i = this.sampleValues, n = this.valueSize, r = t * n, o = 0; o !== n; ++o) e[o] = i[r + o];
                    return e;
                },
                interpolate_: function (t, e, i, n) {
                    throw new Error("call to abstract method");
                },
                intervalChanged_: function (t, e, i) {},
            }),
                Object.assign(Fi.prototype, { beforeStart_: Fi.prototype.copySampleValue_, afterEnd_: Fi.prototype.copySampleValue_ }),
                (Ui.prototype = Object.assign(Object.create(Fi.prototype), {
                    constructor: Ui,
                    DefaultSettings_: { endingStart: da, endingEnd: da },
                    intervalChanged_: function (t, e, i) {
                        var n = this.parameterPositions,
                            r = t - 2,
                            o = t + 1,
                            a = n[r],
                            s = n[o];
                        if (void 0 === a)
                            switch (this.getSettings_().endingStart) {
                                case 2401:
                                    (r = t), (a = 2 * e - i);
                                    break;
                                case 2402:
                                    (r = n.length - 2), (a = e + n[r] - n[r + 1]);
                                    break;
                                default:
                                    (r = t), (a = i);
                            }
                        if (void 0 === s)
                            switch (this.getSettings_().endingEnd) {
                                case 2401:
                                    (o = t), (s = 2 * i - e);
                                    break;
                                case 2402:
                                    (o = 1), (s = i + n[1] - n[0]);
                                    break;
                                default:
                                    (o = t - 1), (s = e);
                            }
                        var l = 0.5 * (i - e),
                            c = this.valueSize;
                        (this._weightPrev = l / (e - a)), (this._weightNext = l / (s - i)), (this._offsetPrev = r * c), (this._offsetNext = o * c);
                    },
                    interpolate_: function (t, e, i, n) {
                        for (
                            var r = this.resultBuffer,
                                o = this.sampleValues,
                                a = this.valueSize,
                                s = t * a,
                                l = s - a,
                                c = this._offsetPrev,
                                u = this._offsetNext,
                                h = this._weightPrev,
                                d = this._weightNext,
                                p = (i - e) / (n - e),
                                f = p * p,
                                m = f * p,
                                v = -h * m + 2 * h * f - h * p,
                                g = (1 + h) * m + (-1.5 - 2 * h) * f + (-0.5 + h) * p + 1,
                                y = (-1 - d) * m + (1.5 + d) * f + 0.5 * p,
                                _ = d * m - d * f,
                                b = 0;
                            b !== a;
                            ++b
                        )
                            r[b] = v * o[c + b] + g * o[l + b] + y * o[s + b] + _ * o[u + b];
                        return r;
                    },
                })),
                (Bi.prototype = Object.assign(Object.create(Fi.prototype), {
                    constructor: Bi,
                    interpolate_: function (t, e, i, n) {
                        for (var r = this.resultBuffer, o = this.sampleValues, a = this.valueSize, s = t * a, l = s - a, c = (i - e) / (n - e), u = 1 - c, h = 0; h !== a; ++h) r[h] = o[l + h] * u + o[s + h] * c;
                        return r;
                    },
                })),
                (Gi.prototype = Object.assign(Object.create(Fi.prototype), {
                    constructor: Gi,
                    interpolate_: function (t, e, i, n) {
                        return this.copySampleValue_(t - 1);
                    },
                }));
            var Ya;
            (Ya = {
                TimeBufferType: Float32Array,
                ValueBufferType: Float32Array,
                DefaultInterpolation: 2301,
                InterpolantFactoryMethodDiscrete: function (t) {
                    return new Gi(this.times, this.values, this.getValueSize(), t);
                },
                InterpolantFactoryMethodLinear: function (t) {
                    return new Bi(this.times, this.values, this.getValueSize(), t);
                },
                InterpolantFactoryMethodSmooth: function (t) {
                    return new Ui(this.times, this.values, this.getValueSize(), t);
                },
                setInterpolation: function (t) {
                    var e;
                    switch (t) {
                        case 2300:
                            e = this.InterpolantFactoryMethodDiscrete;
                            break;
                        case 2301:
                            e = this.InterpolantFactoryMethodLinear;
                            break;
                        case 2302:
                            e = this.InterpolantFactoryMethodSmooth;
                    }
                    if (void 0 === e) {
                        var i = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
                        if (void 0 === this.createInterpolant) {
                            if (t === this.DefaultInterpolation) throw new Error(i);
                            this.setInterpolation(this.DefaultInterpolation);
                        }
                        return void console.warn(i);
                    }
                    this.createInterpolant = e;
                },
                getInterpolation: function () {
                    switch (this.createInterpolant) {
                        case this.InterpolantFactoryMethodDiscrete:
                            return 2300;
                        case this.InterpolantFactoryMethodLinear:
                            return 2301;
                        case this.InterpolantFactoryMethodSmooth:
                            return 2302;
                    }
                },
                getValueSize: function () {
                    return this.values.length / this.times.length;
                },
                shift: function (t) {
                    if (0 !== t) for (var e = this.times, i = 0, n = e.length; i !== n; ++i) e[i] += t;
                    return this;
                },
                scale: function (t) {
                    if (1 !== t) for (var e = this.times, i = 0, n = e.length; i !== n; ++i) e[i] *= t;
                    return this;
                },
                trim: function (t, e) {
                    for (var i = this.times, n = i.length, r = 0, o = n - 1; r !== n && i[r] < t; ) ++r;
                    for (; -1 !== o && i[o] > e; ) --o;
                    if ((++o, 0 !== r || o !== n)) {
                        r >= o && ((o = Math.max(o, 1)), (r = o - 1));
                        var a = this.getValueSize();
                        (this.times = qa.arraySlice(i, r, o)), (this.values = qa.arraySlice(this.values, r * a, o * a));
                    }
                    return this;
                },
                validate: function () {
                    var t = !0,
                        e = this.getValueSize();
                    e - Math.floor(e) != 0 && (console.error("invalid value size in track", this), (t = !1));
                    var i = this.times,
                        n = this.values,
                        r = i.length;
                    0 === r && (console.error("track is empty", this), (t = !1));
                    for (var o = null, a = 0; a !== r; a++) {
                        var s = i[a];
                        if ("number" == typeof s && isNaN(s)) {
                            console.error("time is not a valid number", this, a, s), (t = !1);
                            break;
                        }
                        if (null !== o && o > s) {
                            console.error("out of order keys", this, a, s, o), (t = !1);
                            break;
                        }
                        o = s;
                    }
                    if (void 0 !== n && qa.isTypedArray(n))
                        for (var a = 0, l = n.length; a !== l; ++a) {
                            var c = n[a];
                            if (isNaN(c)) {
                                console.error("value is not a valid number", this, a, c), (t = !1);
                                break;
                            }
                        }
                    return t;
                },
                optimize: function () {
                    for (var t = this.times, e = this.values, i = this.getValueSize(), n = 2302 === this.getInterpolation(), r = 1, o = t.length - 1, a = 1; a < o; ++a) {
                        var s = !1,
                            l = t[a];
                        if (l !== t[a + 1] && (1 !== a || l !== l[0]))
                            if (n) s = !0;
                            else
                                for (var c = a * i, u = c - i, h = c + i, d = 0; d !== i; ++d) {
                                    var p = e[c + d];
                                    if (p !== e[u + d] || p !== e[h + d]) {
                                        s = !0;
                                        break;
                                    }
                                }
                        if (s) {
                            if (a !== r) {
                                t[r] = t[a];
                                for (var f = a * i, m = r * i, d = 0; d !== i; ++d) e[m + d] = e[f + d];
                            }
                            ++r;
                        }
                    }
                    if (o > 0) {
                        t[r] = t[o];
                        for (var f = o * i, m = r * i, d = 0; d !== i; ++d) e[m + d] = e[f + d];
                        ++r;
                    }
                    return r !== t.length && ((this.times = qa.arraySlice(t, 0, r)), (this.values = qa.arraySlice(e, 0, r * i))), this;
                },
            }),
                (Vi.prototype = Object.assign(Object.create(Ya), { constructor: Vi, ValueTypeName: "vector" })),
                (Hi.prototype = Object.assign(Object.create(Fi.prototype), {
                    constructor: Hi,
                    interpolate_: function (t, e, i, n) {
                        for (var r = this.resultBuffer, o = this.sampleValues, a = this.valueSize, s = t * a, c = (i - e) / (n - e), u = s + a; s !== u; s += 4) l.slerpFlat(r, 0, o, s - a, o, s, c);
                        return r;
                    },
                })),
                (Wi.prototype = Object.assign(Object.create(Ya), {
                    constructor: Wi,
                    ValueTypeName: "quaternion",
                    DefaultInterpolation: 2301,
                    InterpolantFactoryMethodLinear: function (t) {
                        return new Hi(this.times, this.values, this.getValueSize(), t);
                    },
                    InterpolantFactoryMethodSmooth: void 0,
                })),
                (Xi.prototype = Object.assign(Object.create(Ya), { constructor: Xi, ValueTypeName: "number" })),
                (qi.prototype = Object.assign(Object.create(Ya), {
                    constructor: qi,
                    ValueTypeName: "string",
                    ValueBufferType: Array,
                    DefaultInterpolation: 2300,
                    InterpolantFactoryMethodLinear: void 0,
                    InterpolantFactoryMethodSmooth: void 0,
                })),
                (Yi.prototype = Object.assign(Object.create(Ya), {
                    constructor: Yi,
                    ValueTypeName: "bool",
                    ValueBufferType: Array,
                    DefaultInterpolation: 2300,
                    InterpolantFactoryMethodLinear: void 0,
                    InterpolantFactoryMethodSmooth: void 0,
                })),
                (Zi.prototype = Object.assign(Object.create(Ya), { constructor: Zi, ValueTypeName: "color" })),
                (Ji.prototype = Ya),
                (Ya.constructor = Ji),
                Object.assign(Ji, {
                    parse: function (t) {
                        if (void 0 === t.type) throw new Error("track type undefined, can not parse");
                        var e = Ji._getTrackTypeForValueTypeName(t.type);
                        if (void 0 === t.times) {
                            var i = [],
                                n = [];
                            qa.flattenJSON(t.keys, i, n, "value"), (t.times = i), (t.values = n);
                        }
                        return void 0 !== e.parse ? e.parse(t) : new e(t.name, t.times, t.values, t.interpolation);
                    },
                    toJSON: function (t) {
                        var e,
                            i = t.constructor;
                        if (void 0 !== i.toJSON) e = i.toJSON(t);
                        else {
                            e = { name: t.name, times: qa.convertArray(t.times, Array), values: qa.convertArray(t.values, Array) };
                            var n = t.getInterpolation();
                            n !== t.DefaultInterpolation && (e.interpolation = n);
                        }
                        return (e.type = t.ValueTypeName), e;
                    },
                    _getTrackTypeForValueTypeName: function (t) {
                        switch (t.toLowerCase()) {
                            case "scalar":
                            case "double":
                            case "float":
                            case "number":
                            case "integer":
                                return Xi;
                            case "vector":
                            case "vector2":
                            case "vector3":
                            case "vector4":
                                return Vi;
                            case "color":
                                return Zi;
                            case "quaternion":
                                return Wi;
                            case "bool":
                            case "boolean":
                                return Yi;
                            case "string":
                                return qi;
                        }
                        throw new Error("Unsupported typeName: " + t);
                    },
                }),
                (Qi.prototype = {
                    constructor: Qi,
                    resetDuration: function () {
                        for (var t = this.tracks, e = 0, i = 0, n = t.length; i !== n; ++i) {
                            var r = this.tracks[i];
                            e = Math.max(e, r.times[r.times.length - 1]);
                        }
                        this.duration = e;
                    },
                    trim: function () {
                        for (var t = 0; t < this.tracks.length; t++) this.tracks[t].trim(0, this.duration);
                        return this;
                    },
                    optimize: function () {
                        for (var t = 0; t < this.tracks.length; t++) this.tracks[t].optimize();
                        return this;
                    },
                }),
                Object.assign(Qi, {
                    parse: function (t) {
                        for (var e = [], i = t.tracks, n = 1 / (t.fps || 1), r = 0, o = i.length; r !== o; ++r) e.push(Ji.parse(i[r]).scale(n));
                        return new Qi(t.name, t.duration, e);
                    },
                    toJSON: function (t) {
                        for (var e = [], i = t.tracks, n = { name: t.name, duration: t.duration, tracks: e }, r = 0, o = i.length; r !== o; ++r) e.push(Ji.toJSON(i[r]));
                        return n;
                    },
                    CreateFromMorphTargetSequence: function (t, e, i, n) {
                        for (var r = e.length, o = [], a = 0; a < r; a++) {
                            var s = [],
                                l = [];
                            s.push((a + r - 1) % r, a, (a + 1) % r), l.push(0, 1, 0);
                            var c = qa.getKeyframeOrder(s);
                            (s = qa.sortedArray(s, 1, c)), (l = qa.sortedArray(l, 1, c)), n || 0 !== s[0] || (s.push(r), l.push(l[0])), o.push(new Xi(".morphTargetInfluences[" + e[a].name + "]", s, l).scale(1 / i));
                        }
                        return new Qi(t, -1, o);
                    },
                    findByName: function (t, e) {
                        var i = t;
                        if (!Array.isArray(t)) {
                            var n = t;
                            i = (n.geometry && n.geometry.animations) || n.animations;
                        }
                        for (var r = 0; r < i.length; r++) if (i[r].name === e) return i[r];
                        return null;
                    },
                    CreateClipsFromMorphTargetSequences: function (t, e, i) {
                        for (var n = {}, r = /^([\w-]*?)([\d]+)$/, o = 0, a = t.length; o < a; o++) {
                            var s = t[o],
                                l = s.name.match(r);
                            if (l && l.length > 1) {
                                var c = l[1],
                                    u = n[c];
                                u || (n[c] = u = []), u.push(s);
                            }
                        }
                        var h = [];
                        for (var c in n) h.push(Qi.CreateFromMorphTargetSequence(c, n[c], e, i));
                        return h;
                    },
                    parseAnimation: function (t, e) {
                        if (!t) return console.error("  no animation in JSONLoader data"), null;
                        for (
                            var i = function (t, e, i, n, r) {
                                    if (0 !== i.length) {
                                        var o = [],
                                            a = [];
                                        qa.flattenJSON(i, o, a, n), 0 !== o.length && r.push(new t(e, o, a));
                                    }
                                },
                                n = [],
                                r = t.name || "default",
                                o = t.length || -1,
                                a = t.fps || 30,
                                s = t.hierarchy || [],
                                l = 0;
                            l < s.length;
                            l++
                        ) {
                            var c = s[l].keys;
                            if (c && 0 !== c.length)
                                if (c[0].morphTargets) {
                                    for (var u = {}, h = 0; h < c.length; h++) if (c[h].morphTargets) for (var d = 0; d < c[h].morphTargets.length; d++) u[c[h].morphTargets[d]] = -1;
                                    for (var p in u) {
                                        for (var f = [], m = [], d = 0; d !== c[h].morphTargets.length; ++d) {
                                            var v = c[h];
                                            f.push(v.time), m.push(v.morphTarget === p ? 1 : 0);
                                        }
                                        n.push(new Xi(".morphTargetInfluence[" + p + "]", f, m));
                                    }
                                    o = u.length * (a || 1);
                                } else {
                                    var g = ".bones[" + e[l].name + "]";
                                    i(Vi, g + ".position", c, "pos", n), i(Wi, g + ".quaternion", c, "rot", n), i(Vi, g + ".scale", c, "scl", n);
                                }
                        }
                        return 0 === n.length ? null : new Qi(r, o, n);
                    },
                }),
                Object.assign($i.prototype, {
                    load: function (t, e, i, n) {
                        var r = this;
                        new Ti(r.manager).load(
                            t,
                            function (t) {
                                e(r.parse(JSON.parse(t)));
                            },
                            i,
                            n
                        );
                    },
                    setTextures: function (t) {
                        this.textures = t;
                    },
                    parse: function (t) {
                        function e(t) {
                            return void 0 === n[t] && console.warn("THREE.MaterialLoader: Undefined texture", t), n[t];
                        }
                        var n = this.textures,
                            r = new Va[t.type]();
                        if (
                            (void 0 !== t.uuid && (r.uuid = t.uuid),
                            void 0 !== t.name && (r.name = t.name),
                            void 0 !== t.color && r.color.setHex(t.color),
                            void 0 !== t.roughness && (r.roughness = t.roughness),
                            void 0 !== t.metalness && (r.metalness = t.metalness),
                            void 0 !== t.emissive && r.emissive.setHex(t.emissive),
                            void 0 !== t.specular && r.specular.setHex(t.specular),
                            void 0 !== t.shininess && (r.shininess = t.shininess),
                            void 0 !== t.uniforms && (r.uniforms = t.uniforms),
                            void 0 !== t.vertexShader && (r.vertexShader = t.vertexShader),
                            void 0 !== t.fragmentShader && (r.fragmentShader = t.fragmentShader),
                            void 0 !== t.vertexColors && (r.vertexColors = t.vertexColors),
                            void 0 !== t.fog && (r.fog = t.fog),
                            void 0 !== t.shading && (r.shading = t.shading),
                            void 0 !== t.blending && (r.blending = t.blending),
                            void 0 !== t.side && (r.side = t.side),
                            void 0 !== t.opacity && (r.opacity = t.opacity),
                            void 0 !== t.transparent && (r.transparent = t.transparent),
                            void 0 !== t.alphaTest && (r.alphaTest = t.alphaTest),
                            void 0 !== t.depthTest && (r.depthTest = t.depthTest),
                            void 0 !== t.depthWrite && (r.depthWrite = t.depthWrite),
                            void 0 !== t.colorWrite && (r.colorWrite = t.colorWrite),
                            void 0 !== t.wireframe && (r.wireframe = t.wireframe),
                            void 0 !== t.wireframeLinewidth && (r.wireframeLinewidth = t.wireframeLinewidth),
                            void 0 !== t.wireframeLinecap && (r.wireframeLinecap = t.wireframeLinecap),
                            void 0 !== t.wireframeLinejoin && (r.wireframeLinejoin = t.wireframeLinejoin),
                            void 0 !== t.skinning && (r.skinning = t.skinning),
                            void 0 !== t.morphTargets && (r.morphTargets = t.morphTargets),
                            void 0 !== t.size && (r.size = t.size),
                            void 0 !== t.sizeAttenuation && (r.sizeAttenuation = t.sizeAttenuation),
                            void 0 !== t.map && (r.map = e(t.map)),
                            void 0 !== t.alphaMap && ((r.alphaMap = e(t.alphaMap)), (r.transparent = !0)),
                            void 0 !== t.bumpMap && (r.bumpMap = e(t.bumpMap)),
                            void 0 !== t.bumpScale && (r.bumpScale = t.bumpScale),
                            void 0 !== t.normalMap && (r.normalMap = e(t.normalMap)),
                            void 0 !== t.normalScale)
                        ) {
                            var o = t.normalScale;
                            !1 === Array.isArray(o) && (o = [o, o]), (r.normalScale = new i().fromArray(o));
                        }
                        if (
                            (void 0 !== t.displacementMap && (r.displacementMap = e(t.displacementMap)),
                            void 0 !== t.displacementScale && (r.displacementScale = t.displacementScale),
                            void 0 !== t.displacementBias && (r.displacementBias = t.displacementBias),
                            void 0 !== t.roughnessMap && (r.roughnessMap = e(t.roughnessMap)),
                            void 0 !== t.metalnessMap && (r.metalnessMap = e(t.metalnessMap)),
                            void 0 !== t.emissiveMap && (r.emissiveMap = e(t.emissiveMap)),
                            void 0 !== t.emissiveIntensity && (r.emissiveIntensity = t.emissiveIntensity),
                            void 0 !== t.specularMap && (r.specularMap = e(t.specularMap)),
                            void 0 !== t.envMap && (r.envMap = e(t.envMap)),
                            void 0 !== t.reflectivity && (r.reflectivity = t.reflectivity),
                            void 0 !== t.lightMap && (r.lightMap = e(t.lightMap)),
                            void 0 !== t.lightMapIntensity && (r.lightMapIntensity = t.lightMapIntensity),
                            void 0 !== t.aoMap && (r.aoMap = e(t.aoMap)),
                            void 0 !== t.aoMapIntensity && (r.aoMapIntensity = t.aoMapIntensity),
                            void 0 !== t.materials)
                        )
                            for (var a = 0, s = t.materials.length; a < s; a++) r.materials.push(this.parse(t.materials[a]));
                        return r;
                    },
                }),
                Object.assign(Ki.prototype, {
                    load: function (t, e, i, n) {
                        var r = this;
                        new Ti(r.manager).load(
                            t,
                            function (t) {
                                e(r.parse(JSON.parse(t)));
                            },
                            i,
                            n
                        );
                    },
                    parse: function (t) {
                        var e = new Ct(),
                            i = t.data.index,
                            n = {
                                Int8Array: Int8Array,
                                Uint8Array: Uint8Array,
                                Uint8ClampedArray: Uint8ClampedArray,
                                Int16Array: Int16Array,
                                Uint16Array: Uint16Array,
                                Int32Array: Int32Array,
                                Uint32Array: Uint32Array,
                                Float32Array: Float32Array,
                                Float64Array: Float64Array,
                            };
                        if (void 0 !== i) {
                            var r = new n[i.type](i.array);
                            e.setIndex(new mt(r, 1));
                        }
                        var o = t.data.attributes;
                        for (var a in o) {
                            var s = o[a],
                                r = new n[s.type](s.array);
                            e.addAttribute(a, new mt(r, s.itemSize, s.normalized));
                        }
                        var l = t.data.groups || t.data.drawcalls || t.data.offsets;
                        if (void 0 !== l)
                            for (var u = 0, h = l.length; u !== h; ++u) {
                                var d = l[u];
                                e.addGroup(d.start, d.count, d.materialIndex);
                            }
                        var p = t.data.boundingSphere;
                        if (void 0 !== p) {
                            var f = new c();
                            void 0 !== p.center && f.fromArray(p.center), (e.boundingSphere = new et(f, p.radius));
                        }
                        return e;
                    },
                }),
                (tn.prototype = {
                    constructor: tn,
                    crossOrigin: void 0,
                    extractUrlBase: function (t) {
                        var e = t.split("/");
                        return 1 === e.length ? "./" : (e.pop(), e.join("/") + "/");
                    },
                    initMaterials: function (t, e, i) {
                        for (var n = [], r = 0; r < t.length; ++r) n[r] = this.createMaterial(t[r], e, i);
                        return n;
                    },
                    createMaterial: (function () {
                        var t, e, i;
                        return function (n, r, o) {
                            function a(t, i, n, a, l) {
                                var c,
                                    u = r + t,
                                    h = tn.Handlers.get(u);
                                null !== h ? (c = h.load(u)) : (e.setCrossOrigin(o), (c = e.load(u))),
                                    void 0 !== i && (c.repeat.fromArray(i), 1 !== i[0] && (c.wrapS = Mo), 1 !== i[1] && (c.wrapT = Mo)),
                                    void 0 !== n && c.offset.fromArray(n),
                                    void 0 !== a && ("repeat" === a[0] && (c.wrapS = Mo), "mirror" === a[0] && (c.wrapS = Ao), "repeat" === a[1] && (c.wrapT = Mo), "mirror" === a[1] && (c.wrapT = Ao)),
                                    void 0 !== l && (c.anisotropy = l);
                                var d = Ma.generateUUID();
                                return (s[d] = c), d;
                            }
                            void 0 === t && (t = new X()), void 0 === e && (e = new Ri()), void 0 === i && (i = new $i());
                            var s = {},
                                l = { uuid: Ma.generateUUID(), type: "MeshLambertMaterial" };
                            for (var c in n) {
                                var u = n[c];
                                switch (c) {
                                    case "DbgColor":
                                    case "DbgIndex":
                                    case "opticalDensity":
                                    case "illumination":
                                        break;
                                    case "DbgName":
                                        l.name = u;
                                        break;
                                    case "blending":
                                        l.blending = Nr[u];
                                        break;
                                    case "colorAmbient":
                                    case "mapAmbient":
                                        console.warn("THREE.Loader.createMaterial:", c, "is no longer supported.");
                                        break;
                                    case "colorDiffuse":
                                        l.color = t.fromArray(u).getHex();
                                        break;
                                    case "colorSpecular":
                                        l.specular = t.fromArray(u).getHex();
                                        break;
                                    case "colorEmissive":
                                        l.emissive = t.fromArray(u).getHex();
                                        break;
                                    case "specularCoef":
                                        l.shininess = u;
                                        break;
                                    case "shading":
                                        "basic" === u.toLowerCase() && (l.type = "MeshBasicMaterial"), "phong" === u.toLowerCase() && (l.type = "MeshPhongMaterial"), "standard" === u.toLowerCase() && (l.type = "MeshStandardMaterial");
                                        break;
                                    case "mapDiffuse":
                                        l.map = a(u, n.mapDiffuseRepeat, n.mapDiffuseOffset, n.mapDiffuseWrap, n.mapDiffuseAnisotropy);
                                        break;
                                    case "mapDiffuseRepeat":
                                    case "mapDiffuseOffset":
                                    case "mapDiffuseWrap":
                                    case "mapDiffuseAnisotropy":
                                        break;
                                    case "mapEmissive":
                                        l.emissiveMap = a(u, n.mapEmissiveRepeat, n.mapEmissiveOffset, n.mapEmissiveWrap, n.mapEmissiveAnisotropy);
                                        break;
                                    case "mapEmissiveRepeat":
                                    case "mapEmissiveOffset":
                                    case "mapEmissiveWrap":
                                    case "mapEmissiveAnisotropy":
                                        break;
                                    case "mapLight":
                                        l.lightMap = a(u, n.mapLightRepeat, n.mapLightOffset, n.mapLightWrap, n.mapLightAnisotropy);
                                        break;
                                    case "mapLightRepeat":
                                    case "mapLightOffset":
                                    case "mapLightWrap":
                                    case "mapLightAnisotropy":
                                        break;
                                    case "mapAO":
                                        l.aoMap = a(u, n.mapAORepeat, n.mapAOOffset, n.mapAOWrap, n.mapAOAnisotropy);
                                        break;
                                    case "mapAORepeat":
                                    case "mapAOOffset":
                                    case "mapAOWrap":
                                    case "mapAOAnisotropy":
                                        break;
                                    case "mapBump":
                                        l.bumpMap = a(u, n.mapBumpRepeat, n.mapBumpOffset, n.mapBumpWrap, n.mapBumpAnisotropy);
                                        break;
                                    case "mapBumpScale":
                                        l.bumpScale = u;
                                        break;
                                    case "mapBumpRepeat":
                                    case "mapBumpOffset":
                                    case "mapBumpWrap":
                                    case "mapBumpAnisotropy":
                                        break;
                                    case "mapNormal":
                                        l.normalMap = a(u, n.mapNormalRepeat, n.mapNormalOffset, n.mapNormalWrap, n.mapNormalAnisotropy);
                                        break;
                                    case "mapNormalFactor":
                                        l.normalScale = [u, u];
                                        break;
                                    case "mapNormalRepeat":
                                    case "mapNormalOffset":
                                    case "mapNormalWrap":
                                    case "mapNormalAnisotropy":
                                        break;
                                    case "mapSpecular":
                                        l.specularMap = a(u, n.mapSpecularRepeat, n.mapSpecularOffset, n.mapSpecularWrap, n.mapSpecularAnisotropy);
                                        break;
                                    case "mapSpecularRepeat":
                                    case "mapSpecularOffset":
                                    case "mapSpecularWrap":
                                    case "mapSpecularAnisotropy":
                                        break;
                                    case "mapMetalness":
                                        l.metalnessMap = a(u, n.mapMetalnessRepeat, n.mapMetalnessOffset, n.mapMetalnessWrap, n.mapMetalnessAnisotropy);
                                        break;
                                    case "mapMetalnessRepeat":
                                    case "mapMetalnessOffset":
                                    case "mapMetalnessWrap":
                                    case "mapMetalnessAnisotropy":
                                        break;
                                    case "mapRoughness":
                                        l.roughnessMap = a(u, n.mapRoughnessRepeat, n.mapRoughnessOffset, n.mapRoughnessWrap, n.mapRoughnessAnisotropy);
                                        break;
                                    case "mapRoughnessRepeat":
                                    case "mapRoughnessOffset":
                                    case "mapRoughnessWrap":
                                    case "mapRoughnessAnisotropy":
                                        break;
                                    case "mapAlpha":
                                        l.alphaMap = a(u, n.mapAlphaRepeat, n.mapAlphaOffset, n.mapAlphaWrap, n.mapAlphaAnisotropy);
                                        break;
                                    case "mapAlphaRepeat":
                                    case "mapAlphaOffset":
                                    case "mapAlphaWrap":
                                    case "mapAlphaAnisotropy":
                                        break;
                                    case "flipSided":
                                        l.side = Er;
                                        break;
                                    case "doubleSided":
                                        l.side = Mr;
                                        break;
                                    case "transparency":
                                        console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"), (l.opacity = u);
                                        break;
                                    case "depthTest":
                                    case "depthWrite":
                                    case "colorWrite":
                                    case "opacity":
                                    case "reflectivity":
                                    case "transparent":
                                    case "visible":
                                    case "wireframe":
                                        l[c] = u;
                                        break;
                                    case "vertexColors":
                                        !0 === u && (l.vertexColors = Pr), "face" === u && (l.vertexColors = Cr);
                                        break;
                                    default:
                                        console.error("THREE.Loader.createMaterial: Unsupported", c, u);
                                }
                            }
                            return "MeshBasicMaterial" === l.type && delete l.emissive, "MeshPhongMaterial" !== l.type && delete l.specular, l.opacity < 1 && (l.transparent = !0), i.setTextures(s), i.parse(l);
                        };
                    })(),
                }),
                (tn.Handlers = {
                    handlers: [],
                    add: function (t, e) {
                        this.handlers.push(t, e);
                    },
                    get: function (t) {
                        for (var e = this.handlers, i = 0, n = e.length; i < n; i += 2) {
                            var r = e[i],
                                o = e[i + 1];
                            if (r.test(t)) return o;
                        }
                        return null;
                    },
                }),
                Object.assign(en.prototype, {
                    load: function (t, e, i, n) {
                        var r = this,
                            o = this.texturePath && "string" == typeof this.texturePath ? this.texturePath : tn.prototype.extractUrlBase(t),
                            a = new Ti(this.manager);
                        a.setWithCredentials(this.withCredentials),
                            a.load(
                                t,
                                function (i) {
                                    var n = JSON.parse(i),
                                        a = n.metadata;
                                    if (void 0 !== a) {
                                        var s = a.type;
                                        if (void 0 !== s) {
                                            if ("object" === s.toLowerCase()) return void console.error("THREE.JSONLoader: " + t + " should be loaded with THREE.ObjectLoader instead.");
                                            if ("scene" === s.toLowerCase()) return void console.error("THREE.JSONLoader: " + t + " should be loaded with THREE.SceneLoader instead.");
                                        }
                                    }
                                    var l = r.parse(n, o);
                                    e(l.geometry, l.materials);
                                },
                                i,
                                n
                            );
                    },
                    setTexturePath: function (t) {
                        this.texturePath = t;
                    },
                    parse: function (t, e) {
                        var n = new St(),
                            r = void 0 !== t.scale ? 1 / t.scale : 1;
                        if (
                            ((function (e) {
                                function r(t, e) {
                                    return t & (1 << e);
                                }
                                var o,
                                    a,
                                    s,
                                    l,
                                    u,
                                    h,
                                    d,
                                    p,
                                    f,
                                    m,
                                    v,
                                    g,
                                    y,
                                    _,
                                    b,
                                    x,
                                    w,
                                    T,
                                    E,
                                    M,
                                    S,
                                    A,
                                    R,
                                    C,
                                    P,
                                    D,
                                    O,
                                    L = t.faces,
                                    j = t.vertices,
                                    k = t.normals,
                                    I = t.colors,
                                    N = 0;
                                if (void 0 !== t.uvs) {
                                    for (o = 0; o < t.uvs.length; o++) t.uvs[o].length && N++;
                                    for (o = 0; o < N; o++) n.faceVertexUvs[o] = [];
                                }
                                for (l = 0, u = j.length; l < u; ) (T = new c()), (T.x = j[l++] * e), (T.y = j[l++] * e), (T.z = j[l++] * e), n.vertices.push(T);
                                for (l = 0, u = L.length; l < u; )
                                    if (((m = L[l++]), (v = r(m, 0)), (g = r(m, 1)), (y = r(m, 3)), (_ = r(m, 4)), (b = r(m, 5)), (x = r(m, 6)), (w = r(m, 7)), v)) {
                                        if (
                                            ((M = new pt()),
                                            (M.a = L[l]),
                                            (M.b = L[l + 1]),
                                            (M.c = L[l + 3]),
                                            (S = new pt()),
                                            (S.a = L[l + 1]),
                                            (S.b = L[l + 2]),
                                            (S.c = L[l + 3]),
                                            (l += 4),
                                            g && ((f = L[l++]), (M.materialIndex = f), (S.materialIndex = f)),
                                            (s = n.faces.length),
                                            y)
                                        )
                                            for (o = 0; o < N; o++)
                                                for (C = t.uvs[o], n.faceVertexUvs[o][s] = [], n.faceVertexUvs[o][s + 1] = [], a = 0; a < 4; a++)
                                                    (p = L[l++]), (D = C[2 * p]), (O = C[2 * p + 1]), (P = new i(D, O)), 2 !== a && n.faceVertexUvs[o][s].push(P), 0 !== a && n.faceVertexUvs[o][s + 1].push(P);
                                        if ((_ && ((d = 3 * L[l++]), M.normal.set(k[d++], k[d++], k[d]), S.normal.copy(M.normal)), b))
                                            for (o = 0; o < 4; o++) (d = 3 * L[l++]), (R = new c(k[d++], k[d++], k[d])), 2 !== o && M.vertexNormals.push(R), 0 !== o && S.vertexNormals.push(R);
                                        if ((x && ((h = L[l++]), (A = I[h]), M.color.setHex(A), S.color.setHex(A)), w))
                                            for (o = 0; o < 4; o++) (h = L[l++]), (A = I[h]), 2 !== o && M.vertexColors.push(new X(A)), 0 !== o && S.vertexColors.push(new X(A));
                                        n.faces.push(M), n.faces.push(S);
                                    } else {
                                        if (((E = new pt()), (E.a = L[l++]), (E.b = L[l++]), (E.c = L[l++]), g && ((f = L[l++]), (E.materialIndex = f)), (s = n.faces.length), y))
                                            for (o = 0; o < N; o++) for (C = t.uvs[o], n.faceVertexUvs[o][s] = [], a = 0; a < 3; a++) (p = L[l++]), (D = C[2 * p]), (O = C[2 * p + 1]), (P = new i(D, O)), n.faceVertexUvs[o][s].push(P);
                                        if ((_ && ((d = 3 * L[l++]), E.normal.set(k[d++], k[d++], k[d])), b)) for (o = 0; o < 3; o++) (d = 3 * L[l++]), (R = new c(k[d++], k[d++], k[d])), E.vertexNormals.push(R);
                                        if ((x && ((h = L[l++]), E.color.setHex(I[h])), w)) for (o = 0; o < 3; o++) (h = L[l++]), E.vertexColors.push(new X(I[h]));
                                        n.faces.push(E);
                                    }
                            })(r),
                            (function () {
                                var e = void 0 !== t.influencesPerVertex ? t.influencesPerVertex : 2;
                                if (t.skinWeights)
                                    for (var i = 0, r = t.skinWeights.length; i < r; i += e) {
                                        var a = t.skinWeights[i],
                                            s = e > 1 ? t.skinWeights[i + 1] : 0,
                                            l = e > 2 ? t.skinWeights[i + 2] : 0,
                                            c = e > 3 ? t.skinWeights[i + 3] : 0;
                                        n.skinWeights.push(new o(a, s, l, c));
                                    }
                                if (t.skinIndices)
                                    for (var i = 0, r = t.skinIndices.length; i < r; i += e) {
                                        var u = t.skinIndices[i],
                                            h = e > 1 ? t.skinIndices[i + 1] : 0,
                                            d = e > 2 ? t.skinIndices[i + 2] : 0,
                                            p = e > 3 ? t.skinIndices[i + 3] : 0;
                                        n.skinIndices.push(new o(u, h, d, p));
                                    }
                                (n.bones = t.bones),
                                    n.bones &&
                                        n.bones.length > 0 &&
                                        (n.skinWeights.length !== n.skinIndices.length || n.skinIndices.length !== n.vertices.length) &&
                                        console.warn("When skinning, number of vertices (" + n.vertices.length + "), skinIndices (" + n.skinIndices.length + "), and skinWeights (" + n.skinWeights.length + ") should match.");
                            })(),
                            (function (e) {
                                if (void 0 !== t.morphTargets)
                                    for (var i = 0, r = t.morphTargets.length; i < r; i++) {
                                        (n.morphTargets[i] = {}), (n.morphTargets[i].name = t.morphTargets[i].name), (n.morphTargets[i].vertices = []);
                                        for (var o = n.morphTargets[i].vertices, a = t.morphTargets[i].vertices, s = 0, l = a.length; s < l; s += 3) {
                                            var u = new c();
                                            (u.x = a[s] * e), (u.y = a[s + 1] * e), (u.z = a[s + 2] * e), o.push(u);
                                        }
                                    }
                                if (void 0 !== t.morphColors && t.morphColors.length > 0) {
                                    console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');
                                    for (var h = n.faces, d = t.morphColors[0].colors, i = 0, r = h.length; i < r; i++) h[i].color.fromArray(d, 3 * i);
                                }
                            })(r),
                            (function () {
                                var e = [],
                                    i = [];
                                void 0 !== t.animation && i.push(t.animation), void 0 !== t.animations && (t.animations.length ? (i = i.concat(t.animations)) : i.push(t.animations));
                                for (var r = 0; r < i.length; r++) {
                                    var o = Qi.parseAnimation(i[r], n.bones);
                                    o && e.push(o);
                                }
                                if (n.morphTargets) {
                                    var a = Qi.CreateClipsFromMorphTargetSequences(n.morphTargets, 10);
                                    e = e.concat(a);
                                }
                                e.length > 0 && (n.animations = e);
                            })(),
                            n.computeFaceNormals(),
                            n.computeBoundingSphere(),
                            void 0 === t.materials || 0 === t.materials.length)
                        )
                            return { geometry: n };
                        var a = tn.prototype.initMaterials(t.materials, e, this.crossOrigin);
                        return { geometry: n, materials: a };
                    },
                }),
                Object.assign(nn.prototype, {
                    load: function (t, e, i, n) {
                        "" === this.texturePath && (this.texturePath = t.substring(0, t.lastIndexOf("/") + 1));
                        var r = this;
                        new Ti(r.manager).load(
                            t,
                            function (t) {
                                r.parse(JSON.parse(t), e);
                            },
                            i,
                            n
                        );
                    },
                    setTexturePath: function (t) {
                        this.texturePath = t;
                    },
                    setCrossOrigin: function (t) {
                        this.crossOrigin = t;
                    },
                    parse: function (t, e) {
                        var i = this.parseGeometries(t.geometries),
                            n = this.parseImages(t.images, function () {
                                void 0 !== e && e(a);
                            }),
                            r = this.parseTextures(t.textures, n),
                            o = this.parseMaterials(t.materials, r),
                            a = this.parseObject(t.object, i, o);
                        return t.animations && (a.animations = this.parseAnimations(t.animations)), (void 0 !== t.images && 0 !== t.images.length) || (void 0 !== e && e(a)), a;
                    },
                    parseGeometries: function (t) {
                        var e = {};
                        if (void 0 !== t)
                            for (var i = new en(), n = new Ki(), r = 0, o = t.length; r < o; r++) {
                                var a,
                                    s = t[r];
                                switch (s.type) {
                                    case "PlaneGeometry":
                                    case "PlaneBufferGeometry":
                                        a = new za[s.type](s.width, s.height, s.widthSegments, s.heightSegments);
                                        break;
                                    case "BoxGeometry":
                                    case "BoxBufferGeometry":
                                    case "CubeGeometry":
                                        a = new za[s.type](s.width, s.height, s.depth, s.widthSegments, s.heightSegments, s.depthSegments);
                                        break;
                                    case "CircleGeometry":
                                    case "CircleBufferGeometry":
                                        a = new za[s.type](s.radius, s.segments, s.thetaStart, s.thetaLength);
                                        break;
                                    case "CylinderGeometry":
                                    case "CylinderBufferGeometry":
                                        a = new za[s.type](s.radiusTop, s.radiusBottom, s.height, s.radialSegments, s.heightSegments, s.openEnded, s.thetaStart, s.thetaLength);
                                        break;
                                    case "ConeGeometry":
                                    case "ConeBufferGeometry":
                                        a = new za[s.type](s.radius, s.height, s.radialSegments, s.heightSegments, s.openEnded, s.thetaStart, s.thetaLength);
                                        break;
                                    case "SphereGeometry":
                                    case "SphereBufferGeometry":
                                        a = new za[s.type](s.radius, s.widthSegments, s.heightSegments, s.phiStart, s.phiLength, s.thetaStart, s.thetaLength);
                                        break;
                                    case "DodecahedronGeometry":
                                    case "IcosahedronGeometry":
                                    case "OctahedronGeometry":
                                    case "TetrahedronGeometry":
                                        a = new za[s.type](s.radius, s.detail);
                                        break;
                                    case "RingGeometry":
                                    case "RingBufferGeometry":
                                        a = new za[s.type](s.innerRadius, s.outerRadius, s.thetaSegments, s.phiSegments, s.thetaStart, s.thetaLength);
                                        break;
                                    case "TorusGeometry":
                                    case "TorusBufferGeometry":
                                        a = new za[s.type](s.radius, s.tube, s.radialSegments, s.tubularSegments, s.arc);
                                        break;
                                    case "TorusKnotGeometry":
                                    case "TorusKnotBufferGeometry":
                                        a = new za[s.type](s.radius, s.tube, s.tubularSegments, s.radialSegments, s.p, s.q);
                                        break;
                                    case "LatheGeometry":
                                    case "LatheBufferGeometry":
                                        a = new za[s.type](s.points, s.segments, s.phiStart, s.phiLength);
                                        break;
                                    case "BufferGeometry":
                                        a = n.parse(s);
                                        break;
                                    case "Geometry":
                                        a = i.parse(s.data, this.texturePath).geometry;
                                        break;
                                    default:
                                        console.warn('THREE.ObjectLoader: Unsupported geometry type "' + s.type + '"');
                                        continue;
                                }
                                (a.uuid = s.uuid), void 0 !== s.name && (a.name = s.name), (e[s.uuid] = a);
                            }
                        return e;
                    },
                    parseMaterials: function (t, e) {
                        var i = {};
                        if (void 0 !== t) {
                            var n = new $i();
                            n.setTextures(e);
                            for (var r = 0, o = t.length; r < o; r++) {
                                var a = n.parse(t[r]);
                                i[a.uuid] = a;
                            }
                        }
                        return i;
                    },
                    parseAnimations: function (t) {
                        for (var e = [], i = 0; i < t.length; i++) {
                            var n = Qi.parse(t[i]);
                            e.push(n);
                        }
                        return e;
                    },
                    parseImages: function (t, e) {
                        var i = this,
                            n = {};
                        if (void 0 !== t && t.length > 0) {
                            var r = new wi(e),
                                o = new Si(r);
                            o.setCrossOrigin(this.crossOrigin);
                            for (var a = 0, s = t.length; a < s; a++) {
                                var l = t[a],
                                    c = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(l.url) ? l.url : i.texturePath + l.url;
                                n[l.uuid] = (function (t) {
                                    return (
                                        i.manager.itemStart(t),
                                        o.load(
                                            t,
                                            function () {
                                                i.manager.itemEnd(t);
                                            },
                                            void 0,
                                            function () {
                                                i.manager.itemError(t);
                                            }
                                        )
                                    );
                                })(c);
                            }
                        }
                        return n;
                    },
                    parseTextures: function (t, e) {
                        function i(t, e) {
                            return "number" == typeof t ? t : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", t), e[t]);
                        }
                        var r = {};
                        if (void 0 !== t)
                            for (var o = 0, a = t.length; o < a; o++) {
                                var s = t[o];
                                void 0 === s.image && console.warn('THREE.ObjectLoader: No "image" specified for', s.uuid), void 0 === e[s.image] && console.warn("THREE.ObjectLoader: Undefined image", s.image);
                                var l = new n(e[s.image]);
                                (l.needsUpdate = !0),
                                    (l.uuid = s.uuid),
                                    void 0 !== s.name && (l.name = s.name),
                                    void 0 !== s.mapping && (l.mapping = i(s.mapping, Eo)),
                                    void 0 !== s.offset && l.offset.fromArray(s.offset),
                                    void 0 !== s.repeat && l.repeat.fromArray(s.repeat),
                                    void 0 !== s.wrap && ((l.wrapS = i(s.wrap[0], Ro)), (l.wrapT = i(s.wrap[1], Ro))),
                                    void 0 !== s.minFilter && (l.minFilter = i(s.minFilter, ko)),
                                    void 0 !== s.magFilter && (l.magFilter = i(s.magFilter, ko)),
                                    void 0 !== s.anisotropy && (l.anisotropy = s.anisotropy),
                                    void 0 !== s.flipY && (l.flipY = s.flipY),
                                    (r[s.uuid] = l);
                            }
                        return r;
                    },
                    parseObject: (function () {
                        var t = new u();
                        return function (e, i, n) {
                            function r(t) {
                                return void 0 === i[t] && console.warn("THREE.ObjectLoader: Undefined geometry", t), i[t];
                            }
                            function o(t) {
                                if (void 0 !== t) return void 0 === n[t] && console.warn("THREE.ObjectLoader: Undefined material", t), n[t];
                            }
                            var a;
                            switch (e.type) {
                                case "Scene":
                                    (a = new he()),
                                        void 0 !== e.background && Number.isInteger(e.background) && (a.background = new X(e.background)),
                                        void 0 !== e.fog && ("Fog" === e.fog.type ? (a.fog = new ue(e.fog.color, e.fog.near, e.fog.far)) : "FogExp2" === e.fog.type && (a.fog = new ce(e.fog.color, e.fog.density)));
                                    break;
                                case "PerspectiveCamera":
                                    (a = new jt(e.fov, e.aspect, e.near, e.far)),
                                        void 0 !== e.focus && (a.focus = e.focus),
                                        void 0 !== e.zoom && (a.zoom = e.zoom),
                                        void 0 !== e.filmGauge && (a.filmGauge = e.filmGauge),
                                        void 0 !== e.filmOffset && (a.filmOffset = e.filmOffset),
                                        void 0 !== e.view && (a.view = Object.assign({}, e.view));
                                    break;
                                case "OrthographicCamera":
                                    a = new kt(e.left, e.right, e.top, e.bottom, e.near, e.far);
                                    break;
                                case "AmbientLight":
                                    a = new Ni(e.color, e.intensity);
                                    break;
                                case "DirectionalLight":
                                    a = new Ii(e.color, e.intensity);
                                    break;
                                case "PointLight":
                                    a = new ji(e.color, e.intensity, e.distance, e.decay);
                                    break;
                                case "SpotLight":
                                    a = new Li(e.color, e.intensity, e.distance, e.angle, e.penumbra, e.decay);
                                    break;
                                case "HemisphereLight":
                                    a = new Pi(e.color, e.groundColor, e.intensity);
                                    break;
                                case "Mesh":
                                    var s = r(e.geometry),
                                        l = o(e.material);
                                    a = s.bones && s.bones.length > 0 ? new _e(s, l) : new Pt(s, l);
                                    break;
                                case "LOD":
                                    a = new me();
                                    break;
                                case "Line":
                                    a = new xe(r(e.geometry), o(e.material), e.mode);
                                    break;
                                case "LineSegments":
                                    a = new we(r(e.geometry), o(e.material));
                                    break;
                                case "PointCloud":
                                case "Points":
                                    a = new Ee(r(e.geometry), o(e.material));
                                    break;
                                case "Sprite":
                                    a = new fe(o(e.material));
                                    break;
                                case "Group":
                                    a = new Me();
                                    break;
                                default:
                                    a = new ct();
                            }
                            if (
                                ((a.uuid = e.uuid),
                                void 0 !== e.name && (a.name = e.name),
                                void 0 !== e.matrix
                                    ? (t.fromArray(e.matrix), t.decompose(a.position, a.quaternion, a.scale))
                                    : (void 0 !== e.position && a.position.fromArray(e.position),
                                      void 0 !== e.rotation && a.rotation.fromArray(e.rotation),
                                      void 0 !== e.quaternion && a.quaternion.fromArray(e.quaternion),
                                      void 0 !== e.scale && a.scale.fromArray(e.scale)),
                                void 0 !== e.castShadow && (a.castShadow = e.castShadow),
                                void 0 !== e.receiveShadow && (a.receiveShadow = e.receiveShadow),
                                e.shadow &&
                                    (void 0 !== e.shadow.bias && (a.shadow.bias = e.shadow.bias),
                                    void 0 !== e.shadow.radius && (a.shadow.radius = e.shadow.radius),
                                    void 0 !== e.shadow.mapSize && a.shadow.mapSize.fromArray(e.shadow.mapSize),
                                    void 0 !== e.shadow.camera && (a.shadow.camera = this.parseObject(e.shadow.camera))),
                                void 0 !== e.visible && (a.visible = e.visible),
                                void 0 !== e.userData && (a.userData = e.userData),
                                void 0 !== e.children)
                            )
                                for (var c in e.children) a.add(this.parseObject(e.children[c], i, n));
                            if ("LOD" === e.type)
                                for (var u = e.levels, h = 0; h < u.length; h++) {
                                    var d = u[h],
                                        c = a.getObjectByProperty("uuid", d.object);
                                    void 0 !== c && a.addLevel(c, d.distance);
                                }
                            return a;
                        };
                    })(),
                }),
                (rn.prototype = {
                    constructor: rn,
                    getPoint: function (t) {
                        return console.warn("THREE.Curve: Warning, getPoint() not implemented!"), null;
                    },
                    getPointAt: function (t) {
                        var e = this.getUtoTmapping(t);
                        return this.getPoint(e);
                    },
                    getPoints: function (t) {
                        t || (t = 5);
                        for (var e = [], i = 0; i <= t; i++) e.push(this.getPoint(i / t));
                        return e;
                    },
                    getSpacedPoints: function (t) {
                        t || (t = 5);
                        for (var e = [], i = 0; i <= t; i++) e.push(this.getPointAt(i / t));
                        return e;
                    },
                    getLength: function () {
                        var t = this.getLengths();
                        return t[t.length - 1];
                    },
                    getLengths: function (t) {
                        if ((t || (t = this.__arcLengthDivisions ? this.__arcLengthDivisions : 200), this.cacheArcLengths && this.cacheArcLengths.length === t + 1 && !this.needsUpdate)) return this.cacheArcLengths;
                        this.needsUpdate = !1;
                        var e,
                            i,
                            n = [],
                            r = this.getPoint(0),
                            o = 0;
                        for (n.push(0), i = 1; i <= t; i++) (e = this.getPoint(i / t)), (o += e.distanceTo(r)), n.push(o), (r = e);
                        return (this.cacheArcLengths = n), n;
                    },
                    updateArcLengths: function () {
                        (this.needsUpdate = !0), this.getLengths();
                    },
                    getUtoTmapping: function (t, e) {
                        var i,
                            n = this.getLengths(),
                            r = 0,
                            o = n.length;
                        i = e || t * n[o - 1];
                        for (var a, s = 0, l = o - 1; s <= l; )
                            if (((r = Math.floor(s + (l - s) / 2)), (a = n[r] - i) < 0)) s = r + 1;
                            else {
                                if (!(a > 0)) {
                                    l = r;
                                    break;
                                }
                                l = r - 1;
                            }
                        if (((r = l), n[r] === i)) {
                            var c = r / (o - 1);
                            return c;
                        }
                        var u = n[r],
                            h = n[r + 1],
                            d = h - u,
                            p = (i - u) / d,
                            c = (r + p) / (o - 1);
                        return c;
                    },
                    getTangent: function (t) {
                        var e = t - 1e-4,
                            i = t + 1e-4;
                        e < 0 && (e = 0), i > 1 && (i = 1);
                        var n = this.getPoint(e);
                        return this.getPoint(i).clone().sub(n).normalize();
                    },
                    getTangentAt: function (t) {
                        var e = this.getUtoTmapping(t);
                        return this.getTangent(e);
                    },
                    computeFrenetFrames: function (t, e) {
                        var i,
                            n,
                            r,
                            o = new c(),
                            a = [],
                            s = [],
                            l = [],
                            h = new c(),
                            d = new u();
                        for (i = 0; i <= t; i++) (n = i / t), (a[i] = this.getTangentAt(n)), a[i].normalize();
                        (s[0] = new c()), (l[0] = new c());
                        var p = Number.MAX_VALUE,
                            f = Math.abs(a[0].x),
                            m = Math.abs(a[0].y),
                            v = Math.abs(a[0].z);
                        for (
                            f <= p && ((p = f), o.set(1, 0, 0)), m <= p && ((p = m), o.set(0, 1, 0)), v <= p && o.set(0, 0, 1), h.crossVectors(a[0], o).normalize(), s[0].crossVectors(a[0], h), l[0].crossVectors(a[0], s[0]), i = 1;
                            i <= t;
                            i++
                        )
                            (s[i] = s[i - 1].clone()),
                                (l[i] = l[i - 1].clone()),
                                h.crossVectors(a[i - 1], a[i]),
                                h.length() > Number.EPSILON && (h.normalize(), (r = Math.acos(Ma.clamp(a[i - 1].dot(a[i]), -1, 1))), s[i].applyMatrix4(d.makeRotationAxis(h, r))),
                                l[i].crossVectors(a[i], s[i]);
                        if (!0 === e)
                            for (r = Math.acos(Ma.clamp(s[0].dot(s[t]), -1, 1)), r /= t, a[0].dot(h.crossVectors(s[0], s[t])) > 0 && (r = -r), i = 1; i <= t; i++)
                                s[i].applyMatrix4(d.makeRotationAxis(a[i], r * i)), l[i].crossVectors(a[i], s[i]);
                        return { tangents: a, normals: s, binormals: l };
                    },
                }),
                (rn.create = function (t, e) {
                    return (t.prototype = Object.create(rn.prototype)), (t.prototype.constructor = t), (t.prototype.getPoint = e), t;
                }),
                (on.prototype = Object.create(rn.prototype)),
                (on.prototype.constructor = on),
                (on.prototype.isLineCurve = !0),
                (on.prototype.getPoint = function (t) {
                    if (1 === t) return this.v2.clone();
                    var e = this.v2.clone().sub(this.v1);
                    return e.multiplyScalar(t).add(this.v1), e;
                }),
                (on.prototype.getPointAt = function (t) {
                    return this.getPoint(t);
                }),
                (on.prototype.getTangent = function (t) {
                    return this.v2.clone().sub(this.v1).normalize();
                }),
                (an.prototype = Object.assign(Object.create(rn.prototype), {
                    constructor: an,
                    add: function (t) {
                        this.curves.push(t);
                    },
                    closePath: function () {
                        var t = this.curves[0].getPoint(0),
                            e = this.curves[this.curves.length - 1].getPoint(1);
                        t.equals(e) || this.curves.push(new on(e, t));
                    },
                    getPoint: function (t) {
                        for (var e = t * this.getLength(), i = this.getCurveLengths(), n = 0; n < i.length; ) {
                            if (i[n] >= e) {
                                var r = i[n] - e,
                                    o = this.curves[n],
                                    a = o.getLength(),
                                    s = 0 === a ? 0 : 1 - r / a;
                                return o.getPointAt(s);
                            }
                            n++;
                        }
                        return null;
                    },
                    getLength: function () {
                        var t = this.getCurveLengths();
                        return t[t.length - 1];
                    },
                    updateArcLengths: function () {
                        (this.needsUpdate = !0), (this.cacheLengths = null), this.getLengths();
                    },
                    getCurveLengths: function () {
                        if (this.cacheLengths && this.cacheLengths.length === this.curves.length) return this.cacheLengths;
                        for (var t = [], e = 0, i = 0, n = this.curves.length; i < n; i++) (e += this.curves[i].getLength()), t.push(e);
                        return (this.cacheLengths = t), t;
                    },
                    getSpacedPoints: function (t) {
                        t || (t = 40);
                        for (var e = [], i = 0; i <= t; i++) e.push(this.getPoint(i / t));
                        return this.autoClose && e.push(e[0]), e;
                    },
                    getPoints: function (t) {
                        t = t || 12;
                        for (var e, i = [], n = 0, r = this.curves; n < r.length; n++)
                            for (var o = r[n], a = o && o.isEllipseCurve ? 2 * t : o && o.isLineCurve ? 1 : o && o.isSplineCurve ? t * o.points.length : t, s = o.getPoints(a), l = 0; l < s.length; l++) {
                                var c = s[l];
                                (e && e.equals(c)) || (i.push(c), (e = c));
                            }
                        return this.autoClose && i.length > 1 && !i[i.length - 1].equals(i[0]) && i.push(i[0]), i;
                    },
                    createPointsGeometry: function (t) {
                        var e = this.getPoints(t);
                        return this.createGeometry(e);
                    },
                    createSpacedPointsGeometry: function (t) {
                        var e = this.getSpacedPoints(t);
                        return this.createGeometry(e);
                    },
                    createGeometry: function (t) {
                        for (var e = new St(), i = 0, n = t.length; i < n; i++) {
                            var r = t[i];
                            e.vertices.push(new c(r.x, r.y, r.z || 0));
                        }
                        return e;
                    },
                })),
                (sn.prototype = Object.create(rn.prototype)),
                (sn.prototype.constructor = sn),
                (sn.prototype.isEllipseCurve = !0),
                (sn.prototype.getPoint = function (t) {
                    for (var e = 2 * Math.PI, n = this.aEndAngle - this.aStartAngle, r = Math.abs(n) < Number.EPSILON; n < 0; ) n += e;
                    for (; n > e; ) n -= e;
                    n < Number.EPSILON && (n = r ? 0 : e), !0 !== this.aClockwise || r || (n === e ? (n = -e) : (n -= e));
                    var o = this.aStartAngle + t * n,
                        a = this.aX + this.xRadius * Math.cos(o),
                        s = this.aY + this.yRadius * Math.sin(o);
                    if (0 !== this.aRotation) {
                        var l = Math.cos(this.aRotation),
                            c = Math.sin(this.aRotation),
                            u = a - this.aX,
                            h = s - this.aY;
                        (a = u * l - h * c + this.aX), (s = u * c + h * l + this.aY);
                    }
                    return new i(a, s);
                });
            var Za = {
                tangentQuadraticBezier: function (t, e, i, n) {
                    return 2 * (1 - t) * (i - e) + 2 * t * (n - i);
                },
                tangentCubicBezier: function (t, e, i, n, r) {
                    return -3 * e * (1 - t) * (1 - t) + 3 * i * (1 - t) * (1 - t) - 6 * t * i * (1 - t) + 6 * t * n * (1 - t) - 3 * t * t * n + 3 * t * t * r;
                },
                tangentSpline: function (t, e, i, n, r) {
                    return 6 * t * t - 6 * t + (3 * t * t - 4 * t + 1) + (-6 * t * t + 6 * t) + (3 * t * t - 2 * t);
                },
                interpolate: function (t, e, i, n, r) {
                    var o = 0.5 * (i - t),
                        a = 0.5 * (n - e),
                        s = r * r;
                    return (2 * e - 2 * i + o + a) * (r * s) + (-3 * e + 3 * i - 2 * o - a) * s + o * r + e;
                },
            };
            (ln.prototype = Object.create(rn.prototype)),
                (ln.prototype.constructor = ln),
                (ln.prototype.isSplineCurve = !0),
                (ln.prototype.getPoint = function (t) {
                    var e = this.points,
                        n = (e.length - 1) * t,
                        r = Math.floor(n),
                        o = n - r,
                        a = e[0 === r ? r : r - 1],
                        s = e[r],
                        l = e[r > e.length - 2 ? e.length - 1 : r + 1],
                        c = e[r > e.length - 3 ? e.length - 1 : r + 2],
                        u = Za.interpolate;
                    return new i(u(a.x, s.x, l.x, c.x, o), u(a.y, s.y, l.y, c.y, o));
                }),
                (cn.prototype = Object.create(rn.prototype)),
                (cn.prototype.constructor = cn),
                (cn.prototype.getPoint = function (t) {
                    var e = Ga.b3;
                    return new i(e(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x), e(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y));
                }),
                (cn.prototype.getTangent = function (t) {
                    var e = Za.tangentCubicBezier;
                    return new i(e(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x), e(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y)).normalize();
                }),
                (un.prototype = Object.create(rn.prototype)),
                (un.prototype.constructor = un),
                (un.prototype.getPoint = function (t) {
                    var e = Ga.b2;
                    return new i(e(t, this.v0.x, this.v1.x, this.v2.x), e(t, this.v0.y, this.v1.y, this.v2.y));
                }),
                (un.prototype.getTangent = function (t) {
                    var e = Za.tangentQuadraticBezier;
                    return new i(e(t, this.v0.x, this.v1.x, this.v2.x), e(t, this.v0.y, this.v1.y, this.v2.y)).normalize();
                });
            var Ja = Object.assign(Object.create(an.prototype), {
                fromPoints: function (t) {
                    this.moveTo(t[0].x, t[0].y);
                    for (var e = 1, i = t.length; e < i; e++) this.lineTo(t[e].x, t[e].y);
                },
                moveTo: function (t, e) {
                    this.currentPoint.set(t, e);
                },
                lineTo: function (t, e) {
                    var n = new on(this.currentPoint.clone(), new i(t, e));
                    this.curves.push(n), this.currentPoint.set(t, e);
                },
                quadraticCurveTo: function (t, e, n, r) {
                    var o = new un(this.currentPoint.clone(), new i(t, e), new i(n, r));
                    this.curves.push(o), this.currentPoint.set(n, r);
                },
                bezierCurveTo: function (t, e, n, r, o, a) {
                    var s = new cn(this.currentPoint.clone(), new i(t, e), new i(n, r), new i(o, a));
                    this.curves.push(s), this.currentPoint.set(o, a);
                },
                splineThru: function (t) {
                    var e = [this.currentPoint.clone()].concat(t),
                        i = new ln(e);
                    this.curves.push(i), this.currentPoint.copy(t[t.length - 1]);
                },
                arc: function (t, e, i, n, r, o) {
                    var a = this.currentPoint.x,
                        s = this.currentPoint.y;
                    this.absarc(t + a, e + s, i, n, r, o);
                },
                absarc: function (t, e, i, n, r, o) {
                    this.absellipse(t, e, i, i, n, r, o);
                },
                ellipse: function (t, e, i, n, r, o, a, s) {
                    var l = this.currentPoint.x,
                        c = this.currentPoint.y;
                    this.absellipse(t + l, e + c, i, n, r, o, a, s);
                },
                absellipse: function (t, e, i, n, r, o, a, s) {
                    var l = new sn(t, e, i, n, r, o, a, s);
                    if (this.curves.length > 0) {
                        var c = l.getPoint(0);
                        c.equals(this.currentPoint) || this.lineTo(c.x, c.y);
                    }
                    this.curves.push(l);
                    var u = l.getPoint(1);
                    this.currentPoint.copy(u);
                },
            });
            (hn.prototype = Object.assign(Object.create(Ja), {
                constructor: hn,
                getPointsHoles: function (t) {
                    for (var e = [], i = 0, n = this.holes.length; i < n; i++) e[i] = this.holes[i].getPoints(t);
                    return e;
                },
                extractAllPoints: function (t) {
                    return { shape: this.getPoints(t), holes: this.getPointsHoles(t) };
                },
                extractPoints: function (t) {
                    return this.extractAllPoints(t);
                },
            })),
                (dn.prototype = Ja),
                (Ja.constructor = dn),
                (pn.prototype = {
                    moveTo: function (t, e) {
                        (this.currentPath = new dn()), this.subPaths.push(this.currentPath), this.currentPath.moveTo(t, e);
                    },
                    lineTo: function (t, e) {
                        this.currentPath.lineTo(t, e);
                    },
                    quadraticCurveTo: function (t, e, i, n) {
                        this.currentPath.quadraticCurveTo(t, e, i, n);
                    },
                    bezierCurveTo: function (t, e, i, n, r, o) {
                        this.currentPath.bezierCurveTo(t, e, i, n, r, o);
                    },
                    splineThru: function (t) {
                        this.currentPath.splineThru(t);
                    },
                    toShapes: function (t, e) {
                        function i(t) {
                            for (var e = [], i = 0, n = t.length; i < n; i++) {
                                var r = t[i],
                                    o = new hn();
                                (o.curves = r.curves), e.push(o);
                            }
                            return e;
                        }
                        var n = Ga.isClockWise,
                            r = this.subPaths;
                        if (0 === r.length) return [];
                        if (!0 === e) return i(r);
                        var o,
                            a,
                            s,
                            l = [];
                        if (1 === r.length) return (a = r[0]), (s = new hn()), (s.curves = a.curves), l.push(s), l;
                        var c = !n(r[0].getPoints());
                        c = t ? !c : c;
                        var u,
                            h = [],
                            d = [],
                            p = [],
                            f = 0;
                        (d[f] = void 0), (p[f] = []);
                        for (var m = 0, v = r.length; m < v; m++)
                            (a = r[m]), (u = a.getPoints()), (o = n(u)), (o = t ? !o : o), o ? (!c && d[f] && f++, (d[f] = { s: new hn(), p: u }), (d[f].s.curves = a.curves), c && f++, (p[f] = [])) : p[f].push({ h: a, p: u[0] });
                        if (!d[0]) return i(r);
                        if (d.length > 1) {
                            for (var g = !1, y = [], _ = 0, b = d.length; _ < b; _++) h[_] = [];
                            for (var _ = 0, b = d.length; _ < b; _++)
                                for (var x = p[_], w = 0; w < x.length; w++) {
                                    for (var T = x[w], E = !0, M = 0; M < d.length; M++)
                                        (function (t, e) {
                                            for (var i = e.length, n = !1, r = i - 1, o = 0; o < i; r = o++) {
                                                var a = e[r],
                                                    s = e[o],
                                                    l = s.x - a.x,
                                                    c = s.y - a.y;
                                                if (Math.abs(c) > Number.EPSILON) {
                                                    if ((c < 0 && ((a = e[o]), (l = -l), (s = e[r]), (c = -c)), t.y < a.y || t.y > s.y)) continue;
                                                    if (t.y === a.y) {
                                                        if (t.x === a.x) return !0;
                                                    } else {
                                                        var u = c * (t.x - a.x) - l * (t.y - a.y);
                                                        if (0 === u) return !0;
                                                        if (u < 0) continue;
                                                        n = !n;
                                                    }
                                                } else {
                                                    if (t.y !== a.y) continue;
                                                    if ((s.x <= t.x && t.x <= a.x) || (a.x <= t.x && t.x <= s.x)) return !0;
                                                }
                                            }
                                            return n;
                                        })(T.p, d[M].p) && (_ !== M && y.push({ froms: _, tos: M, hole: w }), E ? ((E = !1), h[M].push(T)) : (g = !0));
                                    E && h[_].push(T);
                                }
                            y.length > 0 && (g || (p = h));
                        }
                        for (var S, m = 0, A = d.length; m < A; m++) {
                            (s = d[m].s), l.push(s), (S = p[m]);
                            for (var R = 0, C = S.length; R < C; R++) s.holes.push(S[R].h);
                        }
                        return l;
                    },
                }),
                Object.assign(fn.prototype, {
                    isFont: !0,
                    generateShapes: function (t, e, i) {
                        function n(t, e, n) {
                            var o = r.glyphs[t] || r.glyphs["?"];
                            if (o) {
                                var a,
                                    s,
                                    l,
                                    c,
                                    u,
                                    h,
                                    d,
                                    p,
                                    f,
                                    m,
                                    v,
                                    g = new pn(),
                                    y = [],
                                    _ = Ga.b2,
                                    b = Ga.b3;
                                if (o.o)
                                    for (var x = o._cachedOutline || (o._cachedOutline = o.o.split(" ")), w = 0, T = x.length; w < T; ) {
                                        var E = x[w++];
                                        switch (E) {
                                            case "m":
                                                (a = x[w++] * e + n), (s = x[w++] * e), g.moveTo(a, s);
                                                break;
                                            case "l":
                                                (a = x[w++] * e + n), (s = x[w++] * e), g.lineTo(a, s);
                                                break;
                                            case "q":
                                                if (((l = x[w++] * e + n), (c = x[w++] * e), (d = x[w++] * e + n), (p = x[w++] * e), g.quadraticCurveTo(d, p, l, c), (v = y[y.length - 1]))) {
                                                    (u = v.x), (h = v.y);
                                                    for (var M = 1; M <= i; M++) {
                                                        var S = M / i;
                                                        _(S, u, d, l), _(S, h, p, c);
                                                    }
                                                }
                                                break;
                                            case "b":
                                                if (((l = x[w++] * e + n), (c = x[w++] * e), (d = x[w++] * e + n), (p = x[w++] * e), (f = x[w++] * e + n), (m = x[w++] * e), g.bezierCurveTo(d, p, f, m, l, c), (v = y[y.length - 1]))) {
                                                    (u = v.x), (h = v.y);
                                                    for (var M = 1; M <= i; M++) {
                                                        var S = M / i;
                                                        b(S, u, d, f, l), b(S, h, p, m, c);
                                                    }
                                                }
                                        }
                                    }
                                return { offset: o.ha * e, path: g };
                            }
                        }
                        void 0 === e && (e = 100), void 0 === i && (i = 4);
                        for (
                            var r = this.data,
                                o = (function (t) {
                                    for (var i = String(t).split(""), o = e / r.resolution, a = 0, s = [], l = 0; l < i.length; l++) {
                                        var c = n(i[l], o, a);
                                        (a += c.offset), s.push(c.path);
                                    }
                                    return s;
                                })(t),
                                a = [],
                                s = 0,
                                l = o.length;
                            s < l;
                            s++
                        )
                            Array.prototype.push.apply(a, o[s].toShapes());
                        return a;
                    },
                }),
                Object.assign(mn.prototype, {
                    load: function (t, e, i, n) {
                        var r = this;
                        new Ti(this.manager).load(
                            t,
                            function (t) {
                                var i;
                                try {
                                    i = JSON.parse(t);
                                } catch (e) {
                                    console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."), (i = JSON.parse(t.substring(65, t.length - 2)));
                                }
                                var n = r.parse(i);
                                e && e(n);
                            },
                            i,
                            n
                        );
                    },
                    parse: function (t) {
                        return new fn(t);
                    },
                });
            var Qa;
            Object.assign(gn.prototype, {
                load: function (t, e, i, n) {
                    var r = new Ti(this.manager);
                    r.setResponseType("arraybuffer"),
                        r.load(
                            t,
                            function (t) {
                                vn().decodeAudioData(t, function (t) {
                                    e(t);
                                });
                            },
                            i,
                            n
                        );
                },
            }),
                Object.assign(yn.prototype, {
                    update: (function () {
                        var t,
                            e,
                            i,
                            n,
                            r,
                            o,
                            a,
                            s = new u(),
                            l = new u();
                        return function (c) {
                            if (t !== this || e !== c.focus || i !== c.fov || n !== c.aspect * this.aspect || r !== c.near || o !== c.far || a !== c.zoom) {
                                (t = this), (e = c.focus), (i = c.fov), (n = c.aspect * this.aspect), (r = c.near), (o = c.far), (a = c.zoom);
                                var u,
                                    h,
                                    d = c.projectionMatrix.clone(),
                                    p = this.eyeSep / 2,
                                    f = (p * r) / e,
                                    m = (r * Math.tan(Ma.DEG2RAD * i * 0.5)) / a;
                                (l.elements[12] = -p),
                                    (s.elements[12] = p),
                                    (u = -m * n + f),
                                    (h = m * n + f),
                                    (d.elements[0] = (2 * r) / (h - u)),
                                    (d.elements[8] = (h + u) / (h - u)),
                                    this.cameraL.projectionMatrix.copy(d),
                                    (u = -m * n - f),
                                    (h = m * n - f),
                                    (d.elements[0] = (2 * r) / (h - u)),
                                    (d.elements[8] = (h + u) / (h - u)),
                                    this.cameraR.projectionMatrix.copy(d);
                            }
                            this.cameraL.matrixWorld.copy(c.matrixWorld).multiply(l), this.cameraR.matrixWorld.copy(c.matrixWorld).multiply(s);
                        };
                    })(),
                }),
                (_n.prototype = Object.create(ct.prototype)),
                (_n.prototype.constructor = _n),
                (bn.prototype = Object.assign(Object.create(ct.prototype), {
                    constructor: bn,
                    getInput: function () {
                        return this.gain;
                    },
                    removeFilter: function () {
                        null !== this.filter && (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination), this.gain.connect(this.context.destination), (this.filter = null));
                    },
                    getFilter: function () {
                        return this.filter;
                    },
                    setFilter: function (t) {
                        null !== this.filter ? (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination),
                            (this.filter = t),
                            this.gain.connect(this.filter),
                            this.filter.connect(this.context.destination);
                    },
                    getMasterVolume: function () {
                        return this.gain.gain.value;
                    },
                    setMasterVolume: function (t) {
                        this.gain.gain.value = t;
                    },
                    updateMatrixWorld: (function () {
                        var t = new c(),
                            e = new l(),
                            i = new c(),
                            n = new c();
                        return function (r) {
                            ct.prototype.updateMatrixWorld.call(this, r);
                            var o = this.context.listener,
                                a = this.up;
                            this.matrixWorld.decompose(t, e, i), n.set(0, 0, -1).applyQuaternion(e), o.setPosition(t.x, t.y, t.z), o.setOrientation(n.x, n.y, n.z, a.x, a.y, a.z);
                        };
                    })(),
                })),
                (xn.prototype = Object.assign(Object.create(ct.prototype), {
                    constructor: xn,
                    getOutput: function () {
                        return this.gain;
                    },
                    setNodeSource: function (t) {
                        return (this.hasPlaybackControl = !1), (this.sourceType = "audioNode"), (this.source = t), this.connect(), this;
                    },
                    setBuffer: function (t) {
                        return (this.source.buffer = t), (this.sourceType = "buffer"), this.autoplay && this.play(), this;
                    },
                    play: function () {
                        if (!0 === this.isPlaying) return void console.warn("THREE.Audio: Audio is already playing.");
                        if (!1 === this.hasPlaybackControl) return void console.warn("THREE.Audio: this Audio has no playback control.");
                        var t = this.context.createBufferSource();
                        return (
                            (t.buffer = this.source.buffer),
                            (t.loop = this.source.loop),
                            (t.onended = this.source.onended),
                            t.start(0, this.startTime),
                            (t.playbackRate.value = this.playbackRate),
                            (this.isPlaying = !0),
                            (this.source = t),
                            this.connect()
                        );
                    },
                    pause: function () {
                        return !1 === this.hasPlaybackControl ? void console.warn("THREE.Audio: this Audio has no playback control.") : (this.source.stop(), (this.startTime = this.context.currentTime), (this.isPlaying = !1), this);
                    },
                    stop: function () {
                        return !1 === this.hasPlaybackControl ? void console.warn("THREE.Audio: this Audio has no playback control.") : (this.source.stop(), (this.startTime = 0), (this.isPlaying = !1), this);
                    },
                    connect: function () {
                        if (this.filters.length > 0) {
                            this.source.connect(this.filters[0]);
                            for (var t = 1, e = this.filters.length; t < e; t++) this.filters[t - 1].connect(this.filters[t]);
                            this.filters[this.filters.length - 1].connect(this.getOutput());
                        } else this.source.connect(this.getOutput());
                        return this;
                    },
                    disconnect: function () {
                        if (this.filters.length > 0) {
                            this.source.disconnect(this.filters[0]);
                            for (var t = 1, e = this.filters.length; t < e; t++) this.filters[t - 1].disconnect(this.filters[t]);
                            this.filters[this.filters.length - 1].disconnect(this.getOutput());
                        } else this.source.disconnect(this.getOutput());
                        return this;
                    },
                    getFilters: function () {
                        return this.filters;
                    },
                    setFilters: function (t) {
                        return t || (t = []), !0 === this.isPlaying ? (this.disconnect(), (this.filters = t), this.connect()) : (this.filters = t), this;
                    },
                    getFilter: function () {
                        return this.getFilters()[0];
                    },
                    setFilter: function (t) {
                        return this.setFilters(t ? [t] : []);
                    },
                    setPlaybackRate: function (t) {
                        return !1 === this.hasPlaybackControl
                            ? void console.warn("THREE.Audio: this Audio has no playback control.")
                            : ((this.playbackRate = t), !0 === this.isPlaying && (this.source.playbackRate.value = this.playbackRate), this);
                    },
                    getPlaybackRate: function () {
                        return this.playbackRate;
                    },
                    onEnded: function () {
                        this.isPlaying = !1;
                    },
                    getLoop: function () {
                        return !1 === this.hasPlaybackControl ? (console.warn("THREE.Audio: this Audio has no playback control."), !1) : this.source.loop;
                    },
                    setLoop: function (t) {
                        if (!1 === this.hasPlaybackControl) return void console.warn("THREE.Audio: this Audio has no playback control.");
                        this.source.loop = t;
                    },
                    getVolume: function () {
                        return this.gain.gain.value;
                    },
                    setVolume: function (t) {
                        return (this.gain.gain.value = t), this;
                    },
                })),
                (wn.prototype = Object.assign(Object.create(xn.prototype), {
                    constructor: wn,
                    getOutput: function () {
                        return this.panner;
                    },
                    getRefDistance: function () {
                        return this.panner.refDistance;
                    },
                    setRefDistance: function (t) {
                        this.panner.refDistance = t;
                    },
                    getRolloffFactor: function () {
                        return this.panner.rolloffFactor;
                    },
                    setRolloffFactor: function (t) {
                        this.panner.rolloffFactor = t;
                    },
                    getDistanceModel: function () {
                        return this.panner.distanceModel;
                    },
                    setDistanceModel: function (t) {
                        this.panner.distanceModel = t;
                    },
                    getMaxDistance: function () {
                        return this.panner.maxDistance;
                    },
                    setMaxDistance: function (t) {
                        this.panner.maxDistance = t;
                    },
                    updateMatrixWorld: (function () {
                        var t = new c();
                        return function (e) {
                            ct.prototype.updateMatrixWorld.call(this, e), t.setFromMatrixPosition(this.matrixWorld), this.panner.setPosition(t.x, t.y, t.z);
                        };
                    })(),
                })),
                Object.assign(Tn.prototype, {
                    getFrequencyData: function () {
                        return this.analyser.getByteFrequencyData(this.data), this.data;
                    },
                    getAverageFrequency: function () {
                        for (var t = 0, e = this.getFrequencyData(), i = 0; i < e.length; i++) t += e[i];
                        return t / e.length;
                    },
                }),
                (En.prototype = {
                    constructor: En,
                    accumulate: function (t, e) {
                        var i = this.buffer,
                            n = this.valueSize,
                            r = t * n + n,
                            o = this.cumulativeWeight;
                        if (0 === o) {
                            for (var a = 0; a !== n; ++a) i[r + a] = i[a];
                            o = e;
                        } else {
                            o += e;
                            var s = e / o;
                            this._mixBufferRegion(i, r, 0, s, n);
                        }
                        this.cumulativeWeight = o;
                    },
                    apply: function (t) {
                        var e = this.valueSize,
                            i = this.buffer,
                            n = t * e + e,
                            r = this.cumulativeWeight,
                            o = this.binding;
                        if (((this.cumulativeWeight = 0), r < 1)) {
                            var a = 3 * e;
                            this._mixBufferRegion(i, n, a, 1 - r, e);
                        }
                        for (var s = e, l = e + e; s !== l; ++s)
                            if (i[s] !== i[s + e]) {
                                o.setValue(i, n);
                                break;
                            }
                    },
                    saveOriginalState: function () {
                        var t = this.binding,
                            e = this.buffer,
                            i = this.valueSize,
                            n = 3 * i;
                        t.getValue(e, n);
                        for (var r = i, o = n; r !== o; ++r) e[r] = e[n + (r % i)];
                        this.cumulativeWeight = 0;
                    },
                    restoreOriginalState: function () {
                        var t = 3 * this.valueSize;
                        this.binding.setValue(this.buffer, t);
                    },
                    _select: function (t, e, i, n, r) {
                        if (n >= 0.5) for (var o = 0; o !== r; ++o) t[e + o] = t[i + o];
                    },
                    _slerp: function (t, e, i, n, r) {
                        l.slerpFlat(t, e, t, e, t, i, n);
                    },
                    _lerp: function (t, e, i, n, r) {
                        for (var o = 1 - n, a = 0; a !== r; ++a) {
                            var s = e + a;
                            t[s] = t[s] * o + t[i + a] * n;
                        }
                    },
                }),
                (Mn.prototype = {
                    constructor: Mn,
                    getValue: function (t, e) {
                        this.bind(), this.getValue(t, e);
                    },
                    setValue: function (t, e) {
                        this.bind(), this.setValue(t, e);
                    },
                    bind: function () {
                        var t = this.node,
                            e = this.parsedPath,
                            i = e.objectName,
                            n = e.propertyName,
                            r = e.propertyIndex;
                        if ((t || ((t = Mn.findNode(this.rootNode, e.nodeName) || this.rootNode), (this.node = t)), (this.getValue = this._getValue_unavailable), (this.setValue = this._setValue_unavailable), !t))
                            return void console.error("  trying to update node for track: " + this.path + " but it wasn't found.");
                        if (i) {
                            var o = e.objectIndex;
                            switch (i) {
                                case "materials":
                                    if (!t.material) return void console.error("  can not bind to material as node does not have a material", this);
                                    if (!t.material.materials) return void console.error("  can not bind to material.materials as node.material does not have a materials array", this);
                                    t = t.material.materials;
                                    break;
                                case "bones":
                                    if (!t.skeleton) return void console.error("  can not bind to bones as node does not have a skeleton", this);
                                    t = t.skeleton.bones;
                                    for (var a = 0; a < t.length; a++)
                                        if (t[a].name === o) {
                                            o = a;
                                            break;
                                        }
                                    break;
                                default:
                                    if (void 0 === t[i]) return void console.error("  can not bind to objectName of node, undefined", this);
                                    t = t[i];
                            }
                            if (void 0 !== o) {
                                if (void 0 === t[o]) return void console.error("  trying to bind to objectIndex of objectName, but is undefined:", this, t);
                                t = t[o];
                            }
                        }
                        var s = t[n];
                        if (void 0 === s) {
                            var l = e.nodeName;
                            return void console.error("  trying to update property for track: " + l + "." + n + " but it wasn't found.", t);
                        }
                        var c = this.Versioning.None;
                        void 0 !== t.needsUpdate ? ((c = this.Versioning.NeedsUpdate), (this.targetObject = t)) : void 0 !== t.matrixWorldNeedsUpdate && ((c = this.Versioning.MatrixWorldNeedsUpdate), (this.targetObject = t));
                        var u = this.BindingType.Direct;
                        if (void 0 !== r) {
                            if ("morphTargetInfluences" === n) {
                                if (!t.geometry) return void console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry", this);
                                if (!t.geometry.morphTargets) return void console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets", this);
                                for (var a = 0; a < this.node.geometry.morphTargets.length; a++)
                                    if (t.geometry.morphTargets[a].name === r) {
                                        r = a;
                                        break;
                                    }
                            }
                            (u = this.BindingType.ArrayElement), (this.resolvedProperty = s), (this.propertyIndex = r);
                        } else
                            void 0 !== s.fromArray && void 0 !== s.toArray
                                ? ((u = this.BindingType.HasFromToArray), (this.resolvedProperty = s))
                                : void 0 !== s.length
                                ? ((u = this.BindingType.EntireArray), (this.resolvedProperty = s))
                                : (this.propertyName = n);
                        (this.getValue = this.GetterByBindingType[u]), (this.setValue = this.SetterByBindingTypeAndVersioning[u][c]);
                    },
                    unbind: function () {
                        (this.node = null), (this.getValue = this._getValue_unbound), (this.setValue = this._setValue_unbound);
                    },
                }),
                Object.assign(Mn.prototype, {
                    _getValue_unavailable: function () {},
                    _setValue_unavailable: function () {},
                    _getValue_unbound: Mn.prototype.getValue,
                    _setValue_unbound: Mn.prototype.setValue,
                    BindingType: { Direct: 0, EntireArray: 1, ArrayElement: 2, HasFromToArray: 3 },
                    Versioning: { None: 0, NeedsUpdate: 1, MatrixWorldNeedsUpdate: 2 },
                    GetterByBindingType: [
                        function (t, e) {
                            t[e] = this.node[this.propertyName];
                        },
                        function (t, e) {
                            for (var i = this.resolvedProperty, n = 0, r = i.length; n !== r; ++n) t[e++] = i[n];
                        },
                        function (t, e) {
                            t[e] = this.resolvedProperty[this.propertyIndex];
                        },
                        function (t, e) {
                            this.resolvedProperty.toArray(t, e);
                        },
                    ],
                    SetterByBindingTypeAndVersioning: [
                        [
                            function (t, e) {
                                this.node[this.propertyName] = t[e];
                            },
                            function (t, e) {
                                (this.node[this.propertyName] = t[e]), (this.targetObject.needsUpdate = !0);
                            },
                            function (t, e) {
                                (this.node[this.propertyName] = t[e]), (this.targetObject.matrixWorldNeedsUpdate = !0);
                            },
                        ],
                        [
                            function (t, e) {
                                for (var i = this.resolvedProperty, n = 0, r = i.length; n !== r; ++n) i[n] = t[e++];
                            },
                            function (t, e) {
                                for (var i = this.resolvedProperty, n = 0, r = i.length; n !== r; ++n) i[n] = t[e++];
                                this.targetObject.needsUpdate = !0;
                            },
                            function (t, e) {
                                for (var i = this.resolvedProperty, n = 0, r = i.length; n !== r; ++n) i[n] = t[e++];
                                this.targetObject.matrixWorldNeedsUpdate = !0;
                            },
                        ],
                        [
                            function (t, e) {
                                this.resolvedProperty[this.propertyIndex] = t[e];
                            },
                            function (t, e) {
                                (this.resolvedProperty[this.propertyIndex] = t[e]), (this.targetObject.needsUpdate = !0);
                            },
                            function (t, e) {
                                (this.resolvedProperty[this.propertyIndex] = t[e]), (this.targetObject.matrixWorldNeedsUpdate = !0);
                            },
                        ],
                        [
                            function (t, e) {
                                this.resolvedProperty.fromArray(t, e);
                            },
                            function (t, e) {
                                this.resolvedProperty.fromArray(t, e), (this.targetObject.needsUpdate = !0);
                            },
                            function (t, e) {
                                this.resolvedProperty.fromArray(t, e), (this.targetObject.matrixWorldNeedsUpdate = !0);
                            },
                        ],
                    ],
                }),
                (Mn.Composite = function (t, e, i) {
                    var n = i || Mn.parseTrackName(e);
                    (this._targetGroup = t), (this._bindings = t.subscribe_(e, n));
                }),
                (Mn.Composite.prototype = {
                    constructor: Mn.Composite,
                    getValue: function (t, e) {
                        this.bind();
                        var i = this._targetGroup.nCachedObjects_,
                            n = this._bindings[i];
                        void 0 !== n && n.getValue(t, e);
                    },
                    setValue: function (t, e) {
                        for (var i = this._bindings, n = this._targetGroup.nCachedObjects_, r = i.length; n !== r; ++n) i[n].setValue(t, e);
                    },
                    bind: function () {
                        for (var t = this._bindings, e = this._targetGroup.nCachedObjects_, i = t.length; e !== i; ++e) t[e].bind();
                    },
                    unbind: function () {
                        for (var t = this._bindings, e = this._targetGroup.nCachedObjects_, i = t.length; e !== i; ++e) t[e].unbind();
                    },
                }),
                (Mn.create = function (t, e, i) {
                    return t && t.isAnimationObjectGroup ? new Mn.Composite(t, e, i) : new Mn(t, e, i);
                }),
                (Mn.parseTrackName = function (t) {
                    var e = /^((?:\w+[\/:])*)(\w+)?(?:\.(\w+)(?:\[(.+)\])?)?\.(\w+)(?:\[(.+)\])?$/,
                        i = e.exec(t);
                    if (!i) throw new Error("cannot parse trackName at all: " + t);
                    var n = { nodeName: i[2], objectName: i[3], objectIndex: i[4], propertyName: i[5], propertyIndex: i[6] };
                    if (null === n.propertyName || 0 === n.propertyName.length) throw new Error("can not parse propertyName from trackName: " + t);
                    return n;
                }),
                (Mn.findNode = function (t, e) {
                    if (!e || "" === e || "root" === e || "." === e || -1 === e || e === t.name || e === t.uuid) return t;
                    if (t.skeleton) {
                        var i = (function (t) {
                            for (var i = 0; i < t.bones.length; i++) {
                                var n = t.bones[i];
                                if (n.name === e) return n;
                            }
                            return null;
                        })(t.skeleton);
                        if (i) return i;
                    }
                    if (t.children) {
                        var n = function (t) {
                                for (var i = 0; i < t.length; i++) {
                                    var r = t[i];
                                    if (r.name === e || r.uuid === e) return r;
                                    var o = n(r.children);
                                    if (o) return o;
                                }
                                return null;
                            },
                            r = n(t.children);
                        if (r) return r;
                    }
                    return null;
                }),
                (Sn.prototype = {
                    constructor: Sn,
                    isAnimationObjectGroup: !0,
                    add: function (t) {
                        for (var e = this._objects, i = e.length, n = this.nCachedObjects_, r = this._indicesByUUID, o = this._paths, a = this._parsedPaths, s = this._bindings, l = s.length, c = 0, u = arguments.length; c !== u; ++c) {
                            var h = arguments[c],
                                d = h.uuid,
                                p = r[d];
                            if (void 0 === p) {
                                (p = i++), (r[d] = p), e.push(h);
                                for (var f = 0, m = l; f !== m; ++f) s[f].push(new Mn(h, o[f], a[f]));
                            } else if (p < n) {
                                var v = e[p],
                                    g = --n,
                                    y = e[g];
                                (r[y.uuid] = p), (e[p] = y), (r[d] = g), (e[g] = h);
                                for (var f = 0, m = l; f !== m; ++f) {
                                    var _ = s[f],
                                        b = _[g],
                                        x = _[p];
                                    (_[p] = b), void 0 === x && (x = new Mn(h, o[f], a[f])), (_[g] = x);
                                }
                            } else e[p] !== v && console.error("Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes...");
                        }
                        this.nCachedObjects_ = n;
                    },
                    remove: function (t) {
                        for (var e = this._objects, i = this.nCachedObjects_, n = this._indicesByUUID, r = this._bindings, o = r.length, a = 0, s = arguments.length; a !== s; ++a) {
                            var l = arguments[a],
                                c = l.uuid,
                                u = n[c];
                            if (void 0 !== u && u >= i) {
                                var h = i++,
                                    d = e[h];
                                (n[d.uuid] = u), (e[u] = d), (n[c] = h), (e[h] = l);
                                for (var p = 0, f = o; p !== f; ++p) {
                                    var m = r[p],
                                        v = m[h],
                                        g = m[u];
                                    (m[u] = v), (m[h] = g);
                                }
                            }
                        }
                        this.nCachedObjects_ = i;
                    },
                    uncache: function (t) {
                        for (var e = this._objects, i = e.length, n = this.nCachedObjects_, r = this._indicesByUUID, o = this._bindings, a = o.length, s = 0, l = arguments.length; s !== l; ++s) {
                            var c = arguments[s],
                                u = c.uuid,
                                h = r[u];
                            if (void 0 !== h)
                                if ((delete r[u], h < n)) {
                                    var d = --n,
                                        p = e[d],
                                        f = --i,
                                        m = e[f];
                                    (r[p.uuid] = h), (e[h] = p), (r[m.uuid] = d), (e[d] = m), e.pop();
                                    for (var v = 0, g = a; v !== g; ++v) {
                                        var y = o[v],
                                            _ = y[d],
                                            b = y[f];
                                        (y[h] = _), (y[d] = b), y.pop();
                                    }
                                } else {
                                    var f = --i,
                                        m = e[f];
                                    (r[m.uuid] = h), (e[h] = m), e.pop();
                                    for (var v = 0, g = a; v !== g; ++v) {
                                        var y = o[v];
                                        (y[h] = y[f]), y.pop();
                                    }
                                }
                        }
                        this.nCachedObjects_ = n;
                    },
                    subscribe_: function (t, e) {
                        var i = this._bindingsIndicesByPath,
                            n = i[t],
                            r = this._bindings;
                        if (void 0 !== n) return r[n];
                        var o = this._paths,
                            a = this._parsedPaths,
                            s = this._objects,
                            l = s.length,
                            c = this.nCachedObjects_,
                            u = new Array(l);
                        (n = r.length), (i[t] = n), o.push(t), a.push(e), r.push(u);
                        for (var h = c, d = s.length; h !== d; ++h) {
                            var p = s[h];
                            u[h] = new Mn(p, t, e);
                        }
                        return u;
                    },
                    unsubscribe_: function (t) {
                        var e = this._bindingsIndicesByPath,
                            i = e[t];
                        if (void 0 !== i) {
                            var n = this._paths,
                                r = this._parsedPaths,
                                o = this._bindings,
                                a = o.length - 1,
                                s = o[a];
                            (e[t[a]] = i), (o[i] = s), o.pop(), (r[i] = r[a]), r.pop(), (n[i] = n[a]), n.pop();
                        }
                    },
                }),
                (An.prototype = {
                    constructor: An,
                    play: function () {
                        return this._mixer._activateAction(this), this;
                    },
                    stop: function () {
                        return this._mixer._deactivateAction(this), this.reset();
                    },
                    reset: function () {
                        return (this.paused = !1), (this.enabled = !0), (this.time = 0), (this._loopCount = -1), (this._startTime = null), this.stopFading().stopWarping();
                    },
                    isRunning: function () {
                        return this.enabled && !this.paused && 0 !== this.timeScale && null === this._startTime && this._mixer._isActiveAction(this);
                    },
                    isScheduled: function () {
                        return this._mixer._isActiveAction(this);
                    },
                    startAt: function (t) {
                        return (this._startTime = t), this;
                    },
                    setLoop: function (t, e) {
                        return (this.loop = t), (this.repetitions = e), this;
                    },
                    setEffectiveWeight: function (t) {
                        return (this.weight = t), (this._effectiveWeight = this.enabled ? t : 0), this.stopFading();
                    },
                    getEffectiveWeight: function () {
                        return this._effectiveWeight;
                    },
                    fadeIn: function (t) {
                        return this._scheduleFading(t, 0, 1);
                    },
                    fadeOut: function (t) {
                        return this._scheduleFading(t, 1, 0);
                    },
                    crossFadeFrom: function (t, e, i) {
                        if ((t.fadeOut(e), this.fadeIn(e), i)) {
                            var n = this._clip.duration,
                                r = t._clip.duration,
                                o = r / n,
                                a = n / r;
                            t.warp(1, o, e), this.warp(a, 1, e);
                        }
                        return this;
                    },
                    crossFadeTo: function (t, e, i) {
                        return t.crossFadeFrom(this, e, i);
                    },
                    stopFading: function () {
                        var t = this._weightInterpolant;
                        return null !== t && ((this._weightInterpolant = null), this._mixer._takeBackControlInterpolant(t)), this;
                    },
                    setEffectiveTimeScale: function (t) {
                        return (this.timeScale = t), (this._effectiveTimeScale = this.paused ? 0 : t), this.stopWarping();
                    },
                    getEffectiveTimeScale: function () {
                        return this._effectiveTimeScale;
                    },
                    setDuration: function (t) {
                        return (this.timeScale = this._clip.duration / t), this.stopWarping();
                    },
                    syncWith: function (t) {
                        return (this.time = t.time), (this.timeScale = t.timeScale), this.stopWarping();
                    },
                    halt: function (t) {
                        return this.warp(this._effectiveTimeScale, 0, t);
                    },
                    warp: function (t, e, i) {
                        var n = this._mixer,
                            r = n.time,
                            o = this._timeScaleInterpolant,
                            a = this.timeScale;
                        null === o && ((o = n._lendControlInterpolant()), (this._timeScaleInterpolant = o));
                        var s = o.parameterPositions,
                            l = o.sampleValues;
                        return (s[0] = r), (s[1] = r + i), (l[0] = t / a), (l[1] = e / a), this;
                    },
                    stopWarping: function () {
                        var t = this._timeScaleInterpolant;
                        return null !== t && ((this._timeScaleInterpolant = null), this._mixer._takeBackControlInterpolant(t)), this;
                    },
                    getMixer: function () {
                        return this._mixer;
                    },
                    getClip: function () {
                        return this._clip;
                    },
                    getRoot: function () {
                        return this._localRoot || this._mixer._root;
                    },
                    _update: function (t, e, i, n) {
                        var r = this._startTime;
                        if (null !== r) {
                            var o = (t - r) * i;
                            if (o < 0 || 0 === i) return;
                            (this._startTime = null), (e = i * o);
                        }
                        e *= this._updateTimeScale(t);
                        var a = this._updateTime(e),
                            s = this._updateWeight(t);
                        if (s > 0) for (var l = this._interpolants, c = this._propertyBindings, u = 0, h = l.length; u !== h; ++u) l[u].evaluate(a), c[u].accumulate(n, s);
                    },
                    _updateWeight: function (t) {
                        var e = 0;
                        if (this.enabled) {
                            e = this.weight;
                            var i = this._weightInterpolant;
                            if (null !== i) {
                                var n = i.evaluate(t)[0];
                                (e *= n), t > i.parameterPositions[1] && (this.stopFading(), 0 === n && (this.enabled = !1));
                            }
                        }
                        return (this._effectiveWeight = e), e;
                    },
                    _updateTimeScale: function (t) {
                        var e = 0;
                        if (!this.paused) {
                            e = this.timeScale;
                            var i = this._timeScaleInterpolant;
                            if (null !== i) {
                                (e *= i.evaluate(t)[0]), t > i.parameterPositions[1] && (this.stopWarping(), 0 === e ? (this.paused = !0) : (this.timeScale = e));
                            }
                        }
                        return (this._effectiveTimeScale = e), e;
                    },
                    _updateTime: function (t) {
                        var e = this.time + t;
                        if (0 === t) return e;
                        var i = this._clip.duration,
                            n = this.loop,
                            r = this._loopCount;
                        if (2200 === n) {
                            -1 === r && ((this.loopCount = 0), this._setEndings(!0, !0, !1));
                            t: {
                                if (e >= i) e = i;
                                else {
                                    if (!(e < 0)) break t;
                                    e = 0;
                                }
                                this.clampWhenFinished ? (this.paused = !0) : (this.enabled = !1), this._mixer.dispatchEvent({ type: "finished", action: this, direction: t < 0 ? -1 : 1 });
                            }
                        } else {
                            var o = 2202 === n;
                            if ((-1 === r && (t >= 0 ? ((r = 0), this._setEndings(!0, 0 === this.repetitions, o)) : this._setEndings(0 === this.repetitions, !0, o)), e >= i || e < 0)) {
                                var a = Math.floor(e / i);
                                (e -= i * a), (r += Math.abs(a));
                                var s = this.repetitions - r;
                                if (s < 0) this.clampWhenFinished ? (this.paused = !0) : (this.enabled = !1), (e = t > 0 ? i : 0), this._mixer.dispatchEvent({ type: "finished", action: this, direction: t > 0 ? 1 : -1 });
                                else {
                                    if (0 === s) {
                                        var l = t < 0;
                                        this._setEndings(l, !l, o);
                                    } else this._setEndings(!1, !1, o);
                                    (this._loopCount = r), this._mixer.dispatchEvent({ type: "loop", action: this, loopDelta: a });
                                }
                            }
                            if (o && 1 == (1 & r)) return (this.time = e), i - e;
                        }
                        return (this.time = e), e;
                    },
                    _setEndings: function (t, e, i) {
                        var n = this._interpolantSettings;
                        i ? ((n.endingStart = 2401), (n.endingEnd = 2401)) : ((n.endingStart = t ? (this.zeroSlopeAtStart ? 2401 : da) : 2402), (n.endingEnd = e ? (this.zeroSlopeAtEnd ? 2401 : da) : 2402));
                    },
                    _scheduleFading: function (t, e, i) {
                        var n = this._mixer,
                            r = n.time,
                            o = this._weightInterpolant;
                        null === o && ((o = n._lendControlInterpolant()), (this._weightInterpolant = o));
                        var a = o.parameterPositions,
                            s = o.sampleValues;
                        return (a[0] = r), (s[0] = e), (a[1] = r + t), (s[1] = i), this;
                    },
                }),
                Object.assign(Rn.prototype, e.prototype, {
                    clipAction: function (t, e) {
                        var i = e || this._root,
                            n = i.uuid,
                            r = "string" == typeof t ? Qi.findByName(i, t) : t,
                            o = null !== r ? r.uuid : t,
                            a = this._actionsByClip[o],
                            s = null;
                        if (void 0 !== a) {
                            var l = a.actionByRoot[n];
                            if (void 0 !== l) return l;
                            (s = a.knownActions[0]), null === r && (r = s._clip);
                        }
                        if (null === r) return null;
                        var c = new An(this, r, e);
                        return this._bindAction(c, s), this._addInactiveAction(c, o, n), c;
                    },
                    existingAction: function (t, e) {
                        var i = e || this._root,
                            n = i.uuid,
                            r = "string" == typeof t ? Qi.findByName(i, t) : t,
                            o = r ? r.uuid : t,
                            a = this._actionsByClip[o];
                        return void 0 !== a ? a.actionByRoot[n] || null : null;
                    },
                    stopAllAction: function () {
                        var t = this._actions,
                            e = this._nActiveActions,
                            i = this._bindings,
                            n = this._nActiveBindings;
                        (this._nActiveActions = 0), (this._nActiveBindings = 0);
                        for (var r = 0; r !== e; ++r) t[r].reset();
                        for (var r = 0; r !== n; ++r) i[r].useCount = 0;
                        return this;
                    },
                    update: function (t) {
                        t *= this.timeScale;
                        for (var e = this._actions, i = this._nActiveActions, n = (this.time += t), r = Math.sign(t), o = (this._accuIndex ^= 1), a = 0; a !== i; ++a) {
                            var s = e[a];
                            s.enabled && s._update(n, t, r, o);
                        }
                        for (var l = this._bindings, c = this._nActiveBindings, a = 0; a !== c; ++a) l[a].apply(o);
                        return this;
                    },
                    getRoot: function () {
                        return this._root;
                    },
                    uncacheClip: function (t) {
                        var e = this._actions,
                            i = t.uuid,
                            n = this._actionsByClip,
                            r = n[i];
                        if (void 0 !== r) {
                            for (var o = r.knownActions, a = 0, s = o.length; a !== s; ++a) {
                                var l = o[a];
                                this._deactivateAction(l);
                                var c = l._cacheIndex,
                                    u = e[e.length - 1];
                                (l._cacheIndex = null), (l._byClipCacheIndex = null), (u._cacheIndex = c), (e[c] = u), e.pop(), this._removeInactiveBindingsForAction(l);
                            }
                            delete n[i];
                        }
                    },
                    uncacheRoot: function (t) {
                        var e = t.uuid,
                            i = this._actionsByClip;
                        for (var n in i) {
                            var r = i[n].actionByRoot,
                                o = r[e];
                            void 0 !== o && (this._deactivateAction(o), this._removeInactiveAction(o));
                        }
                        var a = this._bindingsByRootAndName,
                            s = a[e];
                        if (void 0 !== s)
                            for (var l in s) {
                                var c = s[l];
                                c.restoreOriginalState(), this._removeInactiveBinding(c);
                            }
                    },
                    uncacheAction: function (t, e) {
                        var i = this.existingAction(t, e);
                        null !== i && (this._deactivateAction(i), this._removeInactiveAction(i));
                    },
                }),
                Object.assign(Rn.prototype, {
                    _bindAction: function (t, e) {
                        var i = t._localRoot || this._root,
                            n = t._clip.tracks,
                            r = n.length,
                            o = t._propertyBindings,
                            a = t._interpolants,
                            s = i.uuid,
                            l = this._bindingsByRootAndName,
                            c = l[s];
                        void 0 === c && ((c = {}), (l[s] = c));
                        for (var u = 0; u !== r; ++u) {
                            var h = n[u],
                                d = h.name,
                                p = c[d];
                            if (void 0 !== p) o[u] = p;
                            else {
                                if (void 0 !== (p = o[u])) {
                                    null === p._cacheIndex && (++p.referenceCount, this._addInactiveBinding(p, s, d));
                                    continue;
                                }
                                var f = e && e._propertyBindings[u].binding.parsedPath;
                                (p = new En(Mn.create(i, d, f), h.ValueTypeName, h.getValueSize())), ++p.referenceCount, this._addInactiveBinding(p, s, d), (o[u] = p);
                            }
                            a[u].resultBuffer = p.buffer;
                        }
                    },
                    _activateAction: function (t) {
                        if (!this._isActiveAction(t)) {
                            if (null === t._cacheIndex) {
                                var e = (t._localRoot || this._root).uuid,
                                    i = t._clip.uuid,
                                    n = this._actionsByClip[i];
                                this._bindAction(t, n && n.knownActions[0]), this._addInactiveAction(t, i, e);
                            }
                            for (var r = t._propertyBindings, o = 0, a = r.length; o !== a; ++o) {
                                var s = r[o];
                                0 == s.useCount++ && (this._lendBinding(s), s.saveOriginalState());
                            }
                            this._lendAction(t);
                        }
                    },
                    _deactivateAction: function (t) {
                        if (this._isActiveAction(t)) {
                            for (var e = t._propertyBindings, i = 0, n = e.length; i !== n; ++i) {
                                var r = e[i];
                                0 == --r.useCount && (r.restoreOriginalState(), this._takeBackBinding(r));
                            }
                            this._takeBackAction(t);
                        }
                    },
                    _initMemoryManager: function () {
                        (this._actions = []),
                            (this._nActiveActions = 0),
                            (this._actionsByClip = {}),
                            (this._bindings = []),
                            (this._nActiveBindings = 0),
                            (this._bindingsByRootAndName = {}),
                            (this._controlInterpolants = []),
                            (this._nActiveControlInterpolants = 0);
                        var t = this;
                        this.stats = {
                            actions: {
                                get total() {
                                    return t._actions.length;
                                },
                                get inUse() {
                                    return t._nActiveActions;
                                },
                            },
                            bindings: {
                                get total() {
                                    return t._bindings.length;
                                },
                                get inUse() {
                                    return t._nActiveBindings;
                                },
                            },
                            controlInterpolants: {
                                get total() {
                                    return t._controlInterpolants.length;
                                },
                                get inUse() {
                                    return t._nActiveControlInterpolants;
                                },
                            },
                        };
                    },
                    _isActiveAction: function (t) {
                        var e = t._cacheIndex;
                        return null !== e && e < this._nActiveActions;
                    },
                    _addInactiveAction: function (t, e, i) {
                        var n = this._actions,
                            r = this._actionsByClip,
                            o = r[e];
                        if (void 0 === o) (o = { knownActions: [t], actionByRoot: {} }), (t._byClipCacheIndex = 0), (r[e] = o);
                        else {
                            var a = o.knownActions;
                            (t._byClipCacheIndex = a.length), a.push(t);
                        }
                        (t._cacheIndex = n.length), n.push(t), (o.actionByRoot[i] = t);
                    },
                    _removeInactiveAction: function (t) {
                        var e = this._actions,
                            i = e[e.length - 1],
                            n = t._cacheIndex;
                        (i._cacheIndex = n), (e[n] = i), e.pop(), (t._cacheIndex = null);
                        var r = t._clip.uuid,
                            o = this._actionsByClip,
                            a = o[r],
                            s = a.knownActions,
                            l = s[s.length - 1],
                            c = t._byClipCacheIndex;
                        (l._byClipCacheIndex = c), (s[c] = l), s.pop(), (t._byClipCacheIndex = null), delete a.actionByRoot[(e._localRoot || this._root).uuid], 0 === s.length && delete o[r], this._removeInactiveBindingsForAction(t);
                    },
                    _removeInactiveBindingsForAction: function (t) {
                        for (var e = t._propertyBindings, i = 0, n = e.length; i !== n; ++i) {
                            var r = e[i];
                            0 == --r.referenceCount && this._removeInactiveBinding(r);
                        }
                    },
                    _lendAction: function (t) {
                        var e = this._actions,
                            i = t._cacheIndex,
                            n = this._nActiveActions++,
                            r = e[n];
                        (t._cacheIndex = n), (e[n] = t), (r._cacheIndex = i), (e[i] = r);
                    },
                    _takeBackAction: function (t) {
                        var e = this._actions,
                            i = t._cacheIndex,
                            n = --this._nActiveActions,
                            r = e[n];
                        (t._cacheIndex = n), (e[n] = t), (r._cacheIndex = i), (e[i] = r);
                    },
                    _addInactiveBinding: function (t, e, i) {
                        var n = this._bindingsByRootAndName,
                            r = n[e],
                            o = this._bindings;
                        void 0 === r && ((r = {}), (n[e] = r)), (r[i] = t), (t._cacheIndex = o.length), o.push(t);
                    },
                    _removeInactiveBinding: function (t) {
                        var e = this._bindings,
                            i = t.binding,
                            n = i.rootNode.uuid,
                            r = i.path,
                            o = this._bindingsByRootAndName,
                            a = o[n],
                            s = e[e.length - 1],
                            l = t._cacheIndex;
                        (s._cacheIndex = l), (e[l] = s), e.pop(), delete a[r];
                        t: {
                            for (var c in a) break t;
                            delete o[n];
                        }
                    },
                    _lendBinding: function (t) {
                        var e = this._bindings,
                            i = t._cacheIndex,
                            n = this._nActiveBindings++,
                            r = e[n];
                        (t._cacheIndex = n), (e[n] = t), (r._cacheIndex = i), (e[i] = r);
                    },
                    _takeBackBinding: function (t) {
                        var e = this._bindings,
                            i = t._cacheIndex,
                            n = --this._nActiveBindings,
                            r = e[n];
                        (t._cacheIndex = n), (e[n] = t), (r._cacheIndex = i), (e[i] = r);
                    },
                    _lendControlInterpolant: function () {
                        var t = this._controlInterpolants,
                            e = this._nActiveControlInterpolants++,
                            i = t[e];
                        return void 0 === i && ((i = new Bi(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer)), (i.__cacheIndex = e), (t[e] = i)), i;
                    },
                    _takeBackControlInterpolant: function (t) {
                        var e = this._controlInterpolants,
                            i = t.__cacheIndex,
                            n = --this._nActiveControlInterpolants,
                            r = e[n];
                        (t.__cacheIndex = n), (e[n] = t), (r.__cacheIndex = i), (e[i] = r);
                    },
                    _controlInterpolantsResultBuffer: new Float32Array(1),
                }),
                (Pn.prototype = Object.create(Ct.prototype)),
                (Pn.prototype.constructor = Pn),
                (Pn.prototype.isInstancedBufferGeometry = !0),
                (Pn.prototype.addGroup = function (t, e, i) {
                    this.groups.push({ start: t, count: e, materialIndex: i });
                }),
                (Pn.prototype.copy = function (t) {
                    var e = t.index;
                    null !== e && this.setIndex(e.clone());
                    var i = t.attributes;
                    for (var n in i) {
                        var r = i[n];
                        this.addAttribute(n, r.clone());
                    }
                    for (var o = t.groups, a = 0, s = o.length; a < s; a++) {
                        var l = o[a];
                        this.addGroup(l.start, l.count, l.materialIndex);
                    }
                    return this;
                }),
                (Dn.prototype = {
                    constructor: Dn,
                    isInterleavedBufferAttribute: !0,
                    get count() {
                        return this.data.count;
                    },
                    get array() {
                        return this.data.array;
                    },
                    setX: function (t, e) {
                        return (this.data.array[t * this.data.stride + this.offset] = e), this;
                    },
                    setY: function (t, e) {
                        return (this.data.array[t * this.data.stride + this.offset + 1] = e), this;
                    },
                    setZ: function (t, e) {
                        return (this.data.array[t * this.data.stride + this.offset + 2] = e), this;
                    },
                    setW: function (t, e) {
                        return (this.data.array[t * this.data.stride + this.offset + 3] = e), this;
                    },
                    getX: function (t) {
                        return this.data.array[t * this.data.stride + this.offset];
                    },
                    getY: function (t) {
                        return this.data.array[t * this.data.stride + this.offset + 1];
                    },
                    getZ: function (t) {
                        return this.data.array[t * this.data.stride + this.offset + 2];
                    },
                    getW: function (t) {
                        return this.data.array[t * this.data.stride + this.offset + 3];
                    },
                    setXY: function (t, e, i) {
                        return (t = t * this.data.stride + this.offset), (this.data.array[t + 0] = e), (this.data.array[t + 1] = i), this;
                    },
                    setXYZ: function (t, e, i, n) {
                        return (t = t * this.data.stride + this.offset), (this.data.array[t + 0] = e), (this.data.array[t + 1] = i), (this.data.array[t + 2] = n), this;
                    },
                    setXYZW: function (t, e, i, n, r) {
                        return (t = t * this.data.stride + this.offset), (this.data.array[t + 0] = e), (this.data.array[t + 1] = i), (this.data.array[t + 2] = n), (this.data.array[t + 3] = r), this;
                    },
                }),
                (On.prototype = {
                    constructor: On,
                    isInterleavedBuffer: !0,
                    set needsUpdate(t) {
                        !0 === t && this.version++;
                    },
                    setArray: function (t) {
                        if (Array.isArray(t)) throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
                        (this.count = void 0 !== t ? t.length / this.stride : 0), (this.array = t);
                    },
                    setDynamic: function (t) {
                        return (this.dynamic = t), this;
                    },
                    copy: function (t) {
                        return (this.array = new t.array.constructor(t.array)), (this.count = t.count), (this.stride = t.stride), (this.dynamic = t.dynamic), this;
                    },
                    copyAt: function (t, e, i) {
                        (t *= this.stride), (i *= e.stride);
                        for (var n = 0, r = this.stride; n < r; n++) this.array[t + n] = e.array[i + n];
                        return this;
                    },
                    set: function (t, e) {
                        return void 0 === e && (e = 0), this.array.set(t, e), this;
                    },
                    clone: function () {
                        return new this.constructor().copy(this);
                    },
                }),
                (Ln.prototype = Object.create(On.prototype)),
                (Ln.prototype.constructor = Ln),
                (Ln.prototype.isInstancedInterleavedBuffer = !0),
                (Ln.prototype.copy = function (t) {
                    return On.prototype.copy.call(this, t), (this.meshPerAttribute = t.meshPerAttribute), this;
                }),
                (jn.prototype = Object.create(mt.prototype)),
                (jn.prototype.constructor = jn),
                (jn.prototype.isInstancedBufferAttribute = !0),
                (jn.prototype.copy = function (t) {
                    return mt.prototype.copy.call(this, t), (this.meshPerAttribute = t.meshPerAttribute), this;
                }),
                (kn.prototype = {
                    constructor: kn,
                    linePrecision: 1,
                    set: function (t, e) {
                        this.ray.set(t, e);
                    },
                    setFromCamera: function (t, e) {
                        e && e.isPerspectiveCamera
                            ? (this.ray.origin.setFromMatrixPosition(e.matrixWorld), this.ray.direction.set(t.x, t.y, 0.5).unproject(e).sub(this.ray.origin).normalize())
                            : e && e.isOrthographicCamera
                            ? (this.ray.origin.set(t.x, t.y, (e.near + e.far) / (e.near - e.far)).unproject(e), this.ray.direction.set(0, 0, -1).transformDirection(e.matrixWorld))
                            : console.error("THREE.Raycaster: Unsupported camera type.");
                    },
                    intersectObject: function (t, e) {
                        var i = [];
                        return Nn(t, this, i, e), i.sort(In), i;
                    },
                    intersectObjects: function (t, e) {
                        var i = [];
                        if (!1 === Array.isArray(t)) return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."), i;
                        for (var n = 0, r = t.length; n < r; n++) Nn(t[n], this, i, e);
                        return i.sort(In), i;
                    },
                }),
                (Fn.prototype = {
                    constructor: Fn,
                    start: function () {
                        (this.startTime = (performance || Date).now()), (this.oldTime = this.startTime), (this.elapsedTime = 0), (this.running = !0);
                    },
                    stop: function () {
                        this.getElapsedTime(), (this.running = !1);
                    },
                    getElapsedTime: function () {
                        return this.getDelta(), this.elapsedTime;
                    },
                    getDelta: function () {
                        var t = 0;
                        if ((this.autoStart && !this.running && this.start(), this.running)) {
                            var e = (performance || Date).now();
                            (t = (e - this.oldTime) / 1e3), (this.oldTime = e), (this.elapsedTime += t);
                        }
                        return t;
                    },
                }),
                (Bn.prototype = {
                    constructor: Bn,
                    set: function (t, e, i) {
                        return (this.radius = t), (this.phi = e), (this.theta = i), this;
                    },
                    clone: function () {
                        return new this.constructor().copy(this);
                    },
                    copy: function (t) {
                        return (this.radius = t.radius), (this.phi = t.phi), (this.theta = t.theta), this;
                    },
                    makeSafe: function () {
                        return (this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi))), this;
                    },
                    setFromVector3: function (t) {
                        return (this.radius = t.length()), 0 === this.radius ? ((this.theta = 0), (this.phi = 0)) : ((this.theta = Math.atan2(t.x, t.z)), (this.phi = Math.acos(Ma.clamp(t.y / this.radius, -1, 1)))), this;
                    },
                }),
                (Gn.prototype = Object.create(Pt.prototype)),
                (Gn.prototype.constructor = Gn),
                (Gn.prototype.createAnimation = function (t, e, i, n) {
                    var r = { start: e, end: i, length: i - e + 1, fps: n, duration: (i - e) / n, lastFrame: 0, currentFrame: 0, active: !1, time: 0, direction: 1, weight: 1, directionBackwards: !1, mirroredLoop: !1 };
                    (this.animationsMap[t] = r), this.animationsList.push(r);
                }),
                (Gn.prototype.autoCreateAnimations = function (t) {
                    for (var e, i = /([a-z]+)_?(\d+)/i, n = {}, r = this.geometry, o = 0, a = r.morphTargets.length; o < a; o++) {
                        var s = r.morphTargets[o],
                            l = s.name.match(i);
                        if (l && l.length > 1) {
                            var c = l[1];
                            n[c] || (n[c] = { start: 1 / 0, end: -1 / 0 });
                            var u = n[c];
                            o < u.start && (u.start = o), o > u.end && (u.end = o), e || (e = c);
                        }
                    }
                    for (var c in n) {
                        var u = n[c];
                        this.createAnimation(c, u.start, u.end, t);
                    }
                    this.firstAnimation = e;
                }),
                (Gn.prototype.setAnimationDirectionForward = function (t) {
                    var e = this.animationsMap[t];
                    e && ((e.direction = 1), (e.directionBackwards = !1));
                }),
                (Gn.prototype.setAnimationDirectionBackward = function (t) {
                    var e = this.animationsMap[t];
                    e && ((e.direction = -1), (e.directionBackwards = !0));
                }),
                (Gn.prototype.setAnimationFPS = function (t, e) {
                    var i = this.animationsMap[t];
                    i && ((i.fps = e), (i.duration = (i.end - i.start) / i.fps));
                }),
                (Gn.prototype.setAnimationDuration = function (t, e) {
                    var i = this.animationsMap[t];
                    i && ((i.duration = e), (i.fps = (i.end - i.start) / i.duration));
                }),
                (Gn.prototype.setAnimationWeight = function (t, e) {
                    var i = this.animationsMap[t];
                    i && (i.weight = e);
                }),
                (Gn.prototype.setAnimationTime = function (t, e) {
                    var i = this.animationsMap[t];
                    i && (i.time = e);
                }),
                (Gn.prototype.getAnimationTime = function (t) {
                    var e = 0,
                        i = this.animationsMap[t];
                    return i && (e = i.time), e;
                }),
                (Gn.prototype.getAnimationDuration = function (t) {
                    var e = -1,
                        i = this.animationsMap[t];
                    return i && (e = i.duration), e;
                }),
                (Gn.prototype.playAnimation = function (t) {
                    var e = this.animationsMap[t];
                    e ? ((e.time = 0), (e.active = !0)) : console.warn("THREE.MorphBlendMesh: animation[" + t + "] undefined in .playAnimation()");
                }),
                (Gn.prototype.stopAnimation = function (t) {
                    var e = this.animationsMap[t];
                    e && (e.active = !1);
                }),
                (Gn.prototype.update = function (t) {
                    for (var e = 0, i = this.animationsList.length; e < i; e++) {
                        var n = this.animationsList[e];
                        if (n.active) {
                            var r = n.duration / n.length;
                            (n.time += n.direction * t),
                                n.mirroredLoop
                                    ? (n.time > n.duration || n.time < 0) && ((n.direction *= -1), n.time > n.duration && ((n.time = n.duration), (n.directionBackwards = !0)), n.time < 0 && ((n.time = 0), (n.directionBackwards = !1)))
                                    : ((n.time = n.time % n.duration), n.time < 0 && (n.time += n.duration));
                            var o = n.start + Ma.clamp(Math.floor(n.time / r), 0, n.length - 1),
                                a = n.weight;
                            o !== n.currentFrame &&
                                ((this.morphTargetInfluences[n.lastFrame] = 0), (this.morphTargetInfluences[n.currentFrame] = 1 * a), (this.morphTargetInfluences[o] = 0), (n.lastFrame = n.currentFrame), (n.currentFrame = o));
                            var s = (n.time % r) / r;
                            n.directionBackwards && (s = 1 - s),
                                n.currentFrame !== n.lastFrame ? ((this.morphTargetInfluences[n.currentFrame] = s * a), (this.morphTargetInfluences[n.lastFrame] = (1 - s) * a)) : (this.morphTargetInfluences[n.currentFrame] = a);
                        }
                    }
                }),
                (zn.prototype = Object.create(ct.prototype)),
                (zn.prototype.constructor = zn),
                (zn.prototype.isImmediateRenderObject = !0),
                (Vn.prototype = Object.create(we.prototype)),
                (Vn.prototype.constructor = Vn),
                (Vn.prototype.update = (function () {
                    var t = new c(),
                        e = new c(),
                        i = new it();
                    return function () {
                        var n = ["a", "b", "c"];
                        this.object.updateMatrixWorld(!0), i.getNormalMatrix(this.object.matrixWorld);
                        var r = this.object.matrixWorld,
                            o = this.geometry.attributes.position,
                            a = this.object.geometry;
                        if (a && a.isGeometry)
                            for (var s = a.vertices, l = a.faces, c = 0, u = 0, h = l.length; u < h; u++)
                                for (var d = l[u], p = 0, f = d.vertexNormals.length; p < f; p++) {
                                    var m = s[d[n[p]]],
                                        v = d.vertexNormals[p];
                                    t.copy(m).applyMatrix4(r), e.copy(v).applyMatrix3(i).normalize().multiplyScalar(this.size).add(t), o.setXYZ(c, t.x, t.y, t.z), (c += 1), o.setXYZ(c, e.x, e.y, e.z), (c += 1);
                                }
                        else if (a && a.isBufferGeometry)
                            for (var g = a.attributes.position, y = a.attributes.normal, c = 0, p = 0, f = g.count; p < f; p++)
                                t.set(g.getX(p), g.getY(p), g.getZ(p)).applyMatrix4(r),
                                    e.set(y.getX(p), y.getY(p), y.getZ(p)),
                                    e.applyMatrix3(i).normalize().multiplyScalar(this.size).add(t),
                                    o.setXYZ(c, t.x, t.y, t.z),
                                    (c += 1),
                                    o.setXYZ(c, e.x, e.y, e.z),
                                    (c += 1);
                        return (o.needsUpdate = !0), this;
                    };
                })()),
                (Hn.prototype = Object.create(ct.prototype)),
                (Hn.prototype.constructor = Hn),
                (Hn.prototype.dispose = function () {
                    this.cone.geometry.dispose(), this.cone.material.dispose();
                }),
                (Hn.prototype.update = (function () {
                    var t = new c(),
                        e = new c();
                    return function () {
                        var i = this.light.distance ? this.light.distance : 1e3,
                            n = i * Math.tan(this.light.angle);
                        this.cone.scale.set(n, n, i),
                            t.setFromMatrixPosition(this.light.matrixWorld),
                            e.setFromMatrixPosition(this.light.target.matrixWorld),
                            this.cone.lookAt(e.sub(t)),
                            this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);
                    };
                })()),
                (Wn.prototype = Object.create(we.prototype)),
                (Wn.prototype.constructor = Wn),
                (Wn.prototype.getBoneList = function (t) {
                    var e = [];
                    t && t.isBone && e.push(t);
                    for (var i = 0; i < t.children.length; i++) e.push.apply(e, this.getBoneList(t.children[i]));
                    return e;
                }),
                (Wn.prototype.update = function () {
                    for (var t = this.geometry, e = new u().getInverse(this.root.matrixWorld), i = new u(), n = 0, r = 0; r < this.bones.length; r++) {
                        var o = this.bones[r];
                        o.parent && o.parent.isBone && (i.multiplyMatrices(e, o.matrixWorld), t.vertices[n].setFromMatrixPosition(i), i.multiplyMatrices(e, o.parent.matrixWorld), t.vertices[n + 1].setFromMatrixPosition(i), (n += 2));
                    }
                    (t.verticesNeedUpdate = !0), t.computeBoundingSphere();
                }),
                (Xn.prototype = Object.create(Pt.prototype)),
                (Xn.prototype.constructor = Xn),
                (Xn.prototype.dispose = function () {
                    this.geometry.dispose(), this.material.dispose();
                }),
                (Xn.prototype.update = function () {
                    this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);
                }),
                (qn.prototype = Object.create(ct.prototype)),
                (qn.prototype.constructor = qn),
                (qn.prototype.dispose = function () {
                    this.lightSphere.geometry.dispose(), this.lightSphere.material.dispose();
                }),
                (qn.prototype.update = (function () {
                    var t = new c();
                    return function () {
                        this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),
                            this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),
                            this.lightSphere.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate()),
                            (this.lightSphere.geometry.colorsNeedUpdate = !0);
                    };
                })()),
                (Yn.prototype = Object.create(we.prototype)),
                (Yn.prototype.constructor = Yn),
                (Yn.prototype.setColors = function () {
                    console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.");
                }),
                (Zn.prototype = Object.create(we.prototype)),
                (Zn.prototype.constructor = Zn),
                (Zn.prototype.update = (function () {
                    var t = new c(),
                        e = new c(),
                        i = new it();
                    return function () {
                        this.object.updateMatrixWorld(!0), i.getNormalMatrix(this.object.matrixWorld);
                        for (var n = this.object.matrixWorld, r = this.geometry.attributes.position, o = this.object.geometry, a = o.vertices, s = o.faces, l = 0, c = 0, u = s.length; c < u; c++) {
                            var h = s[c],
                                d = h.normal;
                            t.copy(a[h.a]).add(a[h.b]).add(a[h.c]).divideScalar(3).applyMatrix4(n),
                                e.copy(d).applyMatrix3(i).normalize().multiplyScalar(this.size).add(t),
                                r.setXYZ(l, t.x, t.y, t.z),
                                (l += 1),
                                r.setXYZ(l, e.x, e.y, e.z),
                                (l += 1);
                        }
                        return (r.needsUpdate = !0), this;
                    };
                })()),
                (Jn.prototype = Object.create(ct.prototype)),
                (Jn.prototype.constructor = Jn),
                (Jn.prototype.dispose = function () {
                    var t = this.children[0],
                        e = this.children[1];
                    t.geometry.dispose(), t.material.dispose(), e.geometry.dispose(), e.material.dispose();
                }),
                (Jn.prototype.update = (function () {
                    var t = new c(),
                        e = new c(),
                        i = new c();
                    return function () {
                        t.setFromMatrixPosition(this.light.matrixWorld), e.setFromMatrixPosition(this.light.target.matrixWorld), i.subVectors(e, t);
                        var n = this.children[0],
                            r = this.children[1];
                        n.lookAt(i), n.material.color.copy(this.light.color).multiplyScalar(this.light.intensity), r.lookAt(i), (r.scale.z = i.length());
                    };
                })()),
                (Qn.prototype = Object.create(we.prototype)),
                (Qn.prototype.constructor = Qn),
                (Qn.prototype.update = (function () {
                    function t(t, o, a, s) {
                        n.set(o, a, s).unproject(r);
                        var l = i[t];
                        if (void 0 !== l) for (var c = 0, u = l.length; c < u; c++) e.vertices[l[c]].copy(n);
                    }
                    var e,
                        i,
                        n = new c(),
                        r = new Lt();
                    return function () {
                        (e = this.geometry), (i = this.pointMap);
                        r.projectionMatrix.copy(this.camera.projectionMatrix),
                            t("c", 0, 0, -1),
                            t("t", 0, 0, 1),
                            t("n1", -1, -1, -1),
                            t("n2", 1, -1, -1),
                            t("n3", -1, 1, -1),
                            t("n4", 1, 1, -1),
                            t("f1", -1, -1, 1),
                            t("f2", 1, -1, 1),
                            t("f3", -1, 1, 1),
                            t("f4", 1, 1, 1),
                            t("u1", 0.7, 1.1, -1),
                            t("u2", -0.7, 1.1, -1),
                            t("u3", 0, 2, -1),
                            t("cf1", -1, 0, 1),
                            t("cf2", 1, 0, 1),
                            t("cf3", 0, -1, 1),
                            t("cf4", 0, 1, 1),
                            t("cn1", -1, 0, -1),
                            t("cn2", 1, 0, -1),
                            t("cn3", 0, -1, -1),
                            t("cn4", 0, 1, -1),
                            (e.verticesNeedUpdate = !0);
                    };
                })()),
                ($n.prototype = Object.create(Pt.prototype)),
                ($n.prototype.constructor = $n),
                ($n.prototype.update = function () {
                    this.box.setFromObject(this.object), this.box.getSize(this.scale), this.box.getCenter(this.position);
                }),
                (Kn.prototype = Object.create(we.prototype)),
                (Kn.prototype.constructor = Kn),
                (Kn.prototype.update = (function () {
                    var t = new tt();
                    return function (e) {
                        if ((e && e.isBox3 ? t.copy(e) : t.setFromObject(e), !t.isEmpty())) {
                            var i = t.min,
                                n = t.max,
                                r = this.geometry.attributes.position,
                                o = r.array;
                            (o[0] = n.x),
                                (o[1] = n.y),
                                (o[2] = n.z),
                                (o[3] = i.x),
                                (o[4] = n.y),
                                (o[5] = n.z),
                                (o[6] = i.x),
                                (o[7] = i.y),
                                (o[8] = n.z),
                                (o[9] = n.x),
                                (o[10] = i.y),
                                (o[11] = n.z),
                                (o[12] = n.x),
                                (o[13] = n.y),
                                (o[14] = i.z),
                                (o[15] = i.x),
                                (o[16] = n.y),
                                (o[17] = i.z),
                                (o[18] = i.x),
                                (o[19] = i.y),
                                (o[20] = i.z),
                                (o[21] = n.x),
                                (o[22] = i.y),
                                (o[23] = i.z),
                                (r.needsUpdate = !0),
                                this.geometry.computeBoundingSphere();
                        }
                    };
                })());
            var $a = new Ct();
            $a.addAttribute("position", new Tt([0, 0, 0, 0, 1, 0], 3));
            var Ka = new ai(0, 0.5, 1, 5, 1);
            Ka.translate(0, -0.5, 0),
                (tr.prototype = Object.create(ct.prototype)),
                (tr.prototype.constructor = tr),
                (tr.prototype.setDirection = (function () {
                    var t,
                        e = new c();
                    return function (i) {
                        i.y > 0.99999 ? this.quaternion.set(0, 0, 0, 1) : i.y < -0.99999 ? this.quaternion.set(1, 0, 0, 0) : (e.set(i.z, 0, -i.x).normalize(), (t = Math.acos(i.y)), this.quaternion.setFromAxisAngle(e, t));
                    };
                })()),
                (tr.prototype.setLength = function (t, e, i) {
                    void 0 === e && (e = 0.2 * t), void 0 === i && (i = 0.2 * e), this.line.scale.set(1, Math.max(0, t - e), 1), this.line.updateMatrix(), this.cone.scale.set(i, e, i), (this.cone.position.y = t), this.cone.updateMatrix();
                }),
                (tr.prototype.setColor = function (t) {
                    this.line.material.color.copy(t), this.cone.material.color.copy(t);
                }),
                (er.prototype = Object.create(we.prototype)),
                (er.prototype.constructor = er);
            var ts = (function () {
                function t() {}
                var e = new c(),
                    i = new t(),
                    n = new t(),
                    r = new t();
                return (
                    (t.prototype.init = function (t, e, i, n) {
                        (this.c0 = t), (this.c1 = i), (this.c2 = -3 * t + 3 * e - 2 * i - n), (this.c3 = 2 * t - 2 * e + i + n);
                    }),
                    (t.prototype.initNonuniformCatmullRom = function (t, e, i, n, r, o, a) {
                        var s = (e - t) / r - (i - t) / (r + o) + (i - e) / o,
                            l = (i - e) / o - (n - e) / (o + a) + (n - i) / a;
                        (s *= o), (l *= o), this.init(e, i, s, l);
                    }),
                    (t.prototype.initCatmullRom = function (t, e, i, n, r) {
                        this.init(e, i, r * (i - t), r * (n - e));
                    }),
                    (t.prototype.calc = function (t) {
                        var e = t * t,
                            i = e * t;
                        return this.c0 + this.c1 * t + this.c2 * e + this.c3 * i;
                    }),
                    rn.create(
                        function (t) {
                            (this.points = t || []), (this.closed = !1);
                        },
                        function (t) {
                            var o,
                                a,
                                s,
                                l,
                                u = this.points;
                            (l = u.length),
                                l < 2 && console.log("duh, you need at least 2 points"),
                                (o = (l - (this.closed ? 0 : 1)) * t),
                                (a = Math.floor(o)),
                                (s = o - a),
                                this.closed ? (a += a > 0 ? 0 : (Math.floor(Math.abs(a) / u.length) + 1) * u.length) : 0 === s && a === l - 1 && ((a = l - 2), (s = 1));
                            var h, d, p, f;
                            if (
                                (this.closed || a > 0 ? (h = u[(a - 1) % l]) : (e.subVectors(u[0], u[1]).add(u[0]), (h = e)),
                                (d = u[a % l]),
                                (p = u[(a + 1) % l]),
                                this.closed || a + 2 < l ? (f = u[(a + 2) % l]) : (e.subVectors(u[l - 1], u[l - 2]).add(u[l - 1]), (f = e)),
                                void 0 === this.type || "centripetal" === this.type || "chordal" === this.type)
                            ) {
                                var m = "chordal" === this.type ? 0.5 : 0.25,
                                    v = Math.pow(h.distanceToSquared(d), m),
                                    g = Math.pow(d.distanceToSquared(p), m),
                                    y = Math.pow(p.distanceToSquared(f), m);
                                g < 1e-4 && (g = 1),
                                    v < 1e-4 && (v = g),
                                    y < 1e-4 && (y = g),
                                    i.initNonuniformCatmullRom(h.x, d.x, p.x, f.x, v, g, y),
                                    n.initNonuniformCatmullRom(h.y, d.y, p.y, f.y, v, g, y),
                                    r.initNonuniformCatmullRom(h.z, d.z, p.z, f.z, v, g, y);
                            } else if ("catmullrom" === this.type) {
                                var _ = void 0 !== this.tension ? this.tension : 0.5;
                                i.initCatmullRom(h.x, d.x, p.x, f.x, _), n.initCatmullRom(h.y, d.y, p.y, f.y, _), r.initCatmullRom(h.z, d.z, p.z, f.z, _);
                            }
                            return new c(i.calc(s), n.calc(s), r.calc(s));
                        }
                    )
                );
            })();
            ir.prototype = Object.create(ts.prototype);
            var es = rn.create(
                    function (t) {
                        console.warn("THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3"), (this.points = void 0 === t ? [] : t);
                    },
                    function (t) {
                        var e = this.points,
                            i = (e.length - 1) * t,
                            n = Math.floor(i),
                            r = i - n,
                            o = e[0 == n ? n : n - 1],
                            a = e[n],
                            s = e[n > e.length - 2 ? e.length - 1 : n + 1],
                            l = e[n > e.length - 3 ? e.length - 1 : n + 2],
                            u = Za.interpolate;
                        return new c(u(o.x, a.x, s.x, l.x, r), u(o.y, a.y, s.y, l.y, r), u(o.z, a.z, s.z, l.z, r));
                    }
                ),
                is = rn.create(
                    function (t, e, i, n) {
                        (this.v0 = t), (this.v1 = e), (this.v2 = i), (this.v3 = n);
                    },
                    function (t) {
                        var e = Ga.b3;
                        return new c(e(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x), e(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y), e(t, this.v0.z, this.v1.z, this.v2.z, this.v3.z));
                    }
                ),
                ns = rn.create(
                    function (t, e, i) {
                        (this.v0 = t), (this.v1 = e), (this.v2 = i);
                    },
                    function (t) {
                        var e = Ga.b2;
                        return new c(e(t, this.v0.x, this.v1.x, this.v2.x), e(t, this.v0.y, this.v1.y, this.v2.y), e(t, this.v0.z, this.v1.z, this.v2.z));
                    }
                ),
                rs = rn.create(
                    function (t, e) {
                        (this.v1 = t), (this.v2 = e);
                    },
                    function (t) {
                        if (1 === t) return this.v2.clone();
                        var e = new c();
                        return e.subVectors(this.v2, this.v1), e.multiplyScalar(t), e.add(this.v1), e;
                    }
                );
            (nr.prototype = Object.create(sn.prototype)), (nr.prototype.constructor = nr);
            var os = {
                createMultiMaterialObject: function (t, e) {
                    for (var i = new Me(), n = 0, r = e.length; n < r; n++) i.add(new Pt(t, e[n]));
                    return i;
                },
                detach: function (t, e, i) {
                    t.applyMatrix(e.matrixWorld), e.remove(t), i.add(t);
                },
                attach: function (t, e, i) {
                    var n = new u();
                    n.getInverse(i.matrixWorld), t.applyMatrix(n), e.remove(t), i.add(t);
                },
            };
            Object.assign(q.prototype, {
                center: function (t) {
                    return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."), this.getCenter(t);
                },
                empty: function () {
                    return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."), this.isEmpty();
                },
                isIntersectionBox: function (t) {
                    return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(t);
                },
                size: function (t) {
                    return console.warn("THREE.Box2: .size() has been renamed to .getSize()."), this.getSize(t);
                },
            }),
                Object.assign(tt.prototype, {
                    center: function (t) {
                        return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."), this.getCenter(t);
                    },
                    empty: function () {
                        return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."), this.isEmpty();
                    },
                    isIntersectionBox: function (t) {
                        return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(t);
                    },
                    isIntersectionSphere: function (t) {
                        return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(t);
                    },
                    size: function (t) {
                        return console.warn("THREE.Box3: .size() has been renamed to .getSize()."), this.getSize(t);
                    },
                }),
                Object.assign(ht.prototype, {
                    center: function (t) {
                        return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."), this.getCenter(t);
                    },
                }),
                Object.assign(it.prototype, {
                    multiplyVector3: function (t) {
                        return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."), t.applyMatrix3(this);
                    },
                    multiplyVector3Array: function (t) {
                        return console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."), this.applyToVector3Array(t);
                    },
                }),
                Object.assign(u.prototype, {
                    extractPosition: function (t) {
                        return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."), this.copyPosition(t);
                    },
                    setRotationFromQuaternion: function (t) {
                        return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."), this.makeRotationFromQuaternion(t);
                    },
                    multiplyVector3: function (t) {
                        return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."), t.applyProjection(this);
                    },
                    multiplyVector4: function (t) {
                        return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."), t.applyMatrix4(this);
                    },
                    multiplyVector3Array: function (t) {
                        return console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."), this.applyToVector3Array(t);
                    },
                    rotateAxis: function (t) {
                        console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."), t.transformDirection(this);
                    },
                    crossVector: function (t) {
                        return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."), t.applyMatrix4(this);
                    },
                    translate: function (t) {
                        console.error("THREE.Matrix4: .translate() has been removed.");
                    },
                    rotateX: function (t) {
                        console.error("THREE.Matrix4: .rotateX() has been removed.");
                    },
                    rotateY: function (t) {
                        console.error("THREE.Matrix4: .rotateY() has been removed.");
                    },
                    rotateZ: function (t) {
                        console.error("THREE.Matrix4: .rotateZ() has been removed.");
                    },
                    rotateByAxis: function (t, e) {
                        console.error("THREE.Matrix4: .rotateByAxis() has been removed.");
                    },
                }),
                Object.assign(nt.prototype, {
                    isIntersectionLine: function (t) {
                        return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."), this.intersectsLine(t);
                    },
                }),
                Object.assign(l.prototype, {
                    multiplyVector3: function (t) {
                        return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."), t.applyQuaternion(this);
                    },
                }),
                Object.assign(at.prototype, {
                    isIntersectionBox: function (t) {
                        return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(t);
                    },
                    isIntersectionPlane: function (t) {
                        return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."), this.intersectsPlane(t);
                    },
                    isIntersectionSphere: function (t) {
                        return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(t);
                    },
                }),
                Object.assign(hn.prototype, {
                    extrude: function (t) {
                        return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."), new Ze(this, t);
                    },
                    makeGeometry: function (t) {
                        return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."), new ri(this, t);
                    },
                }),
                Object.assign(c.prototype, {
                    setEulerFromRotationMatrix: function () {
                        console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.");
                    },
                    setEulerFromQuaternion: function () {
                        console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.");
                    },
                    getPositionFromMatrix: function (t) {
                        return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."), this.setFromMatrixPosition(t);
                    },
                    getScaleFromMatrix: function (t) {
                        return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."), this.setFromMatrixScale(t);
                    },
                    getColumnFromMatrix: function (t, e) {
                        return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."), this.setFromMatrixColumn(e, t);
                    },
                }),
                Object.assign(ct.prototype, {
                    getChildByName: function (t) {
                        return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."), this.getObjectByName(t);
                    },
                    renderDepth: function (t) {
                        console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.");
                    },
                    translate: function (t, e) {
                        return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."), this.translateOnAxis(e, t);
                    },
                }),
                Object.defineProperties(ct.prototype, {
                    eulerOrder: {
                        get: function () {
                            return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order;
                        },
                        set: function (t) {
                            console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), (this.rotation.order = t);
                        },
                    },
                    useQuaternion: {
                        get: function () {
                            console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
                        },
                        set: function (t) {
                            console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
                        },
                    },
                }),
                Object.defineProperties(me.prototype, {
                    objects: {
                        get: function () {
                            return console.warn("THREE.LOD: .objects has been renamed to .levels."), this.levels;
                        },
                    },
                }),
                (jt.prototype.setLens = function (t, e) {
                    console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."), void 0 !== e && (this.filmGauge = e), this.setFocalLength(t);
                }),
                Object.defineProperties(Ci.prototype, {
                    onlyShadow: {
                        set: function (t) {
                            console.warn("THREE.Light: .onlyShadow has been removed.");
                        },
                    },
                    shadowCameraFov: {
                        set: function (t) {
                            console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."), (this.shadow.camera.fov = t);
                        },
                    },
                    shadowCameraLeft: {
                        set: function (t) {
                            console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."), (this.shadow.camera.left = t);
                        },
                    },
                    shadowCameraRight: {
                        set: function (t) {
                            console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."), (this.shadow.camera.right = t);
                        },
                    },
                    shadowCameraTop: {
                        set: function (t) {
                            console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."), (this.shadow.camera.top = t);
                        },
                    },
                    shadowCameraBottom: {
                        set: function (t) {
                            console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."), (this.shadow.camera.bottom = t);
                        },
                    },
                    shadowCameraNear: {
                        set: function (t) {
                            console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."), (this.shadow.camera.near = t);
                        },
                    },
                    shadowCameraFar: {
                        set: function (t) {
                            console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."), (this.shadow.camera.far = t);
                        },
                    },
                    shadowCameraVisible: {
                        set: function (t) {
                            console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.");
                        },
                    },
                    shadowBias: {
                        set: function (t) {
                            console.warn("THREE.Light: .shadowBias is now .shadow.bias."), (this.shadow.bias = t);
                        },
                    },
                    shadowDarkness: {
                        set: function (t) {
                            console.warn("THREE.Light: .shadowDarkness has been removed.");
                        },
                    },
                    shadowMapWidth: {
                        set: function (t) {
                            console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."), (this.shadow.mapSize.width = t);
                        },
                    },
                    shadowMapHeight: {
                        set: function (t) {
                            console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."), (this.shadow.mapSize.height = t);
                        },
                    },
                }),
                Object.defineProperties(mt.prototype, {
                    length: {
                        get: function () {
                            return console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count."), this.array.length;
                        },
                    },
                }),
                Object.assign(Ct.prototype, {
                    addIndex: function (t) {
                        console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."), this.setIndex(t);
                    },
                    addDrawCall: function (t, e, i) {
                        void 0 !== i && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."), console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."), this.addGroup(t, e);
                    },
                    clearDrawCalls: function () {
                        console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."), this.clearGroups();
                    },
                    computeTangents: function () {
                        console.warn("THREE.BufferGeometry: .computeTangents() has been removed.");
                    },
                    computeOffsets: function () {
                        console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.");
                    },
                }),
                Object.defineProperties(Ct.prototype, {
                    drawcalls: {
                        get: function () {
                            return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."), this.groups;
                        },
                    },
                    offsets: {
                        get: function () {
                            return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."), this.groups;
                        },
                    },
                }),
                Object.defineProperties(J.prototype, {
                    wrapAround: {
                        get: function () {
                            console.warn("THREE." + this.type + ": .wrapAround has been removed.");
                        },
                        set: function (t) {
                            console.warn("THREE." + this.type + ": .wrapAround has been removed.");
                        },
                    },
                    wrapRGB: {
                        get: function () {
                            return console.warn("THREE." + this.type + ": .wrapRGB has been removed."), new X();
                        },
                    },
                }),
                Object.defineProperties(yi.prototype, {
                    metal: {
                        get: function () {
                            return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."), !1;
                        },
                        set: function (t) {
                            console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead");
                        },
                    },
                }),
                Object.defineProperties($.prototype, {
                    derivatives: {
                        get: function () {
                            return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives;
                        },
                        set: function (t) {
                            console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), (this.extensions.derivatives = t);
                        },
                    },
                }),
                (e.prototype = Object.assign(
                    Object.create({
                        constructor: e,
                        apply: function (t) {
                            console.warn("THREE.EventDispatcher: .apply is deprecated, just inherit or Object.assign the prototype to mix-in."), Object.assign(t, this);
                        },
                    }),
                    e.prototype
                )),
                Object.defineProperties(Cn.prototype, {
                    dynamic: {
                        set: function (t) {
                            console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.");
                        },
                    },
                    onUpdate: {
                        value: function () {
                            return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."), this;
                        },
                    },
                }),
                Object.assign(le.prototype, {
                    supportsFloatTextures: function () {
                        return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."), this.extensions.get("OES_texture_float");
                    },
                    supportsHalfFloatTextures: function () {
                        return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."), this.extensions.get("OES_texture_half_float");
                    },
                    supportsStandardDerivatives: function () {
                        return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."), this.extensions.get("OES_standard_derivatives");
                    },
                    supportsCompressedTextureS3TC: function () {
                        return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."), this.extensions.get("WEBGL_compressed_texture_s3tc");
                    },
                    supportsCompressedTexturePVRTC: function () {
                        return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."), this.extensions.get("WEBGL_compressed_texture_pvrtc");
                    },
                    supportsBlendMinMax: function () {
                        return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."), this.extensions.get("EXT_blend_minmax");
                    },
                    supportsVertexTextures: function () {
                        return this.capabilities.vertexTextures;
                    },
                    supportsInstancedArrays: function () {
                        return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."), this.extensions.get("ANGLE_instanced_arrays");
                    },
                    enableScissorTest: function (t) {
                        console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."), this.setScissorTest(t);
                    },
                    initMaterial: function () {
                        console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.");
                    },
                    addPrePlugin: function () {
                        console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.");
                    },
                    addPostPlugin: function () {
                        console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.");
                    },
                    updateShadowMap: function () {
                        console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.");
                    },
                }),
                Object.defineProperties(le.prototype, {
                    shadowMapEnabled: {
                        get: function () {
                            return this.shadowMap.enabled;
                        },
                        set: function (t) {
                            console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."), (this.shadowMap.enabled = t);
                        },
                    },
                    shadowMapType: {
                        get: function () {
                            return this.shadowMap.type;
                        },
                        set: function (t) {
                            console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."), (this.shadowMap.type = t);
                        },
                    },
                    shadowMapCullFace: {
                        get: function () {
                            return this.shadowMap.cullFace;
                        },
                        set: function (t) {
                            console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace."), (this.shadowMap.cullFace = t);
                        },
                    },
                }),
                Object.defineProperties(ot.prototype, {
                    cullFace: {
                        get: function () {
                            return this.renderReverseSided ? _r : yr;
                        },
                        set: function (t) {
                            var e = t !== yr;
                            console.warn("WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to " + e + "."), (this.renderReverseSided = e);
                        },
                    },
                }),
                Object.defineProperties(a.prototype, {
                    wrapS: {
                        get: function () {
                            return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS;
                        },
                        set: function (t) {
                            console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), (this.texture.wrapS = t);
                        },
                    },
                    wrapT: {
                        get: function () {
                            return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT;
                        },
                        set: function (t) {
                            console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), (this.texture.wrapT = t);
                        },
                    },
                    magFilter: {
                        get: function () {
                            return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter;
                        },
                        set: function (t) {
                            console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), (this.texture.magFilter = t);
                        },
                    },
                    minFilter: {
                        get: function () {
                            return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter;
                        },
                        set: function (t) {
                            console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), (this.texture.minFilter = t);
                        },
                    },
                    anisotropy: {
                        get: function () {
                            return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy;
                        },
                        set: function (t) {
                            console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), (this.texture.anisotropy = t);
                        },
                    },
                    offset: {
                        get: function () {
                            return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset;
                        },
                        set: function (t) {
                            console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), (this.texture.offset = t);
                        },
                    },
                    repeat: {
                        get: function () {
                            return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat;
                        },
                        set: function (t) {
                            console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), (this.texture.repeat = t);
                        },
                    },
                    format: {
                        get: function () {
                            return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format;
                        },
                        set: function (t) {
                            console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), (this.texture.format = t);
                        },
                    },
                    type: {
                        get: function () {
                            return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type;
                        },
                        set: function (t) {
                            console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), (this.texture.type = t);
                        },
                    },
                    generateMipmaps: {
                        get: function () {
                            return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps;
                        },
                        set: function (t) {
                            console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), (this.texture.generateMipmaps = t);
                        },
                    },
                }),
                Object.assign(xn.prototype, {
                    load: function (t) {
                        console.warn("THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.");
                        var e = this;
                        return (
                            new gn().load(t, function (t) {
                                e.setBuffer(t);
                            }),
                            this
                        );
                    },
                }),
                Object.assign(Tn.prototype, {
                    getData: function (t) {
                        return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."), this.getFrequencyData();
                    },
                });
            var as = {
                    merge: function (t, e, i) {
                        console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");
                        var n;
                        e.isMesh && (e.matrixAutoUpdate && e.updateMatrix(), (n = e.matrix), (e = e.geometry)), t.merge(e, n, i);
                    },
                    center: function (t) {
                        return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."), t.center();
                    },
                },
                ss = {
                    crossOrigin: void 0,
                    loadTexture: function (t, e, i, n) {
                        console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
                        var r = new Ri();
                        r.setCrossOrigin(this.crossOrigin);
                        var o = r.load(t, i, void 0, n);
                        return e && (o.mapping = e), o;
                    },
                    loadTextureCube: function (t, e, i, n) {
                        console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
                        var r = new Ai();
                        r.setCrossOrigin(this.crossOrigin);
                        var o = r.load(t, i, void 0, n);
                        return e && (o.mapping = e), o;
                    },
                    loadCompressedTexture: function () {
                        console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.");
                    },
                    loadCompressedTextureCube: function () {
                        console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.");
                    },
                };
            (t.WebGLRenderTargetCube = s),
                (t.WebGLRenderTarget = a),
                (t.WebGLRenderer = le),
                (t.ShaderLib = Ia),
                (t.UniformsLib = ka),
                (t.UniformsUtils = Oa),
                (t.ShaderChunk = La),
                (t.FogExp2 = ce),
                (t.Fog = ue),
                (t.Scene = he),
                (t.LensFlare = de),
                (t.Sprite = fe),
                (t.LOD = me),
                (t.SkinnedMesh = _e),
                (t.Skeleton = ge),
                (t.Bone = ye),
                (t.Mesh = Pt),
                (t.LineSegments = we),
                (t.Line = xe),
                (t.Points = Ee),
                (t.Group = Me),
                (t.VideoTexture = Se),
                (t.DataTexture = ve),
                (t.CompressedTexture = Ae),
                (t.CubeTexture = h),
                (t.CanvasTexture = Re),
                (t.DepthTexture = Ce),
                (t.TextureIdCount = r),
                (t.Texture = n),
                (t.MaterialIdCount = Q),
                (t.CompressedTextureLoader = Ei),
                (t.BinaryTextureLoader = Mi),
                (t.DataTextureLoader = Xa),
                (t.CubeTextureLoader = Ai),
                (t.TextureLoader = Ri),
                (t.ObjectLoader = nn),
                (t.MaterialLoader = $i),
                (t.BufferGeometryLoader = Ki),
                (t.DefaultLoadingManager = Wa),
                (t.LoadingManager = wi),
                (t.JSONLoader = en),
                (t.ImageLoader = Si),
                (t.FontLoader = mn),
                (t.XHRLoader = Ti),
                (t.Loader = tn),
                (t.Cache = Ha),
                (t.AudioLoader = gn),
                (t.SpotLightShadow = Oi),
                (t.SpotLight = Li),
                (t.PointLight = ji),
                (t.HemisphereLight = Pi),
                (t.DirectionalLightShadow = ki),
                (t.DirectionalLight = Ii),
                (t.AmbientLight = Ni),
                (t.LightShadow = Di),
                (t.Light = Ci),
                (t.StereoCamera = yn),
                (t.PerspectiveCamera = jt),
                (t.OrthographicCamera = kt),
                (t.CubeCamera = _n),
                (t.Camera = Lt),
                (t.AudioListener = bn),
                (t.PositionalAudio = wn),
                (t.getAudioContext = vn),
                (t.AudioAnalyser = Tn),
                (t.Audio = xn),
                (t.VectorKeyframeTrack = Vi),
                (t.StringKeyframeTrack = qi),
                (t.QuaternionKeyframeTrack = Wi),
                (t.NumberKeyframeTrack = Xi),
                (t.ColorKeyframeTrack = Zi),
                (t.BooleanKeyframeTrack = Yi),
                (t.PropertyMixer = En),
                (t.PropertyBinding = Mn),
                (t.KeyframeTrack = Ji),
                (t.AnimationUtils = qa),
                (t.AnimationObjectGroup = Sn),
                (t.AnimationMixer = Rn),
                (t.AnimationClip = Qi),
                (t.Uniform = Cn),
                (t.InstancedBufferGeometry = Pn),
                (t.BufferGeometry = Ct),
                (t.GeometryIdCount = At),
                (t.Geometry = St),
                (t.InterleavedBufferAttribute = Dn),
                (t.InstancedInterleavedBuffer = Ln),
                (t.InterleavedBuffer = On),
                (t.InstancedBufferAttribute = jn),
                (t.DynamicBufferAttribute = Mt),
                (t.Float64Attribute = Et),
                (t.Float32Attribute = Tt),
                (t.Uint32Attribute = wt),
                (t.Int32Attribute = xt),
                (t.Uint16Attribute = bt),
                (t.Int16Attribute = _t),
                (t.Uint8ClampedAttribute = yt),
                (t.Uint8Attribute = gt),
                (t.Int8Attribute = vt),
                (t.BufferAttribute = mt),
                (t.Face3 = pt),
                (t.Object3DIdCount = ut),
                (t.Object3D = ct),
                (t.Raycaster = kn),
                (t.Layers = lt),
                (t.EventDispatcher = e),
                (t.Clock = Fn),
                (t.QuaternionLinearInterpolant = Hi),
                (t.LinearInterpolant = Bi),
                (t.DiscreteInterpolant = Gi),
                (t.CubicInterpolant = Ui),
                (t.Interpolant = Fi),
                (t.Triangle = dt),
                (t.Spline = Un),
                (t.Math = Ma),
                (t.Spherical = Bn),
                (t.Plane = nt),
                (t.Frustum = rt),
                (t.Sphere = et),
                (t.Ray = at),
                (t.Matrix4 = u),
                (t.Matrix3 = it),
                (t.Box3 = tt),
                (t.Box2 = q),
                (t.Line3 = ht),
                (t.Euler = st),
                (t.Vector4 = o),
                (t.Vector3 = c),
                (t.Vector2 = i),
                (t.Quaternion = l),
                (t.ColorKeywords = ja),
                (t.Color = X),
                (t.MorphBlendMesh = Gn),
                (t.ImmediateRenderObject = zn),
                (t.VertexNormalsHelper = Vn),
                (t.SpotLightHelper = Hn),
                (t.SkeletonHelper = Wn),
                (t.PointLightHelper = Xn),
                (t.HemisphereLightHelper = qn),
                (t.GridHelper = Yn),
                (t.FaceNormalsHelper = Zn),
                (t.DirectionalLightHelper = Jn),
                (t.CameraHelper = Qn),
                (t.BoundingBoxHelper = $n),
                (t.BoxHelper = Kn),
                (t.ArrowHelper = tr),
                (t.AxisHelper = er),
                (t.ClosedSplineCurve3 = ir),
                (t.CatmullRomCurve3 = ts),
                (t.SplineCurve3 = es),
                (t.CubicBezierCurve3 = is),
                (t.QuadraticBezierCurve3 = ns),
                (t.LineCurve3 = rs),
                (t.ArcCurve = nr),
                (t.EllipseCurve = sn),
                (t.SplineCurve = ln),
                (t.CubicBezierCurve = cn),
                (t.QuadraticBezierCurve = un),
                (t.LineCurve = on),
                (t.Shape = hn),
                (t.ShapePath = pn),
                (t.Path = dn),
                (t.Font = fn),
                (t.CurvePath = an),
                (t.Curve = rn),
                (t.ShapeUtils = Ga),
                (t.SceneUtils = os),
                (t.CurveUtils = Za),
                (t.WireframeGeometry = Pe),
                (t.ParametricGeometry = Oe),
                (t.ParametricBufferGeometry = De),
                (t.TetrahedronGeometry = ke),
                (t.TetrahedronBufferGeometry = je),
                (t.OctahedronGeometry = Ne),
                (t.OctahedronBufferGeometry = Ie),
                (t.IcosahedronGeometry = Ue),
                (t.IcosahedronBufferGeometry = Fe),
                (t.DodecahedronGeometry = Ge),
                (t.DodecahedronBufferGeometry = Be),
                (t.PolyhedronGeometry = ze),
                (t.PolyhedronBufferGeometry = Le),
                (t.TubeGeometry = He),
                (t.TubeBufferGeometry = Ve),
                (t.TorusKnotGeometry = Xe),
                (t.TorusKnotBufferGeometry = We),
                (t.TorusGeometry = Ye),
                (t.TorusBufferGeometry = qe),
                (t.TextGeometry = Je),
                (t.SphereBufferGeometry = Qe),
                (t.SphereGeometry = $e),
                (t.RingGeometry = ti),
                (t.RingBufferGeometry = Ke),
                (t.PlaneBufferGeometry = Ot),
                (t.PlaneGeometry = ei),
                (t.LatheGeometry = ni),
                (t.LatheBufferGeometry = ii),
                (t.ShapeGeometry = ri),
                (t.ExtrudeGeometry = Ze),
                (t.EdgesGeometry = oi),
                (t.ConeGeometry = li),
                (t.ConeBufferGeometry = ci);
            (t.CylinderGeometry = si),
                (t.CylinderBufferGeometry = ai),
                (t.CircleBufferGeometry = ui),
                (t.CircleGeometry = hi),
                (t.BoxBufferGeometry = Dt),
                (t.BoxGeometry = di),
                (t.ShadowMaterial = pi),
                (t.SpriteMaterial = pe),
                (t.RawShaderMaterial = fi),
                (t.ShaderMaterial = $),
                (t.PointsMaterial = Te),
                (t.MultiMaterial = mi),
                (t.MeshPhysicalMaterial = gi),
                (t.MeshStandardMaterial = vi),
                (t.MeshPhongMaterial = yi),
                (t.MeshNormalMaterial = _i),
                (t.MeshLambertMaterial = bi),
                (t.MeshDepthMaterial = K),
                (t.MeshBasicMaterial = ft),
                (t.LineDashedMaterial = xi),
                (t.LineBasicMaterial = be),
                (t.Material = J),
                (t.REVISION = mr),
                (t.MOUSE = vr),
                (t.CullFaceNone = gr),
                (t.CullFaceBack = yr),
                (t.CullFaceFront = _r),
                (t.CullFaceFrontBack = 3),
                (t.FrontFaceDirectionCW = br),
                (t.FrontFaceDirectionCCW = 1),
                (t.BasicShadowMap = 0),
                (t.PCFShadowMap = xr),
                (t.PCFSoftShadowMap = wr),
                (t.FrontSide = Tr),
                (t.BackSide = Er),
                (t.DoubleSide = Mr),
                (t.FlatShading = Sr),
                (t.SmoothShading = Ar),
                (t.NoColors = Rr),
                (t.FaceColors = Cr),
                (t.VertexColors = Pr),
                (t.NoBlending = Dr),
                (t.NormalBlending = Or),
                (t.AdditiveBlending = Lr),
                (t.SubtractiveBlending = jr),
                (t.MultiplyBlending = kr),
                (t.CustomBlending = Ir),
                (t.BlendingMode = Nr),
                (t.AddEquation = Fr),
                (t.SubtractEquation = Ur),
                (t.ReverseSubtractEquation = Br),
                (t.MinEquation = Gr),
                (t.MaxEquation = zr),
                (t.ZeroFactor = Vr),
                (t.OneFactor = Hr),
                (t.SrcColorFactor = Wr),
                (t.OneMinusSrcColorFactor = Xr),
                (t.SrcAlphaFactor = qr),
                (t.OneMinusSrcAlphaFactor = Yr),
                (t.DstAlphaFactor = Zr),
                (t.OneMinusDstAlphaFactor = Jr),
                (t.DstColorFactor = Qr),
                (t.OneMinusDstColorFactor = $r),
                (t.SrcAlphaSaturateFactor = Kr),
                (t.NeverDepth = to),
                (t.AlwaysDepth = eo),
                (t.LessDepth = io),
                (t.LessEqualDepth = no),
                (t.EqualDepth = ro),
                (t.GreaterEqualDepth = oo),
                (t.GreaterDepth = ao),
                (t.NotEqualDepth = so),
                (t.MultiplyOperation = lo),
                (t.MixOperation = co),
                (t.AddOperation = uo),
                (t.NoToneMapping = ho),
                (t.LinearToneMapping = po),
                (t.ReinhardToneMapping = fo),
                (t.Uncharted2ToneMapping = mo),
                (t.CineonToneMapping = vo),
                (t.UVMapping = 300),
                (t.CubeReflectionMapping = go),
                (t.CubeRefractionMapping = yo),
                (t.EquirectangularReflectionMapping = _o),
                (t.EquirectangularRefractionMapping = bo),
                (t.SphericalReflectionMapping = xo),
                (t.CubeUVReflectionMapping = wo),
                (t.CubeUVRefractionMapping = To),
                (t.TextureMapping = Eo),
                (t.RepeatWrapping = Mo),
                (t.ClampToEdgeWrapping = So),
                (t.MirroredRepeatWrapping = Ao),
                (t.TextureWrapping = Ro),
                (t.NearestFilter = Co),
                (t.NearestMipMapNearestFilter = Po),
                (t.NearestMipMapLinearFilter = Do),
                (t.LinearFilter = Oo),
                (t.LinearMipMapNearestFilter = Lo),
                (t.LinearMipMapLinearFilter = jo),
                (t.TextureFilter = ko),
                (t.UnsignedByteType = Io),
                (t.ByteType = No),
                (t.ShortType = Fo),
                (t.UnsignedShortType = Uo),
                (t.IntType = Bo),
                (t.UnsignedIntType = Go),
                (t.FloatType = zo),
                (t.HalfFloatType = Vo),
                (t.UnsignedShort4444Type = Ho),
                (t.UnsignedShort5551Type = Wo),
                (t.UnsignedShort565Type = Xo),
                (t.UnsignedInt248Type = qo),
                (t.AlphaFormat = Yo),
                (t.RGBFormat = Zo),
                (t.RGBAFormat = Jo),
                (t.LuminanceFormat = Qo),
                (t.LuminanceAlphaFormat = $o),
                (t.RGBEFormat = Ko),
                (t.DepthFormat = ta),
                (t.DepthStencilFormat = ea),
                (t.RGB_S3TC_DXT1_Format = ia),
                (t.RGBA_S3TC_DXT1_Format = na),
                (t.RGBA_S3TC_DXT3_Format = ra),
                (t.RGBA_S3TC_DXT5_Format = oa),
                (t.RGB_PVRTC_4BPPV1_Format = aa),
                (t.RGB_PVRTC_2BPPV1_Format = sa),
                (t.RGBA_PVRTC_4BPPV1_Format = la),
                (t.RGBA_PVRTC_2BPPV1_Format = ca),
                (t.RGB_ETC1_Format = ua),
                (t.LoopOnce = 2200),
                (t.LoopRepeat = ha),
                (t.LoopPingPong = 2202),
                (t.InterpolateDiscrete = 2300),
                (t.InterpolateLinear = 2301),
                (t.InterpolateSmooth = 2302),
                (t.ZeroCurvatureEnding = da),
                (t.ZeroSlopeEnding = 2401),
                (t.WrapAroundEnding = 2402),
                (t.TrianglesDrawMode = pa),
                (t.TriangleStripDrawMode = fa),
                (t.TriangleFanDrawMode = ma),
                (t.LinearEncoding = va),
                (t.sRGBEncoding = ga),
                (t.GammaEncoding = ya),
                (t.RGBEEncoding = _a),
                (t.LogLuvEncoding = 3003),
                (t.RGBM7Encoding = ba),
                (t.RGBM16Encoding = xa),
                (t.RGBDEncoding = wa),
                (t.BasicDepthPacking = Ta),
                (t.RGBADepthPacking = Ea),
                (t.CubeGeometry = di),
                (t.Face4 = rr),
                (t.LineStrip = 0),
                (t.LinePieces = 1),
                (t.MeshFaceMaterial = mi),
                (t.PointCloud = or),
                (t.Particle = fe),
                (t.ParticleSystem = ar),
                (t.PointCloudMaterial = sr),
                (t.ParticleBasicMaterial = lr),
                (t.ParticleSystemMaterial = cr),
                (t.Vertex = ur),
                (t.EdgesHelper = hr),
                (t.WireframeHelper = dr),
                (t.GeometryUtils = as),
                (t.ImageUtils = ss),
                (t.Projector = pr),
                (t.CanvasRenderer = fr),
                Object.defineProperty(t, "__esModule", { value: !0 }),
                Object.defineProperty(t, "AudioContext", {
                    get: function () {
                        return t.getAudioContext();
                    },
                });
        });
    },
    "../node_modules/three/examples/js/controls/OrbitControls.js": function (t, e) {
        (THREE.OrbitControls = function (t, e) {
            function i() {
                return ((2 * Math.PI) / 60 / 60) * L.autoRotateSpeed;
            }
            function n() {
                return Math.pow(0.95, L.zoomSpeed);
            }
            function r(t) {
                G.theta -= t;
            }
            function o(t) {
                G.phi -= t;
            }
            function a(t) {
                L.object instanceof THREE.PerspectiveCamera
                    ? (z /= t)
                    : L.object instanceof THREE.OrthographicCamera
                    ? ((L.object.zoom = Math.max(L.minZoom, Math.min(L.maxZoom, L.object.zoom * t))), L.object.updateProjectionMatrix(), (H = !0))
                    : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."), (L.enableZoom = !1));
            }
            function s(t) {
                L.object instanceof THREE.PerspectiveCamera
                    ? (z *= t)
                    : L.object instanceof THREE.OrthographicCamera
                    ? ((L.object.zoom = Math.max(L.minZoom, Math.min(L.maxZoom, L.object.zoom / t))), L.object.updateProjectionMatrix(), (H = !0))
                    : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."), (L.enableZoom = !1));
            }
            function l(t) {
                W.set(t.clientX, t.clientY);
            }
            function c(t) {
                Q.set(t.clientX, t.clientY);
            }
            function u(t) {
                Y.set(t.clientX, t.clientY);
            }
            function h(t) {
                X.set(t.clientX, t.clientY), q.subVectors(X, W);
                var e = L.domElement === document ? L.domElement.body : L.domElement;
                r(((2 * Math.PI * q.x) / e.clientWidth) * L.rotateSpeed), o(((2 * Math.PI * q.y) / e.clientHeight) * L.rotateSpeed), W.copy(X), L.update();
            }
            function d(t) {
                $.set(t.clientX, t.clientY), K.subVectors($, Q), K.y > 0 ? a(n()) : K.y < 0 && s(n()), Q.copy($), L.update();
            }
            function p(t) {
                Z.set(t.clientX, t.clientY), J.subVectors(Z, Y), it(J.x, J.y), Y.copy(Z), L.update();
            }
            function f(t) {}
            function m(t) {
                t.deltaY < 0 ? s(n()) : t.deltaY > 0 && a(n()), L.update();
            }
            function v(t) {
                switch (t.keyCode) {
                    case L.keys.UP:
                        it(0, L.keyPanSpeed), L.update();
                        break;
                    case L.keys.BOTTOM:
                        it(0, -L.keyPanSpeed), L.update();
                        break;
                    case L.keys.LEFT:
                        it(L.keyPanSpeed, 0), L.update();
                        break;
                    case L.keys.RIGHT:
                        it(-L.keyPanSpeed, 0), L.update();
                }
            }
            function g(t) {
                W.set(t.touches[0].pageX, t.touches[0].pageY);
            }
            function y(t) {
                var e = t.touches[0].pageX - t.touches[1].pageX,
                    i = t.touches[0].pageY - t.touches[1].pageY,
                    n = Math.sqrt(e * e + i * i);
                Q.set(0, n);
            }
            function _(t) {
                Y.set(t.touches[0].pageX, t.touches[0].pageY);
            }
            function b(t) {
                X.set(t.touches[0].pageX, t.touches[0].pageY), q.subVectors(X, W);
                var e = L.domElement === document ? L.domElement.body : L.domElement;
                r(((2 * Math.PI * q.x) / e.clientWidth) * L.rotateSpeed), o(((2 * Math.PI * q.y) / e.clientHeight) * L.rotateSpeed), W.copy(X), L.update();
            }
            function x(t) {
                var e = t.touches[0].pageX - t.touches[1].pageX,
                    i = t.touches[0].pageY - t.touches[1].pageY,
                    r = Math.sqrt(e * e + i * i);
                $.set(0, r), K.subVectors($, Q), K.y > 0 ? s(n()) : K.y < 0 && a(n()), Q.copy($), L.update();
            }
            function w(t) {
                Z.set(t.touches[0].pageX, t.touches[0].pageY), J.subVectors(Z, Y), it(J.x, J.y), Y.copy(Z), L.update();
            }
            function T(t) {}
            function E(t) {
                if (!1 !== L.enabled) {
                    if ((t.preventDefault(), t.button === L.mouseButtons.ORBIT)) {
                        if (!1 === L.enableRotate) return;
                        l(t), (F = N.ROTATE);
                    } else if (t.button === L.mouseButtons.ZOOM) {
                        if (!1 === L.enableZoom) return;
                        c(t), (F = N.DOLLY);
                    } else if (t.button === L.mouseButtons.PAN) {
                        if (!1 === L.enablePan) return;
                        u(t), (F = N.PAN);
                    }
                    F !== N.NONE && (document.addEventListener("mousemove", M, !1), document.addEventListener("mouseup", S, !1), L.dispatchEvent(k));
                }
            }
            function M(t) {
                if (!1 !== L.enabled)
                    if ((t.preventDefault(), F === N.ROTATE)) {
                        if (!1 === L.enableRotate) return;
                        h(t);
                    } else if (F === N.DOLLY) {
                        if (!1 === L.enableZoom) return;
                        d(t);
                    } else if (F === N.PAN) {
                        if (!1 === L.enablePan) return;
                        p(t);
                    }
            }
            function S(t) {
                !1 !== L.enabled && (f(t), document.removeEventListener("mousemove", M, !1), document.removeEventListener("mouseup", S, !1), L.dispatchEvent(I), (F = N.NONE));
            }
            function A(t) {
                !1 === L.enabled || !1 === L.enableZoom || (F !== N.NONE && F !== N.ROTATE) || (t.preventDefault(), t.stopPropagation(), m(t), L.dispatchEvent(k), L.dispatchEvent(I));
            }
            function R(t) {
                !1 !== L.enabled && !1 !== L.enableKeys && !1 !== L.enablePan && v(t);
            }
            function C(t) {
                if (!1 !== L.enabled) {
                    switch (t.touches.length) {
                        case 1:
                            if (!1 === L.enableRotate) return;
                            g(t), (F = N.TOUCH_ROTATE);
                            break;
                        case 2:
                            if (!1 === L.enableZoom) return;
                            y(t), (F = N.TOUCH_DOLLY);
                            break;
                        case 3:
                            if (!1 === L.enablePan) return;
                            _(t), (F = N.TOUCH_PAN);
                            break;
                        default:
                            F = N.NONE;
                    }
                    F !== N.NONE && L.dispatchEvent(k);
                }
            }
            function P(t) {
                if (!1 !== L.enabled)
                    switch ((t.preventDefault(), t.stopPropagation(), t.touches.length)) {
                        case 1:
                            if (!1 === L.enableRotate) return;
                            if (F !== N.TOUCH_ROTATE) return;
                            b(t);
                            break;
                        case 2:
                            if (!1 === L.enableZoom) return;
                            if (F !== N.TOUCH_DOLLY) return;
                            x(t);
                            break;
                        case 3:
                            if (!1 === L.enablePan) return;
                            if (F !== N.TOUCH_PAN) return;
                            w(t);
                            break;
                        default:
                            F = N.NONE;
                    }
            }
            function D(t) {
                !1 !== L.enabled && (T(t), L.dispatchEvent(I), (F = N.NONE));
            }
            function O(t) {
                t.preventDefault();
            }
            (this.object = t),
                (this.domElement = void 0 !== e ? e : document),
                (this.enabled = !0),
                (this.target = new THREE.Vector3()),
                (this.minDistance = 0),
                (this.maxDistance = 1 / 0),
                (this.minZoom = 0),
                (this.maxZoom = 1 / 0),
                (this.minPolarAngle = 0),
                (this.maxPolarAngle = Math.PI),
                (this.minAzimuthAngle = -1 / 0),
                (this.maxAzimuthAngle = 1 / 0),
                (this.enableDamping = !1),
                (this.dampingFactor = 0.25),
                (this.enableZoom = !0),
                (this.zoomSpeed = 1),
                (this.enableRotate = !0),
                (this.rotateSpeed = 1),
                (this.enablePan = !0),
                (this.keyPanSpeed = 7),
                (this.autoRotate = !1),
                (this.autoRotateSpeed = 2),
                (this.enableKeys = !0),
                (this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 }),
                (this.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT }),
                (this.target0 = this.target.clone()),
                (this.position0 = this.object.position.clone()),
                (this.zoom0 = this.object.zoom),
                (this.getPolarAngle = function () {
                    return B.phi;
                }),
                (this.getAzimuthalAngle = function () {
                    return B.theta;
                }),
                (this.reset = function () {
                    L.target.copy(L.target0), L.object.position.copy(L.position0), (L.object.zoom = L.zoom0), L.object.updateProjectionMatrix(), L.dispatchEvent(j), L.update(), (F = N.NONE);
                }),
                (this.update = (function () {
                    var e = new THREE.Vector3(),
                        n = new THREE.Quaternion().setFromUnitVectors(t.up, new THREE.Vector3(0, 1, 0)),
                        o = n.clone().inverse(),
                        a = new THREE.Vector3(),
                        s = new THREE.Quaternion();
                    return function () {
                        var t = L.object.position;
                        return (
                            e.copy(t).sub(L.target),
                            e.applyQuaternion(n),
                            B.setFromVector3(e),
                            L.autoRotate && F === N.NONE && r(i()),
                            (B.theta += G.theta),
                            (B.phi += G.phi),
                            (B.theta = Math.max(L.minAzimuthAngle, Math.min(L.maxAzimuthAngle, B.theta))),
                            (B.phi = Math.max(L.minPolarAngle, Math.min(L.maxPolarAngle, B.phi))),
                            B.makeSafe(),
                            (B.radius *= z),
                            (B.radius = Math.max(L.minDistance, Math.min(L.maxDistance, B.radius))),
                            L.target.add(V),
                            e.setFromSpherical(B),
                            e.applyQuaternion(o),
                            t.copy(L.target).add(e),
                            L.object.lookAt(L.target),
                            !0 === L.enableDamping ? ((G.theta *= 1 - L.dampingFactor), (G.phi *= 1 - L.dampingFactor)) : G.set(0, 0, 0),
                            (z = 1),
                            V.set(0, 0, 0),
                            !!(H || a.distanceToSquared(L.object.position) > U || 8 * (1 - s.dot(L.object.quaternion)) > U) && (L.dispatchEvent(j), a.copy(L.object.position), s.copy(L.object.quaternion), (H = !1), !0)
                        );
                    };
                })()),
                (this.dispose = function () {
                    L.domElement.removeEventListener("contextmenu", O, !1),
                        L.domElement.removeEventListener("mousedown", E, !1),
                        L.domElement.removeEventListener("wheel", A, !1),
                        L.domElement.removeEventListener("touchstart", C, !1),
                        L.domElement.removeEventListener("touchend", D, !1),
                        L.domElement.removeEventListener("touchmove", P, !1),
                        document.removeEventListener("mousemove", M, !1),
                        document.removeEventListener("mouseup", S, !1),
                        window.removeEventListener("keydown", R, !1);
                });
            var L = this,
                j = { type: "change" },
                k = { type: "start" },
                I = { type: "end" },
                N = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY: 4, TOUCH_PAN: 5 },
                F = N.NONE,
                U = 1e-6,
                B = new THREE.Spherical(),
                G = new THREE.Spherical(),
                z = 1,
                V = new THREE.Vector3(),
                H = !1,
                W = new THREE.Vector2(),
                X = new THREE.Vector2(),
                q = new THREE.Vector2(),
                Y = new THREE.Vector2(),
                Z = new THREE.Vector2(),
                J = new THREE.Vector2(),
                Q = new THREE.Vector2(),
                $ = new THREE.Vector2(),
                K = new THREE.Vector2(),
                tt = (function () {
                    var t = new THREE.Vector3();
                    return function (e, i) {
                        t.setFromMatrixColumn(i, 0), t.multiplyScalar(-e), V.add(t);
                    };
                })(),
                et = (function () {
                    var t = new THREE.Vector3();
                    return function (e, i) {
                        t.setFromMatrixColumn(i, 1), t.multiplyScalar(e), V.add(t);
                    };
                })(),
                it = (function () {
                    var t = new THREE.Vector3();
                    return function (e, i) {
                        var n = L.domElement === document ? L.domElement.body : L.domElement;
                        if (L.object instanceof THREE.PerspectiveCamera) {
                            var r = L.object.position;
                            t.copy(r).sub(L.target);
                            var o = t.length();
                            (o *= Math.tan(((L.object.fov / 2) * Math.PI) / 180)), tt((2 * e * o) / n.clientHeight, L.object.matrix), et((2 * i * o) / n.clientHeight, L.object.matrix);
                        } else
                            L.object instanceof THREE.OrthographicCamera
                                ? (tt((e * (L.object.right - L.object.left)) / L.object.zoom / n.clientWidth, L.object.matrix), et((i * (L.object.top - L.object.bottom)) / L.object.zoom / n.clientHeight, L.object.matrix))
                                : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."), (L.enablePan = !1));
                    };
                })();
            L.domElement.addEventListener("contextmenu", O, !1),
                L.domElement.addEventListener("mousedown", E, !1),
                L.domElement.addEventListener("wheel", A, !1),
                L.domElement.addEventListener("touchstart", C, !1),
                L.domElement.addEventListener("touchend", D, !1),
                L.domElement.addEventListener("touchmove", P, !1),
                window.addEventListener("keydown", R, !1),
                this.update();
        }),
            (THREE.OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype)),
            (THREE.OrbitControls.prototype.constructor = THREE.OrbitControls),
            Object.defineProperties(THREE.OrbitControls.prototype, {
                center: {
                    get: function () {
                        return console.warn("THREE.OrbitControls: .center has been renamed to .target"), this.target;
                    },
                },
                noZoom: {
                    get: function () {
                        return console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."), !this.enableZoom;
                    },
                    set: function (t) {
                        console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."), (this.enableZoom = !t);
                    },
                },
                noRotate: {
                    get: function () {
                        return console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."), !this.enableRotate;
                    },
                    set: function (t) {
                        console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."), (this.enableRotate = !t);
                    },
                },
                noPan: {
                    get: function () {
                        return console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."), !this.enablePan;
                    },
                    set: function (t) {
                        console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."), (this.enablePan = !t);
                    },
                },
                noKeys: {
                    get: function () {
                        return console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."), !this.enableKeys;
                    },
                    set: function (t) {
                        console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."), (this.enableKeys = !t);
                    },
                },
                staticMoving: {
                    get: function () {
                        return console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."), !this.enableDamping;
                    },
                    set: function (t) {
                        console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."), (this.enableDamping = !t);
                    },
                },
                dynamicDampingFactor: {
                    get: function () {
                        return console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."), this.dampingFactor;
                    },
                    set: function (t) {
                        console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."), (this.dampingFactor = t);
                    },
                },
            });
    },
    "../node_modules/three/examples/js/libs/stats.min.js": function (t, e) {
        var i = function () {
            function t(t) {
                return r.appendChild(t.dom), t;
            }
            function e(t) {
                for (var e = 0; e < r.children.length; e++) r.children[e].style.display = e === t ? "block" : "none";
                n = t;
            }
            var n = 0,
                r = document.createElement("div");
            (r.style.cssText = "position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000"),
                r.addEventListener(
                    "click",
                    function (t) {
                        t.preventDefault(), e(++n % r.children.length);
                    },
                    !1
                );
            var o = (performance || Date).now(),
                a = o,
                s = 0,
                l = t(new i.Panel("FPS", "#0ff", "#002")),
                c = t(new i.Panel("MS", "#0f0", "#020"));
            if (self.performance && self.performance.memory) var u = t(new i.Panel("MB", "#f08", "#201"));
            return (
                e(0),
                {
                    REVISION: 16,
                    dom: r,
                    addPanel: t,
                    showPanel: e,
                    begin: function () {
                        o = (performance || Date).now();
                    },
                    end: function () {
                        s++;
                        var t = (performance || Date).now();
                        if ((c.update(t - o, 200), t > a + 1e3 && (l.update((1e3 * s) / (t - a), 100), (a = t), (s = 0), u))) {
                            var e = performance.memory;
                            u.update(e.usedJSHeapSize / 1048576, e.jsHeapSizeLimit / 1048576);
                        }
                        return t;
                    },
                    update: function () {
                        o = this.end();
                    },
                    domElement: r,
                    setMode: e,
                }
            );
        };
        (i.Panel = function (t, e, i) {
            var n = 1 / 0,
                r = 0,
                o = Math.round,
                a = o(window.devicePixelRatio || 1),
                s = 80 * a,
                l = 48 * a,
                c = 3 * a,
                u = 2 * a,
                h = 3 * a,
                d = 15 * a,
                p = 74 * a,
                f = 30 * a,
                m = document.createElement("canvas");
            (m.width = s), (m.height = l), (m.style.cssText = "width:80px;height:48px");
            var v = m.getContext("2d");
            return (
                (v.font = "bold " + 9 * a + "px Helvetica,Arial,sans-serif"),
                (v.textBaseline = "top"),
                (v.fillStyle = i),
                v.fillRect(0, 0, s, l),
                (v.fillStyle = e),
                v.fillText(t, c, u),
                v.fillRect(h, d, p, f),
                (v.fillStyle = i),
                (v.globalAlpha = 0.9),
                v.fillRect(h, d, p, f),
                {
                    dom: m,
                    update: function (l, g) {
                        (n = Math.min(n, l)),
                            (r = Math.max(r, l)),
                            (v.fillStyle = i),
                            (v.globalAlpha = 1),
                            v.fillRect(0, 0, s, d),
                            (v.fillStyle = e),
                            v.fillText(o(l) + " " + t + " (" + o(n) + "-" + o(r) + ")", c, u),
                            v.drawImage(m, h + a, d, p - a, f, h, d, p - a, f),
                            v.fillRect(h + p - a, d, a, f),
                            (v.fillStyle = i),
                            (v.globalAlpha = 0.9),
                            v.fillRect(h + p - a, d, a, o((1 - l / g) * f));
                    },
                }
            );
        }),
            "object" == typeof t && (t.exports = i);
    },
    "../node_modules/three/examples/js/renderers/Projector.js": function (t, e) {
        (THREE.RenderableObject = function () {
            (this.id = 0), (this.object = null), (this.z = 0), (this.renderOrder = 0);
        }),
            (THREE.RenderableFace = function () {
                (this.id = 0),
                    (this.v1 = new THREE.RenderableVertex()),
                    (this.v2 = new THREE.RenderableVertex()),
                    (this.v3 = new THREE.RenderableVertex()),
                    (this.normalModel = new THREE.Vector3()),
                    (this.vertexNormalsModel = [new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3()]),
                    (this.vertexNormalsLength = 0),
                    (this.color = new THREE.Color()),
                    (this.material = null),
                    (this.uvs = [new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2()]),
                    (this.z = 0),
                    (this.renderOrder = 0);
            }),
            (THREE.RenderableVertex = function () {
                (this.position = new THREE.Vector3()), (this.positionWorld = new THREE.Vector3()), (this.positionScreen = new THREE.Vector4()), (this.visible = !0);
            }),
            (THREE.RenderableVertex.prototype.copy = function (t) {
                this.positionWorld.copy(t.positionWorld), this.positionScreen.copy(t.positionScreen);
            }),
            (THREE.RenderableLine = function () {
                (this.id = 0), (this.v1 = new THREE.RenderableVertex()), (this.v2 = new THREE.RenderableVertex()), (this.vertexColors = [new THREE.Color(), new THREE.Color()]), (this.material = null), (this.z = 0), (this.renderOrder = 0);
            }),
            (THREE.RenderableSprite = function () {
                (this.id = 0), (this.object = null), (this.x = 0), (this.y = 0), (this.z = 0), (this.rotation = 0), (this.scale = new THREE.Vector2()), (this.material = null), (this.renderOrder = 0);
            }),
            (THREE.Projector = function () {
                function t() {
                    if (l === _) {
                        var t = new THREE.RenderableObject();
                        return y.push(t), _++, l++, t;
                    }
                    return y[l++];
                }
                function e() {
                    if (u === x) {
                        var t = new THREE.RenderableVertex();
                        return b.push(t), x++, u++, t;
                    }
                    return b[u++];
                }
                function i() {
                    if (d === T) {
                        var t = new THREE.RenderableFace();
                        return w.push(t), T++, d++, t;
                    }
                    return w[d++];
                }
                function n() {
                    if (f === M) {
                        var t = new THREE.RenderableLine();
                        return E.push(t), M++, f++, t;
                    }
                    return E[f++];
                }
                function r() {
                    if (v === A) {
                        var t = new THREE.RenderableSprite();
                        return S.push(t), A++, v++, t;
                    }
                    return S[v++];
                }
                function o(t, e) {
                    return t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.z !== e.z ? e.z - t.z : t.id !== e.id ? t.id - e.id : 0;
                }
                function a(t, e) {
                    var i = 0,
                        n = 1,
                        r = t.z + t.w,
                        o = e.z + e.w,
                        a = -t.z + t.w,
                        s = -e.z + e.w;
                    return (
                        (r >= 0 && o >= 0 && a >= 0 && s >= 0) ||
                        (!((r < 0 && o < 0) || (a < 0 && s < 0)) &&
                            (r < 0 ? (i = Math.max(i, r / (r - o))) : o < 0 && (n = Math.min(n, r / (r - o))),
                            a < 0 ? (i = Math.max(i, a / (a - s))) : s < 0 && (n = Math.min(n, a / (a - s))),
                            !(n < i) && (t.lerp(e, i), e.lerp(t, 1 - n), !0)))
                    );
                }
                var s,
                    l,
                    c,
                    u,
                    h,
                    d,
                    p,
                    f,
                    m,
                    v,
                    g,
                    y = [],
                    _ = 0,
                    b = [],
                    x = 0,
                    w = [],
                    T = 0,
                    E = [],
                    M = 0,
                    S = [],
                    A = 0,
                    R = { objects: [], lights: [], elements: [] },
                    C = new THREE.Vector3(),
                    P = new THREE.Vector4(),
                    D = new THREE.Box3(new THREE.Vector3(-1, -1, -1), new THREE.Vector3(1, 1, 1)),
                    O = new THREE.Box3(),
                    L = new Array(3),
                    j = (new Array(4), new THREE.Matrix4()),
                    k = new THREE.Matrix4(),
                    I = new THREE.Matrix4(),
                    N = new THREE.Matrix3(),
                    F = new THREE.Frustum(),
                    U = new THREE.Vector4(),
                    B = new THREE.Vector4();
                (this.projectVector = function (t, e) {
                    console.warn("THREE.Projector: .projectVector() is now vector.project()."), t.project(e);
                }),
                    (this.unprojectVector = function (t, e) {
                        console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."), t.unproject(e);
                    }),
                    (this.pickingRay = function (t, e) {
                        console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().");
                    });
                var G = function () {
                        function t(t) {
                            (y = t), (_ = y.material), x.getNormalMatrix(y.matrixWorld), (m.length = 0), (v.length = 0);
                        }
                        function r(t) {
                            var e = t.position,
                                i = t.positionWorld,
                                n = t.positionScreen;
                            i.copy(e).applyMatrix4(g), n.copy(i).applyMatrix4(k);
                            var r = 1 / n.w;
                            (n.x *= r), (n.y *= r), (n.z *= r), (t.visible = n.x >= -1 && n.x <= 1 && n.y >= -1 && n.y <= 1 && n.z >= -1 && n.z <= 1);
                        }
                        function o(t, i, n) {
                            (c = e()), c.position.set(t, i, n), r(c);
                        }
                        function a(t, e, i) {
                            m.push(t, e, i);
                        }
                        function s(t, e) {
                            v.push(t, e);
                        }
                        function l(t, e, i) {
                            return !0 === t.visible || !0 === e.visible || !0 === i.visible || ((L[0] = t.positionScreen), (L[1] = e.positionScreen), (L[2] = i.positionScreen), D.intersectsBox(O.setFromPoints(L)));
                        }
                        function u(t, e, i) {
                            return (i.positionScreen.x - t.positionScreen.x) * (e.positionScreen.y - t.positionScreen.y) - (i.positionScreen.y - t.positionScreen.y) * (e.positionScreen.x - t.positionScreen.x) < 0;
                        }
                        function d(t, e) {
                            var i = b[t],
                                r = b[e];
                            (p = n()), (p.id = y.id), p.v1.copy(i), p.v2.copy(r), (p.z = (i.positionScreen.z + r.positionScreen.z) / 2), (p.renderOrder = y.renderOrder), (p.material = y.material), R.elements.push(p);
                        }
                        function f(t, e, n) {
                            var r = b[t],
                                o = b[e],
                                a = b[n];
                            if (!1 !== l(r, o, a) && (_.side === THREE.DoubleSide || !0 === u(r, o, a))) {
                                (h = i()),
                                    (h.id = y.id),
                                    h.v1.copy(r),
                                    h.v2.copy(o),
                                    h.v3.copy(a),
                                    (h.z = (r.positionScreen.z + o.positionScreen.z + a.positionScreen.z) / 3),
                                    (h.renderOrder = y.renderOrder),
                                    h.normalModel.fromArray(m, 3 * t),
                                    h.normalModel.applyMatrix3(x).normalize();
                                for (var s = 0; s < 3; s++) {
                                    var c = h.vertexNormalsModel[s];
                                    c.fromArray(m, 3 * arguments[s]), c.applyMatrix3(x).normalize();
                                    h.uvs[s].fromArray(v, 2 * arguments[s]);
                                }
                                (h.vertexNormalsLength = 3), (h.material = y.material), R.elements.push(h);
                            }
                        }
                        var m = [],
                            v = [],
                            y = null,
                            _ = null,
                            x = new THREE.Matrix3();
                        return { setObject: t, projectVertex: r, checkTriangleVisibility: l, checkBackfaceCulling: u, pushVertex: o, pushNormal: a, pushUv: s, pushLine: d, pushTriangle: f };
                    },
                    z = new G();
                this.projectScene = function (c, y, _, x) {
                    function w(e) {
                        (s = t()), (s.id = e.id), (s.object = e), C.setFromMatrixPosition(e.matrixWorld), C.applyProjection(k), (s.z = C.z), (s.renderOrder = e.renderOrder), R.objects.push(s);
                    }
                    (d = 0),
                        (f = 0),
                        (v = 0),
                        (R.elements.length = 0),
                        !0 === c.autoUpdate && c.updateMatrixWorld(),
                        null === y.parent && y.updateMatrixWorld(),
                        j.copy(y.matrixWorldInverse.getInverse(y.matrixWorld)),
                        k.multiplyMatrices(y.projectionMatrix, j),
                        F.setFromMatrix(k),
                        (l = 0),
                        (R.objects.length = 0),
                        (R.lights.length = 0),
                        c.traverseVisible(function (t) {
                            if (t instanceof THREE.Light) R.lights.push(t);
                            else if (t instanceof THREE.Mesh || t instanceof THREE.Line) {
                                if (!1 === t.material.visible) return;
                                if (!0 === t.frustumCulled && !1 === F.intersectsObject(t)) return;
                                w(t);
                            } else if (t instanceof THREE.Sprite) {
                                if (!1 === t.material.visible) return;
                                if (!0 === t.frustumCulled && !1 === F.intersectsSprite(t)) return;
                                w(t);
                            }
                        }),
                        !0 === _ && R.objects.sort(o);
                    for (var T = 0, E = R.objects.length; T < E; T++) {
                        var M = R.objects[T].object,
                            S = M.geometry;
                        if ((z.setObject(M), (g = M.matrixWorld), (u = 0), M instanceof THREE.Mesh)) {
                            if (S instanceof THREE.BufferGeometry) {
                                var A = S.attributes,
                                    D = S.groups;
                                if (void 0 === A.position) continue;
                                for (var O = A.position.array, L = 0, G = O.length; L < G; L += 3) z.pushVertex(O[L], O[L + 1], O[L + 2]);
                                if (void 0 !== A.normal) for (var V = A.normal.array, L = 0, G = V.length; L < G; L += 3) z.pushNormal(V[L], V[L + 1], V[L + 2]);
                                if (void 0 !== A.uv) for (var H = A.uv.array, L = 0, G = H.length; L < G; L += 2) z.pushUv(H[L], H[L + 1]);
                                if (null !== S.index) {
                                    var W = S.index.array;
                                    if (D.length > 0) for (var T = 0; T < D.length; T++) for (var X = D[T], L = X.start, G = X.start + X.count; L < G; L += 3) z.pushTriangle(W[L], W[L + 1], W[L + 2]);
                                    else for (var L = 0, G = W.length; L < G; L += 3) z.pushTriangle(W[L], W[L + 1], W[L + 2]);
                                } else for (var L = 0, G = O.length / 3; L < G; L += 3) z.pushTriangle(L, L + 1, L + 2);
                            } else if (S instanceof THREE.Geometry) {
                                var q = S.vertices,
                                    Y = S.faces,
                                    Z = S.faceVertexUvs[0];
                                N.getNormalMatrix(g);
                                for (var J = M.material, Q = J instanceof THREE.MultiMaterial, $ = !0 === Q ? M.material : null, K = 0, tt = q.length; K < tt; K++) {
                                    var et = q[K];
                                    if ((C.copy(et), !0 === J.morphTargets))
                                        for (var it = S.morphTargets, nt = M.morphTargetInfluences, rt = 0, ot = it.length; rt < ot; rt++) {
                                            var at = nt[rt];
                                            if (0 !== at) {
                                                var st = it[rt],
                                                    lt = st.vertices[K];
                                                (C.x += (lt.x - et.x) * at), (C.y += (lt.y - et.y) * at), (C.z += (lt.z - et.z) * at);
                                            }
                                        }
                                    z.pushVertex(C.x, C.y, C.z);
                                }
                                for (var ct = 0, ut = Y.length; ct < ut; ct++) {
                                    var ht = Y[ct];
                                    if (void 0 !== (J = !0 === Q ? $.materials[ht.materialIndex] : M.material)) {
                                        var dt = J.side,
                                            pt = b[ht.a],
                                            ft = b[ht.b],
                                            mt = b[ht.c];
                                        if (!1 !== z.checkTriangleVisibility(pt, ft, mt)) {
                                            var vt = z.checkBackfaceCulling(pt, ft, mt);
                                            if (dt !== THREE.DoubleSide) {
                                                if (dt === THREE.FrontSide && !1 === vt) continue;
                                                if (dt === THREE.BackSide && !0 === vt) continue;
                                            }
                                            (h = i()),
                                                (h.id = M.id),
                                                h.v1.copy(pt),
                                                h.v2.copy(ft),
                                                h.v3.copy(mt),
                                                h.normalModel.copy(ht.normal),
                                                !1 !== vt || (dt !== THREE.BackSide && dt !== THREE.DoubleSide) || h.normalModel.negate(),
                                                h.normalModel.applyMatrix3(N).normalize();
                                            for (var gt = ht.vertexNormals, yt = 0, _t = Math.min(gt.length, 3); yt < _t; yt++) {
                                                var bt = h.vertexNormalsModel[yt];
                                                bt.copy(gt[yt]), !1 !== vt || (dt !== THREE.BackSide && dt !== THREE.DoubleSide) || bt.negate(), bt.applyMatrix3(N).normalize();
                                            }
                                            h.vertexNormalsLength = gt.length;
                                            var xt = Z[ct];
                                            if (void 0 !== xt) for (var wt = 0; wt < 3; wt++) h.uvs[wt].copy(xt[wt]);
                                            (h.color = ht.color), (h.material = J), (h.z = (pt.positionScreen.z + ft.positionScreen.z + mt.positionScreen.z) / 3), (h.renderOrder = M.renderOrder), R.elements.push(h);
                                        }
                                    }
                                }
                            }
                        } else if (M instanceof THREE.Line) {
                            if (S instanceof THREE.BufferGeometry) {
                                var A = S.attributes;
                                if (void 0 !== A.position) {
                                    for (var O = A.position.array, L = 0, G = O.length; L < G; L += 3) z.pushVertex(O[L], O[L + 1], O[L + 2]);
                                    if (null !== S.index) for (var W = S.index.array, L = 0, G = W.length; L < G; L += 2) z.pushLine(W[L], W[L + 1]);
                                    else for (var Tt = M instanceof THREE.LineSegments ? 2 : 1, L = 0, G = O.length / 3 - 1; L < G; L += Tt) z.pushLine(L, L + 1);
                                }
                            } else if (S instanceof THREE.Geometry) {
                                I.multiplyMatrices(k, g);
                                var q = M.geometry.vertices;
                                if (0 === q.length) continue;
                                (pt = e()), pt.positionScreen.copy(q[0]).applyMatrix4(I);
                                for (var Tt = M instanceof THREE.LineSegments ? 2 : 1, K = 1, tt = q.length; K < tt; K++)
                                    (pt = e()),
                                        pt.positionScreen.copy(q[K]).applyMatrix4(I),
                                        (K + 1) % Tt > 0 ||
                                            ((ft = b[u - 2]),
                                            U.copy(pt.positionScreen),
                                            B.copy(ft.positionScreen),
                                            !0 === a(U, B) &&
                                                (U.multiplyScalar(1 / U.w),
                                                B.multiplyScalar(1 / B.w),
                                                (p = n()),
                                                (p.id = M.id),
                                                p.v1.positionScreen.copy(U),
                                                p.v2.positionScreen.copy(B),
                                                (p.z = Math.max(U.z, B.z)),
                                                (p.renderOrder = M.renderOrder),
                                                (p.material = M.material),
                                                M.material.vertexColors === THREE.VertexColors && (p.vertexColors[0].copy(M.geometry.colors[K]), p.vertexColors[1].copy(M.geometry.colors[K - 1])),
                                                R.elements.push(p)));
                            }
                        } else if (M instanceof THREE.Sprite) {
                            P.set(g.elements[12], g.elements[13], g.elements[14], 1), P.applyMatrix4(k);
                            var Et = 1 / P.w;
                            (P.z *= Et),
                                P.z >= -1 &&
                                    P.z <= 1 &&
                                    ((m = r()),
                                    (m.id = M.id),
                                    (m.x = P.x * Et),
                                    (m.y = P.y * Et),
                                    (m.z = P.z),
                                    (m.renderOrder = M.renderOrder),
                                    (m.object = M),
                                    (m.rotation = M.rotation),
                                    (m.scale.x = M.scale.x * Math.abs(m.x - (P.x + y.projectionMatrix.elements[0]) / (P.w + y.projectionMatrix.elements[12]))),
                                    (m.scale.y = M.scale.y * Math.abs(m.y - (P.y + y.projectionMatrix.elements[5]) / (P.w + y.projectionMatrix.elements[13]))),
                                    (m.material = M.material),
                                    R.elements.push(m));
                        }
                    }
                    return !0 === x && R.elements.sort(o), R;
                };
            });
    },
    "../node_modules/timers-browserify/main.js": function (t, e, i) {
        function n(t, e) {
            (this._id = t), (this._clearFn = e);
        }
        var r = Function.prototype.apply;
        (e.setTimeout = function () {
            return new n(r.call(setTimeout, window, arguments), clearTimeout);
        }),
            (e.setInterval = function () {
                return new n(r.call(setInterval, window, arguments), clearInterval);
            }),
            (e.clearTimeout = e.clearInterval = function (t) {
                t && t.close();
            }),
            (n.prototype.unref = n.prototype.ref = function () {}),
            (n.prototype.close = function () {
                this._clearFn.call(window, this._id);
            }),
            (e.enroll = function (t, e) {
                clearTimeout(t._idleTimeoutId), (t._idleTimeout = e);
            }),
            (e.unenroll = function (t) {
                clearTimeout(t._idleTimeoutId), (t._idleTimeout = -1);
            }),
            (e._unrefActive = e.active = function (t) {
                clearTimeout(t._idleTimeoutId);
                var e = t._idleTimeout;
                e >= 0 &&
                    (t._idleTimeoutId = setTimeout(function () {
                        t._onTimeout && t._onTimeout();
                    }, e));
            }),
            i("../node_modules/setimmediate/setImmediate.js"),
            (e.setImmediate = setImmediate),
            (e.clearImmediate = clearImmediate);
    },
    "../node_modules/webpack/buildin/global.js": function (t, e) {
        var i;
        i = (function () {
            return this;
        })();
        try {
            i = i || Function("return this")() || (0, eval)("this");
        } catch (t) {
            "object" == typeof window && (i = window);
        }
        t.exports = i;
    },
    "./algorithm/Gravity.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 });
        var n = i("../node_modules/three/build/three.js"),
            r = i("./core/constants.js");
        e.default = {
            calculateGForces: function (t) {
                for (var e = new n.Vector3(), i = 0; i < t.length; i++) {
                    i || (t[i].force.x = t[i].force.y = t[i].force.z = 0);
                    for (var r = i + 1; r < t.length; r++) {
                        i || (t[r].force.x = t[r].force.y = t[r].force.z = 0);
                        (1 === t[i].mass && 1 === t[r].mass) ||
                            (t[i].useCustomComputation && t[r].useCustomComputation) ||
                            ((e = this.getGForceBetween(t[i].mass, t[r].mass, t[i].position, t[r].position)), t[i].force.sub(e), t[r].force.add(e));
                    }
                }
            },
            getGForceBetween: function (t, e, i, o) {
                var a = new n.Vector3();
                a.copy(i).sub(o);
                var s = a.lengthSq(),
                    l = t * e,
                    c = r.G * (l / s);
                return a.normalize(), a.multiplyScalar(c), a;
            },
        };
    },
    "./algorithm/Math.js": function (t, e, i) {
        "use strict";
        function n(t) {
            return (Math.exp(t) - Math.exp(-t)) / 2;
        }
        function r(t) {
            return (Math.pow(Math.E, t) + Math.pow(Math.E, -t)) / 2;
        }
        function o(t) {
            return t >= 0 ? 1 : -1;
        }
        Object.defineProperty(e, "__esModule", { value: !0 }), (e.sinh = n), (e.cosh = r), (e.sign = o);
    },
    "./algorithm/OrbitalElements.js": function (t, e, i) {
        "use strict";
        function n(t, e, i) {
            for (var n = 0, r = e, o = 0; o < i; o++) (n = r), (r = t(n));
            return r;
        }
        function r(t, e) {
            return function (i) {
                return i + (e + t * Math.sin(i) - i) / (1 - t * Math.cos(i));
            };
        }
        function o(t, e) {
            return function (i) {
                var n = t * Math.sin(i),
                    r = t * Math.cos(i),
                    o = i - n - e,
                    a = 1 - r,
                    s = n;
                return i + (-5 * o) / (a + (0, l.sign)(a) * Math.sqrt(Math.abs(16 * a * a - 20 * o * s)));
            };
        }
        function a(t, e) {
            return function (i) {
                var n = t * (0, l.sinh)(i),
                    r = t * (0, l.cosh)(i),
                    o = i - n - e,
                    a = r - 1,
                    s = n;
                return i + (-5 * o) / (a + (0, l.sign)(a) * Math.sqrt(Math.abs(16 * a * a - 20 * o * s)));
            };
        }
        Object.defineProperty(e, "__esModule", { value: !0 });
        var s = i("../node_modules/three/build/three.js"),
            l = i("./algorithm/Math.js"),
            c = i("./utils/JD.js"),
            u = i("./core/constants.js");
        e.default = {
            setDefaultOrbit: function (t, e, i) {
                (this.orbitalElements = t), t && t.epoch && (this.epochOffsetFromJ2000 = (0, c.getJ2000SecondsFromJD)(t.epoch)), (this.calculator = e), (this.positionCalculator = i);
            },
            setName: function (t) {
                this.name = t;
            },
            setRelativeTo: function (t) {
                this.relativeTo = t;
            },
            calculateVelocity: function (t) {
                if (!this.orbitalElements) return new s.Vector3(0, 0, 0);
                var e = void 0;
                if (this.relativeTo) {
                    var i = this.calculateElements(t),
                        n = Math.sqrt(u.G * this.relativeTo.mass * (2 / i.r - 1 / i.a)),
                        r = i.r / i.a,
                        o = (2 - 2 * i.e * i.e) / (r * (2 - r)) - 1;
                    o = o > 1 ? 1 : o;
                    var a = Math.PI - Math.acos(o);
                    a = i.v < 0 ? 2 * Math.PI - a : a;
                    var l = i.v + a / 2,
                        c = new s.Vector3(Math.cos(l), Math.sin(l)).setLength(n),
                        h = Object.assign({}, i, { pos: c, v: null, r: null });
                    e = this.getPositionFromElements(h);
                } else {
                    var d = this.calculatePosition(t);
                    e = this.calculatePosition(t + 60 / u.DAY)
                        .sub(d)
                        .multiplyScalar(1 / 60);
                }
                return e;
            },
            calculatePosition: function (t, e, i) {
                if (!this.orbitalElements) return new s.Vector3(0, 0, 0);
                if (this.positionCalculator && e) {
                    return this.positionCalculator(t);
                }
                var n = this.calculateElements(t, i),
                    r = this.getPositionFromElements(n);
                return i && console.log(this.name, r.x, r.y, r.z, t), r;
            },
            solveEccentricAnomaly: function (t, e) {
                if (0 === t) return e;
                if (t < 0.9) return n(r(t, e), e, 6);
                if (t < 1) {
                    var i = e + 0.85 * t * (Math.sin(e) >= 0 ? 1 : -1);
                    return n(o(t, e), i, 8);
                }
                if (1 === t) return e;
                var s = Math.log((2 * e) / t + 1.85);
                return n(a(t, e), s, 30);
            },
            calculateElements: function (t, e) {
                if (!this.orbitalElements) return null;
                var i = this.orbitalElements;
                e && console.log("========================");
                var n = (0, c.getJ2000SecondsFromJD)(t);
                e && console.log(n, this.epochOffsetFromJ2000), this.epochOffsetFromJ2000 && (n -= this.epochOffsetFromJ2000);
                var r = n / u.DAY,
                    o = r / u.CENTURY;
                e && console.log("jd %s, tDays %s, T %s", t, r, o), e && console.log("jd epoch %s", i.epoch);
                var a = { t: n };
                if (this.calculator) {
                    var l = this.calculator(o);
                    Object.assign(a, l);
                } else {
                    if (i.base) {
                        var h = void 0;
                        a = (i.keys = i.keys || Object.keys(i.base)).reduce(function (t, e) {
                            return (h = i.cy ? i.cy[e] : i.day[e] * u.CENTURY), (h = h || 0), (t[e] = i.base[e] + h * o), t;
                        }, a);
                    } else a = Object.assign({}, i);
                    void 0 === a.w && (a.w = a.lp - a.o), void 0 === a.M && (a.M = a.l - a.lp), (a.a *= u.KM);
                }
                return (
                    e && console.log("M %s, e %s, i %s, o %s, w %s", a.M, a.e, a.i, a.o, a.w),
                    (a.i *= u.DEG_TO_RAD),
                    (a.o *= u.DEG_TO_RAD),
                    (a.w *= u.DEG_TO_RAD),
                    (a.M *= u.DEG_TO_RAD),
                    (a.E = this.solveEccentricAnomaly(a.e, a.M)),
                    (a.E %= u.CIRCLE),
                    (a.i %= u.CIRCLE),
                    (a.o %= u.CIRCLE),
                    (a.w %= u.CIRCLE),
                    (a.M %= u.CIRCLE),
                    (a.pos = new s.Vector3(a.a * (Math.cos(a.E) - a.e), a.a * Math.sqrt(1 - a.e * a.e) * Math.sin(a.E))),
                    e && console.log("E %s, e %s, M %s, i %s", a.E, a.e, a.M, a.i),
                    e && console.log("x %s, y %s, z %s, a %s", a.pos.x, a.pos.y, a.pos.z, a.a),
                    (a.isDbg = e),
                    (a.r = a.pos.length()),
                    (a.v = Math.atan2(a.pos.y, a.pos.x)),
                    !1 !== this.orbitalElements.tilt && this.relativeTo && this.relativeTo.tilt && (a.tilt = -this.relativeTo.tilt * u.DEG_TO_RAD),
                    a
                );
            },
            getPositionFromElements: function (t) {
                if (t.x) return t;
                if (!t) return new s.Vector3(0, 0, 0);
                var e = new s.Euler(t.tilt || 0, 0, t.o, "XYZ"),
                    i = new s.Quaternion().setFromEuler(e),
                    n = new s.Euler(t.i, 0, t.w, "XYZ"),
                    r = new s.Quaternion().setFromEuler(n),
                    o = new s.Quaternion().multiplyQuaternions(i, r);
                t.pos.applyQuaternion(o);
                t.pos.clone().normalize();
                return t.pos;
            },
            calculatePeriod: function (t) {
                var e = void 0;
                return (
                    this.orbitalElements && this.orbitalElements.day && this.orbitalElements.day.M
                        ? (e = 360 / this.orbitalElements.day.M)
                        : this.relativeTo && this.relativeTo.k && t && (e = (2 * Math.PI * Math.sqrt(Math.pow(t.a / (1e3 * u.AU), 3))) / this.relativeTo.k),
                    (e *= u.DAY)
                );
            },
        };
    },
    "./algorithm/Quadratic.js": function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }
        Object.defineProperty(e, "__esModule", { value: !0 });
        var r = (function () {
                function t(t, e) {
                    for (var i = 0; i < e.length; i++) {
                        var n = e[i];
                        (n.enumerable = n.enumerable || !1), (n.configurable = !0), "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                    }
                }
                return function (e, i, n) {
                    return i && t(e.prototype, i), n && t(e, n), e;
                };
            })(),
            o = i("./algorithm/Gravity.js"),
            a = (function (t) {
                return t && t.__esModule ? t : { default: t };
            })(o),
            s = i("./core/constants.js"),
            l = (function () {
                function t(e) {
                    n(this, t), (this.bodies = e);
                }
                return (
                    r(t, [
                        {
                            key: "computeDeltaT",
                            value: function (t) {
                                t !== this.lastDeltaT &&
                                    ((this.halfDeltaT = t / 2),
                                    (this.halfDeltaTSq = Math.pow(this.halfDeltaT, 2)),
                                    (this.onehalf_halfDeltaTSq = this.halfDeltaTSq / 2),
                                    (this.deltaTSq = Math.pow(t, 2)),
                                    (this.onehalf_deltaTSq = this.deltaTSq / 2),
                                    (this.inverted_deltaTSq = 1 / this.deltaTSq),
                                    (this.deltaT3rd = Math.pow(t, 3)),
                                    (this.onethird_deltaT3rd = this.deltaT3rd / 3),
                                    (this.onesixth_deltaT3rd = this.deltaT3rd / 6),
                                    (this.deltaT4th = Math.pow(t, 4)),
                                    (this.onetwelvth_deltaT4th = this.deltaT4th / 12)),
                                    (this.lastDeltaT = t);
                            },
                        },
                    ]),
                    r(t, [
                        {
                            key: "moveBodies",
                            value: function (t, e) {
                                this.computeDeltaT(e);
                                var i = void 0,
                                    n = void 0,
                                    r = {};
                                for (a.default.calculateGForces(this.bodies), i = 0; i < this.bodies.length; i++)
                                    (n = this.bodies[i]),
                                        n.isStill ||
                                            (n.beforeMove(e),
                                            n.calculateFromElements || n.useCustomComputation
                                                ? n.setPositionFromJD(t + this.halfDeltaT / s.DAY)
                                                : ((r[i] = {}),
                                                  (r[i].accel = [n.force.clone().multiplyScalar(n.invMass)]),
                                                  (r[i].pos = [n.position.clone(), n.position.clone().add(n.getAbsoluteVelocity().multiplyScalar(this.halfDeltaT)).add(r[i].accel[0].clone().multiplyScalar(this.onehalf_halfDeltaTSq))]),
                                                  n.position.copy(r[i].pos[1])));
                                for (a.default.calculateGForces(this.bodies), i = 0; i < this.bodies.length; i++)
                                    (n = this.bodies[i]),
                                        n.isStill ||
                                            (n.calculateFromElements || n.useCustomComputation
                                                ? n.setPositionFromJD(t + e / s.DAY)
                                                : (r[i].accel.push(n.force.clone().multiplyScalar(n.invMass)),
                                                  r[i].pos.push(r[i].pos[0].clone().add(n.getAbsoluteVelocity().multiplyScalar(e)).add(r[i].accel[1].clone().multiplyScalar(this.onehalf_deltaTSq))),
                                                  n.position.copy(r[i].pos[2])));
                                for (a.default.calculateGForces(this.bodies), i = 0; i < this.bodies.length; i++)
                                    (n = this.bodies[i]), n.isStill || n.calculateFromElements || n.useCustomComputation || r[i].accel.push(n.force.clone().multiplyScalar(n.invMass));
                                var o = void 0,
                                    l = void 0,
                                    c = void 0,
                                    u = void 0;
                                for (i = 0; i < this.bodies.length; i++)
                                    (n = this.bodies[i]),
                                        n.calculateFromElements ||
                                            n.useCustomComputation ||
                                            n.isStill ||
                                            ((o = r[i].accel[0]
                                                .clone()
                                                .multiplyScalar(-3)
                                                .sub(r[i].accel[2])
                                                .add(r[i].accel[1].clone().multiplyScalar(4))
                                                .multiplyScalar(1 / e)),
                                            (l = r[i].accel[0].clone().add(r[i].accel[2]).sub(r[i].accel[1].clone().multiplyScalar(2)).multiplyScalar(2).multiplyScalar(this.inverted_deltaTSq)),
                                            (c = r[i].accel[0].clone().multiplyScalar(e).add(o.clone().multiplyScalar(this.onehalf_deltaTSq)).add(l.clone().multiplyScalar(this.onethird_deltaT3rd))),
                                            (u = n
                                                .getAbsoluteVelocity()
                                                .multiplyScalar(e)
                                                .add(r[i].accel[0].clone().multiplyScalar(this.onehalf_deltaTSq))
                                                .add(o.clone().multiplyScalar(this.onesixth_deltaT3rd))
                                                .add(l.clone().multiplyScalar(this.onetwelvth_deltaT4th))),
                                            this.bodies[i].position.copy(r[i].pos[0]).add(u),
                                            this.bodies[i].addToAbsoluteVelocity(c)),
                                        n.afterMove(e);
                            },
                        },
                    ]),
                    t
                );
            })();
        e.default = l;
    },
    "./algorithm/Ticker.js": function (t, e, i) {
        "use strict";
        function n(t) {
            if (Array.isArray(t)) {
                for (var e = 0, i = Array(t.length); e < t.length; e++) i[e] = t[e];
                return i;
            }
            return Array.from(t);
        }
        function r(t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }
        Object.defineProperty(e, "__esModule", { value: !0 });
        var o = (function () {
                function t(t, e) {
                    for (var i = 0; i < e.length; i++) {
                        var n = e[i];
                        (n.enumerable = n.enumerable || !1), (n.configurable = !0), "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                    }
                }
                return function (e, i, n) {
                    return i && t(e.prototype, i), n && t(e, n), e;
                };
            })(),
            a = i("./algorithm/Quadratic.js"),
            s = (function (t) {
                return t && t.__esModule ? t : { default: t };
            })(a),
            l = i("./core/constants.js"),
            c = (function () {
                function t() {
                    r(this, t), (this.calculationsPerTick = 1), (this.actualCalculationsPerTick = 1), (this.secondsPerTick = 1), (this.deltaTIncrement = 1), (this.bodies = []), (this.integration = null);
                }
                return (
                    o(t, [
                        {
                            key: "setDT",
                            value: function () {
                                this.calculationsPerTick &&
                                    this.secondsPerTick &&
                                    (this.secondsPerTick < this.calculationsPerTick ? (this.actualCalculationsPerTick = this.secondsPerTick) : (this.actualCalculationsPerTick = this.calculationsPerTick),
                                    (this.deltaTIncrement = this.secondsPerTick / this.actualCalculationsPerTick),
                                    (this.secondsPerTick = this.deltaTIncrement * this.actualCalculationsPerTick));
                            },
                        },
                        {
                            key: "moveByGravity",
                            value: function (t) {
                                for (var e = 1; e <= this.actualCalculationsPerTick; e++) this.integration.moveBodies(t + (e * this.deltaTIncrement) / l.DAY, this.deltaTIncrement);
                            },
                        },
                        {
                            key: "moveByElements",
                            value: function (t) {
                                for (var e = 0; e < this.bodies.length; e++) this.bodies[e].setPositionFromJD(t);
                            },
                        },
                        {
                            key: "tick",
                            value: function (t, e) {
                                t ? this.moveByGravity(e - this.secondsPerTick / l.DAY) : this.moveByElements(e);
                                for (var i = 0; i < this.bodies.length; i++) this.bodies[i].afterTick(this.secondsPerTick, !t);
                                return this.secondsPerTick;
                            },
                        },
                        {
                            key: "setBodies",
                            value: function (t) {
                                (this.bodies = [].concat(n(t))), (this.integration = new s.default(this.bodies));
                            },
                        },
                        {
                            key: "setCalculationsPerTick",
                            value: function (t) {
                                (this.calculationsPerTick = t || this.calculationsPerTick), this.setDT();
                            },
                        },
                        {
                            key: "setSecondsPerTick",
                            value: function (t) {
                                (this.secondsPerTick = t), this.setDT();
                            },
                        },
                        {
                            key: "getDeltaT",
                            value: function () {
                                return this.secondsPerTick;
                            },
                        },
                    ]),
                    t
                );
            })();
        e.default = c;
    },
    "./core/CelestialBody.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 });
        var n = i("../node_modules/three/build/three.js"),
            r = i("./algorithm/OrbitalElements.js"),
            o = (function (t) {
                return t && t.__esModule ? t : { default: t };
            })(r),
            a = i("./core/constants.js");
        e.default = {
            init: function (t) {
                this.reset(),
                    (this.movement = new n.Vector3()),
                    (this.invMass = 1 / this.mass),
                    (this.universe = t),
                    (this.orbitalElements = Object.create(o.default)),
                    this.orbitalElements.setName(this.name),
                    this.orbitalElements.setRelativeTo(this.universe.getBody(this.relativeTo)),
                    this.orbitalElements.setDefaultOrbit(this.orbit, this.osculatingElementsCalculator, this.positionCalculator),
                    (this.maxPrecision = this.maxPrecision || !1);
            },
            reset: function () {
                (this.angle = 0), (this.force = new n.Vector3()), (this.movement = new n.Vector3()), (this.previousPosition = null);
            },
            setPositionFromJD: function (t, e) {
                return (
                    (this.currentJD = t),
                    (this.position = this.isCentral ? new n.Vector3() : this.orbitalElements.calculatePosition(t, this.maxPrecision || this.forceMaxPrecision, e)),
                    (this.relativePosition = this.position.clone()),
                    (this.lastPos = this.position.clone()),
                    (this.absvelocity = null),
                    (this.relvelocity = null),
                    this.position
                );
            },
            getAngleTo: function (t) {
                var e = this.universe.getBody(t);
                if (e) {
                    var i = this.position.clone().sub(e.getPosition()).normalize();
                    i.z = 0;
                    var r = i.angleTo(new n.Vector3(1, 0, 0)),
                        o = i.angleTo(new n.Vector3(0, 1, 0)),
                        a = r;
                    return o > Math.PI / 2 && (a = -r), a;
                }
                return 0;
            },
            afterInitialized: function (t) {
                t && ((this.previousRelativePosition = this.position.clone()), this.positionRelativeTo()), this.customInitialize && this.customInitialize(), this.customAfterTick && this.customAfterTick(0);
            },
            positionRelativeTo: function () {
                if (this.relativeTo) {
                    var t = this.universe.getBody(this.relativeTo);
                    t && t !== this.universe.getBody() && (this.position.add(t.position), this.addToAbsoluteVelocity(t.getAbsoluteVelocity()));
                }
            },
            getCurrentRotation: function () {
                return ((this.universe.getCurrentJD() - a.J2000) / (this.siderealDay / a.DAY) + ((this.getRotationCorrection && this.getRotationCorrection()) || 0)) * a.CIRCLE;
            },
            getTilt: function (t) {
                return new n.Euler(t, 0, 0, "YZX");
            },
            beforeMove: function () {},
            afterMove: function () {},
            getOrbitVertices: function (t) {
                var e = this.currentJD,
                    i = this.orbitalElements.calculateElements(e),
                    n = this.orbitalElements.calculatePeriod(i);
                if (!n) return null;
                for (var r = n / 360, o = [], s = void 0, l = void 0, c = void 0, u = void 0, h = 0, d = t ? 1 : -1, p = t ? "push" : "unshift", f = 0; h < 360; f++) {
                    if (((l = this.calculatePosition(e + (d * r * f) / a.DAY)), s)) {
                        if ((c = l.angleTo(s) * a.RAD_TO_DEG) > 1.3 || c + h > 360.5) {
                            for (var m = 0; m < c; m++) {
                                if (((u = r * (f - 1) + (r / c) * m), (l = this.calculatePosition(e + (d * u) / a.DAY)), h > 358 && l.angleTo(o[0]) * a.RAD_TO_DEG + h > 360)) {
                                    o[p](l);
                                    break;
                                }
                                o[p](l);
                            }
                            (h += l.angleTo(s) * a.RAD_TO_DEG), (s = l);
                            continue;
                        }
                        h += c;
                    }
                    o[p](l), (s = l);
                }
                return o;
            },
            afterTick: function (t, e) {
                if (!this.isCentral) {
                    e && this.positionRelativeTo();
                    var i = this.universe.getBody(this.relativeTo).getPosition();
                    this.relativePosition.copy(this.position).sub(i),
                        this.movement.copy(this.relativePosition).sub(this.previousRelativePosition),
                        (this.speed = this.movement.length() / t),
                        (this.angle += this.relativePosition.angleTo(this.previousRelativePosition)),
                        this.previousRelativePosition.copy(this.relativePosition),
                        this.angle > a.CIRCLE && ((this.angle = this.angle % a.CIRCLE), this.onRevolution && this.onRevolution());
                }
                this.customAfterTick && this.customAfterTick(t);
            },
            setOnRevolution: function (t) {
                this.onRevolution = t;
            },
            calculatePosition: function (t, e) {
                return this.orbitalElements.calculatePosition(t, e);
            },
            getPosition: function () {
                return this.position.clone();
            },
            getRelativePosition: function () {
                return this.relativePosition.clone();
            },
            setVelocity: function (t) {
                (this.absvelocity = t), (this.relvelocity = t.clone());
            },
            addToAbsoluteVelocity: function (t) {
                t && ((this.absvelocity = this.absvelocity || this.getRelativeVelocity()), this.absvelocity.add(t));
            },
            getAbsoluteVelocity: function () {
                return (this.absvelocity && this.absvelocity.clone()) || this.getRelativeVelocity();
            },
            getRelativeVelocity: function () {
                return this.relvelocity ? this.relvelocity.clone() : ((this.relvelocity = this.isCentral ? new n.Vector3() : this.orbitalElements.calculateVelocity(this.currentJD)), this.relvelocity.clone());
            },
            isOrbitAround: function (t) {
                return t.name === this.relativeTo;
            },
            kill: function () {
                this.getBody3D = null;
            },
        };
    },
    "./core/JSOrrery.js": function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : { default: t };
        }
        function r(t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }
        function o() {
            var t = window.location.search.substr(1).split("&"),
                e = t.reduce(function (t, e) {
                    var i = e.split("=");
                    return (t[decodeURIComponent(i[0])] = decodeURIComponent(i[1])), t;
                }, (window.jsOrrery && window.jsOrrery.defaults) || {});
            return void 0 !== e.cx && (e.cameraSettings = { x: e.cx, y: e.cy, z: e.cz, fov: e.fov }), e;
        }
        Object.defineProperty(e, "__esModule", { value: !0 });
        var a = (function () {
                function t(t, e) {
                    for (var i = 0; i < e.length; i++) {
                        var n = e[i];
                        (n.enumerable = n.enumerable || !1), (n.configurable = !0), "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                    }
                }
                return function (e, i, n) {
                    return i && t(e.prototype, i), n && t(e, n), e;
                };
            })(),
            s = i("../node_modules/jquery/dist/jquery.js"),
            l = n(s),
            c = i("./gui/Gui.js"),
            u = n(c),
            h = i("./gui/Sharer.js"),
            d = n(h),
            p = i("./core/Universe.js"),
            f = n(p),
            m = i("./gui/Preloader.js"),
            v = n(m),
            g = i("./scenario/Loader.js"),
            y = n(g),
            _ = (function () {
                function t(e) {
                    var i = this;
                    r(this, t), (this.rootElement = (e && document.getElementById(e)) || document.body), (this.preloader = new v.default(this.rootElement)), this.preloader.remove(), (this.gui = new u.default());
                    var n = Object.assign({}, o());
                    this.gui.setDefaults(n);
                    var a = y.default.getList(),
                        s = this.gui.addDropdown(
                            c.SCENARIO_ID,
                            function () {
                                i.preloader.show(), i.loadScenarioFromName(s.getValue());
                            },
                            !1
                        );
                    this.gui.addBtn(c.SHARE_ID, c.SHARE_ID, function () {
                        d.default.show();
                    });
                    var h = a.reduce(function (t, e) {
                            return t + " <h3>" + e.title + "</h3><p>" + e.help + "</p>";
                        }, ""),
                        p = a.reduce(function (t, e, i) {
                            return n.scenario && e.name === n.scenario ? i : t;
                        }, 0);
                    a.forEach(function (t, e) {
                        s.addOption(t.title, t.name, e === p, !1);
                    }),
                        (0, l.default)("#helpScenario").append(h),
                        (this.loadDefaultScenario = function () {
                            i.loadScenarioFromName(a[p].name, n);
                        });
                }
                return (
                    a(t, [
                        {
                            key: "loadScenarioFromName",
                            value: function (t, e) {
                                if (this.activeScenario && t === this.activeScenario.name) return void this.preloader.remove();
                                var i = y.default.get(t);
                                this.loadScenario(i, e);
                            },
                        },
                        {
                            key: "loadScenario",
                            value: function (t, e) {
                                var i = this;
                                return (
                                    this.activeScenario && this.activeScenario.kill(),
                                    t
                                        ? ((this.activeScenario = new f.default(this.rootElement, t, e, this.gui)),
                                          this.activeScenario.onSceneReady
                                              .then(function () {
                                                  return i.preloader.remove();
                                              })
                                              .catch(function (t) {
                                                  console.log(t);
                                              })
                                              .then(function () {
                                                  return i.activeScenario;
                                              }))
                                        : Promise.resolve(null)
                                );
                            },
                        },
                    ]),
                    t
                );
            })();
        e.default = _;
    },
    "./core/Universe.js": function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : { default: t };
        }
        function r(t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }
        Object.defineProperty(e, "__esModule", { value: !0 });
        var o = (function () {
                function t(t, e) {
                    for (var i = 0; i < e.length; i++) {
                        var n = e[i];
                        (n.enumerable = n.enumerable || !1), (n.configurable = !0), "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                    }
                }
                return function (e, i, n) {
                    return i && t(e.prototype, i), n && t(e, n), e;
                };
            })(),
            a = i("../node_modules/three/build/three.js"),
            s = i("./core/constants.js"),
            l = i("./graphics3d/Scene.js"),
            c = n(l),
            u = i("./loaders/ResourceLoader.js"),
            h = n(u),
            d = i("./algorithm/Ticker.js"),
            p = n(d),
            f = i("./core/CelestialBody.js"),
            m = n(f),
            v = i("./gui/Gui.js"),
            g = i("./utils/JD.js"),
            y = i("./graphics3d/Dimensions.js"),
            _ = n(y),
            b = (function () {
                function t(e, i, n, o) {
                    var a = this;
                    r(this, t),
                        (this.tick = function () {
                            a.killed ||
                                (a.playing
                                    ? (a.setJD(a.currentJD + a.ticker.getDeltaT() / s.DAY), a.ticker.tick(a.usePhysics, a.currentJD), a.scene.updateCamera(), a.scene.draw(), a.showDate())
                                    : (a.scene.updateCamera(), a.drawRequested && a.scene.draw()),
                                (a.drawRequested = !1),
                                window.requestAnimationFrame(a.tick));
                        }),
                        (this.gui = o);
                    var l = function () {
                        return a.init(e, i, n);
                    };
                    i.load ? (this.onSceneReady = i.load().then(l)) : (this.onSceneReady = l());
                }
                return (
                    o(t, [
                        {
                            key: "init",
                            value: function (t, e, i) {
                                var n = this;
                                h.default.reset(), (this.name = e.name), (this.scenario = e), (this.ticker = new p.default());
                                var r = Object.assign({}, e.defaultGuiSettings, i, e.forcedGuiSettings);
                                this.gui.setDefaults(r),
                                    (this.usePhysics = e.usePhysics || s.USE_PHYSICS_BY_DEFAULT),
                                    this.gui.addBtn(
                                        "play",
                                        v.START_ID,
                                        function () {
                                            n.playing = !n.playing;
                                        },
                                        "p"
                                    ),
                                    (this.dateDisplay = this.gui.addDate(function () {
                                        (n.playing = !1), n.setJD((0, g.getJD)(n.dateDisplay.getDate())), n.repositionBodies(!0);
                                    })),
                                    (this.playing = !1),
                                    (this.drawRequested = !1);
                                var o = this.dateDisplay.getDate() || new Date();
                                this.setJD((0, g.getJD)(o)),
                                    this.createBodies(e),
                                    (this.scene = new c.default()),
                                    this.calculateDimensions(),
                                    this.scene.createStage(t, e, this.gui, this),
                                    this.initBodies(e),
                                    this.ticker.setSecondsPerTick(e.secondsPerTick.initial),
                                    this.ticker.setCalculationsPerTick(e.calculationsPerTick || s.DEFAULT_CALCULATIONS_PER_TICK);
                                var a = h.default.getOnReady();
                                return (
                                    a.done(function () {
                                        n.showDate(), n.gui.putDefaults(), n.scene.setCameraDefaults(r.cameraSettings), n.scene.draw(), n.tick();
                                    }),
                                    this.gui.addSlider(v.DELTA_T_ID, e.secondsPerTick, function (t) {
                                        n.ticker.setSecondsPerTick(t);
                                    }),
                                    a
                                );
                            },
                        },
                        {
                            key: "kill",
                            value: function () {
                                (this.killed = !0),
                                    this.dateDisplay.setDate(null),
                                    this.scene &&
                                        (this.scene.kill(),
                                        (this.centralBody = null),
                                        (this.scene = null),
                                        this.bodies.forEach(function (t) {
                                            return t.kill();
                                        }),
                                        (this.bodies = []),
                                        (this.bodiesByName = {}));
                            },
                        },
                        {
                            key: "getTickerDeltaT",
                            value: function () {
                                return this.ticker.getDeltaT();
                            },
                        },
                        {
                            key: "createBodies",
                            value: function (t) {
                                var e = Object.keys(t.bodies);
                                (this.bodies = e.map(function (e) {
                                    var i = t.bodies[e],
                                        n = Object.create(m.default);
                                    return Object.assign(n, i), (n.name = e), n;
                                })),
                                    (this.centralBody = this.bodies.reduce(function (t, e) {
                                        return t && (t.isCentral || t.mass > e.mass) ? t : e;
                                    }, null)),
                                    (this.bodiesByName = this.bodies.reduce(function (t, e) {
                                        return (t[e.name] = e), t;
                                    }, {})),
                                    this.bodies.sort(function (t, e) {
                                        return ((t.relativeTo || 0) && 1) - ((e.relativeTo || 0) && 1);
                                    }),
                                    (this.centralBody.isCentral = !0);
                            },
                        },
                        {
                            key: "initBodies",
                            value: function (t) {
                                var e = this;
                                this.bodies.forEach(function (i) {
                                    (void 0 !== t.usePhysics && t.usePhysics) || i.isCentral || (i.mass = 1), i.init(e), i.setPositionFromJD(e.currentJD);
                                }),
                                    this.setBarycenter(),
                                    this.bodies.forEach(function (t) {
                                        e.scene.addBody(t), t.afterInitialized(!0);
                                    }),
                                    this.scene.setCentralBody(this.centralBody),
                                    this.ticker.setBodies(this.bodies);
                            },
                        },
                        {
                            key: "setBarycenter",
                            value: function () {
                                var t = this.centralBody;
                                if (this.usePhysics && !t.isStill && !1 !== this.scenario.useBarycenter) {
                                    var e = void 0,
                                        i = { mass: 0, pos: new a.Vector3(), momentum: new a.Vector3() };
                                    this.bodies.forEach(function (n) {
                                        n !== t && ((i.mass += n.mass), (e = n.mass / i.mass), (i.pos = i.pos.add(n.getPosition().multiplyScalar(e))), (i.momentum = i.momentum.add(n.getAbsoluteVelocity().multiplyScalar(n.mass))));
                                    }),
                                        i.momentum.multiplyScalar(1 / i.mass),
                                        (e = i.mass / t.mass),
                                        t.setVelocity(i.momentum.multiplyScalar(-1 * e)),
                                        (t.position = i.pos.clone().multiplyScalar(-1 * e)),
                                        this.bodies.forEach(function (e) {
                                            e === t || (e.relativeTo && e.relativeTo !== t.name) || (e.addToAbsoluteVelocity(t.getAbsoluteVelocity()), t.mass / e.mass > 1e11 && e.position.add(t.position));
                                        });
                                }
                            },
                        },
                        {
                            key: "repositionBodies",
                            value: function (t) {
                                var e = this;
                                if (!t && this.scenario.usePhysics) return !1;
                                this.bodies.forEach(function (t) {
                                    t.reset(), t.setPositionFromJD(e.currentJD, t.orbitalElements && t.orbitalElements.orbitalElements && t.orbitalElements.orbitalElements.dbg);
                                }),
                                    this.scene.onDateReset(),
                                    this.ticker.tick(!1, this.currentJD),
                                    this.setBarycenter(),
                                    this.bodies.forEach(function (t) {
                                        t.afterInitialized(!1);
                                    });
                            },
                        },
                        {
                            key: "getBody",
                            value: function (t) {
                                return "central" !== t && t ? this.bodiesByName[t] : this.centralBody;
                            },
                        },
                        {
                            key: "getCamera",
                            value: function () {
                                return this.scene.getCamera();
                            },
                        },
                        {
                            key: "calculateDimensions",
                            value: function (t) {
                                var e = this.getBody().name,
                                    i = this.bodies.reduce(function (t, e) {
                                        return t < e.radius ? e.radius : t;
                                    }, 0),
                                    n = this.bodies.reduce(function (t, e) {
                                        return !e.isCentral && e.orbit && e.orbit.base.a > t ? e.orbit.base.a : t;
                                    }, 0),
                                    r = this.bodies.reduce(function (t, i) {
                                        return i.isCentral || !i.orbit || (i.relativeTo && i.relativeTo !== e) || (t && !(i.orbit.base.a < t)) ? t : i.orbit.base.a;
                                    }, 0);
                                (r *= s.KM), (n *= s.KM), (i *= s.KM), (this.size = n), this.scene.setDimension(n, r);
                            },
                        },
                        {
                            key: "showDate",
                            value: function () {
                                this.dateDisplay.setDate(this.getCurrentDate());
                            },
                        },
                        {
                            key: "requestDraw",
                            value: function () {
                                this.drawRequested = !0;
                            },
                        },
                        {
                            key: "getScene",
                            value: function () {
                                return this.scene;
                            },
                        },
                        {
                            key: "setJD",
                            value: function (t) {
                                (this.currentJD = Number(t)), (this.currentDate = (0, g.getDateFromJD)(this.currentJD)), (this.currentJ2000Time = (0, g.getJ2000SecondsFromJD)(this.currentJD)), (this.drawRequested = !0);
                            },
                        },
                        {
                            key: "getCurrentJ2000Time",
                            value: function () {
                                return this.currentJ2000Time;
                            },
                        },
                        {
                            key: "getCurrentJD",
                            value: function () {
                                return this.currentJD;
                            },
                        },
                        {
                            key: "getCurrentDate",
                            value: function () {
                                return this.currentDate;
                            },
                        },
                        {
                            key: "isPlaying",
                            value: function () {
                                return this.playing;
                            },
                        },
                        {
                            key: "stop",
                            value: function (t) {
                                (this.playing = !1), t || (this.scene.updateCamera(), this.scene.draw());
                            },
                        },
                        {
                            key: "getScaledDimension",
                            value: function (t) {
                                return _.default.getScaled(t);
                            },
                        },
                    ]),
                    t
                );
            })();
        e.default = b;
    },
    "./core/constants.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 });
        var n =
            ((e.G = 6.6742e-11),
            (e.AU = 149597870),
            (e.CIRCLE = 2 * Math.PI),
            (e.QUARTER_CIRCLE = Math.PI / 2),
            (e.KM = 1e3),
            (e.DEG_TO_RAD = Math.PI / 180),
            (e.RAD_TO_DEG = 180 / Math.PI),
            (e.NM_TO_KM = 1.852),
            (e.LB_TO_KG = 0.453592),
            (e.LBF_TO_NEWTON = 4.44822162),
            (e.FT_TO_M = 0.3048),
            (e.USE_PHYSICS_BY_DEFAULT = !1),
            (e.DAY = 86400),
            (e.YEAR = 365.25));
        (e.CENTURY = 100 * n), (e.SIDEREAL_DAY = 86164.09056), (e.J2000 = 2451545), (e.DEFAULT_CALCULATIONS_PER_TICK = 10), (e.IS_SCREENSHOT = !1), (e.IS_CAPTURE = !1);
    },
    "./data/Constellations.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 }),
            (e.default = {
                ZubenElschemali: ["ZubenElgenubi", "Brachium", "gLibra"],
                ZubenElgenubi: ["Brachium"],
                gLibra: ["dLibra"],
                Brachium: ["uLibra"],
                Mesarthim: ["Sharatan"],
                Sharatan: ["Hamal"],
                Hamal: ["xAries"],
                AsellusAustralis: ["Acubens", "Altarf", "AsellusBorealis"],
                AsellusBorealis: ["CancerIota"],
                Sadalsuud: ["Albali", "Sadalmeilk"],
                Sadalmeilk: ["Ancha", "etaAqua"],
                Ancha: ["iotaAqua"],
                etaAqua: ["phiAqua"],
                phiAqua: ["lambdaAqua"],
                lambdaAqua: ["tau2Aqua"],
                tau2Aqua: ["xAqua"],
                Dabih: ["SecundaGiedi", "psiCap", "thetaCap"],
                psiCap: ["omegaCap"],
                omegaCap: ["zetaCap"],
                DenebAlgedi: ["zetaCap", "thetaCap"],
                Alhena: ["Alzirr", "TejatPosterior"],
                TejatPosterior: ["Mebsuta"],
                Castor: ["Mebsuta", "Pollux"],
                Wasat: ["Alhena", "Pollux"],
                Denebola: ["Zosma", "Chort"],
                Algeiba: ["Zosma", "etaLeo", "Adhafera"],
                Adhafera: ["RasElasedBorealis"],
                RasElasedBorealis: ["RasElasedAustralis"],
                Regulus: ["etaLeo", "Chort"],
                deltaPisces: ["nuPisces", "iotaPisces"],
                kappaPisces: ["gammaPisces", "xPisces"],
                iotaPisces: ["xPisces", "thetaPisces"],
                gammaPisces: ["thetaPisces"],
                Jabbah: ["Graffias"],
                Dschubba: ["Graffias", "piScorp", "Antares"],
                piScorp: ["rhoScorp"],
                Antares: ["tauScorp"],
                epsilonScorp: ["tauScorp", "zeta2Scorp"],
                etaScorp: ["Sargas", "zeta2Scorp"],
                Sargas: ["Shaula"],
                Syrma: ["RijlAlAwwa", "kappaVirgo"],
                Spica: ["Heze", "kappaVirgo", "thetaVirgo"],
                Porrima: ["Auva", "Zaniah", "thetaVirgo"],
                Zavijah: ["Zaniah"],
                Auva: ["Vindemiatrix", "Heze"],
                tauVirgo: ["8781", "Heze"],
                HyadumI: ["lambdaTaurus", "HyadumII", "Aldebaran"],
                Ain: ["tauTaurus", "HyadumII"],
                AlNath: ["tauTaurus"],
                zetaTaurus: ["Aldebaran"],
                omicronTaurus: ["lambdaTaurus"],
                Nash: ["KausMedia", "7317"],
                KausAustralis: ["KausMedia", "etaSag"],
                KausBorealis: ["phiSag", "KausMedia", "muSag"],
                Nunki: ["phiSag", "tauSag"],
                Ascella: ["phiSag", "tauSag"],
                7320: ["tauSag", "7336"],
                theta1Sag: ["7336"],
            });
    },
    "./graphics2d/Labels.js": function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : { default: t };
        }
        function r(t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }
        function o(t) {
            t.callback(this.camPos, this.fov);
        }
        Object.defineProperty(e, "__esModule", { value: !0 });
        var a = (function () {
                function t(t, e) {
                    for (var i = 0; i < e.length; i++) {
                        var n = e[i];
                        (n.enumerable = n.enumerable || !1), (n.configurable = !0), "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                    }
                }
                return function (e, i, n) {
                    return i && t(e.prototype, i), n && t(e, n), e;
                };
            })(),
            s = i("../node_modules/jquery/dist/jquery.js"),
            l = n(s),
            c = i("./core/constants.js"),
            u = i("./graphics3d/Dimensions.js"),
            h = n(u),
            d = (function () {
                function t(e, i) {
                    r(this, t), (this.rootDomEl = e), (this.cameraManager = i), (this.labels = []);
                }
                return (
                    a(t, [
                        {
                            key: "toScreenCoords",
                            value: function (t, e, i) {
                                var n = this.cameraManager.getCamera(),
                                    r = t.clone().project(n);
                                if (((r.x = ((r.x + 1) / 2) * this.sceneW), (r.y = (-(r.y - 1) / 2) * this.sceneH), r.z < 1 && r.x > 0 && r.x < this.sceneW && r.y > 0 && r.y < this.sceneH)) {
                                    var o = e.distanceTo(t),
                                        a = Math.atan(i / 2) * o,
                                        s = 1 / (1 + Math.log10(a));
                                    return (r.z = 0.3 + s), r;
                                }
                                return null;
                            },
                        },
                        {
                            key: "getPlanetLabelCallback",
                            value: function (t, e) {
                                var i = this,
                                    n = void 0;
                                return function (r, o) {
                                    if ((n = i.toScreenCoords(e.getPosition(), r, o))) {
                                        var a = 1 / n.z;
                                        t.css({ transform: "translate(" + n.x + "px, " + n.y + "px) scale(" + n.z + ")", opacity: a }).show();
                                    } else t.hide();
                                };
                            },
                        },
                        {
                            key: "getEventLabelCallback",
                            value: function (t, e, i) {
                                var n = this,
                                    r = t.find(".line"),
                                    o = t.find(".tx"),
                                    a = o.outerWidth() / 2,
                                    s = o.outerHeight(),
                                    l = void 0,
                                    u = void 0,
                                    d = void 0,
                                    p = void 0,
                                    f = void 0;
                                return function (m) {
                                    (l = n.toScreenCoords(h.default.getScaled(e.clone().add(i.getPosition())), m)),
                                        l && n.halfSceneW
                                            ? ((u = ((l.x - n.halfSceneW) / n.halfSceneW) * 45),
                                              (d = u * c.DEG_TO_RAD),
                                              (p = { x: 100 * Math.sin(d), y: 100 * -Math.cos(d) }),
                                              (f = "rotate(" + u + "deg)"),
                                              r.css({ WebkitTransform: f, "-moz-transform": f, left: p.x, top: p.y }),
                                              o.css({ left: p.x - a, top: p.y - s }),
                                              t.css({ left: l.x + "px", top: l.y + "px" }).show())
                                            : t.hide();
                                };
                            },
                        },
                        {
                            key: "addPlanetLabel",
                            value: function (t, e, i) {
                                var n = (0, l.default)('<div class="planetSpot" data-shown="true"><div class="planetLabel">' + t + "</div></div>").appendTo(this.rootDomEl);
                                this.labels.push({ el: n, callback: this.getPlanetLabelCallback(n, e) });
                            },
                        },
                        {
                            key: "addEventLabel",
                            value: function (t, e, i) {
                                var n = (0, l.default)('<div class="eventLabel"><div class="line"></div><div class="tx">' + t + "</div></div>").appendTo(this.rootDomEl);
                                this.labels.push({ el: n, callback: this.getEventLabelCallback(n, e, i) });
                            },
                        },
                        {
                            key: "draw",
                            value: function (t, e, i, n) {
                                (i === this.sceneW && n === this.sceneH) || ((this.sceneW = i), (this.sceneH = n), (this.halfSceneW = i / 2)), this.labels.map(o, { camPos: t, fov: e });
                            },
                        },
                        {
                            key: "kill",
                            value: function () {
                                this.labels &&
                                    (this.labels.forEach(function (t) {
                                        t.el.remove();
                                    }),
                                    (this.labels = null));
                            },
                        },
                    ]),
                    t
                );
            })();
        e.default = d;
    },
    "./graphics3d/Body3d.js": function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : { default: t };
        }
        function r(t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }
        Object.defineProperty(e, "__esModule", { value: !0 });
        var o = (function () {
                function t(t, e) {
                    for (var i = 0; i < e.length; i++) {
                        var n = e[i];
                        (n.enumerable = n.enumerable || !1), (n.configurable = !0), "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                    }
                }
                return function (e, i, n) {
                    return i && t(e.prototype, i), n && t(e, n), e;
                };
            })(),
            a = i("../node_modules/three/build/three.js"),
            s = i("./three/RingGeometry2.js"),
            l = n(s),
            c = i("./loaders/ResourceLoader.js"),
            u = n(c),
            h = i("./graphics3d/Dimensions.js"),
            d = n(h),
            p = i("./core/constants.js"),
            f = (function () {
                function t(e) {
                    var i = this;
                    r(this, t),
                        (this.root = new a.Object3D()),
                        (this.celestial = e),
                        (this.maxDeltaForSiderealDay = this.celestial.siderealDay && this.celestial.siderealDay / 20),
                        this.setDisplayObject(),
                        (this.celestial.getBody3D = function () {
                            return i;
                        });
                }
                return (
                    o(t, [
                        {
                            key: "getDisplayObject",
                            value: function () {
                                return this.root;
                            },
                        },
                        {
                            key: "setTracer",
                            value: function (t) {
                                this.tracer = t;
                            },
                        },
                        {
                            key: "setOrbitLines",
                            value: function (t) {
                                this.orbitLines = t;
                            },
                        },
                        {
                            key: "getOrbitLines",
                            value: function () {
                                return this.orbitLines;
                            },
                        },
                        {
                            key: "getTraceRelativeToBody",
                            value: function () {
                                return this.celestial.universe.getBody(this.celestial.traceRelativeTo || this.celestial.relativeTo);
                            },
                        },
                        {
                            key: "setDisplayObject",
                            value: function () {
                                var t = this,
                                    e = this.celestial.map,
                                    i = {},
                                    n = void 0;
                                return (
                                    e
                                        ? (n = u.default.loadTexture(e).then(function (t) {
                                              return (i.map = t), i;
                                          }))
                                        : ((i.color = this.celestial.color), (n = Promise.resolve(i))),
                                    (this.planet = new a.Object3D()),
                                    n.then(function (e) {
                                        var i = Object.assign(new a.MeshPhongMaterial(e), t.celestial.material || {}),
                                            n = t.getPlanetSize(),
                                            r = new a.Mesh(new a.SphereGeometry(n, 50, 50), i);
                                        t.planet.add(r);
                                    }),
                                    this.celestial.ring &&
                                        u.default.loadTexture(this.celestial.ring.map).then(function (e) {
                                            var i = [d.default.getScaled(t.celestial.ring.innerRadius * p.KM), d.default.getScaled(t.celestial.ring.outerRadius * p.KM)],
                                                n = new a.MeshLambertMaterial({ map: e, transparent: !0, side: a.DoubleSide }),
                                                r = new l.default(i[1], i[0], 180, 1, 0, 2 * Math.PI);
                                            r.computeFaceNormals();
                                            var o = new a.Mesh(r, n);
                                            (o.rotation.x = -Math.PI / 2), t.planet.add(o);
                                        }),
                                    this.planet.rotation.copy(this.celestial.getTilt(p.QUARTER_CIRCLE)),
                                    this.root.add(this.planet),
                                    this.planet
                                );
                            },
                        },
                        {
                            key: "setScale",
                            value: function (t) {
                                (this.maxScale && this.maxScale < t) || ((this.scale = t), this.planet.scale.set(this.scale, this.scale, this.scale));
                            },
                        },
                        {
                            key: "getPlanetSize",
                            value: function () {
                                return d.default.getScaled(this.celestial.radius * p.KM);
                            },
                        },
                        {
                            key: "getPlanetStageSize",
                            value: function () {
                                return this.getPlanetSize() * (this.scale || 1);
                            },
                        },
                        {
                            key: "addCamera",
                            value: function (t, e) {
                                this.root.add(e), (this.cameras = this.cameras || {}), (this.cameras[t] = e);
                            },
                        },
                        {
                            key: "getCamera",
                            value: function (t) {
                                return this.cameras && this.cameras[t];
                            },
                        },
                        {
                            key: "draw",
                            value: function () {
                                var t = this.getPosition();
                                if ((this.root.position.copy(t), this.celestial.siderealDay)) {
                                    var e = new a.Quaternion().setFromEuler(this.celestial.getTilt(p.QUARTER_CIRCLE)),
                                        i = new a.Quaternion().setFromEuler(new a.Euler(0, (this.celestial.baseMapRotation || 0) + this.celestial.getCurrentRotation()), 0, "XYZ"),
                                        n = new a.Quaternion().multiplyQuaternions(e, i);
                                    this.planet.setRotationFromQuaternion(n);
                                }
                                return this.tracer && this.tracer.draw(t), this.orbitLines && this.orbitLines.draw(d.default.getScaled(this.celestial.getRelativePosition())), t;
                            },
                        },
                        {
                            key: "getScreenSizeRatio",
                            value: function (t, e) {
                                var i = this.getPlanetStageSize(),
                                    n = this.getPosition().sub(t).length();
                                return i / (2 * Math.tan((e * p.DEG_TO_RAD) / 2) * n);
                            },
                        },
                        {
                            key: "getPosition",
                            value: function (t) {
                                var e = (t && t.clone()) || this.celestial.getPosition(this.maxPrecision);
                                return d.default.getScaled(e);
                            },
                        },
                        {
                            key: "getName",
                            value: function () {
                                return this.celestial.name;
                            },
                        },
                    ]),
                    t
                );
            })();
        e.default = f;
    },
    "./graphics3d/CameraManager.js": function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : { default: t };
        }
        function r(t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }
        function o(t, e) {
            return t * Math.atan(2 * e * f.DEG_TO_RAD);
        }
        Object.defineProperty(e, "__esModule", { value: !0 });
        var a = (function () {
                function t(t, e) {
                    for (var i = 0; i < e.length; i++) {
                        var n = e[i];
                        (n.enumerable = n.enumerable || !1), (n.configurable = !0), "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                    }
                }
                return function (e, i, n) {
                    return i && t(e.prototype, i), n && t(e, n), e;
                };
            })(),
            s = i("../node_modules/jquery/dist/jquery.js"),
            l = n(s),
            c = i("../node_modules/three/build/three.js"),
            u = i("./utils/ThreeExamples.js"),
            h = i("./gui/ExportValues.js"),
            d = n(h),
            p = i("./gui/Gui.js"),
            f = i("./core/constants.js"),
            m = i("./graphics3d/GeoPos.js"),
            v = n(m),
            g = 45,
            y = 90,
            _ = "orbital",
            b = "pov",
            x = ["night", "front", "back"],
            w = new c.Vector3(),
            T = (function () {
                function t(e, i, n, a, s, c, u, h, f) {
                    var m = this;
                    r(this, t),
                        (this.toggleCamera = function () {
                            (m.viewSettings.lookFrom = m.trackOptionSelectors.from.getValue()),
                                (m.viewSettings.lookAt = m.trackOptionSelectors.at.getValue()),
                                m.disableControls(),
                                m.currentCamera && m.currentCamera.geoPos && m.currentCamera.geoPos.deactivate(),
                                m.setPrecision(!1);
                            var t = m.bodies3d[m.viewSettings.lookFrom],
                                e = m.bodies3d[m.viewSettings.lookAt];
                            m.tracerManager.setTraceFrom(),
                                t
                                    ? ((m.currentCamera = t.getCamera(b)),
                                      m.domEl.on("mousewheel", m.onMouseWheel),
                                      m.setPrecision(!0),
                                      e && !e.celestial.isOrbitAround(t.celestial) && m.tracerManager.setTraceFrom(t, e),
                                      m.currentCamera.geoPos && m.currentCamera.geoPos.activate())
                                    : (m.domEl.off("mousewheel"),
                                      m.viewSettings.lookFrom === _ &&
                                          ((m.currentCamera = (e && e.getCamera(_)) || m.globalCamera), m.currentCamera.jsorrery && m.currentCamera.jsorrery.controls && (m.currentCamera.jsorrery.controls.enabled = !0))),
                                m.universe.repositionBodies(),
                                m.trackOptionSelectors.at.toggleOptions([].concat(x, [m.viewSettings.lookAt]), !!t),
                                d.default.setCamera(m.currentCamera),
                                m.orbitLinesManager.onCameraChange(t, e),
                                m.updateCamera(),
                                m.universe.requestDraw();
                        }),
                        (this.onMouseWheel = function (t, e) {
                            var i = e / Math.abs(e);
                            (m.currentCamera.fov += 0.1 * m.currentCamera.fov * -i), m.currentCamera.fov > y && (m.currentCamera.fov = y), m.currentCamera.updateProjectionMatrix(), m.scene.draw();
                        }),
                        (this.onControlsUpdate = function () {
                            m.universe.isPlaying() || m.scene.draw();
                        }),
                        (this.gui = f),
                        (this.scene = e),
                        (this.universe = c),
                        (this.domEl = (0, l.default)(s)),
                        (this.allCameras = []),
                        (this.bodies3d = {}),
                        (this.viewSettings = {}),
                        (this.cameraParams = { fov: n || g, aspect: i, near: 0.001, far: 2e6 }),
                        (this.orbitLinesManager = u),
                        (this.tracerManager = h),
                        (this.globalCamera = this.getNewCamera(!0)),
                        this.globalCamera.position.set(0, -1, o(a, this.globalCamera.fov)),
                        this.scene.getRoot().add(this.globalCamera),
                        (this.trackOptionSelectors = { from: f.addDropdown(p.LOOKFROM_ID, this.toggleCamera), at: f.addDropdown(p.LOOKAT_ID, this.toggleCamera) }),
                        this.trackOptionSelectors.from.addOption("Free camera", "orbital"),
                        this.trackOptionSelectors.at.addOption("System", "universe"),
                        "sun" === this.universe.getBody().name && this.trackOptionSelectors.at.addOption("Night (away from the sun)", "night"),
                        this.trackOptionSelectors.at.addOption("Direction of velocity", "front"),
                        this.trackOptionSelectors.at.addOption("Inverse direction of velocity", "back");
                }
                return (
                    a(t, [
                        {
                            key: "putDefaults",
                            value: function (t) {
                                this.getCamera(),
                                    t &&
                                        (this.currentCamera.geoPos || ((this.currentCamera.position.x = Number(t.x) || 0), (this.currentCamera.position.y = Number(t.y) || 0), (this.currentCamera.position.z = Number(t.z) || 0)),
                                        (this.currentCamera.fov = Number(t.fov) || g),
                                        t.far && (this.currentCamera.far = t.far),
                                        this.currentCamera.updateProjectionMatrix(),
                                        t.disableControls && this.disableControls());
                            },
                        },
                        {
                            key: "addBody",
                            value: function (t) {
                                function e(e) {
                                    return t.getDisplayObject().localToWorld(this.position.clone());
                                }
                                this.trackOptionSelectors.from.addOption(t.celestial.title, t.celestial.name), this.trackOptionSelectors.at.addOption(t.celestial.title, t.celestial.name);
                                var i = this.getNewCamera();
                                (i.getAbsolutePos = e), t.addCamera(b, i);
                                var n = this.getNewCamera(!0);
                                (n.getAbsolutePos = e), n.position.set(0, -1, 200 * t.getPlanetStageSize()), t.addCamera(_, n), t.celestial.hasGeoposCam && (i.geoPos = new v.default(t, i, this.gui)), (this.bodies3d[t.celestial.name] = t);
                            },
                        },
                        {
                            key: "getCamera",
                            value: function () {
                                return void 0 === this.viewSettings.lookFrom && this.toggleCamera(), this.currentCamera;
                            },
                        },
                        {
                            key: "getCameraPosition",
                            value: function () {
                                return (this.getCamera().getAbsolutePos && this.getCamera().getAbsolutePos(!0)) || this.getCamera().position;
                            },
                        },
                        {
                            key: "updateCameraMatrix",
                            value: function () {
                                this.currentCamera && this.currentCamera.parent && this.currentCamera.parent.updateMatrixWorld();
                            },
                        },
                        {
                            key: "setPrecision",
                            value: function (t) {
                                var e = this;
                                Object.keys(this.bodies3d).forEach(function (i) {
                                    e.bodies3d[i].celestial.maxPrecision = t;
                                });
                            },
                        },
                        {
                            key: "updateCamera",
                            value: function () {
                                void 0 === this.viewSettings.lookFrom && this.toggleCamera();
                                var t = this.bodies3d[this.viewSettings.lookFrom],
                                    e = this.bodies3d[this.viewSettings.lookAt],
                                    i = this.currentCamera.jsorrery && this.currentCamera.jsorrery.controls;
                                if ((this.currentCamera.geoPos && this.currentCamera.geoPos.update(), i)) i.update();
                                else if (this.viewSettings.lookFrom) {
                                    if (e) w.copy(e.getPosition()).sub(t.getPosition());
                                    else if ("night" === this.viewSettings.lookAt) w.copy(t.getPosition()), w.multiplyScalar(2);
                                    else if (-1 !== "front,back".indexOf(this.viewSettings.lookAt)) {
                                        var n = t.celestial.movement;
                                        w.copy(n).normalize(), "back" === this.viewSettings.lookAt && w.negate();
                                    } else w.set(0, 0, 0).sub(t.getPosition());
                                    this.currentCamera.lookAt(w);
                                }
                                return this.currentCamera;
                            },
                        },
                        {
                            key: "getNewCamera",
                            value: function (t) {
                                var e = new c.PerspectiveCamera(this.cameraParams.fov, this.cameraParams.aspect, this.cameraParams.near, this.cameraParams.far);
                                if (((e.up = new c.Vector3(0, 0, 1)), t)) {
                                    var i = new u.OrbitControls(e, this.domEl.get(0));
                                    (e.jsorrery = e.jsorrery || {}), (e.jsorrery.controls = i), i.addEventListener("change", this.onControlsUpdate), i.target.set(0, 0, 0), (i.enabled = !1);
                                }
                                return this.allCameras.push(e), e;
                            },
                        },
                        {
                            key: "disableControls",
                            value: function () {
                                this.allCameras.forEach(function (t) {
                                    t.jsorrery && t.jsorrery.controls && (t.jsorrery.controls.enabled = !1);
                                });
                            },
                        },
                        {
                            key: "kill",
                            value: function () {
                                var t = this;
                                this.domEl && this.domEl.off("mousewheel"),
                                    this.allCameras.forEach(function (e) {
                                        e.jsorrery && e.jsorrery.controls && e.jsorrery.controls.removeEventListener("change", t.onControlsUpdate);
                                    });
                            },
                        },
                    ]),
                    t
                );
            })();
        e.default = T;
    },
    "./graphics3d/Dimensions.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 });
        var n = i("../node_modules/three/build/three.js");
        e.default = {
            scale: 1,
            setLargestDimension: function (t) {
                this.scale = 1e3 / t;
            },
            getScaled: function (t) {
                return t instanceof n.Vector3 ? t.multiplyScalar(this.scale) : t * this.scale;
            },
        };
    },
    "./graphics3d/GeoPos.js": function (t, e, i) {
        "use strict";
        function n(t, e, i) {
            var n = this;
            this.gui = i;
            var l = 46.8139,
                c = -71.208,
                u = void 0,
                h = void 0,
                d = void 0,
                p = t.celestial.universe,
                f = void 0;
            if (s) {
                var m = new r.MeshPhongMaterial({ color: 16777215, emissive: 16750865 }),
                    v = 0.008 * t.getPlanetSize();
                (f = new r.Mesh(new r.SphereGeometry(v, 50, 50), m)), t.root.add(f);
            }
            (this.update = function () {
                var i = (0, a.getJ2000SecondsFromJD)(t.celestial.currentJD);
                if (c !== h || l !== u || i !== d) {
                    (u = l), (h = c), (d = i);
                    var n = Number(l) * o.DEG_TO_RAD,
                        s = ((Number(c) - 180) * o.DEG_TO_RAD + t.celestial.getCurrentRotation()) % o.CIRCLE,
                        m = new r.Euler(n, 0, s, "ZYX"),
                        v = new r.Vector3(0, t.getPlanetSize(), 0);
                    v.applyEuler(m), v.applyEuler(t.celestial.getTilt()), f && f.position.copy(v.clone().multiplyScalar(1.01)), e.position.copy(v), p.requestDraw();
                }
            }),
                (this.activate = function () {
                    n.gui.addGeoloc({ lat: l, lng: c }, function (t) {
                        (l = t.lat), (c = t.lng), n.update();
                    }),
                        n.update();
                }),
                (this.deactivate = function () {
                    n.gui.removeGeoloc();
                });
        }
        Object.defineProperty(e, "__esModule", { value: !0 }), (e.default = n);
        var r = i("../node_modules/three/build/three.js"),
            o = i("./core/constants.js"),
            a = i("./utils/JD.js"),
            s = !0;
    },
    "./graphics3d/MilkyWayParticles.js": function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : { default: t };
        }
        function r(t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }
        function o(t, e) {
            var i = [t >> 16, (t >> 8) & 255, 255 & t];
            return (
                (i = i.map(function (t) {
                    var i = t * e;
                    return i < 0 ? 0 : i > 255 ? 255 : i;
                })),
                i[0] | (i[1] << 8) | (i[2] << 16)
            );
        }
        function a(t) {
            var e = new u.LineBasicMaterial({ color: 1 === R ? 2236962 : 3355443 });
            Object.keys(f.default).forEach(function (i) {
                var n = f.default[i],
                    r = A[i];
                n.forEach(function (i) {
                    var n = A[i];
                    if (n && r) {
                        var o = new u.Geometry();
                        o.vertices = [r, n];
                        var a = new u.Line(o, e);
                        (a.frustumCulled = !1), t.add(a);
                    }
                });
            });
        }
        function s(t, e, i, n, r) {
            for (
                var s = new u.BufferGeometry(),
                    l = e.length,
                    c = void 0,
                    h = void 0,
                    d = void 0,
                    p = void 0,
                    f = void 0,
                    m = void 0,
                    v = void 0,
                    g = new Float32Array(3 * l),
                    y = new Float32Array(3 * l),
                    C = new Float32Array(l),
                    P = 0,
                    D = 0;
                P < l;
                P++, D += 3
            )
                (c = e[P]),
                    (h = new u.Vector3(c[b], c[x], c[w])),
                    0 !== h.x &&
                        (h.normalize().multiplyScalar(n),
                        (d = c[T] - M + 1),
                        (p = c[_]),
                        (f = String(c[E]).toUpperCase()),
                        (m = S[f] || S[10]),
                        p && (A[p] = h),
                        (m = d < 7 ? o(m, Math.pow(1 / d, 0.3)) : o(m, Math.pow(1 / d, 0.9))),
                        (g[D + 0] = h.x),
                        (g[D + 1] = h.y),
                        (g[D + 2] = h.z),
                        (v = new u.Color(m)),
                        (y[D + 0] = v.r),
                        (y[D + 1] = v.g),
                        (y[D + 2] = v.b),
                        (C[P] = R * (1.5 + Math.floor((1 / d) * 10) / 10)));
            s.addAttribute("position", new u.BufferAttribute(g, 3)), s.addAttribute("customColor", new u.BufferAttribute(y, 3)), s.addAttribute("size", new u.BufferAttribute(C, 1));
            var O = new u.ShaderMaterial({
                    uniforms: { color: { type: "c", value: new u.Color(16777215) }, starTexture: { type: "t", value: i } },
                    vertexShader: t.vertex,
                    fragmentShader: t.fragment,
                    blending: u.AdditiveBlending,
                    transparent: !1,
                }),
                L = new u.Points(s, O);
            r.add(L), a(r);
        }
        Object.defineProperty(e, "__esModule", { value: !0 });
        var l = (function () {
                function t(t, e) {
                    var i = [],
                        n = !0,
                        r = !1,
                        o = void 0;
                    try {
                        for (var a, s = t[Symbol.iterator](); !(n = (a = s.next()).done) && (i.push(a.value), !e || i.length !== e); n = !0);
                    } catch (t) {
                        (r = !0), (o = t);
                    } finally {
                        try {
                            !n && s.return && s.return();
                        } finally {
                            if (r) throw o;
                        }
                    }
                    return i;
                }
                return function (e, i) {
                    if (Array.isArray(e)) return e;
                    if (Symbol.iterator in Object(e)) return t(e, i);
                    throw new TypeError("Invalid attempt to destructure non-iterable instance");
                };
            })(),
            c = (function () {
                function t(t, e) {
                    for (var i = 0; i < e.length; i++) {
                        var n = e[i];
                        (n.enumerable = n.enumerable || !1), (n.configurable = !0), "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                    }
                }
                return function (e, i, n) {
                    return i && t(e.prototype, i), n && t(e, n), e;
                };
            })(),
            u = i("../node_modules/three/build/three.js"),
            h = i("../node_modules/bluebird/js/browser/bluebird.js"),
            d = n(h),
            p = i("./data/Constellations.js"),
            f = n(p),
            m = i("./core/constants.js"),
            v = i("./loaders/ResourceLoader.js"),
            g = n(v),
            y = "./assets/data/milkyway_heasarc_204k.json",
            _ = 0,
            b = 1,
            x = 2,
            w = 3,
            T = 4,
            E = 5,
            M = -1.44,
            S = [16513279, 13161983, 14213887, 15133948, 16513279, 16774376, 16772826, 16706259, 16568011, 15455194, 15195123],
            A = {},
            R = window.devicePixelRatio || 1,
            C = (function () {
                function t(e) {
                    var i = this;
                    r(this, t), (this.displayObj = new u.Object3D()), (this.displayObj.rotation.x = -23.439166666666665 * m.DEG_TO_RAD);
                    var n = g.default.loadJSON(y),
                        o = g.default.loadShaders("stars"),
                        a = g.default.loadTexture("./assets/img/star.png");
                    this.onLoaded = d.default.all([o, n, a]).then(function (t) {
                        var n = l(t, 3);
                        s(n[0], n[1], n[2], e, i.displayObj);
                    });
                }
                return (
                    c(t, [
                        {
                            key: "getDisplayObject",
                            value: function () {
                                return this.displayObj;
                            },
                        },
                        {
                            key: "setPosition",
                            value: function (t) {
                                this.displayObj && this.displayObj.position.copy(t);
                            },
                        },
                    ]),
                    t
                );
            })();
        e.default = C;
    },
    "./graphics3d/Scene.js": function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : { default: t };
        }
        function r(t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }
        function o(t) {
            t.draw();
        }
        Object.defineProperty(e, "__esModule", { value: !0 });
        var a = (function () {
                function t(t, e) {
                    for (var i = 0; i < e.length; i++) {
                        var n = e[i];
                        (n.enumerable = n.enumerable || !1), (n.configurable = !0), "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                    }
                }
                return function (e, i, n) {
                    return i && t(e.prototype, i), n && t(e, n), e;
                };
            })(),
            s = i("../node_modules/three/build/three.js"),
            l = (i("./utils/ThreeExamples.js"), i("./graphics3d/Body3d.js")),
            c = n(l),
            u = i("./graphics3d/MilkyWayParticles.js"),
            h = n(u),
            d = i("./graphics3d/CameraManager.js"),
            p = n(d),
            f = i("./graphics3d/lines/OrbitLinesManager.js"),
            m = n(f),
            v = i("./graphics3d/lines/TracerManager.js"),
            g = n(v),
            y = i("./graphics3d/utils/DebugPoint.js"),
            _ = n(y),
            b = i("./graphics3d/Dimensions.js"),
            x = n(b),
            w = i("./graphics3d/Screenshot.js"),
            T = n(w),
            E = i("./graphics3d/Sun.js"),
            M = i("./graphics2d/Labels.js"),
            S = n(M),
            A = i("./gui/Gui.js"),
            R = i("./core/constants.js"),
            C = void 0,
            P = void 0,
            D = (function () {
                function t() {
                    r(this, t);
                }
                return (
                    a(t, [
                        {
                            key: "createStage",
                            value: function (t, e, i, n) {
                                var r = this;
                                (this.width = (e.sceneSize && e.sceneSize.width) || t.offsetWidth),
                                    (this.height = (e.sceneSize && e.sceneSize.height) || t.offsetHeight),
                                    (this.universe = n),
                                    (this.bodies3d = []),
                                    (this.bodyScale = 1),
                                    (this.domEl = document.createElement("div")),
                                    (this.domEl.id = "universe"),
                                    (this.domEl.style.width = this.width + "px"),
                                    (this.domEl.style.height = this.height + "px"),
                                    t.appendChild(this.domEl),
                                    (this.root = new s.Scene()),
                                    _.default.setContainer(this.root),
                                    (P = P || new s.WebGLRenderer({ antialias: !0, preserveDrawingBuffer: !0, alpha: !0 })),
                                    R.IS_CAPTURE && (this.screenshot = Object.create(T.default).init(P)),
                                    P.setSize(this.width, this.height),
                                    P.setPixelRatio(window.devicePixelRatio);
                                var o = new s.AmbientLight(2105376);
                                this.root.add(o),
                                    this.domEl.appendChild(P.domElement),
                                    i.addSlider(A.PLANET_SCALE_ID, { min: 1, max: 100, initial: (e.forcedGuiSettings && e.forcedGuiSettings.scale) || 10 }, function (t) {
                                        r.bodies3d.forEach(function (e) {
                                            e.setScale(t);
                                        }),
                                            (r.bodyScale = t),
                                            r.draw();
                                    }),
                                    (this.orbitLinesManager = new m.default(e.usePhysics)),
                                    (this.tracerManager = new g.default(this.root)),
                                    (this.cameraManager = new p.default(this, this.width / this.height, e.fov, this.stageSize, this.domEl, n, this.orbitLinesManager, this.tracerManager, i)),
                                    (this.labels = new S.default(this.domEl, this.cameraManager)),
                                    this.setMilkyway();
                            },
                        },
                        {
                            key: "setCameraDefaults",
                            value: function (t) {
                                this.cameraManager.putDefaults(t);
                            },
                        },
                        {
                            key: "setMilkyway",
                            value: function () {
                                var t = (this.milkyway = new h.default(6 * this.stageSize));
                                this.root.add(t.getDisplayObject());
                            },
                        },
                        {
                            key: "setDimension",
                            value: function (t, e, i) {
                                x.default.setLargestDimension(t), (this.stageSize = x.default.getScaled(t)), (this.smallestSMA = e);
                            },
                        },
                        {
                            key: "draw",
                            value: function () {
                                this.bodies3d.forEach(o), this.cameraManager.updateCameraMatrix();
                                var t = this.cameraManager.getCameraPosition();
                                this.tracerManager.draw(t), this.milkyway && this.milkyway.setPosition(t);
                                var e = this.cameraManager.getCamera();
                                this.sun && this.sun.draw(e, t), P.render(this.root, e), this.screenshot && this.screenshot.capture();
                                var i = e.fov * R.DEG_TO_RAD;
                                this.labels.draw(t, i, this.width, this.height), C && C.update();
                            },
                        },
                        {
                            key: "updateCamera",
                            value: function () {
                                this.cameraManager.updateCamera();
                            },
                        },
                        {
                            key: "getCamera",
                            value: function () {
                                return this.cameraManager.getCamera();
                            },
                        },
                        {
                            key: "onDateReset",
                            value: function () {
                                this.updateCamera(), this.orbitLinesManager.resetAllOrbits(), this.tracerManager.resetTrace(), this.draw();
                            },
                        },
                        {
                            key: "addBody",
                            value: function (t) {
                                var e = void 0;
                                (e = t.createCustomDisplayObject ? t.createCustomDisplayObject() : new c.default(t)),
                                    this.labels.addPlanetLabel(t.title || t.name, e),
                                    this.bodies3d.push(e),
                                    this.root.add(e.getDisplayObject()),
                                    this.orbitLinesManager.addBody(e),
                                    this.tracerManager.addBody(e),
                                    this.cameraManager.addBody(e);
                            },
                        },
                        {
                            key: "addEventLabel",
                            value: function (t, e, i) {
                                this.labels.addEventLabel(t, e, i);
                            },
                        },
                        {
                            key: "getRoot",
                            value: function () {
                                return this.root;
                            },
                        },
                        {
                            key: "getDomEl",
                            value: function () {
                                return this.domEl;
                            },
                        },
                        {
                            key: "getSize",
                            value: function () {
                                return this.stageSize;
                            },
                        },
                        {
                            key: "getAspectRatio",
                            value: function () {
                                return this.width / this.height;
                            },
                        },
                        {
                            key: "setCentralBody",
                            value: function (t) {
                                this.centralBody = t;
                                var e = t.getBody3D();
                                (e.maxScale = (this.smallestSMA / (t.radius * R.KM)) * 0.2), (e.maxScale = e.maxScale < 1 ? 1 : e.maxScale);
                                var i = e.maxScale * t.radius * R.KM,
                                    n = 0;
                                this.bodies3d.forEach(function (t) {
                                    (t.maxScale = i / (t.celestial.radius * R.KM)), (n = n > t.maxScale ? n : t.maxScale);
                                }),
                                    "sun" === this.centralBody.name ? (this.sun = e) : ((this.sun = new E.ExternalSun(t, this.universe, this.getAspectRatio(), this.stageSize)), this.root.add(this.sun.getDisplayObject()));
                            },
                        },
                        {
                            key: "kill",
                            value: function () {
                                this.cameraManager.kill(), this.orbitLinesManager.kill(), this.tracerManager.kill(), this.labels.kill(), this.domEl.remove();
                            },
                        },
                    ]),
                    t
                );
            })();
        e.default = D;
    },
    "./graphics3d/Screenshot.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 });
        var n = i("../node_modules/jquery/dist/jquery.js"),
            r = (function (t) {
                return t && t.__esModule ? t : { default: t };
            })(n);
        e.default = {
            init: function (t, e) {
                return (this.i = 0), (this.renderer = t), (this.params = Object.assign({ interval: 5 }, e)), this;
            },
            capture: function () {
                if (this.i % this.params.interval == 0) {
                    var t = this.renderer.domElement.toDataURL();
                    r.default.ajax({
                        type: "post",
                        url: "/_workdir/save.php",
                        data: { im: t, i: this.i },
                        success: function (t) {},
                        error: function (t, e, i) {
                            console.log(t, e, i);
                        },
                    });
                }
                this.i++;
            },
        };
    },
    "./graphics3d/Sun.js": function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : { default: t };
        }
        function r(t, e) {
            if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || ("object" != typeof e && "function" != typeof e) ? t : e;
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            (t.prototype = Object.create(e && e.prototype, { constructor: { value: t, enumerable: !1, writable: !0, configurable: !0 } })), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : (t.__proto__ = e));
        }
        function a(t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }
        Object.defineProperty(e, "__esModule", { value: !0 }), (e.ExternalSun = void 0);
        var s = (function () {
                function t(t, e) {
                    for (var i = 0; i < e.length; i++) {
                        var n = e[i];
                        (n.enumerable = n.enumerable || !1), (n.configurable = !0), "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                    }
                }
                return function (e, i, n) {
                    return i && t(e.prototype, i), n && t(e, n), e;
                };
            })(),
            l = i("../node_modules/three/build/three.js"),
            c = i("./loaders/ResourceLoader.js"),
            u = n(c),
            h = i("./graphics3d/Dimensions.js"),
            d = n(h),
            p = i("./core/constants.js"),
            f = i("./graphics3d/Body3d.js"),
            m = n(f),
            v = i("./scenario/scenarios/bodies/sun.js"),
            g = (function () {
                function t(e, i) {
                    var n = this;
                    a(this, t), (this.root = new l.Object3D()), (this.sunSize = d.default.getScaled(v.radius * p.KM));
                    var r = 0.4 * i,
                        o = {
                            aspectRatio: { type: "f", value: e },
                            sunPosition: { type: "v3", value: new l.Vector3() },
                            sunScreenPos: { type: "v3", value: new l.Vector3() },
                            sunSize: { type: "f", value: 0 },
                            randAngle: { type: "f", value: 0 },
                            camAngle: { type: "f", value: 0 },
                        };
                    (this.uniforms = o),
                        u.default.loadShaders("sun").then(function (t) {
                            var e = new l.ShaderMaterial({ fragmentShader: t.fragment, vertexShader: t.vertex, uniforms: o, transparent: !0 }),
                                i = new l.PlaneGeometry(r, r, 10, 10);
                            (n.mesh = new l.Mesh(i, e)), n.root.add(n.mesh);
                        });
                }
                return (
                    s(t, [
                        {
                            key: "draw",
                            value: function (t, e, i) {
                                if (this.mesh) {
                                    var n = e.clone().sub(i);
                                    this.mesh.quaternion.copy(t.quaternion), this.mesh.position.copy(n.clone().multiplyScalar(0.1));
                                    var r = i.clone().project(t);
                                    this.uniforms.sunPosition.value.copy(n.multiplyScalar(-1));
                                    var o = Math.tan((p.DEG_TO_RAD * t.fov) / 2) * n.length() * 2,
                                        a = this.sunSize * this.scale,
                                        s = a / o;
                                    (this.uniforms.sunSize.value = s),
                                        (this.uniforms.randAngle.value = this.uniforms.randAngle.value + 0.001),
                                        (this.uniforms.camAngle.value = n.angleTo(new l.Vector3(1, 1, 0))),
                                        (this.uniforms.sunScreenPos.value = r);
                                }
                            },
                        },
                    ]),
                    t
                );
            })(),
            y =
                ((e.ExternalSun = (function () {
                    function t(e, i, n, r) {
                        a(this, t),
                            (this.root = new l.Object3D()),
                            (this.universe = i),
                            (this.centralCelestialBody = e),
                            (this.corona = new g(n, r)),
                            (this.corona.scale = 3),
                            (this.corona.sunSize = 10),
                            this.root.add(new l.DirectionalLight(16777215, 1)),
                            this.root.add(this.corona.root);
                    }
                    return (
                        s(t, [
                            {
                                key: "draw",
                                value: function (t, e) {
                                    var i = this.centralCelestialBody.calculatePosition(this.universe.getCurrentJD());
                                    i.setLength(4 * this.universe.getScene().getSize()).negate(), this.root.position.copy(i), this.corona.draw(t, e, i);
                                },
                            },
                            {
                                key: "getDisplayObject",
                                value: function () {
                                    return this.root;
                                },
                            },
                        ]),
                        t
                    );
                })()),
                (function (t) {
                    function e() {
                        return a(this, e), r(this, (e.__proto__ || Object.getPrototypeOf(e)).apply(this, arguments));
                    }
                    return (
                        o(e, t),
                        s(e, [
                            {
                                key: "draw",
                                value: function (t, e) {
                                    if (e) {
                                        var i = d.default.getScaled(this.celestial.getPosition());
                                        this.corona.draw(t, e, i);
                                    }
                                },
                            },
                            {
                                key: "setDisplayObject",
                                value: function () {
                                    var t = this.celestial.universe.getScene();
                                    (this.corona = new g(t.getAspectRatio(), t.getSize())), this.root.add(new l.PointLight(16777215)), this.root.add(this.corona.root);
                                },
                            },
                            {
                                key: "setScale",
                                value: function (t) {
                                    this.corona.scale = t;
                                },
                            },
                            {
                                key: "getDisplayObject",
                                value: function () {
                                    return this.root;
                                },
                            },
                        ]),
                        e
                    );
                })(m.default));
        e.default = y;
    },
    "./graphics3d/lines/BodyOrbitLines.js": function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }
        Object.defineProperty(e, "__esModule", { value: !0 });
        var r = (function () {
                function t(t, e) {
                    for (var i = 0; i < e.length; i++) {
                        var n = e[i];
                        (n.enumerable = n.enumerable || !1), (n.configurable = !0), "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                    }
                }
                return function (e, i, n) {
                    return i && t(e.prototype, i), n && t(e, n), e;
                };
            })(),
            o = i("./graphics3d/lines/OrbitLine.js"),
            a = (function (t) {
                return t && t.__esModule ? t : { default: t };
            })(o),
            s = i("./core/constants.js"),
            l = (function () {
                function t(e, i) {
                    var r = this;
                    n(this, t),
                        (this.isForceSolidLines = i),
                        (this.body3d = e),
                        (this.celestial = e.celestial),
                        this.setOrbitLines(),
                        this.celestial.useCustomComputation &&
                            (this.computeVerticesInDeltaT = function (t) {
                                for (var e = r.celestial.universe.getTickerDeltaT() / s.DAY, i = r.celestial.currentJD - e, n = e / t, o = [], a = 0; a < t; a++) {
                                    var l = i + a * n;
                                    o.push(r.celestial.calculatePosition(l));
                                }
                                return o;
                            });
                }
                return (
                    r(t, [
                        {
                            key: "getName",
                            value: function () {
                                return this.body3d.getName();
                            },
                        },
                        {
                            key: "setOrbitLines",
                            value: function () {
                                var t = this,
                                    e = this.celestial.getOrbitVertices(this.celestial.showSolidOrbit);
                                if (e) {
                                    this.orbitLine || (this.orbitLine = new a.default(this.celestial.name, this.celestial.color, this.celestial.showSolidOrbit || this.isForceSolidLines)), this.orbitLine.setLine(e);
                                    var i = this.celestial.universe.getBody();
                                    if (!this.celestial.relativeTo || this.celestial.relativeTo === i.name) {
                                        var n = e.map(function (t) {
                                            return t.clone().negate();
                                        });
                                        this.eclipticLine || (this.eclipticLine = new a.default(this.celestial.name, i.color, !0)), this.eclipticLine.setLine(n);
                                    }
                                    this.celestial.useCustomComputation &&
                                        this.celestial.showSolidOrbit &&
                                        this.celestial.setOnRevolution(function () {
                                            return t.recalculateOrbitLine(!1);
                                        });
                                }
                            },
                        },
                        {
                            key: "recalculateOrbitLine",
                            value: function (t) {
                                if (t || this.celestial.useCustomComputation) {
                                    var e = this.celestial.getOrbitVertices(this.celestial.showSolidOrbit);
                                    if (e) {
                                        var i = this.orbitLine.added;
                                        this.hideOrbit(), this.orbitLine.setLine(e), i && this.showOrbit();
                                    }
                                }
                            },
                        },
                        {
                            key: "showEcliptic",
                            value: function () {
                                this.eclipticLine && ((this.eclipticLine.added = !0), this.body3d.getDisplayObject().add(this.eclipticLine.getDisplayObject()));
                            },
                        },
                        {
                            key: "hideEcliptic",
                            value: function () {
                                this.eclipticLine && ((this.eclipticLine.added = !1), this.body3d.getDisplayObject().remove(this.eclipticLine.getDisplayObject()));
                            },
                        },
                        {
                            key: "showOrbit",
                            value: function () {
                                this.orbitLine && ((this.orbitLine.added = !0), this.getOrbitContainer().add(this.orbitLine.getDisplayObject()));
                            },
                        },
                        {
                            key: "hideOrbit",
                            value: function () {
                                this.orbitLine && ((this.orbitLine.added = !1), this.getOrbitContainer().remove(this.orbitLine.getDisplayObject()));
                            },
                        },
                        {
                            key: "getOrbitContainer",
                            value: function () {
                                var t = this.body3d.getTraceRelativeToBody();
                                return (t && t.getBody3D().getDisplayObject()) || this.celestial.universe.getScene().getRoot();
                            },
                        },
                        {
                            key: "draw",
                            value: function (t) {
                                this.orbitLine && this.orbitLine.added && this.orbitLine.isGradient && this.orbitLine.updatePos(t, this.celestial.getRelativeVelocity(), this.computeVerticesInDeltaT);
                            },
                        },
                        {
                            key: "getVertices",
                            value: function () {
                                return this.orbitLine && this.orbitLine.orbitVertices;
                            },
                        },
                        {
                            key: "kill",
                            value: function () {
                                this.celestial.setOnRevolution(null);
                            },
                        },
                    ]),
                    t
                );
            })();
        e.default = l;
    },
    "./graphics3d/lines/OrbitLine.js": function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : { default: t };
        }
        function r(t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }
        Object.defineProperty(e, "__esModule", { value: !0 });
        var o = (function () {
                function t(t, e) {
                    for (var i = 0; i < e.length; i++) {
                        var n = e[i];
                        (n.enumerable = n.enumerable || !1), (n.configurable = !0), "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                    }
                }
                return function (e, i, n) {
                    return i && t(e.prototype, i), n && t(e, n), e;
                };
            })(),
            a = i("../node_modules/three/build/three.js"),
            s = i("./graphics3d/Dimensions.js"),
            l = n(s),
            c = i("./graphics3d/utils/DebugPoint.js"),
            u = n(c),
            h = i("./utils/ColorUtils.js"),
            d = i("./core/constants.js"),
            p = (function () {
                function t(e, i, n) {
                    r(this, t), (this.name = e), (this.added = !1), (this.isSolid = n), (this.isGradient = !n), (this.color = i);
                }
                return (
                    o(t, [
                        {
                            key: "createSolidLine",
                            value: function (t) {
                                var e = new a.LineBasicMaterial({ color: d.IS_SCREENSHOT || d.IS_CAPTURE ? this.color : (0, h.rgbToHex)((0, h.darken)((0, h.hexToRgb)(this.color), 0.5)) });
                                this.orbitVertices = t.map(function (t) {
                                    return l.default.getScaled(t.clone());
                                });
                                var i = new a.Geometry();
                                return (i.vertices = this.orbitVertices), new a.Line(i, e);
                            },
                        },
                        {
                            key: "createGradientLine",
                            value: function (t) {
                                var e = t.length;
                                (this.orbitVertices = t.map(function (t) {
                                    return l.default.getScaled(t.clone());
                                })),
                                    (this.nVertices = this.orbitVertices.length);
                                var i = (this.nPos = 3 * e),
                                    n = (this.positions = new Float32Array(3 + i));
                                this.buildPositions(), (n[i] = this.orbitVertices[0].x), (n[i + 1] = this.orbitVertices[0].y), (n[i + 2] = this.orbitVertices[0].z);
                                var r = (0, h.hexToRgb)(this.color),
                                    o = t
                                        .map(function (t, i) {
                                            return (0, h.darken)(r, 1 - i / e);
                                        })
                                        .reduce(function (t, e, i) {
                                            var n = 3 * i;
                                            return (t[n] = e.r / 255), (t[n + 1] = e.g / 255), (t[n + 2] = e.b / 255), t;
                                        }, new Float32Array(3 + i));
                                (o[i] = r.r / 255), (o[i + 1] = r.g / 255), (o[i + 2] = r.b / 255);
                                var s = new a.LineBasicMaterial({ vertexColors: a.VertexColors }),
                                    c = (this.geometry = new a.BufferGeometry());
                                return c.addAttribute("position", new a.BufferAttribute(n, 3)), c.addAttribute("color", new a.BufferAttribute(o, 3)), new a.Line(c, s);
                            },
                        },
                        {
                            key: "buildPositions",
                            value: function () {
                                for (var t = 0; t < this.nVertices; t++) {
                                    var e = this.orbitVertices[t],
                                        i = 3 * t;
                                    (this.positions[i] = e.x), (this.positions[i + 1] = e.y), (this.positions[i + 2] = e.z);
                                }
                            },
                        },
                        {
                            key: "setLine",
                            value: function (t) {
                                this.line = this.isSolid ? this.createSolidLine(t) : this.createGradientLine(t);
                            },
                        },
                        {
                            key: "showAllVertices",
                            value: function () {
                                u.default.removeAll(),
                                    this.orbitVertices.forEach(function (t) {
                                        return u.default.add(t, 11184810, 0.01);
                                    });
                            },
                        },
                        {
                            key: "updatePos",
                            value: function (t, e, i) {
                                var n = this.getNVerticesBehindPos(t, e);
                                if (((this.geometry.attributes.position.needsUpdate = !0), n)) {
                                    for (
                                        var r =
                                                i &&
                                                i(n).map(function (t) {
                                                    return l.default.getScaled(t);
                                                }),
                                            o = [],
                                            a = this.orbitVertices,
                                            s = 0,
                                            c = n;
                                        s < this.nVertices;
                                        s++, c++
                                    )
                                        c === this.nVertices && ((c = 0), (a = r || this.orbitVertices)), (o[s] = a[c]);
                                    if (!r) {
                                        var u = o[this.nVertices - 2],
                                            h = o[this.nVertices - 1],
                                            d = u.distanceTo(h),
                                            p = t.clone().sub(u).setLength(d).add(u);
                                        o[this.nVertices - 1] = p;
                                    }
                                    (this.orbitVertices = o), this.buildPositions();
                                }
                                (this.positions[this.nPos] = t.x), (this.positions[this.nPos + 1] = t.y), (this.positions[this.nPos + 2] = t.z);
                            },
                        },
                        {
                            key: "getNVerticesBehindPos",
                            value: function (t, e) {
                                for (var i = e.negate(), n = 0; n < this.nVertices; n++) {
                                    if (this.orbitVertices[n].clone().sub(t).angleTo(i) >= d.QUARTER_CIRCLE) return n;
                                }
                                return null;
                            },
                        },
                        {
                            key: "getDisplayObject",
                            value: function () {
                                return this.line;
                            },
                        },
                    ]),
                    t
                );
            })();
        e.default = p;
    },
    "./graphics3d/lines/OrbitLinesManager.js": function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }
        Object.defineProperty(e, "__esModule", { value: !0 });
        var r = (function () {
                function t(t, e) {
                    for (var i = 0; i < e.length; i++) {
                        var n = e[i];
                        (n.enumerable = n.enumerable || !1), (n.configurable = !0), "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                    }
                }
                return function (e, i, n) {
                    return i && t(e.prototype, i), n && t(e, n), e;
                };
            })(),
            o = i("./graphics3d/lines/BodyOrbitLines.js"),
            a = (function (t) {
                return t && t.__esModule ? t : { default: t };
            })(o),
            s = (function () {
                function t(e) {
                    n(this, t), (this.isForceSolidLines = e), (this.orbits = []);
                }
                return (
                    r(t, [
                        {
                            key: "hideAllOrbits",
                            value: function () {
                                this.orbits.forEach(function (t) {
                                    t.hideOrbit();
                                });
                            },
                        },
                        {
                            key: "showAllOrbits",
                            value: function () {
                                this.orbits.forEach(function (t) {
                                    t.showOrbit();
                                });
                            },
                        },
                        {
                            key: "hideAllEcliptics",
                            value: function () {
                                this.orbits.forEach(function (t) {
                                    t.hideEcliptic();
                                });
                            },
                        },
                        {
                            key: "findOrbitIndex",
                            value: function (t) {
                                return this.orbits.findIndex(function (e) {
                                    return e.getName() === t;
                                });
                            },
                        },
                        {
                            key: "getOrbitFromName",
                            value: function (t) {
                                var e = this.findOrbitIndex(t);
                                return ~e ? this.orbits[e] : null;
                            },
                        },
                        {
                            key: "addBody",
                            value: function (t) {
                                var e = new a.default(t, this.isForceSolidLines);
                                t.setOrbitLines(e);
                                var i = this.findOrbitIndex(t.getName());
                                ~i ? (this.orbits[i] = e) : this.orbits.push(e);
                            },
                        },
                        {
                            key: "onCameraChange",
                            value: function (t, e) {
                                var i = t && this.getOrbitFromName(t.getName()),
                                    n = e && this.getOrbitFromName(e.getName());
                                i
                                    ? (this.hideAllOrbits(), this.hideAllEcliptics(), i.showEcliptic(), n && e.celestial.isOrbitAround(t.celestial) && !e.celestial.maxPrecision && n.showOrbit())
                                    : (this.resetAllOrbits(), this.showAllOrbits(), this.hideAllEcliptics());
                            },
                        },
                        {
                            key: "resetAllOrbits",
                            value: function () {
                                this.orbits.forEach(function (t) {
                                    t.recalculateOrbitLine(!0);
                                });
                            },
                        },
                        {
                            key: "kill",
                            value: function () {
                                this.orbits.forEach(function (t) {
                                    t.kill();
                                });
                            },
                        },
                    ]),
                    t
                );
            })();
        e.default = s;
    },
    "./graphics3d/lines/Tracer.js": function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }
        Object.defineProperty(e, "__esModule", { value: !0 });
        var r = (function () {
                function t(t, e) {
                    for (var i = 0; i < e.length; i++) {
                        var n = e[i];
                        (n.enumerable = n.enumerable || !1), (n.configurable = !0), "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                    }
                }
                return function (e, i, n) {
                    return i && t(e.prototype, i), n && t(e, n), e;
                };
            })(),
            o = i("../node_modules/three/build/three.js"),
            a = i("./utils/ColorUtils.js"),
            s = i("./core/constants.js"),
            l = new o.Vector3(1, 0, 0),
            c = (function () {
                function t(e, i, r) {
                    n(this, t),
                        (this.name = r),
                        (this.color = s.IS_SCREENSHOT || s.IS_CAPTURE ? e : (0, a.rgbToHex)((0, a.darken)((0, a.hexToRgb)(e), 0.7))),
                        (this.points = []),
                        (this.nVertices = i),
                        (this.lastVertexIdx = this.nVertices - 1),
                        (this.lastMod = 0),
                        (this.root = new o.Object3D()),
                        (this.tracePosition = new o.Vector3());
                }
                return (
                    r(t, [
                        {
                            key: "getDisplayObject",
                            value: function () {
                                return this.root;
                            },
                        },
                        {
                            key: "getNew",
                            value: function () {
                                this.detachTrace();
                                var t = new o.LineBasicMaterial({ color: this.color, lineWidth: 4 });
                                this.geom = new o.Geometry();
                                for (var e = 0; e < this.nVertices; e++) this.geom.vertices.push(new o.Vector3(0, 0, 0));
                                (this.line = new o.Line(this.geom, t)), (this.line.frustumCulled = !1), (this.currentVertex = 0), (this.initCallback = this.changeVertex.bind(this)), this.attachTrace();
                            },
                        },
                        {
                            key: "detachTrace",
                            value: function () {
                                this.line && this.root.remove(this.line);
                            },
                        },
                        {
                            key: "attachTrace",
                            value: function () {
                                this.line && this.root.add(this.line);
                            },
                        },
                        {
                            key: "setTraceFrom",
                            value: function (t) {
                                this.traceFrom !== t && this.getNew(), (this.traceFrom = t), t || this.root.position.set(0, 0, 0);
                            },
                        },
                        {
                            key: "changeVertex",
                            value: function () {
                                (this.lastPathDirection = null), (this.switchVertex = this.currentVertex === this.lastVertexIdx), this.currentVertex < this.lastVertexIdx && this.currentVertex++;
                            },
                        },
                        {
                            key: "draw",
                            value: function (t) {
                                if (this.geom) {
                                    var e = this.setTracePos(t);
                                    if (!this.geom.vertices[this.currentVertex] || 0 !== this.geom.vertices[this.currentVertex].distanceTo(e)) {
                                        if (((this.geom.verticesNeedUpdate = !0), this.currentVertex < this.lastVertexIdx)) for (var i = this.currentVertex; i < this.nVertices; i++) this.geom.vertices[i].copy(e);
                                        else {
                                            if (this.switchVertex) {
                                                for (var n = 0; n < this.lastVertexIdx; n++) this.geom.vertices[n].copy(this.geom.vertices[n + 1]);
                                                this.switchVertex = !1;
                                            }
                                            this.geom.vertices[this.lastVertexIdx].copy(e);
                                        }
                                        var r = this.geom.vertices[this.currentVertex - 2],
                                            o = this.geom.vertices[this.currentVertex - 1],
                                            a = this.geom.vertices[this.currentVertex];
                                        if (o && r) {
                                            if (!this.lastPathDirection) {
                                                var s = o.clone().sub(r);
                                                this.lastPathDirection = Math.abs(s.angleTo(l));
                                            }
                                            var c = a.clone().sub(this.previousPos);
                                            Math.abs(this.lastPathDirection - Math.abs(c.angleTo(l))) > 0.005 && this.changeVertex();
                                        }
                                        (o && r) || this.changeVertex(), (this.previousPos = e);
                                    }
                                }
                            },
                        },
                        {
                            key: "setTracePos",
                            value: function (t) {
                                return this.traceFrom && (this.root.position.copy(this.traceFrom.getPosition()), t.sub(this.traceFrom.getPosition())), t;
                            },
                        },
                    ]),
                    t
                );
            })();
        e.default = c;
    },
    "./graphics3d/lines/TracerManager.js": function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }
        Object.defineProperty(e, "__esModule", { value: !0 });
        var r = (function () {
                function t(t, e) {
                    for (var i = 0; i < e.length; i++) {
                        var n = e[i];
                        (n.enumerable = n.enumerable || !1), (n.configurable = !0), "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                    }
                }
                return function (e, i, n) {
                    return i && t(e.prototype, i), n && t(e, n), e;
                };
            })(),
            o = i("./graphics3d/lines/Tracer.js"),
            a = (function (t) {
                return t && t.__esModule ? t : { default: t };
            })(o),
            s = (function () {
                function t(e) {
                    n(this, t), (this.bodies3d = []), (this.container = e), (this.activeTracers = []);
                }
                return (
                    r(t, [
                        {
                            key: "setTraceFrom",
                            value: function (t, e) {
                                this.removeTracers(), (this.activeTracers.length = 0), this.addTracer(e, t);
                            },
                        },
                        {
                            key: "resetTrace",
                            value: function () {
                                var t = this;
                                this.removeTracers(),
                                    this.activeTracers.forEach(function (e) {
                                        e.getNew(), t.container.add(e.getDisplayObject());
                                    });
                            },
                        },
                        {
                            key: "addTracer",
                            value: function (t, e) {
                                if (t) {
                                    var i = t.tracer;
                                    i && (i.setTraceFrom(e), i.getNew(), this.container.add(i.getDisplayObject()), this.activeTracers.push(i));
                                }
                            },
                        },
                        {
                            key: "removeTracers",
                            value: function () {
                                var t = this.container;
                                this.bodies3d.forEach(function (e) {
                                    if (!e.celestial.forceTrace) {
                                        var i = e.tracer;
                                        i && t.remove(i.getDisplayObject());
                                    }
                                });
                            },
                        },
                        {
                            key: "draw",
                            value: function () {
                                var t = this;
                                this.deferredForceTraceBody &&
                                    (this.deferredForceTraceBody.forEach(function (e) {
                                        var i = e.getTraceRelativeToBody();
                                        t.addTracer(e, i && i.getBody3D());
                                    }),
                                    (this.deferredForceTraceBody = null));
                            },
                        },
                        {
                            key: "addBody",
                            value: function (t) {
                                if ((this.bodies3d.push(t), !t.celestial.isCentral || t.celestial.forceTrace)) {
                                    var e = new a.default(t.celestial.traceColor || t.celestial.color, 1e3, t.celestial.name);
                                    t.setTracer(e), t.celestial.forceTrace && ((this.deferredForceTraceBody = this.deferredForceTraceBody || []), this.deferredForceTraceBody.push(t));
                                }
                            },
                        },
                        { key: "kill", value: function () {} },
                    ]),
                    t
                );
            })();
        e.default = s;
    },
    "./graphics3d/utils/DebugPoint.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 });
        var n = i("../node_modules/three/build/three.js"),
            r = [],
            o = [],
            a = void 0;
        e.default = {
            add: function (t, e) {
                var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0.3,
                    o = new n.Mesh(new n.SphereGeometry(i, 10, 10), new n.MeshBasicMaterial({ color: e }));
                return o.position.copy(t), a.add(o), r.push(o), r.length - 1;
            },
            removeAll: function () {
                r.forEach(function (t) {
                    a.remove(t);
                }),
                    (r.length = 0),
                    o.forEach(function (t) {
                        a.remove(t);
                    }),
                    (o.length = 0);
            },
            addArrow: function (t, e) {
                var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 20,
                    r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 6710886;
                if (e && t) {
                    a.remove(this.vel);
                    var s = new n.ArrowHelper(e.clone().normalize(), t.clone(), i, r);
                    a.add(s), o.push(s);
                }
            },
            setContainer: function (t) {
                a = t;
            },
        };
    },
    "./gui/ExportValues.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 });
        var n = {},
            r = void 0;
        e.default = {
            reset: function () {
                n = {};
            },
            setVal: function (t, e) {
                n[t] = e;
            },
            setCamera: function (t) {
                r = t;
            },
            getExport: function () {
                return Object.assign({}, n, { cx: r.position.x, cy: r.position.y, cz: r.position.z, fov: r.fov });
            },
        };
    },
    "./gui/Gui.js": function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : { default: t };
        }
        function r(t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }
        function o(t) {
            return (
                h.default.killTweensOf(t),
                h.default.to(t, 0.3, {
                    opacity: 0,
                    onComplete: function () {
                        t.hide();
                    },
                }),
                !1
            );
        }
        function a(t) {
            return h.default.killTweensOf(t), t.show(), h.default.to(t, 0.3, { opacity: 1 }), !0;
        }
        Object.defineProperty(e, "__esModule", { value: !0 }), (e.GEOLOC_ID = e.DELTA_T_ID = e.LOOKFROM_ID = e.LOOKAT_ID = e.DATE_DISPLAY_ID = e.DATE_ID = e.SHARE_ID = e.START_ID = e.SCENARIO_ID = e.PLANET_SCALE_ID = void 0);
        var s = (function () {
                function t(t, e) {
                    for (var i = 0; i < e.length; i++) {
                        var n = e[i];
                        (n.enumerable = n.enumerable || !1), (n.configurable = !0), "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                    }
                }
                return function (e, i, n) {
                    return i && t(e.prototype, i), n && t(e, n), e;
                };
            })(),
            l = i("../node_modules/jquery/dist/jquery.js"),
            c = n(l),
            u = i("../node_modules/gsap/TweenMax.js"),
            h = n(u),
            d = i("./gui/InputDate.js"),
            p = n(d),
            f = i("./gui/InputGeoCoord.js"),
            m = n(f),
            v = i("./gui/InputSelect.js"),
            g = n(v),
            y = i("./gui/InputSlider.js"),
            _ = n(y),
            b = i("./gui/InputButton.js"),
            x = n(b),
            w = ((e.PLANET_SCALE_ID = "planetScale"), (e.SCENARIO_ID = "scenario"), (e.START_ID = "start"), (e.SHARE_ID = "share"), (e.DATE_ID = "date")),
            T = ((e.DATE_DISPLAY_ID = "dateDisplay"), (e.LOOKAT_ID = "lookAt"), (e.LOOKFROM_ID = "lookFrom"), (e.DELTA_T_ID = "deltaT"), (e.GEOLOC_ID = "geoloc")),
            E = (function () {
                function t() {
                    var e = this;
                    r(this, t), (this.gui = (0, c.default)("nav#gui")), this.setupHelp();
                    var i = (0, c.default)("#navCollapse");
                    i.on("click.jsorrery", function () {
                        e.gui.toggleClass("collapsed"), e.gui.hasClass("collapsed") ? i.addClass("fa-angle-double-down").removeClass("fa-angle-double-up") : i.addClass("fa-angle-double-up").removeClass("fa-angle-double-down");
                    });
                }
                return (
                    s(t, [
                        {
                            key: "addBtn",
                            value: function (t, e, i, n) {
                                this.emptyContainer(e);
                                var r = new x.default(t, e, i, n),
                                    o = r.getWidget();
                                this.addWidget(e, o);
                            },
                        },
                        {
                            key: "addDropdown",
                            value: function (t, e) {
                                this.emptyContainer(t);
                                var i = new g.default(t, this.defaultSettings[t], e, this),
                                    n = i.getWidget();
                                return this.addWidget(t, n, "dropdown"), i;
                            },
                        },
                        {
                            key: "addSlider",
                            value: function (t, e, i) {
                                this.emptyContainer(t);
                                var n = Number(this.defaultSettings[t]) || (e && e.initial) || 1,
                                    r = new _.default(t, n, this.setOnChange(t, i), e, this),
                                    o = r.getWidget();
                                this.addWidget(t, o);
                            },
                        },
                        {
                            key: "addDate",
                            value: function (t) {
                                return this.emptyContainer(w), p.default.init(this.setOnChange(w, t), this.defaultSettings[w]), this.addWidget(w, p.default.getWidget()), p.default;
                            },
                        },
                        {
                            key: "addGeoloc",
                            value: function (t, e) {
                                return this.emptyContainer(T), m.default.init(this.defaultSettings[T] || t, this.setOnChange(T, e)), this.addWidget(T, m.default.getWidget()), m.default;
                            },
                        },
                        {
                            key: "removeGeoloc",
                            value: function () {
                                m.default.sleep(), this.hideGuiElement(T);
                            },
                        },
                        {
                            key: "pushDefaultsCallbacks",
                            value: function (t) {
                                (this.defaultCallbacks = this.defaultCallbacks || []), this.defaultCallbacks.push(t);
                            },
                        },
                        {
                            key: "putDefaults",
                            value: function () {
                                this.defaultCallbacks &&
                                    (this.defaultCallbacks.forEach(function (t) {
                                        return t();
                                    }),
                                    (this.defaultCallbacks.length = 0));
                            },
                        },
                        {
                            key: "setDefaults",
                            value: function (t) {
                                this.defaultSettings = t;
                            },
                        },
                        {
                            key: "getContainer",
                            value: function (t) {
                                return (0, c.default)("#" + t + "Cont");
                            },
                        },
                        {
                            key: "getLabel",
                            value: function (t) {
                                return (0, c.default)("#" + t + "Label");
                            },
                        },
                        {
                            key: "hideGuiElement",
                            value: function (t) {
                                return this.getLabel(t).removeClass("shown");
                            },
                        },
                        {
                            key: "emptyContainer",
                            value: function (t) {
                                this.getContainer(t).empty();
                            },
                        },
                        {
                            key: "addWidget",
                            value: function (t, e, i) {
                                var n = this.getContainer(t);
                                this.getLabel(t).addClass("shown"), i && n.addClass("dropdown"), n.append(e);
                            },
                        },
                        {
                            key: "setOnChange",
                            value: function (t, e) {
                                var i = this.getLabel(t).find(".valDisplay");
                                return function (t) {
                                    i.length && i.text(t), e && e(t);
                                };
                            },
                        },
                        {
                            key: "fadeGui",
                            value: function (t) {
                                var e = t ? "addClass" : "removeClass";
                                this.gui[e]("faded");
                            },
                        },
                        {
                            key: "setupHelp",
                            value: function () {
                                var t = (0, c.default)(".helpContent");
                                (0, c.default)(".help").each(function (e, i) {
                                    var n = void 0,
                                        r = !1;
                                    (0, c.default)(i).on("click.jsorrery", function () {
                                        if (!n) {
                                            n = t.filter("#" + i.dataset.for);
                                            n.find(".close").on("click.jsorrery", function () {
                                                (r = o(n)), fadeGui(r);
                                            });
                                        }
                                        o(t.not(n)), (r = r ? o(n) : a(n)), fadeGui(r);
                                    });
                                });
                                var e = window.jsOrrery && window.jsOrrery.defaults && window.jsOrrery.defaults.showHelp;
                                e && (0, c.default)('.help[data-for="' + e + '"]').trigger("click");
                            },
                        },
                    ]),
                    t
                );
            })();
        e.default = E;
    },
    "./gui/InputButton.js": function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }
        Object.defineProperty(e, "__esModule", { value: !0 });
        var r = (function () {
                function t(t, e) {
                    for (var i = 0; i < e.length; i++) {
                        var n = e[i];
                        (n.enumerable = n.enumerable || !1), (n.configurable = !0), "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                    }
                }
                return function (e, i, n) {
                    return i && t(e.prototype, i), n && t(e, n), e;
                };
            })(),
            o = i("../node_modules/jquery/dist/jquery.js"),
            a = (function (t) {
                return t && t.__esModule ? t : { default: t };
            })(o),
            s = { share: "fa fa-share-alt", start: ["fa fa-play-circle", "fa fa-pause-circle"] },
            l = (function () {
                function t(e, i, r, o) {
                    var l = this;
                    n(this, t);
                    var c = s[i],
                        u = void 0,
                        h = void 0;
                    c instanceof Array ? ((u = c[0]), (h = c[1])) : (u = c);
                    var d = u ? "&nbsp;" : e,
                        p = !1;
                    if (
                        ((this.btn = (0, a.default)('<button class="' + u + '" id="' + i + '">' + d + "</button>")),
                        this.btn.on("click.jsorrery", function (t) {
                            t.stopPropagation(), r(), (p = !p);
                            var e = (p && h) || u;
                            l.btn.attr("class", e);
                        }),
                        o)
                    ) {
                        var f = o.toUpperCase().charCodeAt(0);
                        (0, a.default)(window).on("keyup.jsorrery", function (t) {
                            t.keyCode === f && l.btn.trigger("click");
                        });
                    }
                }
                return (
                    r(t, [
                        {
                            key: "getWidget",
                            value: function () {
                                return this.btn;
                            },
                        },
                    ]),
                    t
                );
            })();
        e.default = l;
    },
    "./gui/InputDate.js": function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : { default: t };
        }
        Object.defineProperty(e, "__esModule", { value: !0 });
        var r = i("../node_modules/jquery/dist/jquery.js"),
            o = n(r),
            a = i("./gui/ExportValues.js"),
            s = n(a),
            l = i("./gui/Gui.js"),
            c = void 0,
            u = void 0,
            h = void 0;
        e.default = {
            init: function (t, e) {
                var i = this;
                c || (c = (0, o.default)("<input>")), (u = (0, o.default)("#" + l.DATE_DISPLAY_ID));
                var n = void 0;
                c.off("change").on("change.jsorrery", function () {
                    var e = c.val(),
                        r = e && e.trim().match(/(-?\d{1,6})-(\d{2})-(\d{2})T(\d{2}):(\d{2})/),
                        o = void 0;
                    (o = r ? new Date(Date.UTC(Number(r[1]), Number(r[2]) - 1, Number(r[3]), Number(r[4]), Number(r[5]))) : new Date(e)), isNaN(o.getTime()) && (o = new Date()), n !== o && (i.setDate(o), t()), (n = o);
                }),
                    e && this.setDate(new Date(e));
            },
            getWidget: function () {
                return c;
            },
            setDate: function (t) {
                if (((h = t), t)) {
                    var e = t.toISOString();
                    s.default.setVal(l.DATE_ID, e), c && c.val(e), u && u.text(e);
                }
            },
            getDate: function () {
                return h;
            },
        };
    },
    "./gui/InputGeoCoord.js": function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : { default: t };
        }
        Object.defineProperty(e, "__esModule", { value: !0 });
        var r = i("../node_modules/jquery/dist/jquery.js"),
            o = n(r),
            a = i("./utils/GeoCoord.js"),
            s = n(a),
            l = i("./gui/ExportValues.js"),
            c = n(l),
            u = i("./gui/Gui.js"),
            h = (0, o.default)("<input>"),
            d = void 0;
        e.default = {
            init: function (t, e) {
                function i() {
                    d.setFromString(h.val()), h.val(d.getString()), e(d.getLoc()), c.default.setVal(u.GEOLOC_ID, d.getString());
                }
                (d = new s.default()), "string" == typeof t ? d.setFromString(t) : d.setValue(t), h.val(d.getString()), h.off("change").on("change.jsorrery", i), i();
            },
            sleep: function () {
                h && h.off("change");
            },
            getWidget: function () {
                return h;
            },
            getLoc: function () {
                return d.getLoc();
            },
        };
    },
    "./gui/InputSelect.js": function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : { default: t };
        }
        function r(t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }
        Object.defineProperty(e, "__esModule", { value: !0 });
        var o = (function () {
                function t(t, e) {
                    for (var i = 0; i < e.length; i++) {
                        var n = e[i];
                        (n.enumerable = n.enumerable || !1), (n.configurable = !0), "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                    }
                }
                return function (e, i, n) {
                    return i && t(e.prototype, i), n && t(e, n), e;
                };
            })(),
            a = i("../node_modules/jquery/dist/jquery.js"),
            s = n(a),
            l = i("./gui/ExportValues.js"),
            c = n(l),
            u = (function () {
                function t(e, i, n, o) {
                    var a = this;
                    r(this, t),
                        (this.clickHandler = function (t) {
                            a.listClicked((0, s.default)(t.currentTarget));
                        }),
                        (this.id = e),
                        (this.gui = o),
                        (this.input = (0, s.default)('<input id="' + e + '_inp">').on("change.jsorrery", n)),
                        (this.display = (0, s.default)('<div class="display">')),
                        (this.list = (0, s.default)('<ul id="' + e + '">')),
                        (this.options = {}),
                        (this.defaultVal = i);
                }
                return (
                    o(t, [
                        {
                            key: "getWidget",
                            value: function () {
                                return [this.display, this.list];
                            },
                        },
                        {
                            key: "addOption",
                            value: function (t, e, i) {
                                var n = this,
                                    r = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3],
                                    o = (this.options[e] = (0, s.default)('<li data-value="' + e + '">' + t + "</li>"));
                                o.on("click.jsorrery", this.clickHandler),
                                    0 === this.list.children().length && (this.input.val(e), this.display.html(t), c.default.setVal(this.id, e)),
                                    o.appendTo(this.list),
                                    (i || this.defaultVal === e) &&
                                        this.gui.pushDefaultsCallbacks(function () {
                                            n.listClicked(o, r);
                                        });
                            },
                        },
                        {
                            key: "toggleOptions",
                            value: function (t, e) {
                                this.options, this.input.val();
                            },
                        },
                        {
                            key: "getValue",
                            value: function () {
                                return this.input.val();
                            },
                        },
                        {
                            key: "listClicked",
                            value: function (t) {
                                var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                                    i = t.data("value");
                                this.display.html(t.html()), e && this.input.val(i).trigger("change"), c.default.setVal(this.id, i);
                            },
                        },
                    ]),
                    t
                );
            })();
        e.default = u;
    },
    "./gui/InputSlider.js": function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : { default: t };
        }
        function r(t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }
        Object.defineProperty(e, "__esModule", { value: !0 });
        var o = (function () {
                function t(t, e) {
                    for (var i = 0; i < e.length; i++) {
                        var n = e[i];
                        (n.enumerable = n.enumerable || !1), (n.configurable = !0), "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                    }
                }
                return function (e, i, n) {
                    return i && t(e.prototype, i), n && t(e, n), e;
                };
            })(),
            a = i("../node_modules/jquery/dist/jquery.js"),
            s = n(a),
            l = i("./gui/ExportValues.js"),
            c = n(l),
            u = (function () {
                function t(e, i, n, o, a) {
                    var l = this,
                        u = o.min,
                        h = void 0 === u ? 1 : u,
                        d = o.max,
                        p = void 0 === d ? 100 : d,
                        f = o.step,
                        m = void 0 === f ? 1 : f;
                    r(this, t),
                        (this.slider = (0, s.default)('<input type ="range" min="' + h + '" max="' + p + '" step="' + m + '" value ="' + i + '"/>')),
                        this.slider.off("input").on("input.jsorrery", function () {
                            var t = l.slider.val();
                            c.default.setVal(e, t), n(t);
                        }),
                        i &&
                            a.pushDefaultsCallbacks(function () {
                                l.setSlideValue(i), n(i);
                            }),
                        c.default.setVal(e, i);
                }
                return (
                    o(t, [
                        {
                            key: "getWidget",
                            value: function () {
                                return this.slider;
                            },
                        },
                        {
                            key: "setSlideValue",
                            value: function (t) {
                                this.slider.val(t);
                            },
                        },
                    ]),
                    t
                );
            })();
        e.default = u;
    },
    "./gui/Preloader.js": function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }
        Object.defineProperty(e, "__esModule", { value: !0 });
        var r = (function () {
                function t(t, e) {
                    for (var i = 0; i < e.length; i++) {
                        var n = e[i];
                        (n.enumerable = n.enumerable || !1), (n.configurable = !0), "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                    }
                }
                return function (e, i, n) {
                    return i && t(e.prototype, i), n && t(e, n), e;
                };
            })(),
            o = i("../node_modules/gsap/TweenMax.js"),
            a = i("../node_modules/bluebird/js/browser/bluebird.js"),
            s = (function (t) {
                return t && t.__esModule ? t : { default: t };
            })(a),
            l = (function () {
                function t(e) {
                    n(this, t);
                    var i = void 0;
                    this.getNode = function () {
                        return i || ((i = e.getElementsByClassName("preload")), (i = i && i[0]));
                    };
                }
                return (
                    r(t, [
                        {
                            key: "remove",
                            value: function () {
                                var t = this.getNode();
                                return t
                                    ? new s.default(function (e) {
                                          o.TweenMax.to(t, 0.5, {
                                              opacity: 0,
                                              onComplete: function () {
                                                  (t.style.display = "none"), e();
                                              },
                                          });
                                      })
                                    : s.default.resolve();
                            },
                        },
                        {
                            key: "show",
                            value: function () {
                                var t = this.getNode();
                                t && (o.TweenMax.killTweensOf(t), (t.style.display = "block"), o.TweenMax.to(t, 0.5, { opacity: 1 }));
                            },
                        },
                    ]),
                    t
                );
            })();
        e.default = l;
    },
    "./gui/Sharer.js": function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : { default: t };
        }
        function r() {
            var t = window.twttr || null;
            t ? t.widgets.load() : setTimeout(r, 100);
        }
        function o() {
            return u
                ? null
                : ((u = (0, s.default)("#shareWidget")),
                  (h = (0, s.default)("#twitterShare")),
                  (d = (0, s.default)("#shareUrl")),
                  u.on("click.sharer", function (t) {
                      t.stopPropagation();
                  }),
                  null);
        }
        Object.defineProperty(e, "__esModule", { value: !0 });
        var a = i("../node_modules/jquery/dist/jquery.js"),
            s = n(a),
            l = i("./gui/ExportValues.js"),
            c = n(l),
            u = void 0,
            h = void 0,
            d = void 0,
            p = window.location.protocol + "//" + window.location.host + window.location.pathname;
        e.default = {
            show: function () {
                o();
                var t = c.default.getExport(),
                    e = Object.keys(t)
                        .map(function (e) {
                            return e + "=" + t[e];
                        })
                        .join("&"),
                    i = p + "?" + e;
                new Promise(function (t) {
                    t(i);
                }).then(function (t) {
                    d.val(t);
                    var e = '<a href="https://twitter.com/share" class="twitter-share-button" data-counturl="' + p + '" data-url="' + t + '" data-via="' + h.data("via") + '">Tweet</a>';
                    h.html(e),
                        r(),
                        u.fadeIn(200, function () {
                            d.get(0).select();
                        });
                    var i = (0, s.default)("html");
                    i.on("click.sharer", function () {
                        i.off(".sharer"), u.fadeOut(200);
                    });
                });
            },
        };
    },
    "./index.js": function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : { default: t };
        }
        var r = i("../node_modules/jquery/dist/jquery.js"),
            o = n(r);
        i("../node_modules/style-loader/index.js!./scss/master.scss");
        var a = i("./core/JSOrrery.js"),
            s = n(a);
        if (((window.$ = o.default), i("../node_modules/jquery-mousewheel/jquery.mousewheel.js"), !window.WebGLRenderingContext)) {
            document.querySelectorAll("#preload .title")[0].innerHTML = '<h3>Your browser does not support WebGL. Please visit <a href="http://get.webgl.org/">webgl.org</a></h3>';
        }
        (window.JSOrrery = s.default), window.onJsOrreryLoaded && window.onJsOrreryLoaded(s.default);
    },
    "./loaders/ResourceLoader.js": function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : { default: t };
        }
        function r(t) {
            return d[t] ? (p.push(d[t]), d[t]) : null;
        }
        Object.defineProperty(e, "__esModule", { value: !0 });
        var o = (function () {
                function t(t, e) {
                    var i = [],
                        n = !0,
                        r = !1,
                        o = void 0;
                    try {
                        for (var a, s = t[Symbol.iterator](); !(n = (a = s.next()).done) && (i.push(a.value), !e || i.length !== e); n = !0);
                    } catch (t) {
                        (r = !0), (o = t);
                    } finally {
                        try {
                            !n && s.return && s.return();
                        } finally {
                            if (r) throw o;
                        }
                    }
                    return i;
                }
                return function (e, i) {
                    if (Array.isArray(e)) return e;
                    if (Symbol.iterator in Object(e)) return t(e, i);
                    throw new TypeError("Invalid attempt to destructure non-iterable instance");
                };
            })(),
            a = i("../node_modules/three/build/three.js"),
            s = i("../node_modules/jquery/dist/jquery.js"),
            l = n(s),
            c = i("../node_modules/bluebird/js/browser/bluebird.js"),
            u = n(c),
            h = [
                { ext: "vsh", type: "vertex" },
                { ext: "fsh", type: "fragment" },
            ],
            d = {},
            p = void 0;
        e.default = {
            reset: function () {
                p = [];
            },
            getOnReady: function () {
                return u.default.all(p);
            },
            loadTexture: function (t) {
                var e = new u.default(function (e) {
                    new a.TextureLoader().load(t, function (t) {
                        e(t);
                    });
                });
                return p.push(e), e;
            },
            loadJSON: function (t) {
                var e = r(t);
                return e || ((e = l.default.ajax({ url: t, dataType: "json" })), (d[t] = e), p.push(e), e);
            },
            loadShaders: function (t) {
                var e = "shader." + t,
                    i = r(e);
                if (i) return i;
                var n = h.map(function (e) {
                        var i = e.ext;
                        return l.default.ajax({ url: "./assets/shaders/" + t + "." + i, dataType: "text" });
                    }),
                    a = u.default.all(n).then(function (t) {
                        var e = o(t, 2);
                        return { vertex: e[0], fragment: e[1] };
                    });
                return (d[e] = a), p.push(a), a;
            },
        };
    },
    "./scenario/Loader.js": function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : { default: t };
        }
        function r(t) {
            return (
                (t.bodies = t.bodies || {}),
                t.commonBodies &&
                    ((t.bodies = t.commonBodies.reduce(function (e, i) {
                        var n = i.name;
                        return (e[n] = a({}, i, t.bodies[n])), (e[n].orbit = e[n].orbit && JSON.parse(JSON.stringify(e[n].orbit))), e;
                    }, t.bodies)),
                    (t.commonBodies = null)),
                (t.title = t.title || t.name),
                (t.help = t.help || ""),
                t
            );
        }
        function o() {
            return (R = R || A.map(r));
        }
        Object.defineProperty(e, "__esModule", { value: !0 });
        var a =
            Object.assign ||
            function (t) {
                for (var e = 1; e < arguments.length; e++) {
                    var i = arguments[e];
                    for (var n in i) Object.prototype.hasOwnProperty.call(i, n) && (t[n] = i[n]);
                }
                return t;
            };
        e.buildScenario = r;
        var s = i("./scenario/scenarios/SolarSystem.js"),
            l = n(s),
            c = i("./scenario/scenarios/SolarSystemDwarves.js"),
            u = n(c),
            h = i("./scenario/scenarios/InnerSolarSystem.js"),
            d = n(h),
            p = i("./scenario/scenarios/Apollo.js"),
            f = n(p),
            m = i("./scenario/scenarios/EarthMoon.js"),
            v = n(m),
            g = i("./scenario/scenarios/ArtificialSatellites.js"),
            y = n(g),
            _ = i("./scenario/scenarios/JupiterMoon.js"),
            b = n(_),
            x = i("./scenario/scenarios/NearEarthObject.js"),
            w = n(x),
            T = i("./scenario/scenarios/BigJupiter.js"),
            E = n(T),
            M = i("./scenario/scenarios/MoonSOI.js"),
            S = n(M),
            A = [l.default, u.default, d.default, f.default, v.default, y.default, b.default, w.default, E.default, S.default],
            R = void 0;
        e.default = {
            get: function (t) {
                return o().find(function (e) {
                    return e.name === t;
                });
            },
            getList: function () {
                return o();
            },
        };
    },
    "./scenario/scenarios/Apollo.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 });
        var n = i("./scenario/scenarios/NasaNumbers.js"),
            r = i("./scenario/scenarios/bodies/earth.js"),
            o = i("./scenario/scenarios/bodies/moon.js"),
            a = i("./utils/JD.js"),
            s = window.location.search.match(/apollo=([0-9]+)/),
            l = (s && s[1]) || "16",
            c = (0, n.getMissionFromName)("Apollo" + l).getNumbers("TLI"),
            u = (0, a.getDateFromJD)(c.orbit.epoch),
            h = { title: "Apollo " + l, relativeTo: "earth", mass: 1, radius: 2, color: "#00ffff", traceColor: "#ffffff", vertexDist: 1e5, forceTrace: !0, showSolidOrbit: !0, data: {}, logForces: !0 },
            d = Object.assign({}, h, {
                customInitialize: function () {
                    this.data = {};
                },
                customAfterTick: function (t) {
                    var e = void 0;
                    if (this.data.isOnReturnTrip)
                        (e = Math.abs(this.position.clone().sub(this.universe.getBody("earth").position).length()) / 1e3 - this.universe.getBody("earth").radius),
                            !this.data.minEarthDist || e < this.data.minEarthDist
                                ? (this.data.minEarthDist = e)
                                : this.data.lastEarthDist === this.data.minEarthDist &&
                                  e < Math.abs(this.position.clone().sub(this.universe.getBody("moon").position).length()) / 1e3 &&
                                  (this.universe
                                      .getScene()
                                      .addEventLabel("Closest distance to<br>the Earth: " + Math.round(this.data.minEarthDist) + " km<br>Simulation stopped", this.previousRelativePosition.clone(), this.universe.getBody(this.relativeTo)),
                                  this.universe.stop()),
                            (this.data.lastEarthDist = e);
                    else {
                        this.data.hasTLILabel ||
                            0 === this.relativePosition.x ||
                            (this.universe.getScene().addEventLabel("Trans Lunar Injection", this.relativePosition.clone(), this.universe.getBody(this.relativeTo)), (this.data.hasTLILabel = !0)),
                            (e = Math.abs(this.position.clone().sub(this.universe.getBody("moon").position).length()) / 1e3 - this.universe.getBody("moon").radius);
                        var i = 0;
                        this.data.lastMoonDist && (i = ((this.data.lastMoonDist - e) / t) * 1e3),
                            !this.data.minMoonDist || e < this.data.minMoonDist
                                ? (this.data.minMoonDist = e)
                                : this.data.lastMoonDist === this.data.minMoonDist &&
                                  (this.universe.getScene().addEventLabel("Closest distance to<br>the Moon: " + Math.round(this.data.minMoonDist) + " km", this.previousRelativePosition.clone(), this.universe.getBody(this.relativeTo)),
                                  (this.data.isOnReturnTrip = !0)),
                            (this.data.lastMoonDist = e),
                            (this.data.minMoonSpeed = !this.data.minMoonSpeed || this.data.minMoonSpeed > i ? i : this.data.minMoonSpeed),
                            (this.data.minSpeed = !this.data.minSpeed || this.data.minSpeed > this.speed ? this.speed : this.data.minSpeed);
                    }
                },
            });
        e.default = {
            usePhysics: !0,
            name: "Apollo",
            title: "Apollo " + l + " free return trajectory",
            commonBodies: [r.earth, o.moon],
            secondsPerTick: { min: 100, max: 500, initial: 200 },
            calculationsPerTick: 200,
            useBarycenter: !1,
            forcedGuiSettings: { date: u, scale: 1 },
            bodies: { earth: {}, moon: { useCustomComputation: !1, forceMaxPrecision: !0, showSolidOrbit: !0, resetPosAtTick: !0 }, apolloTLI: Object.assign({}, d, c, { title: "Apollo " + l }) },
            help:
                "Paths of Apollo <a href=\"http://en.wikipedia.org/wiki/Free_return_trajectory\" target=\"_blank\">free return trajectories</a> are calculated from data available on Nasa's website. Data for every Moon mission is available, but all don't work perfectly in the simulation. I chose to display Apollo 8, because it was the first mission to get to the moon. The return path doesn't get exactly to Earth's atmosphere, but keep in mind that the simulated trajectory that you see here does not depend solely on Apollo's numbers, but also on the Moon's and the Earth's calculated positions, velocities and masses. Furthermore, I can't pretend that the algorithm I programmed to calculate the forces resulting from gravity is on par with what Nasa scientists can do. Still, the simulation is precise enough to get a very good idea of the shape of the free return trajectory and the genius behind it.",
        };
    },
    "./scenario/scenarios/ArtificialSatellites.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 });
        var n = i("./core/constants.js"),
            r = i("./scenario/scenarios/bodies/earth.js"),
            o = i("./scenario/scenarios/NasaNumbers.js");
        i("./utils/JD.js");
        e.default = {
            name: "Artificial",
            title: "Artificial satellites around the Earth",
            commonBodies: [r.earth],
            bodies: {
                sputnik1: {
                    title: "Sputnik 1",
                    mass: 84,
                    radius: 2,
                    color: "#ffffff",
                    relativeTo: "earth",
                    orbit: { base: { a: (2 * r.earth.radius + 228 + 947) / 2, e: 0.0517, w: 41, M: 0, i: 65.128, o: 0 }, day: { a: 0, e: 0, i: 0, M: (360 / 5770.2) * n.DAY, w: 0.432, o: 0 } },
                },
                mercury6: {
                    title: "Mercury 6",
                    mass: 1224.7,
                    radius: 2,
                    color: "#ffffff",
                    relativeTo: "earth",
                    orbit: { base: { a: (2 * r.earth.radius + 159 + 265) / 2, e: 0.00804, w: 0, M: 0, i: 32.5, o: 0 }, day: { a: 0, e: 0, i: 0, M: (360 / 5310) * n.DAY, w: 0, o: 0 } },
                },
                mercury7: Object.assign({ title: "Mercury 7", mass: 1, radius: 2, color: "#ffffff" }, o.Mercury7.getNumbers()),
                mercury8: Object.assign({ title: "Mercury 8", mass: 1, radius: 2, color: "#ffffff" }, o.Mercury8.getNumbers()),
                hubble: {
                    title: "Hubble ST",
                    mass: 11110,
                    radius: 2,
                    color: "#ffaa00",
                    relativeTo: "earth",
                    orbit: { base: { a: r.earth.radius + 11 + 586.47, e: 0.00172, w: 0, M: 0, i: 28.48, o: 0 }, day: { a: 0, e: 0, i: 0, M: (360 / (96.66 * 60)) * n.DAY, w: 0, o: 0 } },
                },
                gemini6: {
                    title: "Gemini 6A",
                    mass: 1,
                    radius: 2,
                    color: "#00aaff",
                    relativeTo: "earth",
                    orbit: { base: { a: (2 * r.earth.radius + 161 + 259.4) / 2, e: 3e-4, w: 0, M: 0, i: 28.89, o: 0 }, day: { a: 0, e: 0, i: 0, M: (360 / 5433) * n.DAY, w: 0, o: 0 } },
                },
            },
            secondsPerTick: { min: 1, max: 10, initial: 5 },
            help:
                "A selection of artificial satellites orbiting the Earth. They were not launched in the same years, so the epoch is irrelevent in this simulation. The numbers I have for these orbits are incomplete. The shape and inclination of the orbits are correct, but I don't have epoch and orientation information. I included this scenario to show the differences between these satellite's orbits shapes.",
        };
    },
    "./scenario/scenarios/BigJupiter.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 });
        var n = i("./scenario/scenarios/bodies/sun.js"),
            r = i("./scenario/scenarios/bodies/mercury.js"),
            o = i("./scenario/scenarios/bodies/venus.js"),
            a = i("./scenario/scenarios/bodies/earth.js"),
            s = i("./scenario/scenarios/bodies/mars.js"),
            l = i("./scenario/scenarios/bodies/jupiter.js"),
            c = i("./scenario/scenarios/bodies/saturn.js"),
            u = i("./scenario/scenarios/bodies/uranus.js"),
            h = i("./scenario/scenarios/bodies/neptune.js"),
            d = i("./scenario/scenarios/bodies/pluto.js");
        e.default = {
            name: "BigJupiter",
            title: "If Jupiter was 1000X its mass",
            commonBodies: [n.sun, r.mercury, o.venus, a.earth, s.mars, l.jupiter, c.saturn, u.uranus, h.neptune, d.pluto],
            bodies: {
                sun: { forceTrace: !0, traceRelativeTo: "universe" },
                jupiter: { mass: 5.6846e29, forceTrace: !0, traceRelativeTo: "universe" },
                mercury: { forceTrace: !0, traceRelativeTo: "universe" },
                venus: { forceTrace: !0, traceRelativeTo: "universe" },
                earth: { forceTrace: !0, traceRelativeTo: "universe" },
                mars: { forceTrace: !0, traceRelativeTo: "universe" },
                saturn: { forceTrace: !0, traceRelativeTo: "universe" },
                uranus: { forceTrace: !0, traceRelativeTo: "universe" },
                neptune: { forceTrace: !0, traceRelativeTo: "universe" },
                pluto: { forceTrace: !0, traceRelativeTo: "universe" },
            },
            secondsPerTick: { min: 3600, max: 54e3, initial: 18e3 },
            calculaionsPerTick: 100,
            usePhysics: !0,
            useBarycenter: !1,
            defaultGuiSettings: { planetScale: 10 },
            help: "This scenario shows what would happen if, instantaneously at this moment, Jupiter's mass grew 1000 times larger.",
        };
    },
    "./scenario/scenarios/EarthMoon.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 });
        var n = i("./scenario/scenarios/bodies/earth.js"),
            r = i("./scenario/scenarios/bodies/moon.js");
        e.default = { name: "EarthMoon", title: "The Moon and the Earth", commonBodies: [n.earth, r.moon], secondsPerTick: { min: 60, max: 18e3, initial: 3600 }, help: "Only the Earth and its moon.", forcedGuiSettings: { scale: 1 } };
    },
    "./scenario/scenarios/InnerSolarSystem.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 });
        var n = i("./scenario/scenarios/bodies/sun.js"),
            r = i("./scenario/scenarios/bodies/moon.js"),
            o = i("./scenario/scenarios/bodies/mercury.js"),
            a = i("./scenario/scenarios/bodies/venus.js"),
            s = i("./scenario/scenarios/bodies/earth.js"),
            l = i("./scenario/scenarios/bodies/mars.js");
        e.default = {
            name: "InnerSolarSystem",
            title: "Inner Solar System",
            commonBodies: [n.sun, o.mercury, a.venus, s.earth, r.moon, l.mars],
            secondsPerTick: { min: 60, max: 54e3, initial: 3600 },
            defaultGuiSettings: { planetScale: 10 },
            help: "Includes all the planets from Mercury to Mars, plus the Earth's moon.",
        };
    },
    "./scenario/scenarios/JupiterMoon.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 });
        var n = i("./scenario/scenarios/bodies/jupiter.js");
        e.default = {
            name: "JupiterMoon",
            title: "Jupiter and Gallilean satellites",
            help: 'This scenario was included to see if it was possible to simulate <a href="http://en.wikipedia.org/wiki/Orbital_resonance" target="_blank">Laplace resonance</a>.',
            commonBodies: [n.jupiter],
            forcedGuiSettings: { scale: 1 },
            bodies: {
                io: { title: "Io", mass: 8.932e22, radius: 1821.6, color: "#999999", orbit: { base: { a: 421800, e: 0.0041, w: 84.129, M: 342.021, i: 0.036, o: 43.977 }, day: { a: 0, e: 0, i: 0, M: 203.4889583, w: 0, o: 0 } } },
                europa: { title: "Europa", mass: 4.8e22, radius: 1560.8, color: "#999999", orbit: { base: { a: 671100, e: 0.0094, w: 88.97, M: 171.016, i: 0.466, o: 219.106 }, day: { a: 0, e: 0, i: 0, M: 101.3747242, w: 0, o: 0 } } },
                ganymede: {
                    title: "Ganymede",
                    mass: 1.4819e23,
                    radius: 2631.2,
                    color: "#999999",
                    orbit: { base: { a: 1070400, e: 0.0013, w: 192.417, M: 317.54, i: 0.177, o: 63.552 }, day: { a: 0, e: 0, i: 0, M: 50.3176072, w: 0, o: 0 } },
                },
                callisto: {
                    title: "Callisto",
                    mass: 1.0759e23,
                    radius: 2410.3,
                    color: "#999999",
                    orbit: { base: { a: 1882700, e: 0.0074, w: 52.643, M: 181.408, i: 0.192, o: 298.848 }, day: { a: 0, e: 0, i: 0, M: 21.5710728, w: 0, o: 0 } },
                },
            },
            secondsPerTick: { min: 100, max: 3600, initial: 500 },
        };
    },
    "./scenario/scenarios/MoonSOI.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 });
        var n = i("./scenario/scenarios/bodies/earth.js"),
            r = i("./scenario/scenarios/bodies/moon.js");
        e.default = {
            usePhysics: !0,
            name: "MoonSoi",
            title: "SOI of the Moon",
            commonBodies: [r.moon, n.earth],
            secondsPerTick: { min: 3600, max: 54e3, initial: 18e3 },
            calculationsPerTick: 1e3,
            forcedGuiSettings: { scale: 1 },
            help: "This scenario tests the Sphere of inlufence of the Moon's gravitational field over the Earth's. We have bodies orbiting the Moon that are set inside or outside of the Moon's SOI, to observe what happens.",
            bodies: {
                moon: {},
                inside: {
                    mass: 100,
                    title: "Inside SOI",
                    color: "#aaaaff",
                    radius: 3,
                    orbit: { base: { a: 22e3, e: 0, w: 0, M: 0, i: 0, o: 141 }, day: { a: 0, e: 0, i: 0, M: 1, w: 0, o: 0 } },
                    relativeTo: "moon",
                    forceTrace: !0,
                    traceRelativeTo: "earth",
                },
                outside: {
                    mass: 100,
                    title: "Outside SOI",
                    color: "#ffaaaa",
                    radius: 3,
                    orbit: { base: { a: 1e5, e: 0, w: 0, M: 0, i: 0, o: 49 }, day: { a: 0, e: 0, i: 0, M: 1, w: 0, o: 0 } },
                    relativeTo: "moon",
                    forceTrace: !0,
                    traceRelativeTo: "earth",
                },
                limit: {
                    mass: 100,
                    title: "Limit of SOI",
                    color: "#aaaaff",
                    radius: 3,
                    orbit: { base: { a: 4e4, e: 0, w: 0, M: 0, i: 0, o: 319 }, day: { a: 0, e: 0, i: 0, M: 1, w: 0, o: 0 } },
                    relativeTo: "moon",
                    forceTrace: !0,
                    traceRelativeTo: "earth",
                },
            },
        };
    },
    "./scenario/scenarios/NasaNumbers.js": function (t, e, i) {
        "use strict";
        function n(t, e) {
            var i = t.getUTCDate(),
                n = t.getUTCMonth() + 1,
                r = t.getUTCFullYear(),
                o = t.getUTCHours(),
                a = t.getUTCMinutes(),
                s = t.getUTCSeconds();
            n < 3 && ((r -= 1), (n += 12));
            var l = 0;
            r + n / 100 + i / 1e4 >= 1582.1015 && (l = 2 - Math.floor(r / 100) + Math.floor(Math.floor(r / 100) / 4));
            var c = Math.floor(365.25 * r) + Math.floor(30.6001 * (n + 1)) + i + 1720994.5 + l,
                u = (c - 2415020) / 36525,
                h = 6.6460656 + 2400.051 * u + 2581e-8 * u * u,
                d = 24 * (h / 24 - Math.floor(h / 24)),
                p = (o + a / 60 + s / 3600) / 24,
                f = d + 24 * p * 1.002737908;
            (f += e / 15), (f = (f + 24) % 24);
            var m = Math.floor(f),
                v = Math.floor(60 * (f - Math.floor(f)));
            return 360 * (m / 24 + v / 1440 + (60 * (60 * (f - Math.floor(f)) - v)) / 86400);
        }
        function r() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "earth",
                e = this.orbits[t];
            if (!e) return null;
            var i = e.spaceVel * a.FT_TO_M,
                r = e.altitude * a.FT_TO_M + s.earth.radius * a.KM,
                o = (2 * c) / (r * Math.pow(i, 2)),
                u = a.DEG_TO_RAD * e.pathAngle,
                h = Math.pow(Math.cos(u), 2),
                d = Math.pow(Math.sin(u), 2),
                p = Math.pow(o, 2),
                f = Math.sqrt(p - 4 * (1 - o) * -h),
                m = 2 * (1 - o),
                v = ((-o - f) / m) * r,
                g = Math.sqrt(Math.pow((r * Math.pow(i, 2)) / c - 1, 2) * h + d),
                y = (r + v) / 2,
                _ = (r * Math.pow(i, 2)) / c,
                b = Math.atan((_ * Math.cos(u) * Math.sin(u)) / (_ * h - 1)),
                x = Math.asin(Math.sin(a.DEG_TO_RAD * e.geoLat) / Math.sin(a.DEG_TO_RAD * e.incl)),
                w = Math.atan(Math.tan(x) * Math.cos(a.DEG_TO_RAD * e.incl)),
                T = x - b,
                E = a.DEG_TO_RAD * e.long - w + a.CIRCLE,
                M = void 0;
            M = e.gmt ? new Date(e.gmt) : new Date(new Date(this.launchTime).getTime() + 1e3 * e.time);
            var S = n(M, E * a.RAD_TO_DEG),
                A = Math.acos((g + Math.cos(b)) / (1 + g * Math.cos(b))),
                R = A - g * Math.sin(A),
                C = Math.sqrt(c / Math.pow(y, 3));
            return { relativeTo: "earth", orbit: { epoch: (0, l.getJD)(M), base: { a: y / a.KM, e: g, w: T * a.RAD_TO_DEG, M: R * a.RAD_TO_DEG, i: e.incl, o: S }, day: { a: 0, e: 0, i: 0, M: C * a.RAD_TO_DEG * a.DAY, w: 0, o: 0 } } };
        }
        function o(t) {
            return u.find(function (e) {
                return e.name === t;
            });
        }
        Object.defineProperty(e, "__esModule", { value: !0 }),
            (e.Mercury8 = e.Mercury7 = e.Mercury6 = e.Apollo17 = e.Apollo16 = e.Apollo15 = e.Apollo14 = e.Apollo13 = e.Apollo12 = e.Apollo11 = e.Apollo10 = e.Apollo9 = e.Apollo8 = e.Apollo7 = void 0),
            (e.getMissionFromName = o);
        var a = i("./core/constants.js"),
            s = i("./scenario/scenarios/bodies/earth.js"),
            l = i("./utils/JD.js"),
            c = 3986005e8,
            u = [],
            h = (e.Apollo7 = {
                name: "Apollo7",
                launchTime: "1968-10-11:15:02:45.000Z",
                orbits: {
                    earth: {
                        time: 626.76,
                        altitude: 748439,
                        surfRange: 1121.743,
                        earthVel: 24208.5,
                        spaceVel: 25553.2,
                        geoLat: 31.4091,
                        geodLat: 31.58,
                        long: -61.2293,
                        pathAngle: 0.005,
                        headingAngle: 86.32,
                        apo: 152.34,
                        peri: 123.03,
                        period: 89.55,
                        incl: 31.608,
                        descNode: 42.415,
                        ecc: 0.0045,
                    },
                },
            });
        u.push(h);
        var d = (e.Apollo8 = {
            name: "Apollo8",
            launchTime: "1968-12-21T12:51:00.000Z",
            orbits: {
                earth: {
                    time: 694.98,
                    altitude: 627819,
                    surfRange: 1430.363,
                    earthVel: 24242.9,
                    spaceVel: 25567.06,
                    geoLat: 32.4741,
                    geodLat: 32.6487,
                    long: -53.2923,
                    pathAngle: 6e-4,
                    headingAngle: 88.532,
                    apo: 99.99,
                    peri: 99.57,
                    period: 88.19,
                    incl: 32.509,
                    descNode: 45.538,
                    ecc: 6e-5,
                },
                TLI: {
                    time: "002:56:05.51",
                    gmt: "1968-12-21T15:47:05.000Z",
                    altitude: 1137577,
                    earthVel: 34140.1,
                    spaceVel: 35505.41,
                    geoLat: 21.346,
                    geodLat: 21.477,
                    long: -143.9242,
                    pathAngle: 7.897,
                    headingAngle: 67.494,
                    incl: 30.636,
                    descNode: 38.983,
                    ecc: 0.97553,
                    c3: -15918930,
                },
            },
        });
        u.push(d);
        var p = (e.Apollo9 = {
            name: "Apollo9",
            launchTime: "1969-03-03:16:00:00.000Z",
            orbits: {
                earth: {
                    time: 674.66,
                    altitude: 626777,
                    surfRange: 1335.515,
                    earthVel: 24246.39,
                    spaceVel: 25569.78,
                    geoLat: 32.4599,
                    geodLat: 32.629,
                    long: -55.1658,
                    pathAngle: -0.0058,
                    headingAngle: 87.412,
                    apo: 100.74,
                    peri: 99.68,
                    period: 88.2,
                    incl: 32.552,
                    descNode: 123.132,
                    ecc: 149e-6,
                },
            },
        });
        u.push(p);
        var f = (e.Apollo10 = {
            name: "Apollo10",
            launchTime: "1969-05-18T16:49:00.000Z",
            orbits: {
                earth: {
                    time: 713.76,
                    altitude: 627869,
                    surfRange: 1469.79,
                    earthVel: 24244.3,
                    spaceVel: 25567.88,
                    geoLat: 32.5303,
                    geodLat: 32.7,
                    long: -52.526,
                    pathAngle: -0.0049,
                    headingAngle: 89.933,
                    apo: 100.32,
                    peri: 99.71,
                    period: 88.2,
                    incl: 32.546,
                    descNode: 123.088,
                    ecc: 86e-6,
                },
                TLI: {
                    time: "002:39:20.58",
                    gmt: "1969-05-18T19:28:20.000Z",
                    altitude: 1093217,
                    earthVel: 34217.2,
                    spaceVel: 35562.96,
                    geoLat: -13.5435,
                    geodLat: -13.627,
                    long: 159.9201,
                    pathAngle: 7.379,
                    headingAngle: 61.065,
                    incl: 31.698,
                    descNode: 123.515,
                    ecc: 0.97834,
                    c3: -14084265,
                },
            },
        });
        u.push(f);
        var m = (e.Apollo11 = {
            name: "Apollo11",
            launchTime: "1969-07-16T13:32:00.000Z",
            orbits: {
                earth: {
                    time: 709.33,
                    altitude: 626909,
                    surfRange: 1460.697,
                    earthVel: 24243.9,
                    spaceVel: 25567.9,
                    geoLat: 32.5027,
                    geodLat: 32.672,
                    long: -52.6941,
                    pathAngle: 0.012,
                    headingAngle: 88.848,
                    apo: 100.4,
                    peri: 98.9,
                    period: 88.18,
                    incl: 32.521,
                    descNode: 123.126,
                    ecc: 21e-5,
                },
                TLI: {
                    time: "002:50:13.03",
                    gmt: "1969-07-16T16:22:13.000Z",
                    altitude: 1097229,
                    earthVel: 34195.6,
                    spaceVel: 35545.6,
                    geoLat: 9.9204,
                    geodLat: 9.983,
                    long: -164.8373,
                    pathAngle: 7.367,
                    headingAngle: 60.073,
                    incl: 31.383,
                    descNode: 121.847,
                    ecc: 0.97696,
                    c3: -14979133,
                },
            },
        });
        u.push(m);
        var v = (e.Apollo12 = {
            name: "Apollo12",
            launchTime: "1969-11-14T16:22:00.000Z",
            orbits: {
                earth: {
                    time: 703.91,
                    altitude: 626360,
                    surfRange: 1438.608,
                    earthVel: 24242.3,
                    spaceVel: 25565.9,
                    geoLat: 31.5128,
                    geodLat: 32.6823,
                    long: -53.1311,
                    pathAngle: -0.014,
                    headingAngle: 88.58,
                    apo: 100.1,
                    peri: 97.8,
                    period: 88.16,
                    incl: 32.54,
                    descNode: 123.084,
                    ecc: 32e-5,
                },
                TLI: {
                    time: "002:53:13.94",
                    gmt: "1969-11-14T19:15:13.000Z",
                    altitude: 1209284,
                    earthVel: 34020.5,
                    spaceVel: 35389.8,
                    geoLat: 16.0791,
                    geodLat: 16.176,
                    long: -154.2798,
                    pathAngle: 8.584,
                    headingAngle: 63.902,
                    incl: 30.555,
                    descNode: 120.388,
                    ecc: 0.96966,
                    c3: -19745586,
                },
            },
        });
        u.push(v);
        var g = (e.Apollo13 = {
            name: "Apollo13",
            launchTime: "1970-04-11T19:13:00.000Z",
            orbits: {
                earth: {
                    time: 759.83,
                    altitude: 628710,
                    surfRange: 1572.3,
                    earthVel: 24242.1,
                    spaceVel: 25566.1,
                    geoLat: 32.5249,
                    geodLat: 32.6945,
                    long: -50.4902,
                    pathAngle: 0.005,
                    headingAngle: 90.148,
                    apo: 100.3,
                    peri: 99.3,
                    period: 88.19,
                    incl: 32.547,
                    descNode: 117.455,
                    ecc: 1e-4,
                },
                TLI: {
                    time: "002:41:47.15",
                    gmt: "1970-04-11T21:54:47.000Z",
                    altitude: 1108555,
                    earthVel: 34195.3,
                    spaceVel: 35538.4,
                    geoLat: -3.8635,
                    geodLat: -3.8602,
                    long: 167.2074,
                    pathAngle: 7.635,
                    headingAngle: 59.318,
                    incl: 31.817,
                    descNode: 122.997,
                    ecc: 0.9772,
                    c3: -14814090,
                },
            },
        });
        u.push(g);
        var y = (e.Apollo14 = {
            name: "Apollo14",
            launchTime: "1971-01-31T21:03:02.000Z",
            orbits: {
                earth: {
                    time: 710.56,
                    altitude: 626364,
                    surfRange: 1444.989,
                    earthVel: 24221.6,
                    spaceVel: 25565.8,
                    geoLat: 31.0806,
                    geodLat: 31.246,
                    long: -52.9826,
                    pathAngle: -0.003,
                    headingAngle: 91.656,
                    apo: 100.1,
                    peri: 98.9,
                    period: 88.18,
                    incl: 31.12,
                    descNode: 109.314,
                    ecc: 2e-4,
                },
                TLI: {
                    time: "002:34:33.24",
                    gmt: "1971-01-31T23:37:35.000Z",
                    altitude: 1090930,
                    earthVel: 34151.5,
                    spaceVel: 35511.6,
                    geoLat: -19.4388,
                    geodLat: -19.554,
                    long: 141.7312,
                    pathAngle: 7.48,
                    headingAngle: 65.583,
                    incl: 30.834,
                    descNode: 117.394,
                    ecc: 0.9722,
                    c3: -18096135,
                },
            },
        });
        u.push(y);
        var _ = (e.Apollo15 = {
            name: "Apollo15",
            launchTime: "1971-07-26T13:34:00.000Z",
            orbits: {
                earth: {
                    time: 704.67,
                    altitude: 566387,
                    surfRange: 1445.652,
                    earthVel: 24242.4,
                    spaceVel: 25602.6,
                    geoLat: 29.2052,
                    geodLat: 29.365,
                    long: -53.0807,
                    pathAngle: 0.015,
                    headingAngle: 95.531,
                    apo: 91.5,
                    peri: 89.6,
                    period: 87.84,
                    incl: 29.679,
                    descNode: 123.123,
                    ecc: 3e-4,
                },
                TLI: {
                    time: "002:56:03.61",
                    gmt: "1971-07-26T16:30:03.000Z",
                    altitude: 1055296,
                    earthVel: 34202.2,
                    spaceVel: 35579.1,
                    geoLat: 24.8341,
                    geodLat: 24.97,
                    long: -142.1295,
                    pathAngle: 7.43,
                    headingAngle: 73.173,
                    incl: 29.696,
                    descNode: 108.439,
                    ecc: 0.976,
                    c3: -15643934,
                },
            },
        });
        u.push(_);
        var b = (e.Apollo16 = {
            name: "Apollo16",
            launchTime: "1972-04-16T17:54:00.000Z",
            orbits: {
                earth: {
                    time: 716.21,
                    altitude: 567371,
                    surfRange: 1469.052,
                    earthVel: 24286.1,
                    spaceVel: 25605,
                    geoLat: 32.5262,
                    geodLat: 32.6963,
                    long: -52.53,
                    pathAngle: 0.001,
                    headingAngle: 88.932,
                    apo: 91.3,
                    peri: 90,
                    period: 87.85,
                    incl: 32.542,
                    descNode: 86.978,
                    ecc: 2e-4,
                },
                TLI: {
                    time: "002:39:28.42",
                    gmt: "1972-04-16T20:33:28.000Z",
                    altitude: 1040493,
                    earthVel: 34236.6,
                    spaceVel: 35566.1,
                    geoLat: -11.9117,
                    geodLat: -11.9881,
                    long: 162.482,
                    pathAngle: 7.461,
                    headingAngle: 59.524,
                    incl: 32.511,
                    descNode: 122.463,
                    ecc: 0.9741,
                    c3: -16881439,
                },
            },
        });
        u.push(b);
        var x = (e.Apollo17 = {
            name: "Apollo17",
            launchTime: "1972-12-07T05:33:00.000Z",
            orbits: {
                earth: {
                    time: 712.65,
                    altitude: 559348,
                    surfRange: 1456.314,
                    earthVel: 24230.9,
                    spaceVel: 25603.9,
                    geoLat: 24.5384,
                    geodLat: 24.6805,
                    long: -53.8107,
                    pathAngle: 0.003,
                    headingAngle: 105.021,
                    apo: 90.3,
                    peri: 90,
                    period: 87.83,
                    incl: 28.526,
                    ecc: 0,
                },
                TLI: {
                    time: "003:18:37.64",
                    gmt: "1972-12-07T08:51:37.000Z",
                    altitude: 1029299,
                    earthVel: 34168.3,
                    spaceVel: 35555.3,
                    geoLat: 4.6824,
                    geodLat: 4.71,
                    long: -53.119,
                    pathAngle: 7.379,
                    headingAngle: 118.11,
                    incl: 28.466,
                    descNode: 86.042,
                    ecc: 0.9722,
                    c3: -18152226,
                },
            },
        });
        u.push(x);
        var w = (e.Mercury6 = {
            name: "Mercury6",
            launchTime: "",
            orbits: { earth: { time: 0, altitude: 528381, spaceVel: 25730, geoLat: 0, geodLat: 0, long: 0, pathAngle: -0.0468, headingAngle: 0, apo: 140.92, peri: 86.92, period: 88.48, incl: 32.54 } },
        });
        u.push(w);
        var T = (e.Mercury7 = {
            name: "Mercury7",
            launchTime: "1962-05-25T12:45:00.000Z",
            orbits: { earth: { time: 312.2, altitude: 527894, spaceVel: 25738, geoLat: 30.37, geodLat: 30.5374, long: -72.2416, pathAngle: -0.0031, headingAngle: 77.6915, apo: 144.96, peri: 86.87, period: 88.53, incl: 32.55 } },
        });
        u.push(T);
        var E = (e.Mercury8 = {
            name: "Mercury8",
            launchTime: "1962-10-03T12:15:11.000Z",
            orbits: { earth: { time: 319, altitude: 528510, spaceVel: 25751, geoLat: 30.42, geodLat: 30.5885, long: -71.9946, pathAngle: -0.0085, headingAngle: 77.8228, apo: 152.8, peri: 86.94, period: 88.91, incl: 32.55 } },
        });
        u.push(E),
            u.forEach(function (t) {
                t.getNumbers = r;
            });
    },
    "./scenario/scenarios/NearEarthObject.js": function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : { default: t };
        }
        function r(t, e, i) {
            alert("Error loading NEO definitions. See console."), console.log(e, i), console.log(t);
        }
        function o(t) {
            if (t.near_earth_objects) {
                var e = Object.keys(t.near_earth_objects).reduce(function (e, i) {
                    var n = t.near_earth_objects[i];
                    return e.concat(
                        n
                            .map(function (t) {
                                var e = t.close_approach_data,
                                    i = e && e[0],
                                    n = i && Number(i.miss_distance.astronomical);
                                return n && n < x ? { dist: n, url: t.links && t.links.self } : null;
                            })
                            .filter(function (t) {
                                return t;
                            })
                            .sort(function (t, e) {
                                return t.dist - e.dist;
                            })
                    );
                }, []);
                e.length = e.length > b ? b : e.length;
                var i = e.map(a);
                return c.default.all(i).then(function (t) {
                    return t.reduce(function (t, e) {
                        return (t[e.name] = e), t;
                    }, {});
                });
            }
            return c.default.reject();
        }
        function a(t) {
            return h.default.ajax({ url: t.url, dataType: "json", crossDomain: !0 }).then(s, r);
        }
        function s(t) {
            var e = t.name,
                i = t.orbital_data;
            return Object.assign(
                {
                    name: e,
                    title: e,
                    orbit: {
                        epoch: Number(i.epoch_osculation),
                        base: { a: Number(i.semi_major_axis) * d.AU, e: Number(i.eccentricity), w: Number(i.perihelion_argument), M: Number(i.mean_anomaly), i: Number(i.inclination), o: Number(i.ascending_node_longitude) },
                        day: { M: 360 / Number(i.orbital_period) },
                    },
                },
                _
            );
        }
        Object.defineProperty(e, "__esModule", { value: !0 });
        var l = i("../node_modules/bluebird/js/browser/bluebird.js"),
            c = n(l),
            u = i("../node_modules/jquery/dist/jquery.js"),
            h = n(u),
            d = i("./core/constants.js"),
            p = i("./scenario/scenarios/bodies/moon.js"),
            f = i("./scenario/scenarios/bodies/sun.js"),
            m = i("./scenario/scenarios/bodies/mercury.js"),
            v = i("./scenario/scenarios/bodies/venus.js"),
            g = i("./scenario/scenarios/bodies/earth.js"),
            y = i("./scenario/scenarios/bodies/mars.js"),
            _ = { mass: 1, radius: 2e3, color: "#ffffff" },
            b = 10,
            x = 0.1,
            w = void 0,
            T = {
                name: "NEO",
                title: "Near Earth Objects",
                load: function () {
                    return w
                        ? w.promise()
                        : (w = h.default
                              .ajax({ url: "https://mvezina.com/jsorrery/feed-" + new Date(new Date().getTime() + 864e5).toISOString().substring(0, 10), dataType: "json", crossDomain: !0 })
                              .then(o, r)
                              .then(function (t) {
                                  T.bodies = Object.assign(T.bodies, t);
                              }));
                },
                commonBodies: [f.sun, m.mercury, v.venus, g.earth, p.moon, y.mars],
                secondsPerTick: { min: 60, max: 18e3, initial: 3600 },
                defaultGuiSettings: { planetScale: 1 },
                help: "This scenario shows the next " + b + " passages closer than " + x + ' AU of near Earth objects from Nasa\'s Near Earth Object Project (<a href="http://neo.jpl.nasa.gov/" target="_blank">http://neo.jpl.nasa.gov/</a>.',
            };
        e.default = T;
    },
    "./scenario/scenarios/SolarSystem.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 });
        var n = i("./scenario/scenarios/bodies/sun.js"),
            r = i("./scenario/scenarios/bodies/mercury.js"),
            o = i("./scenario/scenarios/bodies/venus.js"),
            a = i("./scenario/scenarios/bodies/earth.js"),
            s = i("./scenario/scenarios/bodies/mars.js"),
            l = i("./scenario/scenarios/bodies/jupiter.js"),
            c = i("./scenario/scenarios/bodies/saturn.js"),
            u = i("./scenario/scenarios/bodies/uranus.js"),
            h = i("./scenario/scenarios/bodies/neptune.js"),
            d = i("./scenario/scenarios/bodies/pluto.js");
        e.default = {
            name: "SolarSystem",
            title: "Solar System",
            commonBodies: [n.sun, r.mercury, o.venus, a.earth, s.mars, l.jupiter, c.saturn, u.uranus, h.neptune, d.pluto],
            secondsPerTick: { min: 18e3, max: 9e4, initial: 36e3 },
            defaultGuiSettings: { planetScale: 10 },
            help: "This scenario shows all the planets of the Solar System. This includes Pluto, because Pluto will always be a planet in my heart.",
        };
    },
    "./scenario/scenarios/SolarSystemDwarves.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 });
        var n = i("./scenario/scenarios/bodies/sun.js"),
            r = i("./scenario/scenarios/bodies/mercury.js"),
            o = i("./scenario/scenarios/bodies/venus.js"),
            a = i("./scenario/scenarios/bodies/earth.js"),
            s = i("./scenario/scenarios/bodies/mars.js"),
            l = i("./scenario/scenarios/bodies/jupiter.js"),
            c = i("./scenario/scenarios/bodies/saturn.js"),
            u = i("./scenario/scenarios/bodies/uranus.js"),
            h = i("./scenario/scenarios/bodies/neptune.js"),
            d = i("./scenario/scenarios/bodies/pluto.js"),
            p = i("./scenario/scenarios/bodies/halley.js"),
            f = i("./scenario/scenarios/bodies/ceres.js"),
            m = i("./scenario/scenarios/bodies/eris.js"),
            v = i("./scenario/scenarios/bodies/makemake.js"),
            g = i("./scenario/scenarios/bodies/haumea.js");
        e.default = {
            name: "SolarSystemDwarves",
            title: "Solar System with dwarf planets",
            commonBodies: [n.sun, r.mercury, o.venus, a.earth, s.mars, l.jupiter, c.saturn, u.uranus, h.neptune, d.pluto, p.halley, m.eris, f.ceres, v.makemake, g.haumea],
            secondsPerTick: { min: 18e3, max: 9e4, initial: 36e3 },
            defaultGuiSettings: { planetScale: 10 },
            help: "This scenario shows all the planets of the Solar System plus dwarf planets. Also included is Halley's comet, but its orbit is an approximation, as I was not able to find its accurate orbital elements.",
        };
    },
    "./scenario/scenarios/bodies/ceres.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 }), (e.ceres = void 0);
        var n = i("./core/constants.js");
        i("./utils/JD.js"),
            (e.ceres = {
                title: "Ceres",
                name: "ceres",
                mass: 8.932e22,
                radius: 1821.6,
                color: "#999999",
                orbit: {
                    epoch: 2449731.5,
                    base: { a: 2.767218108003098 * n.AU, e: 0.07610292126891821, w: 71.4492152612411, M: 340.389084821267, i: 10.60069567603618, o: 80.65851514365535 },
                    day: { a: 0, e: 0, i: 0, M: 0.214110998, w: 0, o: 0 },
                },
            });
    },
    "./scenario/scenarios/bodies/earth.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 }), (e.earth = void 0);
        var n = i("../node_modules/three/build/three.js"),
            r = i("./core/constants.js"),
            o = i("./utils/JD.js"),
            a = i("./scenario/scenarios/bodies/earth/VSOP-earth.js"),
            s = new Date("1999-12-22T07:44:30.000Z"),
            l = (o.J2000Date - s) / 1e3 / (r.YEAR * r.SIDEREAL_DAY);
        e.earth = {
            title: "The Earth",
            name: "earth",
            mass: 5.9736e24,
            radius: 3443.9307 * r.NM_TO_KM,
            color: "#1F7CDA",
            map: "./assets/img/earthmap1k_clouds.jpg",
            material: { specular: new n.Color("grey") },
            siderealDay: r.SIDEREAL_DAY,
            getRotationCorrection: function () {
                var t = (0, o.getDeltaT)(this.universe.getCurrentDate());
                return l - t / r.DAY;
            },
            baseMapRotation: (3 * r.CIRCLE) / 4,
            tilt: 23 + 26 / 60 + 21 / 3600,
            positionCalculator: a.VSOP,
            hasGeoposCam: !0,
            getTilt: function () {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                    e = ((this.currentJD || 0) - r.J2000) / r.YEAR,
                    i = (e / 25800) * r.CIRCLE;
                return new n.Euler(t - this.tilt * r.DEG_TO_RAD, 0, -i, "ZYX");
            },
            orbit: { base: { a: 1.00000261 * r.AU, e: 0.01671123, i: -1531e-8, l: 100.46457166, lp: 102.93768193, o: 0 }, cy: { a: 562e-8 * r.AU, e: -4392e-8, i: -0.01294668, l: 35999.37244981, lp: 0.32327364, o: 0 } },
        };
    },
    "./scenario/scenarios/bodies/earth/VSOP-earth.js": function (t, e, i) {
        "use strict";
        function n(t) {
            var e = [0, 0, 0, 0, 0, 0],
                i = [1];
            i[1] = (t - o.J2000) / l;
            for (var n = 2; n <= 5; n++) i[n] = i[1] * i[n - 1];
            var u = Math.max(3, -Math.log10(a + 1e-50));
            window.vsop.earth.forEach(function (t) {
                for (var n = t.it, r = t.ic, o = t.series, s = i[n] || 0, l = i[n - 1] || 0, c = a / 10 / (u - 2) / (Math.abs(s) + n * Math.abs(l) * 1e-4 + 1e-50), h = o.length, d = 0; d < h; d++) {
                    var p = o[d][0],
                        f = o[d][1],
                        m = o[d][2];
                    if (Math.abs(p) < c) break;
                    var v = f + m * i[1],
                        g = Math.cos(v);
                    e[r] += p * g * i[n];
                    var y = Math.sin(v);
                    e[r + 3] = e[r + 3] + i[n - 1] * n * p * g - i[n] * p * m * y;
                }
            });
            for (var h = 4; h <= 6; h++) e[h] /= l;
            return (e[c] %= s), e[c] < 0 && (e[c] += s), new r.Vector3(e[1] * o.AU * o.KM, e[2] * o.AU * o.KM, e[3] * o.AU * o.KM);
        }
        Object.defineProperty(e, "__esModule", { value: !0 }), (e.VSOP = n);
        var r = i("../node_modules/three/build/three.js"),
            o = i("./core/constants.js"),
            a = (i("./utils/JD.js"), 0),
            s = 6.283185307179586,
            l = 365250,
            c = 0;
    },
    "./scenario/scenarios/bodies/eris.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 }), (e.eris = void 0);
        var n = i("./core/constants.js"),
            r = i("./utils/JD.js");
        e.eris = {
            title: "Eris",
            name: "eris",
            mass: 8.932e22,
            radius: 1821.6,
            color: "#999999",
            orbit: {
                epoch: (0, r.getJD)(new Date("2007-02-07T00:00:00.000Z")),
                base: { a: 67.72049983633802 * n.AU, e: 0.4402757254627496, w: 151.5325796513168, M: 197.9288256170611, i: 44.16476529362038, o: 35.88169902286788 },
                day: { a: 0, e: 0, i: 0, M: 0.001768576, w: 0, o: 0 },
            },
        };
    },
    "./scenario/scenarios/bodies/halley.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 }), (e.halley = void 0);
        var n = i("./core/constants.js"),
            r = i("./utils/JD.js");
        e.halley = {
            title: "Halley's Comet",
            name: "halley",
            mass: 22e13,
            radius: 50,
            color: "#999999",
            orbit: {
                epoch: (0, r.getJD)(new Date("1994-02-17T00:00:00.000Z")),
                base: { a: 17.8341442925537 * n.AU, e: 0.967142908462304, i: 162.262690579161, M: 38.3842644764388, w: 111.3324851045177, o: 58.42008097656843 },
                day: { a: 0, e: 0, i: 0, M: 0.01308656479244564, w: 0, o: 0 },
            },
        };
    },
    "./scenario/scenarios/bodies/haumea.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 }), (e.haumea = void 0);
        var n = i("./core/constants.js"),
            r = i("./utils/JD.js");
        e.haumea = {
            title: "Haumea",
            name: "haumea",
            mass: 8.932e22,
            radius: 1821.6,
            color: "#999999",
            orbit: {
                epoch: (0, r.getJD)(new Date("2009-01-29T00:00:00.000Z")),
                base: { a: 43.11668586903614 * n.AU, e: 0.1953963724610412, w: 239.2416693131013, M: 202.8195761971326, i: 28.2241529659211, o: 122.1018599614831 },
                day: { a: 0, e: 0, i: 0, M: 0.003481256, w: 0, o: 0 },
            },
        };
    },
    "./scenario/scenarios/bodies/jupiter.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 }), (e.jupiter = void 0);
        var n = i("./core/constants.js");
        e.jupiter = {
            title: "Jupiter",
            name: "jupiter",
            mass: 1.8986e27,
            radius: 71492,
            color: "#ff9932",
            map: "./assets/img/jupitermap.jpg",
            orbit: { base: { a: 5.202887 * n.AU, e: 0.04838624, i: 1.30439695, l: 34.39644051, lp: 14.72847983, o: 100.47390909 }, cy: { a: -11607e-8 * n.AU, e: -13253e-8, i: -0.00183714, l: 3034.74612775, lp: 0.21252668, o: 0.20469106 } },
        };
    },
    "./scenario/scenarios/bodies/makemake.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 }), (e.makemake = void 0);
        var n = i("./core/constants.js"),
            r = i("./utils/JD.js");
        e.makemake = {
            title: "Makemake",
            name: "makemake",
            mass: 8.932e22,
            radius: 1821.6,
            color: "#999999",
            orbit: {
                epoch: (0, r.getJD)(new Date("2009-08-01T00:00:00.000Z")),
                base: { a: 45.37454855956828 * n.AU, e: 0.1626228804111456, w: 295.1879304740464, M: 152.3170330164037, i: 29.00057606872671, o: 79.52652691394422 },
                day: { a: 0, e: 0, i: 0, M: 0.003224672, w: 0, o: 0 },
            },
        };
    },
    "./scenario/scenarios/bodies/mars.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 }), (e.mars = void 0);
        var n = i("./core/constants.js");
        e.mars = {
            title: "Mars",
            name: "mars",
            mass: 6.4185e23,
            radius: 3376,
            color: "#ff3300",
            map: "./assets/img/mars_1k_color.jpg",
            siderealDay: 1.025957 * n.DAY,
            orbit: { base: { a: 1.52371034 * n.AU, e: 0.0933941, i: 1.84969142, l: -4.55343205, lp: -23.94362959, o: 49.55953891 }, cy: { a: 1847e-8 * n.AU, e: 7882e-8, i: -0.00813131, l: 19140.30268499, lp: 0.44441088, o: -0.29257343 } },
        };
    },
    "./scenario/scenarios/bodies/mercury.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 }), (e.mercury = void 0);
        var n = i("./core/constants.js");
        e.mercury = {
            title: "Mercury",
            name: "mercury",
            mass: 3.3022e23,
            radius: 2439,
            color: "#588a7b",
            map: "./assets/img/mercurymap.jpg",
            orbit: { base: { a: 0.38709927 * n.AU, e: 0.20563593, i: 7.00497902, l: 252.2503235, lp: 77.45779628, o: 48.33076593 }, cy: { a: 3.7e-7 * n.AU, e: 1906e-8, i: -0.00594749, l: 149472.67411175, lp: 0.16047689, o: -0.12534081 } },
        };
    },
    "./scenario/scenarios/bodies/moon.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 }), (e.moon = void 0);
        var n = i("../node_modules/gsap/TweenMax.js"),
            r = i("./core/constants.js"),
            o = i("./scenario/scenarios/bodies/moon/OsculatingOrbit.js"),
            a = (function (t) {
                return t && t.__esModule ? t : { default: t };
            })(o),
            s = i("./scenario/scenarios/bodies/moon/elp.js");
        e.moon = {
            title: "The Moon",
            name: "moon",
            mass: 7.3477e22,
            radius: 1738.1,
            color: "#aaaaaa",
            map: "./assets/img/moonmap4k_levels.jpg",
            siderealDay: 27.3215782 * r.DAY,
            tilt: 1.5424,
            fov: 1,
            relativeTo: "earth",
            osculatingElementsCalculator: a.default,
            positionCalculator: s.ELP82B,
            useCustomComputation: !0,
            orbit: { tilt: !1, base: { a: 384400, e: 0.0554, w: 318.15, M: 135.27, i: 5.16, o: 125.08 }, day: { a: 0, e: 0, i: 0, M: 13.176358, w: 360 / 5.997 / 365.25, o: 360 / 18.6 / 365.25 } },
            getMapRotation: function (t) {
                var e = t % Math.PI;
                return e > 0 ? e : Math.PI + e;
            },
            customInitialize: function () {
                "earth" === this.relativeTo && ((this.baseMapRotation = this.getMapRotation(this.getAngleTo("earth") - this.getCurrentRotation())), (this.nextCheck = this.siderealDay));
            },
            customAfterTick: function () {
                if ("earth" === this.relativeTo) {
                    var t = this.universe.getCurrentJ2000Time();
                    if (this.resetPosAtTick) {
                        var e = this.universe.getCurrentJD(),
                            i = this.orbitalElements.calculatePosition(e, !0),
                            r = this.orbitalElements.calculateVelocity(e);
                        this.setVelocity(r), (this.position = i);
                    }
                    if (t >= this.nextCheck) {
                        this.nextCheck += this.siderealDay;
                        var o = this.getMapRotation(this.getAngleTo("earth") - this.getCurrentRotation());
                        n.TweenMax.to(this, 2, { baseMapRotation: o, ease: n.Sine.easeInOut });
                    }
                }
            },
        };
    },
    "./scenario/scenarios/bodies/moon/OsculatingOrbit.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 }),
            (e.default = function (t) {
                var e = t * t,
                    i = t * e,
                    r = t * i,
                    o = 1e-4 * e,
                    a = 1e-6 * i,
                    s = 1e-8 * r,
                    l =
                        3400.4 * Math.cos(n.DEG_TO_RAD * (235.7004 + 890534.223 * t - 32.601 * o + 3.664 * a - 1.769 * s)) -
                        635.6 * Math.cos(n.DEG_TO_RAD * (100.737 + 413335.3554 * t - 122.571 * o - 10.684 * a + 5.028 * s)) -
                        235.6 * Math.cos(n.DEG_TO_RAD * (134.9634 + 477198.8676 * t + 89.97 * o + 14.348 * a - 6.797 * s)) +
                        218.1 * Math.cos(n.DEG_TO_RAD * (238.1713 + 854535.1727 * t - 31.065 * o + 3.623 * a - 1.769 * s)) +
                        181 * Math.cos(n.DEG_TO_RAD * (10.6638 + 1367733.0907 * t + 57.37 * o + 18.011 * a - 8.566 * s)) -
                        39.9 * Math.cos(n.DEG_TO_RAD * (103.2079 + 377336.3051 * t - 121.035 * o - 10.724 * a + 5.028 * s)) -
                        38.4 * Math.cos(n.DEG_TO_RAD * (233.2295 + 926533.2733 * t - 34.136 * o + 3.705 * a - 1.769 * s)) +
                        33.8 * Math.cos(n.DEG_TO_RAD * (336.4374 + 1303869.5784 * t - 155.171 * o - 7.02 * a + 3.259 * s)) +
                        28.8 * Math.cos(n.DEG_TO_RAD * (111.4008 + 1781068.4461 * t - 65.201 * o + 7.328 * a - 3.538 * s)) +
                        12.6 * Math.cos(n.DEG_TO_RAD * (13.1347 + 1331734.0404 * t + 58.906 * o + 17.971 * a - 8.566 * s)) +
                        11.4 * Math.cos(n.DEG_TO_RAD * (186.5442 + 966404.0351 * t - 68.058 * o - 0.567 * a + 0.232 * s)) -
                        11.1 * Math.cos(n.DEG_TO_RAD * (222.5657 - 441199.8173 * t - 91.506 * o - 14.307 * a + 6.797 * s)) -
                        10.2 * Math.cos(n.DEG_TO_RAD * (269.9268 + 954397.7353 * t + 179.941 * o + 28.695 * a - 13.594 * s)) +
                        9.7 * Math.cos(n.DEG_TO_RAD * (145.6272 + 1844931.9583 * t + 147.34 * o + 32.359 * a - 15.363 * s)) +
                        9.6 * Math.cos(n.DEG_TO_RAD * (240.6422 + 818536.1225 * t - 29.529 * o + 3.582 * a - 1.769 * s)) +
                        8 * Math.cos(n.DEG_TO_RAD * (297.8502 + 445267.1115 * t - 16.3 * o + 1.832 * a - 0.884 * s)) -
                        6.2 * Math.cos(n.DEG_TO_RAD * (132.4925 + 513197.9179 * t + 88.434 * o + 14.388 * a - 6.797 * s)) +
                        6 * Math.cos(n.DEG_TO_RAD * (173.5506 + 1335801.3346 * t - 48.901 * o + 5.496 * a - 2.653 * s)) +
                        3.7 * Math.cos(n.DEG_TO_RAD * (113.8717 + 1745069.3958 * t - 63.665 * o + 7.287 * a - 3.538 * s)) +
                        3.6 * Math.cos(n.DEG_TO_RAD * (338.9083 + 1267870.5281 * t - 153.636 * o - 7.061 * a + 3.259 * s)) +
                        3.2 * Math.cos(n.DEG_TO_RAD * (246.3642 + 2258267.3137 * t + 24.769 * o + 21.675 * a - 10.335 * s)) -
                        3 * Math.cos(n.DEG_TO_RAD * (8.1929 + 1403732.141 * t + 55.834 * o + 18.052 * a - 8.566 * s)) +
                        2.3 * Math.cos(n.DEG_TO_RAD * (98.2661 + 449334.4057 * t - 124.107 * o - 10.643 * a + 5.028 * s)) -
                        2.2 * Math.cos(n.DEG_TO_RAD * (357.5291 + 35999.0503 * t - 1.536 * o + 0.041 * a + 0 * s)) -
                        2 * Math.cos(n.DEG_TO_RAD * (38.5872 + 858602.4669 * t - 138.871 * o - 8.852 * a + 4.144 * s)) -
                        1.8 * Math.cos(n.DEG_TO_RAD * (105.6788 + 341337.2548 * t - 119.499 * o - 10.765 * a + 5.028 * s)) -
                        1.7 * Math.cos(n.DEG_TO_RAD * (201.474 + 826670.7108 * t - 245.142 * o - 21.367 * a + 10.057 * s)) +
                        1.6 * Math.cos(n.DEG_TO_RAD * (184.1196 + 401329.0556 * t + 125.428 * o + 18.579 * a - 8.798 * s)) -
                        1.4 * Math.cos(n.DEG_TO_RAD * (308.4192 - 489205.1674 * t + 158.029 * o + 14.915 * a - 7.029 * s)) +
                        1.3 * Math.cos(n.DEG_TO_RAD * (325.7736 - 63863.5122 * t - 212.541 * o - 25.031 * a + 11.826 * s)),
                    c = -0.55 * Math.cos(n.DEG_TO_RAD * (238.2 + 854535.2 * t)) + 0.1 * Math.cos(n.DEG_TO_RAD * (103.2 + 377336.3 * t)) + 0.1 * Math.cos(n.DEG_TO_RAD * (233.2 + 926533.3 * t)),
                    u = 383397.6 + l + c * t,
                    h =
                        0.014217 * Math.cos(n.DEG_TO_RAD * (100.737 + 413335.3554 * t - 122.571 * o - 10.684 * a + 5.028 * s)) +
                        0.008551 * Math.cos(n.DEG_TO_RAD * (325.7736 - 63863.5122 * t - 212.541 * o - 25.031 * a + 11.826 * s)) -
                        0.001383 * Math.cos(n.DEG_TO_RAD * (134.9634 + 477198.8676 * t + 89.97 * o + 14.348 * a - 6.797 * s)) +
                        0.001353 * Math.cos(n.DEG_TO_RAD * (10.6638 + 1367733.0907 * t + 57.37 * o + 18.011 * a - 8.566 * s)) -
                        0.001146 * Math.cos(n.DEG_TO_RAD * (66.5106 + 349471.8432 * t - 335.112 * o - 35.715 * a + 16.854 * s)) -
                        915e-6 * Math.cos(n.DEG_TO_RAD * (201.474 + 826670.7108 * t - 245.142 * o - 21.367 * a + 10.057 * s)) +
                        869e-6 * Math.cos(n.DEG_TO_RAD * (103.2079 + 377336.3051 * t - 121.035 * o - 10.724 * a + 5.028 * s)) -
                        628e-6 * Math.cos(n.DEG_TO_RAD * (235.7004 + 890534.223 * t - 32.601 * o + 3.664 * a - 1.769 * s)) -
                        393e-6 * Math.cos(n.DEG_TO_RAD * (291.5472 - 127727.0245 * t - 425.082 * o - 50.062 * a + 23.651 * s)) +
                        284e-6 * Math.cos(n.DEG_TO_RAD * (328.2445 - 99862.5625 * t - 211.005 * o - 25.072 * a + 11.826 * s)) -
                        278e-6 * Math.cos(n.DEG_TO_RAD * (162.8868 - 31931.7561 * t - 106.271 * o - 12.516 * a + 5.913 * s)) -
                        24e-5 * Math.cos(n.DEG_TO_RAD * (269.9268 + 954397.7353 * t + 179.941 * o + 28.695 * a - 13.594 * s)) +
                        23e-5 * Math.cos(n.DEG_TO_RAD * (111.4008 + 1781068.4461 * t - 65.201 * o + 7.328 * a - 3.538 * s)) +
                        229e-6 * Math.cos(n.DEG_TO_RAD * (167.2476 + 762807.1986 * t - 457.683 * o - 46.398 * a + 21.882 * s)) -
                        202e-6 * Math.cos(n.DEG_TO_RAD * (83.3826 - 12006.2998 * t + 247.999 * o + 29.262 * a - 13.826 * s)) +
                        19e-5 * Math.cos(n.DEG_TO_RAD * (190.8102 - 541062.3799 * t - 302.511 * o - 39.379 * a + 18.623 * s)) +
                        177e-6 * Math.cos(n.DEG_TO_RAD * (357.5291 + 35999.0503 * t - 1.536 * o + 0.041 * a + 0 * s)) +
                        153e-6 * Math.cos(n.DEG_TO_RAD * (32.2842 + 285608.3309 * t - 547.653 * o - 60.746 * a + 28.679 * s)) -
                        137e-6 * Math.cos(n.DEG_TO_RAD * (44.8902 + 1431596.6029 * t + 269.911 * o + 43.043 * a - 20.392 * s)) +
                        122e-6 * Math.cos(n.DEG_TO_RAD * (145.6272 + 1844931.9583 * t + 147.34 * o + 32.359 * a - 15.363 * s)) +
                        116e-6 * Math.cos(n.DEG_TO_RAD * (302.211 + 1240006.0662 * t - 367.713 * o - 32.051 * a + 15.085 * s)) -
                        111e-6 * Math.cos(n.DEG_TO_RAD * (203.9449 + 790671.6605 * t - 243.606 * o - 21.408 * a + 10.057 * s)) -
                        108e-6 * Math.cos(n.DEG_TO_RAD * (68.9815 + 313472.7929 * t - 333.576 * o - 35.756 * a + 16.854 * s)) +
                        96e-6 * Math.cos(n.DEG_TO_RAD * (336.4374 + 1303869.5784 * t - 155.171 * o - 7.02 * a + 3.259 * s)) -
                        9e-5 * Math.cos(n.DEG_TO_RAD * (98.2661 + 449334.4057 * t - 124.107 * o - 10.643 * a + 5.028 * s)) +
                        9e-5 * Math.cos(n.DEG_TO_RAD * (13.1347 + 1331734.0404 * t + 58.906 * o + 17.971 * a - 8.566 * s)) +
                        56e-6 * Math.cos(n.DEG_TO_RAD * (55.8468 - 1018261.2475 * t - 392.482 * o - 53.726 * a + 25.42 * s)) -
                        56e-6 * Math.cos(n.DEG_TO_RAD * (238.1713 + 854535.1727 * t - 31.065 * o + 3.623 * a - 1.769 * s)) +
                        52e-6 * Math.cos(n.DEG_TO_RAD * (308.4192 - 489205.1674 * t + 158.029 * o + 14.915 * a - 7.029 * s)) -
                        5e-5 * Math.cos(n.DEG_TO_RAD * (133.0212 + 698943.6863 * t - 670.224 * o - 71.429 * a + 33.708 * s)) -
                        49e-6 * Math.cos(n.DEG_TO_RAD * (267.9846 + 1176142.554 * t - 580.254 * o - 57.082 * a + 26.911 * s)) -
                        49e-6 * Math.cos(n.DEG_TO_RAD * (184.1196 + 401329.0556 * t + 125.428 * o + 18.579 * a - 8.798 * s)) -
                        45e-6 * Math.cos(n.DEG_TO_RAD * (49.1562 - 75869.812 * t + 35.458 * o + 4.231 * a - 2.001 * s)) +
                        44e-6 * Math.cos(n.DEG_TO_RAD * (257.3208 - 191590.5367 * t - 637.623 * o - 75.093 * a + 35.477 * s)) +
                        42e-6 * Math.cos(n.DEG_TO_RAD * (105.6788 + 341337.2548 * t - 119.499 * o - 10.765 * a + 5.028 * s)) +
                        42e-6 * Math.cos(n.DEG_TO_RAD * (160.4159 + 4067.2942 * t - 107.806 * o - 12.475 * a + 5.913 * s)) +
                        4e-5 * Math.cos(n.DEG_TO_RAD * (246.3642 + 2258267.3137 * t + 24.769 * o + 21.675 * a - 10.335 * s)) -
                        4e-5 * Math.cos(n.DEG_TO_RAD * (156.5838 - 604925.8921 * t - 515.053 * o - 64.41 * a + 30.448 * s)) +
                        36e-6 * Math.cos(n.DEG_TO_RAD * (169.7185 + 726808.1483 * t - 456.147 * o - 46.439 * a + 21.882 * s)) +
                        29e-6 * Math.cos(n.DEG_TO_RAD * (113.8717 + 1745069.3958 * t - 63.665 * o + 7.287 * a - 3.538 * s)) -
                        29e-6 * Math.cos(n.DEG_TO_RAD * (297.8502 + 445267.1115 * t - 16.3 * o + 1.832 * a - 0.884 * s)) -
                        28e-6 * Math.cos(n.DEG_TO_RAD * (294.0181 - 163726.0747 * t - 423.546 * o - 50.103 * a + 23.651 * s)) +
                        27e-6 * Math.cos(n.DEG_TO_RAD * (263.6238 + 381403.5993 * t - 228.841 * o - 23.199 * a + 10.941 * s)) -
                        26e-6 * Math.cos(n.DEG_TO_RAD * (358.0578 + 221744.8187 * t - 760.194 * o - 85.777 * a + 40.505 * s)) -
                        26e-6 * Math.cos(n.DEG_TO_RAD * (8.1929 + 1403732.141 * t + 55.834 * o + 18.052 * a - 8.566 * s)),
                    d = -0.0022 * Math.cos(n.DEG_TO_RAD * (103.2 + 377336.3 * t)),
                    p = 0.055544 + h + 0.001 * t * d,
                    f =
                        0.0011776 * Math.cos(n.DEG_TO_RAD * (49.1562 - 75869.812 * t + 35.458 * o + 4.231 * a - 2.001 * s)) -
                        971e-7 * Math.cos(n.DEG_TO_RAD * (235.7004 + 890534.223 * t - 32.601 * o + 3.664 * a - 1.769 * s)) +
                        908e-7 * Math.cos(n.DEG_TO_RAD * (186.5442 + 966404.0351 * t - 68.058 * o - 0.567 * a + 0.232 * s)) +
                        623e-7 * Math.cos(n.DEG_TO_RAD * (83.3826 - 12006.2998 * t + 247.999 * o + 29.262 * a - 13.826 * s)) +
                        483e-7 * Math.cos(n.DEG_TO_RAD * (51.6271 - 111868.8623 * t + 36.994 * o + 4.19 * a - 2.001 * s)) +
                        348e-7 * Math.cos(n.DEG_TO_RAD * (100.737 + 413335.3554 * t - 122.571 * o - 10.684 * a + 5.028 * s)) -
                        316e-7 * Math.cos(n.DEG_TO_RAD * (308.4192 - 489205.1674 * t + 158.029 * o + 14.915 * a - 7.029 * s)) -
                        253e-7 * Math.cos(n.DEG_TO_RAD * (46.6853 - 39870.7617 * t + 33.922 * o + 4.272 * a - 2.001 * s)) -
                        141e-7 * Math.cos(n.DEG_TO_RAD * (274.1928 - 553068.6797 * t - 54.513 * o - 10.116 * a + 4.797 * s)) +
                        127e-7 * Math.cos(n.DEG_TO_RAD * (325.7736 - 63863.5122 * t - 212.541 * o - 25.031 * a + 11.826 * s)) +
                        117e-7 * Math.cos(n.DEG_TO_RAD * (184.1196 + 401329.0556 * t + 125.428 * o + 18.579 * a - 8.798 * s)) -
                        78e-7 * Math.cos(n.DEG_TO_RAD * (98.3124 - 151739.624 * t + 70.916 * o + 8.462 * a - 4.001 * s)) -
                        63e-7 * Math.cos(n.DEG_TO_RAD * (238.1713 + 854535.1727 * t - 31.065 * o + 3.623 * a - 1.769 * s)) +
                        63e-7 * Math.cos(n.DEG_TO_RAD * (134.9634 + 477198.8676 * t + 89.97 * o + 14.348 * a - 6.797 * s)) +
                        36e-7 * Math.cos(n.DEG_TO_RAD * (321.5076 + 1443602.9027 * t + 21.912 * o + 13.78 * a - 6.566 * s)) -
                        35e-7 * Math.cos(n.DEG_TO_RAD * (10.6638 + 1367733.0907 * t + 57.37 * o + 18.011 * a - 8.566 * s)) +
                        24e-7 * Math.cos(n.DEG_TO_RAD * (149.8932 + 337465.5434 * t - 87.113 * o - 6.453 * a + 3.028 * s)) +
                        24e-7 * Math.cos(n.DEG_TO_RAD * (170.9849 - 930404.9848 * t + 66.523 * o + 0.608 * a - 0.232 * s)),
                    m = -0.0203 * Math.cos(n.DEG_TO_RAD * (125 - 1934.1 * t)) + 0.0034 * Math.cos(n.DEG_TO_RAD * (220.2 - 1935.5 * t)),
                    v = 0.0449858 + f + 0.001 * m,
                    g =
                        -15.448 * Math.sin(n.DEG_TO_RAD * (100.737 + 413335.3554 * t - 122.571 * o - 10.684 * a + 5.028 * s)) -
                        9.642 * Math.sin(n.DEG_TO_RAD * (325.7736 - 63863.5122 * t - 212.541 * o - 25.031 * a + 11.826 * s)) -
                        2.721 * Math.sin(n.DEG_TO_RAD * (134.9634 + 477198.8676 * t + 89.97 * o + 14.348 * a - 6.797 * s)) +
                        2.607 * Math.sin(n.DEG_TO_RAD * (66.5106 + 349471.8432 * t - 335.112 * o - 35.715 * a + 16.854 * s)) +
                        2.085 * Math.sin(n.DEG_TO_RAD * (201.474 + 826670.7108 * t - 245.142 * o - 21.367 * a + 10.057 * s)) +
                        1.477 * Math.sin(n.DEG_TO_RAD * (10.6638 + 1367733.0907 * t + 57.37 * o + 18.011 * a - 8.566 * s)) +
                        0.968 * Math.sin(n.DEG_TO_RAD * (291.5472 - 127727.0245 * t - 425.082 * o - 50.062 * a + 23.651 * s)) -
                        0.949 * Math.sin(n.DEG_TO_RAD * (103.2079 + 377336.3051 * t - 121.035 * o - 10.724 * a + 5.028 * s)) -
                        0.703 * Math.sin(n.DEG_TO_RAD * (167.2476 + 762807.1986 * t - 457.683 * o - 46.398 * a + 21.882 * s)) -
                        0.66 * Math.sin(n.DEG_TO_RAD * (235.7004 + 890534.223 * t - 32.601 * o + 3.664 * a - 1.769 * s)) -
                        0.577 * Math.sin(n.DEG_TO_RAD * (190.8102 - 541062.3799 * t - 302.511 * o - 39.379 * a + 18.623 * s)) -
                        0.524 * Math.sin(n.DEG_TO_RAD * (269.9268 + 954397.7353 * t + 179.941 * o + 28.695 * a - 13.594 * s)) -
                        0.482 * Math.sin(n.DEG_TO_RAD * (32.2842 + 285608.3309 * t - 547.653 * o - 60.746 * a + 28.679 * s)) +
                        0.452 * Math.sin(n.DEG_TO_RAD * (357.5291 + 35999.0503 * t - 1.536 * o + 0.041 * a + 0 * s)) -
                        0.381 * Math.sin(n.DEG_TO_RAD * (302.211 + 1240006.0662 * t - 367.713 * o - 32.051 * a + 15.085 * s)) -
                        0.342 * Math.sin(n.DEG_TO_RAD * (328.2445 - 99862.5625 * t - 211.005 * o - 25.072 * a + 11.826 * s)) -
                        0.312 * Math.sin(n.DEG_TO_RAD * (44.8902 + 1431596.6029 * t + 269.911 * o + 43.043 * a - 20.392 * s)) +
                        0.282 * Math.sin(n.DEG_TO_RAD * (162.8868 - 31931.7561 * t - 106.271 * o - 12.516 * a + 5.913 * s)) +
                        0.255 * Math.sin(n.DEG_TO_RAD * (203.9449 + 790671.6605 * t - 243.606 * o - 21.408 * a + 10.057 * s)) +
                        0.252 * Math.sin(n.DEG_TO_RAD * (68.9815 + 313472.7929 * t - 333.576 * o - 35.756 * a + 16.854 * s)) -
                        0.211 * Math.sin(n.DEG_TO_RAD * (83.3826 - 12006.2998 * t + 247.999 * o + 29.262 * a - 13.826 * s)) +
                        0.193 * Math.sin(n.DEG_TO_RAD * (267.9846 + 1176142.554 * t - 580.254 * o - 57.082 * a + 26.911 * s)) +
                        0.191 * Math.sin(n.DEG_TO_RAD * (133.0212 + 698943.6863 * t - 670.224 * o - 71.429 * a + 33.708 * s)) -
                        0.184 * Math.sin(n.DEG_TO_RAD * (55.8468 - 1018261.2475 * t - 392.482 * o - 53.726 * a + 25.42 * s)) +
                        0.182 * Math.sin(n.DEG_TO_RAD * (145.6272 + 1844931.9583 * t + 147.34 * o + 32.359 * a - 15.363 * s)) -
                        0.158 * Math.sin(n.DEG_TO_RAD * (257.3208 - 191590.5367 * t - 637.623 * o - 75.093 * a + 35.477 * s)) +
                        0.148 * Math.sin(n.DEG_TO_RAD * (156.5838 - 604925.8921 * t - 515.053 * o - 64.41 * a + 30.448 * s)) -
                        0.111 * Math.sin(n.DEG_TO_RAD * (169.7185 + 726808.1483 * t - 456.147 * o - 46.439 * a + 21.882 * s)) +
                        0.101 * Math.sin(n.DEG_TO_RAD * (13.1347 + 1331734.0404 * t + 58.906 * o + 17.971 * a - 8.566 * s)) +
                        0.1 * Math.sin(n.DEG_TO_RAD * (358.0578 + 221744.8187 * t - 760.194 * o - 85.777 * a + 40.505 * s)) +
                        0.087 * Math.sin(n.DEG_TO_RAD * (98.2661 + 449334.4057 * t - 124.107 * o - 10.643 * a + 5.028 * s)) +
                        0.08 * Math.sin(n.DEG_TO_RAD * (42.948 + 1653341.4216 * t - 490.283 * o - 42.734 * a + 20.113 * s)) +
                        0.08 * Math.sin(n.DEG_TO_RAD * (222.5657 - 441199.8173 * t - 91.506 * o - 14.307 * a + 6.797 * s)) +
                        0.077 * Math.sin(n.DEG_TO_RAD * (294.0181 - 163726.0747 * t - 423.546 * o - 50.103 * a + 23.651 * s)) -
                        0.073 * Math.sin(n.DEG_TO_RAD * (280.8834 - 1495460.1151 * t - 482.452 * o - 68.074 * a + 32.217 * s)) -
                        0.071 * Math.sin(n.DEG_TO_RAD * (304.6819 + 1204007.0159 * t - 366.177 * o - 32.092 * a + 15.085 * s)) -
                        0.069 * Math.sin(n.DEG_TO_RAD * (233.7582 + 1112279.0417 * t - 792.795 * o - 82.113 * a + 38.736 * s)) -
                        0.067 * Math.sin(n.DEG_TO_RAD * (34.7551 + 249609.2807 * t - 546.117 * o - 60.787 * a + 28.679 * s)) -
                        0.067 * Math.sin(n.DEG_TO_RAD * (263.6238 + 381403.5993 * t - 228.841 * o - 23.199 * a + 10.941 * s)) +
                        0.055 * Math.sin(n.DEG_TO_RAD * (21.6203 - 1082124.7597 * t - 605.023 * o - 78.757 * a + 37.246 * s)) +
                        0.055 * Math.sin(n.DEG_TO_RAD * (308.4192 - 489205.1674 * t + 158.029 * o + 14.915 * a - 7.029 * s)) -
                        0.054 * Math.sin(n.DEG_TO_RAD * (8.7216 + 1589477.9094 * t - 702.824 * o - 67.766 * a + 31.939 * s)) -
                        0.052 * Math.sin(n.DEG_TO_RAD * (179.8536 + 1908795.4705 * t + 359.881 * o + 57.39 * a - 27.189 * s)) -
                        0.05 * Math.sin(n.DEG_TO_RAD * (98.7948 + 635080.1741 * t - 882.765 * o - 96.461 * a + 45.533 * s)) -
                        0.049 * Math.sin(n.DEG_TO_RAD * (128.6604 - 95795.2683 * t - 318.812 * o - 37.547 * a + 17.738 * s)) -
                        0.047 * Math.sin(n.DEG_TO_RAD * (17.3544 + 425341.6552 * t - 370.57 * o - 39.946 * a + 18.854 * s)) -
                        0.044 * Math.sin(n.DEG_TO_RAD * (160.4159 + 4067.2942 * t - 107.806 * o - 12.475 * a + 5.913 * s)) -
                        0.043 * Math.sin(n.DEG_TO_RAD * (238.1713 + 854535.1727 * t - 31.065 * o + 3.623 * a - 1.769 * s)) +
                        0.042 * Math.sin(n.DEG_TO_RAD * (270.4555 + 1140143.5037 * t - 578.718 * o - 57.123 * a + 26.911 * s)) -
                        0.042 * Math.sin(n.DEG_TO_RAD * (132.4925 + 513197.9179 * t + 88.434 * o + 14.388 * a - 6.797 * s)) -
                        0.041 * Math.sin(n.DEG_TO_RAD * (122.3573 - 668789.4043 * t - 727.594 * o - 89.441 * a + 42.274 * s)) -
                        0.04 * Math.sin(n.DEG_TO_RAD * (105.6788 + 341337.2548 * t - 119.499 * o - 10.765 * a + 5.028 * s)) +
                        0.038 * Math.sin(n.DEG_TO_RAD * (135.4921 + 662944.6361 * t - 668.688 * o - 71.47 * a + 33.708 * s)) -
                        0.037 * Math.sin(n.DEG_TO_RAD * (242.391 - 51857.2124 * t - 460.54 * o - 54.293 * a + 25.652 * s)) +
                        0.036 * Math.sin(n.DEG_TO_RAD * (336.4374 + 1303869.5784 * t - 155.171 * o - 7.02 * a + 3.259 * s)) +
                        0.035 * Math.sin(n.DEG_TO_RAD * (223.0943 - 255454.0489 * t - 850.164 * o - 100.124 * a + 47.302 * s)) -
                        0.034 * Math.sin(n.DEG_TO_RAD * (193.2811 - 577061.4302 * t - 300.976 * o - 39.419 * a + 18.623 * s)) +
                        0.031 * Math.sin(n.DEG_TO_RAD * (87.6023 - 918398.685 * t - 181.476 * o - 28.654 * a + 13.594 * s)),
                    y = 2.4 * Math.sin(n.DEG_TO_RAD * (103.2 + 377336.3 * t)),
                    _ = 83.353 + 4069.0137 * t - 103.238 * o - 12.492 * a + 5.263 * s + g + 0.001 * t * y,
                    b =
                        -1.4979 * Math.sin(n.DEG_TO_RAD * (49.1562 - 75869.812 * t + 35.458 * o + 4.231 * a - 2.001 * s)) -
                        0.15 * Math.sin(n.DEG_TO_RAD * (357.5291 + 35999.0503 * t - 1.536 * o + 0.041 * a + 0 * s)) -
                        0.1226 * Math.sin(n.DEG_TO_RAD * (235.7004 + 890534.223 * t - 32.601 * o + 3.664 * a - 1.769 * s)) +
                        0.1176 * Math.sin(n.DEG_TO_RAD * (186.5442 + 966404.0351 * t - 68.058 * o - 0.567 * a + 0.232 * s)) -
                        0.0801 * Math.sin(n.DEG_TO_RAD * (83.3826 - 12006.2998 * t + 247.999 * o + 29.262 * a - 13.826 * s)) -
                        0.0616 * Math.sin(n.DEG_TO_RAD * (51.6271 - 111868.8623 * t + 36.994 * o + 4.19 * a - 2.001 * s)) +
                        0.049 * Math.sin(n.DEG_TO_RAD * (100.737 + 413335.3554 * t - 122.571 * o - 10.684 * a + 5.028 * s)) +
                        0.0409 * Math.sin(n.DEG_TO_RAD * (308.4192 - 489205.1674 * t + 158.029 * o + 14.915 * a - 7.029 * s)) +
                        0.0327 * Math.sin(n.DEG_TO_RAD * (134.9634 + 477198.8676 * t + 89.97 * o + 14.348 * a - 6.797 * s)) +
                        0.0324 * Math.sin(n.DEG_TO_RAD * (46.6853 - 39870.7617 * t + 33.922 * o + 4.272 * a - 2.001 * s)) +
                        0.0196 * Math.sin(n.DEG_TO_RAD * (98.3124 - 151739.624 * t + 70.916 * o + 8.462 * a - 4.001 * s)) +
                        0.018 * Math.sin(n.DEG_TO_RAD * (274.1928 - 553068.6797 * t - 54.513 * o - 10.116 * a + 4.797 * s)) +
                        0.015 * Math.sin(n.DEG_TO_RAD * (325.7736 - 63863.5122 * t - 212.541 * o - 25.031 * a + 11.826 * s)) -
                        0.015 * Math.sin(n.DEG_TO_RAD * (184.1196 + 401329.0556 * t + 125.428 * o + 18.579 * a - 8.798 * s)) -
                        0.0078 * Math.sin(n.DEG_TO_RAD * (238.1713 + 854535.1727 * t - 31.065 * o + 3.623 * a - 1.769 * s)) -
                        0.0045 * Math.sin(n.DEG_TO_RAD * (10.6638 + 1367733.0907 * t + 57.37 * o + 18.011 * a - 8.566 * s)) +
                        0.0044 * Math.sin(n.DEG_TO_RAD * (321.5076 + 1443602.9027 * t + 21.912 * o + 13.78 * a - 6.566 * s)) -
                        0.0042 * Math.sin(n.DEG_TO_RAD * (162.8868 - 31931.7561 * t - 106.271 * o - 12.516 * a + 5.913 * s)) -
                        0.0031 * Math.sin(n.DEG_TO_RAD * (170.9849 - 930404.9848 * t + 66.523 * o + 0.608 * a - 0.232 * s)) +
                        0.0031 * Math.sin(n.DEG_TO_RAD * (103.2079 + 377336.3051 * t - 121.035 * o - 10.724 * a + 5.028 * s)) +
                        0.0029 * Math.sin(n.DEG_TO_RAD * (222.612 - 1042273.8471 * t + 103.516 * o + 4.798 * a - 2.232 * s)) +
                        0.0028 * Math.sin(n.DEG_TO_RAD * (184.0733 + 1002403.0853 * t - 69.594 * o - 0.526 * a + 0.232 * s)),
                    x = 25.9 * Math.sin(n.DEG_TO_RAD * (125 - 1934.1 * t)) - 4.3 * Math.sin(n.DEG_TO_RAD * (220.2 - 1935.5 * t)),
                    w = 0.38 * Math.sin(n.DEG_TO_RAD * (357.5 + 35999.1 * t)),
                    T = 125.0446 - 1934.13618 * t + 20.762 * o + 2.139 * a - 1.65 * s + b + 0.001 * (x + w * t),
                    E =
                        -0.92581 * Math.sin(n.DEG_TO_RAD * (235.7004 + 890534.223 * t - 32.601 * o + 3.664 * a - 1.769 * s)) +
                        0.33262 * Math.sin(n.DEG_TO_RAD * (100.737 + 413335.3554 * t - 122.571 * o - 10.684 * a + 5.028 * s)) -
                        0.18402 * Math.sin(n.DEG_TO_RAD * (357.5291 + 35999.0503 * t - 1.536 * o + 0.041 * a + 0 * s)) +
                        0.11007 * Math.sin(n.DEG_TO_RAD * (134.9634 + 477198.8676 * t + 89.97 * o + 14.348 * a - 6.797 * s)) -
                        0.06055 * Math.sin(n.DEG_TO_RAD * (238.1713 + 854535.1727 * t - 31.065 * o + 3.623 * a - 1.769 * s)) +
                        0.04741 * Math.sin(n.DEG_TO_RAD * (325.7736 - 63863.5122 * t - 212.541 * o - 25.031 * a + 11.826 * s)) -
                        0.03086 * Math.sin(n.DEG_TO_RAD * (10.6638 + 1367733.0907 * t + 57.37 * o + 18.011 * a - 8.566 * s)) +
                        0.02184 * Math.sin(n.DEG_TO_RAD * (103.2079 + 377336.3051 * t - 121.035 * o - 10.724 * a + 5.028 * s)) +
                        0.01645 * Math.sin(n.DEG_TO_RAD * (49.1562 - 75869.812 * t + 35.458 * o + 4.231 * a - 2.001 * s)) +
                        0.01022 * Math.sin(n.DEG_TO_RAD * (233.2295 + 926533.2733 * t - 34.136 * o + 3.705 * a - 1.769 * s)) -
                        0.00756 * Math.sin(n.DEG_TO_RAD * (336.4374 + 1303869.5784 * t - 155.171 * o - 7.02 * a + 3.259 * s)) -
                        0.0053 * Math.sin(n.DEG_TO_RAD * (222.5657 - 441199.8173 * t - 91.506 * o - 14.307 * a + 6.797 * s)) -
                        0.00496 * Math.sin(n.DEG_TO_RAD * (162.8868 - 31931.7561 * t - 106.271 * o - 12.516 * a + 5.913 * s)) -
                        0.00472 * Math.sin(n.DEG_TO_RAD * (297.8502 + 445267.1115 * t - 16.3 * o + 1.832 * a - 0.884 * s)) -
                        0.00271 * Math.sin(n.DEG_TO_RAD * (240.6422 + 818536.1225 * t - 29.529 * o + 3.582 * a - 1.769 * s)) +
                        0.00264 * Math.sin(n.DEG_TO_RAD * (132.4925 + 513197.9179 * t + 88.434 * o + 14.388 * a - 6.797 * s)) -
                        0.00254 * Math.sin(n.DEG_TO_RAD * (186.5442 + 966404.0351 * t - 68.058 * o - 0.567 * a + 0.232 * s)) +
                        0.00234 * Math.sin(n.DEG_TO_RAD * (269.9268 + 954397.7353 * t + 179.941 * o + 28.695 * a - 13.594 * s)) -
                        0.0022 * Math.sin(n.DEG_TO_RAD * (13.1347 + 1331734.0404 * t + 58.906 * o + 17.971 * a - 8.566 * s)) -
                        0.00202 * Math.sin(n.DEG_TO_RAD * (355.0582 + 71998.1006 * t - 3.072 * o + 0.082 * a + 0 * s)) +
                        0.00167 * Math.sin(n.DEG_TO_RAD * (328.2445 - 99862.5625 * t - 211.005 * o - 25.072 * a + 11.826 * s)) -
                        0.00143 * Math.sin(n.DEG_TO_RAD * (173.5506 + 1335801.3346 * t - 48.901 * o + 5.496 * a - 2.653 * s)) -
                        0.00121 * Math.sin(n.DEG_TO_RAD * (98.2661 + 449334.4057 * t - 124.107 * o - 10.643 * a + 5.028 * s)) -
                        0.00116 * Math.sin(n.DEG_TO_RAD * (145.6272 + 1844931.9583 * t + 147.34 * o + 32.359 * a - 15.363 * s)) +
                        0.00102 * Math.sin(n.DEG_TO_RAD * (105.6788 + 341337.2548 * t - 119.499 * o - 10.765 * a + 5.028 * s)) -
                        9e-4 * Math.sin(n.DEG_TO_RAD * (184.1196 + 401329.0556 * t + 125.428 * o + 18.579 * a - 8.798 * s)) -
                        86e-5 * Math.sin(n.DEG_TO_RAD * (338.9083 + 1267870.5281 * t - 153.636 * o - 7.061 * a + 3.259 * s)) -
                        78e-5 * Math.sin(n.DEG_TO_RAD * (111.4008 + 1781068.4461 * t - 65.201 * o + 7.328 * a - 3.538 * s)) +
                        69e-5 * Math.sin(n.DEG_TO_RAD * (323.3027 - 27864.4619 * t - 214.077 * o - 24.99 * a + 11.826 * s)) +
                        66e-5 * Math.sin(n.DEG_TO_RAD * (51.6271 - 111868.8623 * t + 36.994 * o + 4.19 * a - 2.001 * s)) +
                        65e-5 * Math.sin(n.DEG_TO_RAD * (38.5872 + 858602.4669 * t - 138.871 * o - 8.852 * a + 4.144 * s)) -
                        6e-4 * Math.sin(n.DEG_TO_RAD * (83.3826 - 12006.2998 * t + 247.999 * o + 29.262 * a - 13.826 * s)) +
                        54e-5 * Math.sin(n.DEG_TO_RAD * (201.474 + 826670.7108 * t - 245.142 * o - 21.367 * a + 10.057 * s)) -
                        52e-5 * Math.sin(n.DEG_TO_RAD * (308.4192 - 489205.1674 * t + 158.029 * o + 14.915 * a - 7.029 * s)) +
                        48e-5 * Math.sin(n.DEG_TO_RAD * (8.1929 + 1403732.141 * t + 55.834 * o + 18.052 * a - 8.566 * s)) -
                        41e-5 * Math.sin(n.DEG_TO_RAD * (46.6853 - 39870.7617 * t + 33.922 * o + 4.272 * a - 2.001 * s)) -
                        33e-5 * Math.sin(n.DEG_TO_RAD * (274.1928 - 553068.6797 * t - 54.513 * o - 10.116 * a + 4.797 * s)) +
                        3e-4 * Math.sin(n.DEG_TO_RAD * (160.4159 + 4067.2942 * t - 107.806 * o - 12.475 * a + 5.913 * s)),
                    M = 3.96 * Math.sin(n.DEG_TO_RAD * (119.7 + 131.8 * t)) + 1.96 * Math.sin(n.DEG_TO_RAD * (125 - 1934.1 * t)),
                    S =
                        0.463 * Math.sin(n.DEG_TO_RAD * (357.5 + 35999.1 * t)) +
                        0.152 * Math.sin(n.DEG_TO_RAD * (238.2 + 854535.2 * t)) -
                        0.071 * Math.sin(n.DEG_TO_RAD * (27.8 + 131.8 * t)) -
                        0.055 * Math.sin(n.DEG_TO_RAD * (103.2 + 377336.3 * t)) -
                        0.026 * Math.sin(n.DEG_TO_RAD * (233.2 + 926533.3 * t)),
                    A = 14 * Math.sin(n.DEG_TO_RAD * (357.5 + 35999.1 * t)) + 5 * Math.sin(n.DEG_TO_RAD * (238.2 + 854535.2 * t)),
                    R = 218.31665 + 481267.88134 * t - 13.268 * o + 1.856 * a - 1.534 * s + E + 0.001 * (M + S * t + A * o);
                return { a: 1e3 * u, e: p, i: 2 * Math.asin(v) * n.RAD_TO_DEG, w: (_ - T) % 360, o: T % 360, M: (R - _) % 360 };
            });
        var n = i("./core/constants.js");
        i("./utils/JD.js");
    },
    "./scenario/scenarios/bodies/moon/elp.js": function (t, e, i) {
        "use strict";
        function n(t) {
            if (Array.isArray(t)) {
                for (var e = 0, i = Array(t.length); e < t.length; e++) i[e] = t[e];
                return i;
            }
            return Array.from(t);
        }
        function r(t) {
            var e = "ELP" + t;
            return window.elp && window.elp[e];
        }
        function o(t) {
            function e(t) {
                return t === _ ? p() : t <= 3 ? i(t) : t <= 9 ? o(t) : t <= 21 ? l(t) : t <= 36 ? o(t) : p();
            }
            function i(t) {
                var i = r(t);
                if (!i) return e(++t);
                var o = t;
                return (
                    i.forEach(function (e) {
                        var i = [].concat(n(e)),
                            r = i.splice(0, 4);
                        r.unshift(0);
                        var a = i;
                        a.unshift(0);
                        var s = a[1];
                        if (!(Math.abs(s) < P[o])) {
                            var l = a[2] + g * a[6];
                            3 === t && (a[1] = a[1] - (2 * a[1] * M) / 3), (s = a[1] + l * (R - v * M) + a[3] * A + a[4] * S + a[5] * C);
                            for (var h = 0, d = 1; d <= 5; d++) for (var p = 1; p < 5; p++) h += r[p] * w[p][d] * G[d];
                            3 === o && (h += u), (h %= c), (z[o] = z[o] + s * Math.sin(h));
                        }
                    }),
                    e(++t)
                );
            }
            function o(t) {
                var i = ((t - 1) % 3) + 1,
                    o = r(t);
                return o
                    ? (o.forEach(function (e) {
                          var r = [].concat(n(e)),
                              o = r.shift(),
                              a = r.splice(0, 4);
                          a.unshift(0);
                          var s = r.shift(),
                              l = r.shift();
                          r.shift();
                          if (!(l < P[i])) {
                              t >= 7 && t <= 9 && (l *= G[2]), t >= 25 && t <= 27 && (l *= G[2]), t >= 34 && t <= 36 && (l *= G[3]);
                              for (var u = s * d, h = 1; h <= 2; h++) {
                                  u += o * T[h] * G[h];
                                  for (var p = 1; p <= 4; p++) u += a[p] * w[p][h] * G[h];
                              }
                              (u %= c), (z[i] = z[i] + l * Math.sin(u));
                          }
                      }),
                      e(++t))
                    : e(++t);
            }
            function l(t) {
                var i = ((t - 1) % 3) + 1,
                    o = r(t);
                return o
                    ? (o.forEach(function (e, r) {
                          var o = [].concat(n(e)),
                              a = o.splice(0, 11);
                          a.unshift(0);
                          var s = o.shift(),
                              l = o.shift();
                          o.shift();
                          if (!(l < P[i])) {
                              t >= 13 && t <= 15 && (l *= G[2]), t >= 19 && t <= 21 && (l *= G[2]);
                              var u = s * d;
                              if (t >= 16)
                                  for (var h = 1; h <= 2; h++) {
                                      for (var p = 1; p <= 4; p++) u += a[p + 7] * w[p][h] * G[h];
                                      for (var f = 1; f <= 7; f++) u += a[f] * x[f][h] * G[h];
                                  }
                              else
                                  for (var m = 1; m <= 2; m++) {
                                      u += (a[9] * w[1][m] + a[10] * w[3][m] + a[11] * w[4][m]) * G[m];
                                      for (var v = 1; v <= 8; v++) u += a[v] * x[v][m] * G[m];
                                  }
                              (u %= c), (z[i] = z[i] + l * Math.sin(u));
                          }
                      }),
                      e(++t))
                    : e(++t);
            }
            function p() {
                (z[1] = z[1] / h + y[1][1] + y[1][2] * G[2] + y[1][3] * G[3] + y[1][4] * G[4] + y[1][5] * G[5]), (z[2] = z[2] / h), (z[3] = (z[3] * m) / f);
                var t = z[3] * Math.cos(z[2]),
                    e = t * Math.sin(z[1]);
                t *= Math.cos(z[1]);
                var i = z[3] * Math.sin(z[2]),
                    n = (D + O * G[2] + L * G[3] + j * G[4] + k * G[5]) * G[2],
                    r = (I + N * G[2] + F * G[3] + U * G[4] + B * G[5]) * G[2],
                    o = 2 * Math.sqrt(1 - n * n - r * r),
                    l = 2 * n * r,
                    c = 1 - 2 * n * n,
                    u = 1 - 2 * r * r;
                return (n *= o), (r *= o), (z[1] = c * t + l * e + n * i), (z[2] = l * t + u * e - r * i), (z[3] = -n * t + r * e + (c + u - 1) * i), new a.Vector3(z[1] * s.KM, z[2] * s.KM, z[3] * s.KM);
            }
            var _ = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                b = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                E = t,
                P = [0, 0, 0, 0],
                G = [0, 0, 0, 0, 0, 0];
            G[1] = 1;
            var z = [0, 0, 0, 0];
            (G[2] = (E - 2451545) / 36525), (G[3] = G[2] * G[2]), (G[4] = G[3] * G[2]), (G[5] = G[4] * G[2]), (P[1] = b * h), (P[2] = b * h), (P[3] = b * f);
            return e(1);
        }
        Object.defineProperty(e, "__esModule", { value: !0 }), (e.ELP82B = o);
        var a = i("../node_modules/three/build/three.js"),
            s = i("./core/constants.js"),
            l = Math.PI,
            c = 2 * l,
            u = l / 2,
            h = 648e3 / l,
            d = l / 180,
            p = 3600,
            f = 384747.9806743165,
            m = 384747.9806448954,
            v = 0.074801329518,
            g = 0.00514376267 / (3 * v),
            y = [
                [0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0],
            ],
            _ = [0, 0, 0, 0, 0, 0],
            b = [0, 0, 0, 0, 0, 0],
            x = [
                [0, 0, 0],
                [0, 0, 0],
                [0, 0, 0],
                [0, 0, 0],
                [0, 0, 0],
                [0, 0, 0],
                [0, 0, 0],
                [0, 0, 0],
                [0, 0, 0],
            ],
            w = [
                [0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0],
            ],
            T = [0, 0, 0];
        (y[1][1] = 218.3166543638889 * d),
            (y[2][1] = 83.3532429861111 * d),
            (y[3][1] = 125.04455504444444 * d),
            (_[1] = 100.4664501638889 * d),
            (b[1] = 102.93734098055556 * d),
            (y[1][2] = 1732559343.73604 / h),
            (y[2][2] = 14643420.2632 / h),
            (y[3][2] = -6967919.3622 / h),
            (_[2] = 129597742.2758 / h),
            (b[2] = 1161.2283 / h),
            (y[1][3] = -5.8883 / h),
            (y[2][3] = -38.2776 / h),
            (y[3][3] = 6.3622 / h),
            (_[3] = -0.0202 / h),
            (b[3] = 0.5327 / h),
            (y[1][4] = 0.006604 / h),
            (y[2][4] = (0.1 * -0.45047) / h),
            (y[3][4] = 0.007625 / h),
            (_[4] = 9e-6 / h),
            (b[4] = (0.001 * -0.138) / h),
            (y[1][5] = -3169e-8 / h),
            (y[2][5] = (0.21301 * 0.001) / h),
            (y[3][5] = -3586e-8 / h),
            (_[5] = 1.5e-7 / h),
            (b[5] = 0);
        var E = 5029.0966 / h;
        (x[1][1] = (252.25 + 3.25986 / p) * d),
            (x[2][1] = 181.97980084722224 * d),
            (x[3][1] = _[1]),
            (x[4][1] = 355.4332746277778 * d),
            (x[5][1] = (34.35 + 5.34212 / p) * d),
            (x[6][1] = 50.07747137222223 * d),
            (x[7][1] = 314.0550051138889 * d),
            (x[8][1] = 304.3486654861111 * d),
            (x[1][2] = 538101628.68898 / h),
            (x[2][2] = 210664136.43355 / h),
            (x[3][2] = _[2]),
            (x[4][2] = 68905077.59284 / h),
            (x[5][2] = 10925660.42861 / h),
            (x[6][2] = 4399609.65932 / h),
            (x[7][2] = 1542481.19393 / h),
            (x[8][2] = 786550.32074 / h);
        for (var M = 0.55604 / h / y[1][2], S = 0.01789 / h, A = -0.08066 / h, R = -0.06424 / h / y[1][2], C = -0.12879 / h, P = 1; P < 6; P++)
            (w[1][P] = y[1][P] - _[P]), (w[4][P] = y[1][P] - y[3][P]), (w[3][P] = y[1][P] - y[2][P]), (w[2][P] = _[P] - b[P]);
        (w[1][1] = w[1][1] + l), (T[1] = y[1][1]), (T[2] = y[1][2] + E);
        var D = 10180391e-12,
            O = 4.7020439e-7,
            L = -5.417367e-10,
            j = 1e-11 * -0.2507948,
            k = 4.63486e-15,
            I = -0.000113469002,
            N = 1.2372674e-7,
            F = 1.265417e-9,
            U = 1e-11 * -0.1371808,
            B = -3.20334e-15;
    },
    "./scenario/scenarios/bodies/neptune.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 }), (e.neptune = void 0);
        var n = i("./core/constants.js");
        e.neptune = {
            title: "Neptune",
            name: "neptune",
            mass: 1.0243e26,
            radius: 24764,
            color: "#3299ff",
            map: "./assets/img/neptunemap.jpg",
            orbit: { base: { a: 30.06992276 * n.AU, e: 0.00859048, i: 1.77004347, l: -55.12002969, lp: 44.96476227, o: 131.78422574 }, cy: { a: 26291e-8 * n.AU, e: 5105e-8, i: 35372e-8, l: 218.45945325, lp: -0.32241464, o: -0.00508664 } },
        };
    },
    "./scenario/scenarios/bodies/pluto.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 }), (e.pluto = void 0);
        var n = i("./core/constants.js");
        e.pluto = {
            title: "Pluto",
            name: "pluto",
            mass: 1.457e22,
            radius: 1153,
            color: "#aaaaaa",
            map: "./assets/img/plutomap1k.jpg",
            orbit: { base: { a: 39.48211675 * n.AU, e: 0.2488273, i: 17.14001206, l: 238.92903833, lp: 224.06891629, o: 110.30393684 }, cy: { a: -31596e-8 * n.AU, e: 517e-7, i: 4818e-8, l: 145.20780515, lp: -0.04062942, o: -0.01183482 } },
        };
    },
    "./scenario/scenarios/bodies/saturn.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 }), (e.saturn = void 0);
        var n = i("./core/constants.js");
        e.saturn = {
            title: "Saturn",
            name: "saturn",
            mass: 5.6846e26,
            radius: 58232,
            color: "#ffcc99",
            map: "./assets/img/saturnmap.jpg",
            tilt: 26.7,
            ring: { innerRadius: 74500, outerRadius: 117580, map: "./assets/img/saturnrings.png" },
            orbit: {
                base: { a: 9.53667594 * n.AU, e: 0.05386179, i: 2.48599187, l: 49.95424423, lp: 92.59887831, o: 113.66242448 },
                cy: { a: -0.0012506 * n.AU, e: -50991e-8, i: 0.00193609, l: 1222.49362201, lp: -0.41897216, o: -0.28867794 },
            },
        };
    },
    "./scenario/scenarios/bodies/sun.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 }), (e.sun = e.radius = void 0);
        var n = i("../node_modules/three/build/three.js"),
            r = i("./graphics3d/Sun.js"),
            o = (function (t) {
                return t && t.__esModule ? t : { default: t };
            })(r),
            a = (e.radius = 696342);
        e.sun = {
            title: "The Sun",
            name: "sun",
            mass: 1.9891e30,
            radius: a,
            color: "#ffff00",
            map: "./assets/img/sunmap.jpg",
            k: 0.01720209895,
            material: { emissive: new n.Color(14540083) },
            createCustomDisplayObject: function () {
                var t = (this.displayObj = new o.default(this));
                return (
                    (this.getBody3D = function () {
                        return t;
                    }),
                    t
                );
            },
        };
    },
    "./scenario/scenarios/bodies/uranus.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 }), (e.uranus = void 0);
        var n = i("./core/constants.js");
        e.uranus = {
            title: "Uranus",
            name: "uranus",
            mass: 8.681e25,
            radius: 25559,
            color: "#99ccff",
            map: "./assets/img/uranusmap.jpg",
            orbit: {
                base: { a: 19.18916464 * n.AU, e: 0.04725744, i: 0.77263783, l: 313.23810451, lp: 170.9542763, o: 74.01692503 },
                cy: { a: -0.00196176 * n.AU, e: -4397e-8, i: -0.00242939, l: 428.48202785, lp: 0.40805281, o: 0.04240589 },
            },
        };
    },
    "./scenario/scenarios/bodies/venus.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 }), (e.venus = void 0);
        var n = i("./core/constants.js");
        e.venus = {
            title: "Venus",
            name: "venus",
            mass: 4.868e24,
            radius: 6051,
            color: "#fda700",
            map: "./assets/img/venusmap.jpg",
            orbit: { base: { a: 0.72333566 * n.AU, e: 0.00677672, i: 3.39467605, l: 181.9790995, lp: 131.60246718, o: 76.67984255 }, cy: { a: 39e-7 * n.AU, e: -4107e-8, i: -7889e-7, l: 58517.81538729, lp: 0.00268329, o: -0.27769418 } },
        };
    },
    "./three/RingGeometry2.js": function (t, e, i) {
        "use strict";
        function n(t, e, i, n) {
            var o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0,
                a = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 2 * Math.PI;
            r.Geometry.call(this);
            var s = void 0 !== i ? Math.max(3, i) : 8,
                l = void 0 !== n ? Math.max(3, n) : 8,
                c = void 0,
                u = void 0,
                h = [],
                d = t || 0,
                p = ((e || 50) - d) / l;
            for (c = 0; c <= l; c++) {
                for (u = 0; u <= s; u++) {
                    var f = new r.Vector3();
                    (f.x = d * Math.cos(o + (u / s) * a)), (f.y = -d * Math.sin(o + (u / s) * a)), this.vertices.push(f), h.push(new r.Vector2(c / l, (f.y / d + 1) / 2));
                }
                d += p;
            }
            var m = new r.Vector3(0, 0, 1);
            for (c = 0; c < l; c++)
                for (u = 0; u <= s; u++) {
                    var v = void 0,
                        g = void 0,
                        y = void 0;
                    (v = u + s * c + c),
                        (g = u + s * c + s + c),
                        (y = u + s * c + s + 1 + c),
                        this.faces.push(new r.Face3(v, g, y, [m, m, m])),
                        this.faceVertexUvs[0].push([h[v], h[g], h[y]]),
                        (v = u + s * c + c),
                        (g = u + s * c + s + 1 + c),
                        (y = u + s * c + 1 + c),
                        this.faces.push(new r.Face3(v, g, y, [m, m, m])),
                        this.faceVertexUvs[0].push([h[v], h[g], h[y]]);
                }
            this.computeFaceNormals(), (this.boundingSphere = new r.Sphere(new r.Vector3(), d));
        }
        Object.defineProperty(e, "__esModule", { value: !0 });
        var r = i("../node_modules/three/build/three.js");
        (n.prototype = Object.create(r.Geometry.prototype)), (e.default = n);
    },
    "./utils/ColorUtils.js": function (t, e, i) {
        "use strict";
        function n(t) {
            var e = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t);
            return e ? { r: parseInt(e[1], 16), g: parseInt(e[2], 16), b: parseInt(e[3], 16) } : null;
        }
        function r(t) {
            return (t.r << 16) + (t.g << 8) + t.b;
        }
        function o(t, e) {
            var i = 1 - e;
            return { r: t.r * i, g: t.g * i, b: t.b * i };
        }
        Object.defineProperty(e, "__esModule", { value: !0 }), (e.hexToRgb = n), (e.rgbToHex = r), (e.darken = o);
    },
    "./utils/GeoCoord.js": function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }
        Object.defineProperty(e, "__esModule", { value: !0 });
        var r = (function () {
                function t(t, e) {
                    for (var i = 0; i < e.length; i++) {
                        var n = e[i];
                        (n.enumerable = n.enumerable || !1), (n.configurable = !0), "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                    }
                }
                return function (e, i, n) {
                    return i && t(e.prototype, i), n && t(e, n), e;
                };
            })(),
            o = (function () {
                function t() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                        i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                    n(this, t), (this.lat = e), (this.lng = i);
                }
                return (
                    r(t, [
                        {
                            key: "getLoc",
                            value: function () {
                                return { lat: this.lat, lng: this.lng };
                            },
                        },
                        {
                            key: "getString",
                            value: function () {
                                return this.lat.toFixed(4) + ", " + this.lng.toFixed(4);
                            },
                        },
                        {
                            key: "setValue",
                            value: function (t) {
                                var e = t.lat,
                                    i = t.lng;
                                (this.lat = e), (this.lng = i);
                            },
                        },
                        {
                            key: "setFromString",
                            value: function (t) {
                                var e = t.match(/([\d]+)°?\s+([\d.]+)[′`']?\s+([\d.]+)[″"]?\s+(N|S)\s+([\d]+)°?\s+([\d.]+)[′`']?\s+([\d.]+)[″"]\s+(W|E)/i, t);
                                if (e) return this.setLatLng(Number(e[1]) + Number(e[2]) / 60 + Number(e[3]) / 3600, Number(e[5]) + Number(e[6]) / 60 + Number(e[7]) / 3600, e[4], e[8]);
                                var i = t.match(/([\d]+)°?\s+([\d.]+)[′`']?\s+(N|S)\s+([\d]+)°?\s+([\d.]+)[′`']?\s+(W|E)/i, t);
                                if (i) return this.setLatLng(Number(i[1]) + Number(i[2]) / 60, Number(i[4]) + Number(i[5]) / 60, i[3], i[6]);
                                var n = t.match(/([\d.-]+)°?[\s,]?(N|S)?\s{1,}([\d.-]+)°?\s?(W|E)?/i, t);
                                return n ? this.setLatLng(Number(n[1]), Number(n[3]), n[2], n[4]) : this.getLoc();
                            },
                        },
                        {
                            key: "setLatLng",
                            value: function (t, e) {
                                var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "",
                                    n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "";
                                return (
                                    (this.lat = t),
                                    (this.lng = e),
                                    (("s" === i.toLowerCase() && this.lat > 0) || ("n" === i.toLowerCase() && this.lat < 0)) && (this.lat *= -1),
                                    (("w" === n.toLowerCase() && this.lng > 0) || ("e" === n.toLowerCase() && this.lng < 0)) && (this.lng *= -1),
                                    this.getLoc()
                                );
                            },
                        },
                    ]),
                    t
                );
            })();
        e.default = o;
    },
    "./utils/JD.js": function (t, e, i) {
        "use strict";
        function n(t) {
            return +t / 1e3 / l.DAY + c;
        }
        function r(t) {
            return (Number(t) - l.J2000) * l.DAY;
        }
        function o(t) {
            var e = new Date(),
                i = (t - c) * l.DAY * 1e3;
            return e.setTime(i), e;
        }
        function a(t) {
            return ((t || new Date()) - u) / 1e3;
        }
        function s(t) {
            var e = Number(t.getUTCFullYear()),
                i = void 0;
            if (e >= 2005 && e < 2050) {
                var n = e - 2e3;
                i = 62.92 + 0.32217 * n + 0.005589 * Math.pow(n, 2);
            } else if (e >= 1986 && e < 2005) {
                var r = e - 2e3;
                i = 63.86 + 0.3345 * r - 0.060374 * Math.pow(r, 2) + 0.0017275 * Math.pow(r, 3) + 651814e-9 * Math.pow(r, 4) + 2373599e-11 * Math.pow(r, 5);
            } else if (e >= 1961 && e < 1986) {
                var o = e - 1975;
                i = 45.45 + 1.067 * o - Math.pow(o, 2) / 260 - Math.pow(o, 3) / 718;
            } else if (e >= 1941 && e < 1961) {
                var a = e - 1950;
                i = 29.07 + 0.407 * a - Math.pow(a, 2) / 233 + Math.pow(a, 3) / 2547;
            } else if (e >= 1920 && e < 1941) {
                var s = e - 1920;
                i = 21.2 + 0.84493 * s - 0.0761 * Math.pow(s, 2) + 0.0020936 * Math.pow(s, 3);
            } else if (e >= 1900 && e < 1920) {
                var l = e - 1900;
                i = 1.494119 * l - 2.79 - 0.0598939 * Math.pow(l, 2) + 0.0061966 * Math.pow(l, 3) - 197e-6 * Math.pow(l, 4);
            } else if (e >= 2050 && e < 2150) i = 32 * Math.pow((e - 1820) / 100, 2) - 20 - 0.5628 * (2150 - e);
            else if (e < -500 || e > 2150) {
                var c = (e - 1820) / 100;
                i = 32 * Math.pow(c, 2) - 20;
            } else if (e >= 500 && e < 1600) {
                var u = (e - 1e3) / 100;
                i = 1574.2 - 556.01 * u + 71.23472 * Math.pow(u, 2) + 0.319781 * Math.pow(u, 3) - 0.8503463 * Math.pow(u, 4) - 0.005050998 * Math.pow(u, 5) + 0.0083572073 * Math.pow(u, 6);
            } else if (e >= 1600 && e < 1700) {
                var h = e - 1600;
                i = 120 - 0.9808 * h - 0.01532 * Math.pow(h, 2) + Math.pow(h, 3) / 7129;
            } else if (e >= 1700 && e < 1800) {
                var d = e - 1700;
                i = 8.83 + 0.1603 * d - 0.0059285 * Math.pow(d, 2) + 13336e-8 * Math.pow(d, 3) - Math.pow(d, 4) / 1174e3;
            } else if (e >= 1800 && e < 1860) {
                var p = e - 1800;
                i = 13.72 - 0.332447 * p + 0.0068612 * Math.pow(p, 2) + 0.0041116 * Math.pow(p, 3) - 37436e-8 * Math.pow(p, 4) + 121272e-10 * Math.pow(p, 5) - 1.699e-7 * Math.pow(p, 6) + 8.75e-10 * Math.pow(p, 7);
            } else if (e >= 1860 && e < 1900) {
                var f = e - 1860;
                i = 7.62 + 0.5737 * f - 0.251754 * Math.pow(f, 2) + 0.01680668 * Math.pow(f, 3) - 0.0004473624 * Math.pow(f, 4) + Math.pow(f, 5) / 233174;
            } else if (e >= -500 && e < 500) {
                var m = e / 100;
                i = 10583.6 - 1014.41 * m + 33.78311 * Math.pow(m, 2) - 5.952053 * Math.pow(m, 3) - 0.1798452 * Math.pow(m, 4) + 0.022174192 * Math.pow(m, 5) + 0.0090316521 * Math.pow(m, 6);
            }
            return i;
        }
        Object.defineProperty(e, "__esModule", { value: !0 }), (e.J2000Date = void 0), (e.getJD = n), (e.getJ2000SecondsFromJD = r), (e.getDateFromJD = o), (e.getJ2000SecondsFromDate = a), (e.getDeltaT = s);
        var l = i("./core/constants.js"),
            c = (new Date("1582-10-15T00:00:00.000Z"), 2440587.5),
            u = (e.J2000Date = o(l.J2000));
    },
    "./utils/ThreeExamples.js": function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 });
        var n = i("../node_modules/three/build/three.js");
        (window.THREE = n), i("../node_modules/three/examples/js/renderers/Projector.js"), i("../node_modules/three/examples/js/controls/OrbitControls.js");
        (e.Projector = window.THREE.Projector), (e.OrbitControls = window.THREE.OrbitControls), (e.Stats = i("../node_modules/three/examples/js/libs/stats.min.js"));
    },
});
